{
	"info": {
		"_postman_id": "hotel-booking-api-2025",
		"name": "Hotel Booking API - Complete Collection",
		"description": "Comprehensive Postman collection for the Multi-Business Platform Hotel Booking API. Includes authentication, hotel management, booking system, and data seeding endpoints.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "hotel-api-v1"
	},
	"item": [
		{
			"name": "🔐 Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.token) {",
									"        pm.environment.set('authToken', response.token);",
									"        pm.environment.set('userId', response.data.user.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"password123\",\n    \"role\": \"customer\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user account"
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.token) {",
									"        pm.environment.set('authToken', response.token);",
									"        pm.environment.set('userId', response.data.user.id);",
									"        pm.environment.set('userRole', response.data.user.role);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"owner@tajpalace.com\",\n    \"password\": \"hashedpassword123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login with existing user credentials"
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"me"
							]
						},
						"description": "Get current authenticated user details"
					},
					"response": []
				},
				{
					"name": "Logout User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						},
						"description": "Logout current user"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for user registration, login, and session management"
		},
		{
			"name": "🏨 Hotel Management",
			"item": [
				{
					"name": "Get All Hotels",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.length > 0) {",
									"        pm.environment.set('hotelId', response.data[0]._id);",
									"        pm.environment.set('hotelName', response.data[0].name);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/hotels?page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"hotels"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get list of all available hotels with pagination"
					},
					"response": []
				},
				{
					"name": "Get Hotel by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/hotels/{{hotelId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"hotels",
								"{{hotelId}}"
							]
						},
						"description": "Get detailed information about a specific hotel"
					},
					"response": []
				},
				{
					"name": "Search Hotels",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/hotels/search?location=Delhi&checkIn=2025-08-01&checkOut=2025-08-03&guests=2&minPrice=5000&maxPrice=15000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"hotels",
								"search"
							],
							"query": [
								{
									"key": "location",
									"value": "Delhi"
								},
								{
									"key": "checkIn",
									"value": "2025-08-01"
								},
								{
									"key": "checkOut",
									"value": "2025-08-03"
								},
								{
									"key": "guests",
									"value": "2"
								},
								{
									"key": "minPrice",
									"value": "5000"
								},
								{
									"key": "maxPrice",
									"value": "15000"
								}
							]
						},
						"description": "Search hotels with filters like location, dates, price range"
					},
					"response": []
				},
				{
					"name": "Get Hotel Rooms",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.length > 0) {",
									"        pm.environment.set('roomId', response.data[0]._id);",
									"        pm.environment.set('roomType', response.data[0].type);",
									"        pm.environment.set('roomPrice', response.data[0].pricing.basePrice);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/hotels/{{hotelId}}/rooms",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"hotels",
								"{{hotelId}}",
								"rooms"
							]
						},
						"description": "Get all rooms available in a specific hotel"
					},
					"response": []
				},
				{
					"name": "Check Room Availability",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/hotels/{{hotelId}}/rooms/{{roomId}}/availability?checkIn=2025-08-01&checkOut=2025-08-03",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"hotels",
								"{{hotelId}}",
								"rooms",
								"{{roomId}}",
								"availability"
							],
							"query": [
								{
									"key": "checkIn",
									"value": "2025-08-01"
								},
								{
									"key": "checkOut",
									"value": "2025-08-03"
								}
							]
						},
						"description": "Check if a specific room is available for given dates"
					},
					"response": []
				}
			],
			"description": "Hotel management endpoints for browsing, searching, and viewing hotel details"
		},
		{
			"name": "📚 Booking Management",
			"item": [
				{
					"name": "Create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.id) {",
									"        pm.environment.set('bookingId', response.data.id);",
									"        pm.environment.set('bookingNumber', response.data.bookingNumber);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hotel\": \"{{hotelId}}\",\n    \"room\": \"{{roomId}}\",\n    \"checkIn\": \"2025-08-01\",\n    \"checkOut\": \"2025-08-03\",\n    \"guests\": {\n        \"adults\": 2,\n        \"children\": 0\n    },\n    \"guestDetails\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"john.doe@example.com\",\n        \"phone\": \"+1234567890\"\n    },\n    \"specialRequests\": \"Late check-in requested\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings"
							]
						},
						"description": "Create a new hotel booking"
					},
					"response": []
				},
				{
					"name": "Get User Bookings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/bookings?status=confirmed&page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings"
							],
							"query": [
								{
									"key": "status",
									"value": "confirmed"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get all bookings for the authenticated user"
					},
					"response": []
				},
				{
					"name": "Get Booking by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings",
								"{{bookingId}}"
							]
						},
						"description": "Get details of a specific booking"
					},
					"response": []
				},
				{
					"name": "Update Booking",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"specialRequests\": \"Late check-in and early breakfast requested\",\n    \"guestDetails\": {\n        \"phone\": \"+1234567891\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings",
								"{{bookingId}}"
							]
						},
						"description": "Update booking details"
					},
					"response": []
				},
				{
					"name": "Cancel Booking",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings",
								"{{bookingId}}"
							]
						},
						"description": "Cancel a booking"
					},
					"response": []
				}
			],
			"description": "Booking management endpoints for creating, viewing, updating, and canceling hotel bookings"
		},
		{
			"name": "⭐ Review System",
			"item": [
				{
					"name": "Get Hotel Reviews",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/hotels/{{hotelId}}/reviews?page=1&limit=10&sort=-rating",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"hotels",
								"{{hotelId}}",
								"reviews"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "sort",
									"value": "-rating"
								}
							]
						},
						"description": "Get all reviews for a specific hotel"
					},
					"response": []
				},
				{
					"name": "Create Hotel Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.id) {",
									"        pm.environment.set('reviewId', response.data.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"rating\": 5,\n    \"title\": \"Excellent Stay!\",\n    \"comment\": \"Amazing hotel with outstanding service. The rooms were spacious and clean, staff was very helpful, and the location was perfect. Highly recommended!\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/hotels/{{hotelId}}/reviews",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"hotels",
								"{{hotelId}}",
								"reviews"
							]
						},
						"description": "Create a new review for a hotel"
					},
					"response": []
				},
				{
					"name": "Update Review",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"rating\": 4,\n    \"title\": \"Great Stay with Minor Issues\",\n    \"comment\": \"Overall great hotel experience. Room was comfortable and staff was friendly. Only minor issue was with room service timing.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/reviews/{{reviewId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reviews",
								"{{reviewId}}"
							]
						},
						"description": "Update an existing review"
					},
					"response": []
				},
				{
					"name": "Delete Review",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/reviews/{{reviewId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reviews",
								"{{reviewId}}"
							]
						},
						"description": "Delete a review"
					},
					"response": []
				}
			],
			"description": "Review system endpoints for managing hotel reviews and ratings"
		},
		{
			"name": "🌱 Data Seeding & Management",
			"item": [
				{
					"name": "Seed Database",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/seed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"seed"
							]
						},
						"description": "Seed the database with sample hotels, users, and bookings"
					},
					"response": []
				},
				{
					"name": "Clear Database",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/seed/clear",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"seed",
								"clear"
							]
						},
						"description": "Clear all data from the database (use with caution)"
					},
					"response": []
				},
				{
					"name": "Get Database Stats",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/stats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"stats"
							]
						},
						"description": "Get database statistics (users, hotels, bookings count)"
					},
					"response": []
				}
			],
			"description": "Database seeding and management endpoints for development and testing"
		},
		{
			"name": "🔧 System & Health",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Check API health status"
					},
					"response": []
				},
				{
					"name": "API Documentation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api-docs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-docs"
							]
						},
						"description": "Access Swagger API documentation"
					},
					"response": []
				}
			],
			"description": "System health and documentation endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-set base URL if not already set",
					"if (!pm.environment.get('baseUrl')) {",
					"    pm.environment.set('baseUrl', 'http://localhost:5000');",
					"}",
					"",
					"// Log request details for debugging",
					"console.log('Making request to:', pm.request.url.toString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script for all requests",
					"pm.test('Response time is less than 5000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"pm.test('Response has valid JSON structure', function () {",
					"    try {",
					"        const response = pm.response.json();",
					"        pm.expect(response).to.have.property('success');",
					"    } catch (e) {",
					"        // Skip JSON validation for non-JSON responses (like HTML docs)",
					"        console.log('Non-JSON response detected, skipping JSON validation');",
					"    }",
					"});",
					"",
					"// Log response for debugging",
					"console.log('Response status:', pm.response.code);",
					"console.log('Response time:', pm.response.responseTime + 'ms');"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5000",
			"type": "string"
		}
	]
}

