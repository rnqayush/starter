[{"filePath":"/tmp/rnqayush/starter/src/App.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport styled from 'styled-components';\nimport { GlobalStyle } from './styles/GlobalStyle';\nimport { AppContext } from './context/AppContext';\nimport { AuthProvider } from './context/AuthContext';\nimport ErrorBoundary from './components/ErrorBoundary';\n\n\n// User Components\nimport PlatformHomePage from './components/user/PlatformHomePage';\nimport PricingPage from './components/user/PricingPage';\nimport LoginPage from './components/auth/LoginPage';\nimport RegisterPage from './components/auth/RegisterPage';\nimport StartBuilding from './components/StartBuilding';\n\n// Shared Components\nimport ScrollToTop from './components/shared/ScrollToTop';\nimport SmartRouter from './components/SmartRouter';\n\n// Hotel Module\n// Note: HotelModule removed as it's not used in current routing\n\n// Mock data\nimport {\n  hotels as hotelModuleData,\n  hotelBookings,\n  ownerHotels as hotelOwnerData,\n} from './DummyData';\n\n// Category Landing Pages\nimport HotelCategoryLanding from './components/category/HotelCategoryLanding';\nimport EcommerceCategoryLanding from './components/category/EcommerceCategoryLanding';\nimport WeddingCategoryLanding from './components/category/WeddingCategoryLanding';\nimport AutomobileCategoryLanding from './components/category/AutomobileCategoryLanding';\nimport BusinessCategoryLanding from './components/category/BusinessCategoryLanding';\n\n// Store Listing Pages\nimport OwnerDashboard from './components/owner/OwnerDashboard';\nimport RoomDetail from './hotel/pages/RoomDetail';\nimport Booking from './hotel/pages/Booking';\nimport BookingConfirmation from './hotel/pages/BookingConfirmation';\nimport { NotificationProvider } from './ecommerce/components/NotificationSystem';\nimport RoomList from './hotel/pages/RoomList';\nimport ProductDetail from './ecommerce/pages/ProductDetail';\nimport ProductList from './ecommerce/pages/ProductList';\nimport SellerDashboard from './ecommerce/pages/SellerDashboard';\nimport VendorPortfolio from './weddings/pages/VendorPortfolio';\nimport VendorDashboard from './weddings/pages/VendorDashboard';\nimport Vehicles from './automobiles/pages/Vehicles';\nimport VehicleDetail from './automobiles/pages/VehicleDetail';\nimport DealerDashboard from './automobiles/pages/DealerDashboard';\nimport Wishlist from './automobiles/pages/Wishlist';\nimport BuisnessAdminDashboard from './business/pages/BuisnessAdminDashboard';\n\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  background-color: #f8fafc;\n`;\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [userType, setUserType] = useState('customer'); // 'customer' or 'owner'\n  const [hotels, setHotels] = useState(hotelModuleData);\n  const [bookings, setBookings] = useState(hotelBookings);\n  const [ownerHotels, setOwnerHotels] = useState(hotelOwnerData);\n\n  const contextValue = {\n    user,\n    setUser,\n    userType,\n    setUserType,\n    hotels,\n    setHotels,\n    bookings,\n    setBookings,\n    ownerHotels,\n    setOwnerHotels,\n  };\n\n  return (\n    <ErrorBoundary>\n      <AuthProvider>\n        <NotificationProvider>\n          <AppContext.Provider value={contextValue}>\n            <Router>\n              <AppContainer>\n                <GlobalStyle />\n                <ScrollToTop />\n                <Routes>\n                    {/* Main Platform Routes (Highest Priority) */}\n                    <Route path=\"/\" element={<PlatformHomePage />} />\n                    <Route path=\"/pricing\" element={<PricingPage />} />\n                    <Route path=\"/login\" element={<LoginPage />} />\n                    <Route path=\"/register\" element={<RegisterPage />} />\n                    <Route path=\"/start-building\" element={<StartBuilding />} />\n\n                    {/* categories for website examples*/}\n                    <Route path=\"/website-examples\">\n                      <Route path=\"hotel\" element={<HotelCategoryLanding />} />\n                      <Route\n                        path=\"wedding\"\n                        element={<WeddingCategoryLanding />}\n                      />\n                      <Route\n                        path=\"ecommerce\"\n                        element={<EcommerceCategoryLanding />}\n                      />\n                      <Route\n                        path=\"automobile\"\n                        element={<AutomobileCategoryLanding />}\n                      />\n                      <Route\n                        path=\"business\"\n                        element={<BusinessCategoryLanding />}\n                      />\n                    </Route>\n\n                    {/* Generic slug routes (lowest priority) */}\n                    <Route path=\"/:slug\">\n                      {/* smart router identifies vendor and give homepage of same */}\n                      <Route index element={<SmartRouter />} />\n\n                      {/*  hotel website routes */}\n                      <Route path=\"hoteladmin\" element={<OwnerDashboard />} />\n                      <Route path=\"rooms\" element={<RoomList />} />\n                      <Route path=\"rooms/:roomId\" element={<RoomDetail />} />\n                      <Route\n                        path=\"rooms/booking/:roomId\"\n                        element={<Booking />}\n                      />\n                      <Route\n                        path=\"bookingconfirmation\"\n                        element={<BookingConfirmation />}\n                      />\n\n                      {/*  Ecommerce website routes */}\n\n                      <Route path=\"products\" element={<ProductList />} />\n                      <Route\n                        path=\"productdetail/:productId\"\n                        element={<ProductDetail />}\n                      />\n                      <Route\n                        path=\"selleradminpanel\"\n                        element={<SellerDashboard />}\n                      />\n                      {/*  Wedding website routes */}\n                      <Route path=\"portfolio\" element={<VendorPortfolio />} />\n                      <Route\n                        path=\"weddingadminpanel\"\n                        element={<VendorDashboard />}\n                      />\n                      {/*  automobile website routes */}\n                      <Route path=\"vehicles\" element={<Vehicles />} />\n                      <Route\n                        path=\"vehicledetail/:vehicleId\"\n                        element={<VehicleDetail />}\n                      />\n                      <Route path=\"wishlist\" element={<Wishlist />} />\n                      <Route\n                        path=\"autoadmindasboard\"\n                        element={<DealerDashboard />}\n                      />\n\n                      {/*  buisness website routes */}\n                      <Route\n                        path=\"adminpanel\"\n                        element={<BuisnessAdminDashboard />}\n                      />\n                    </Route>\n                  </Routes>\n                </AppContainer>\n              </Router>\n            </AppContext.Provider>\n          </NotificationProvider>\n        </AuthProvider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/DummyData/automobiles.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/DummyData/business.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/DummyData/businessWebsiteData.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/DummyData/ecommerce.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/DummyData/hotels.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/DummyData/index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/DummyData/platform.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/DummyData/weddings.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/components/AddVehicleTab.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'dealer' is defined but never used. Allowed unused args must match /^_/u.","line":467,"column":26,"nodeType":"Identifier","messageId":"unusedVar","endLine":467,"endColumn":32}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaCar,\n  FaUpload,\n  FaSave,\n  FaImage,\n  FaTimes,\n  FaCheck,\n  FaEdit,\n  FaClock,\n  FaExclamationTriangle,\n  FaInfoCircle,\n  FaDollarSign,\n  FaRoad,\n  FaGasPump,\n  FaCogs,\n  FaPalette,\n  FaIdCard,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst Container = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  overflow: hidden;\n`;\n\nconst Header = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.gray50};\n`;\n\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst Description = styled.p`\n  color: ${theme.colors.gray600};\n  font-size: 1rem;\n  line-height: 1.5;\n`;\n\nconst FormContainer = styled.div`\n  padding: ${theme.spacing.xl};\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst FormGrid = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst FormSection = styled.div`\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.lg};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst FormRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.lg};\n\n  &.single {\n    grid-template-columns: 1fr;\n  }\n\n  &.two-col {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.label`\n  font-weight: 600;\n  color: ${theme.colors.gray700};\n  margin-bottom: ${theme.spacing.sm};\n  font-size: 0.9rem;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n\n  .required {\n    color: ${theme.colors.error};\n  }\n`;\n\nconst Input = styled.input.withConfig({\n  shouldForwardProp: prop => prop !== 'hasError',\n})`\n  padding: ${theme.spacing.md};\n  border: 2px solid\n    ${props => (props.hasError ? theme.colors.error : theme.colors.gray200)};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: border-color 0.2s ease;\n  background: ${theme.colors.white};\n\n  &:focus {\n    outline: none;\n    border-color: ${props =>\n      props.hasError ? theme.colors.error : theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray500};\n  }\n\n  &:disabled {\n    background: ${theme.colors.gray100};\n    cursor: not-allowed;\n  }\n`;\n\nconst Select = styled.select.withConfig({\n  shouldForwardProp: prop => prop !== 'hasError',\n})`\n  padding: ${theme.spacing.md};\n  border: 2px solid\n    ${props => (props.hasError ? theme.colors.error : theme.colors.gray200)};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: border-color 0.2s ease;\n  background: ${theme.colors.white};\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n    border-color: ${props =>\n      props.hasError ? theme.colors.error : theme.colors.primary};\n  }\n\n  &:disabled {\n    background: ${theme.colors.gray100};\n    cursor: not-allowed;\n  }\n`;\n\nconst TextArea = styled.textarea.withConfig({\n  shouldForwardProp: prop => prop !== 'hasError',\n})`\n  padding: ${theme.spacing.md};\n  border: 2px solid\n    ${props => (props.hasError ? theme.colors.error : theme.colors.gray200)};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: border-color 0.2s ease;\n  background: ${theme.colors.white};\n  resize: vertical;\n  min-height: 100px;\n  font-family: inherit;\n\n  &:focus {\n    outline: none;\n    border-color: ${props =>\n      props.hasError ? theme.colors.error : theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray500};\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: ${theme.colors.error};\n  font-size: 0.8rem;\n  margin-top: ${theme.spacing.xs};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst HelpText = styled.div`\n  color: ${theme.colors.gray500};\n  font-size: 0.8rem;\n  margin-top: ${theme.spacing.xs};\n`;\n\nconst ImageUploadSection = styled.div`\n  border: 2px dashed ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xl};\n  text-align: center;\n  transition: all 0.2s ease;\n  cursor: pointer;\n  background: ${theme.colors.gray50};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    background: ${theme.colors.primary}10;\n  }\n\n  &.drag-over {\n    border-color: ${theme.colors.primary};\n    background: ${theme.colors.primary}20;\n  }\n`;\n\nconst ImageUploadIcon = styled.div`\n  font-size: 3rem;\n  color: ${theme.colors.gray400};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst ImageUploadText = styled.div`\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray700};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst ImageUploadSubtext = styled.div`\n  color: ${theme.colors.gray500};\n  font-size: 0.9rem;\n`;\n\nconst FileInput = styled.input`\n  display: none;\n`;\n\nconst ImagePreviewGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\n  gap: ${theme.spacing.md};\n  margin-top: ${theme.spacing.lg};\n`;\n\nconst ImagePreview = styled.div`\n  position: relative;\n  border-radius: ${theme.borderRadius.md};\n  overflow: hidden;\n  border: 2px solid ${theme.colors.gray200};\n  background: ${theme.colors.white};\n`;\n\nconst PreviewImage = styled.img`\n  width: 100%;\n  height: 100px;\n  object-fit: cover;\n`;\n\nconst RemoveImageButton = styled.button`\n  position: absolute;\n  top: ${theme.spacing.xs};\n  right: ${theme.spacing.xs};\n  background: ${theme.colors.error};\n  color: ${theme.colors.white};\n  border: none;\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  font-size: 0.8rem;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.errorDark};\n    transform: scale(1.1);\n  }\n`;\n\nconst PricingSection = styled.div`\n  background: ${theme.colors.gray50};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst PriceDisplay = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.lg};\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.md};\n  border: 2px solid ${theme.colors.primary}20;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst PriceAmount = styled.div`\n  font-size: 2rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst PriceLabel = styled.div`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n`;\n\nconst StatusSection = styled.div`\n  background: ${theme.colors.gray50};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  border: 1px solid ${theme.colors.gray200};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst StatusIndicator = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'status',\n})`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  background: ${props => {\n    switch (props.status) {\n      case 'draft':\n        return theme.colors.gray100;\n      case 'active':\n        return theme.colors.success + '20';\n      case 'pending':\n        return theme.colors.warning + '20';\n      default:\n        return theme.colors.gray100;\n    }\n  }};\n  color: ${props => {\n    switch (props.status) {\n      case 'draft':\n        return theme.colors.gray700;\n      case 'active':\n        return theme.colors.success;\n      case 'pending':\n        return theme.colors.warning;\n      default:\n        return theme.colors.gray700;\n    }\n  }};\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  justify-content: flex-end;\n  padding: ${theme.spacing.xl};\n  border-top: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.gray50};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n  }\n`;\n\nconst Button = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'variant',\n})`\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  min-width: 140px;\n  justify-content: center;\n\n  background: ${props => {\n    switch (props.variant) {\n      case 'primary':\n        return theme.colors.primary;\n      case 'success':\n        return theme.colors.success;\n      case 'secondary':\n        return theme.colors.white;\n      default:\n        return theme.colors.gray200;\n    }\n  }};\n\n  color: ${props => {\n    switch (props.variant) {\n      case 'primary':\n        return theme.colors.white;\n      case 'success':\n        return theme.colors.white;\n      case 'secondary':\n        return theme.colors.gray700;\n      default:\n        return theme.colors.gray700;\n    }\n  }};\n\n  border: ${props => {\n    switch (props.variant) {\n      case 'primary':\n        return 'none';\n      case 'success':\n        return 'none';\n      case 'secondary':\n        return `2px solid ${theme.colors.gray200}`;\n      default:\n        return `1px solid ${theme.colors.gray300}`;\n    }\n  }};\n\n  &:hover:not(:disabled) {\n    transform: translateY(-1px);\n    box-shadow: ${theme.shadows.md};\n\n    background: ${props => {\n      switch (props.variant) {\n        case 'primary':\n          return theme.colors.primaryDark;\n        case 'success':\n          return theme.colors.successDark;\n        case 'secondary':\n          return theme.colors.gray50;\n        default:\n          return theme.colors.gray300;\n      }\n    }};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst AddVehicleTab = ({ dealer }) => {\n  const [formData, setFormData] = useState({\n    // Basic Information\n    vin: '',\n    year: '',\n    make: '',\n    model: '',\n    trim: '',\n    bodyStyle: '',\n\n    // Engine & Performance\n    engine: '',\n    transmission: '',\n    drivetrain: '',\n    fuelType: '',\n    mpgCity: '',\n    mpgHighway: '',\n\n    // Exterior & Interior\n    exteriorColor: '',\n    interiorColor: '',\n    interiorMaterial: '',\n\n    // Condition & History\n    condition: '',\n    mileage: '',\n    previousOwners: '1',\n    accidentHistory: 'no',\n    serviceHistory: 'yes',\n\n    // Pricing\n    msrp: '',\n    price: '',\n    costPrice: '',\n\n    // Inventory\n    stock: '1',\n    location: '',\n\n    // Description & Features\n    description: '',\n    features: '',\n\n    // Status\n    status: 'draft',\n  });\n\n  const [images, setImages] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState('');\n\n  const currentYear = new Date().getFullYear();\n  const years = Array.from({ length: 30 }, (_, i) => currentYear - i);\n\n  const makes = [\n    'Audi',\n    'BMW',\n    'Chevrolet',\n    'Ford',\n    'Honda',\n    'Hyundai',\n    'Kia',\n    'Lexus',\n    'Mercedes-Benz',\n    'Nissan',\n    'Porsche',\n    'Tesla',\n    'Toyota',\n    'Volkswagen',\n    'Volvo',\n  ];\n\n  const bodyStyles = [\n    'Sedan',\n    'SUV',\n    'Hatchback',\n    'Coupe',\n    'Convertible',\n    'Wagon',\n    'Pickup Truck',\n    'Van',\n    'Crossover',\n  ];\n\n  const fuelTypes = [\n    'Gasoline',\n    'Diesel',\n    'Hybrid',\n    'Electric',\n    'Plug-in Hybrid',\n  ];\n\n  const transmissions = [\n    'Manual',\n    'Automatic',\n    'CVT',\n    'Semi-Automatic',\n    'Dual-Clutch',\n  ];\n\n  const drivetrains = ['FWD', 'RWD', 'AWD', '4WD'];\n\n  const conditions = ['New', 'Used', 'Certified Pre-Owned'];\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: '',\n      }));\n    }\n  };\n\n  const handleImageUpload = e => {\n    const files = Array.from(e.target.files);\n\n    files.forEach(file => {\n      if (file.type.startsWith('image/')) {\n        const reader = new FileReader();\n        reader.onload = event => {\n          setImages(prev => [\n            ...prev,\n            {\n              id: Date.now() + Math.random(),\n              file,\n              url: event.target.result,\n              name: file.name,\n            },\n          ]);\n        };\n        reader.readAsDataURL(file);\n      }\n    });\n  };\n\n  const removeImage = imageId => {\n    setImages(prev => prev.filter(img => img.id !== imageId));\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    // Required fields\n    const requiredFields = [\n      'vin',\n      'year',\n      'make',\n      'model',\n      'condition',\n      'mileage',\n      'price',\n    ];\n\n    requiredFields.forEach(field => {\n      if (!formData[field]) {\n        newErrors[field] = 'This field is required';\n      }\n    });\n\n    // VIN validation (basic)\n    if (formData.vin && formData.vin.length !== 17) {\n      newErrors.vin = 'VIN must be exactly 17 characters';\n    }\n\n    // Year validation\n    if (\n      formData.year &&\n      (formData.year < 1900 || formData.year > currentYear + 1)\n    ) {\n      newErrors.year = `Year must be between 1900 and ${currentYear + 1}`;\n    }\n\n    // Mileage validation\n    if (formData.mileage && formData.mileage < 0) {\n      newErrors.mileage = 'Mileage cannot be negative';\n    }\n\n    // Price validation\n    if (formData.price && formData.price <= 0) {\n      newErrors.price = 'Price must be greater than 0';\n    }\n\n    // MPG validation\n    if (formData.mpgCity && (formData.mpgCity <= 0 || formData.mpgCity > 100)) {\n      newErrors.mpgCity = 'City MPG must be between 1 and 100';\n    }\n\n    if (\n      formData.mpgHighway &&\n      (formData.mpgHighway <= 0 || formData.mpgHighway > 100)\n    ) {\n      newErrors.mpgHighway = 'Highway MPG must be between 1 and 100';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      setSubmitStatus('error');\n      return;\n    }\n\n    setIsSubmitting(true);\n    setSubmitStatus('');\n\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      setSubmitStatus('success');\n\n      // Reset form after successful submission\n      setTimeout(() => {\n        setFormData({\n          vin: '',\n          year: '',\n          make: '',\n          model: '',\n          trim: '',\n          bodyStyle: '',\n          engine: '',\n          transmission: '',\n          drivetrain: '',\n          fuelType: '',\n          mpgCity: '',\n          mpgHighway: '',\n          exteriorColor: '',\n          interiorColor: '',\n          interiorMaterial: '',\n          condition: '',\n          mileage: '',\n          previousOwners: '1',\n          accidentHistory: 'no',\n          serviceHistory: 'yes',\n          msrp: '',\n          price: '',\n          costPrice: '',\n          stock: '1',\n          location: '',\n          description: '',\n          features: '',\n          status: 'draft',\n        });\n        setImages([]);\n        setSubmitStatus('');\n      }, 3000);\n    } catch (error) {\n      setSubmitStatus('error');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleSaveDraft = () => {\n    setFormData(prev => ({ ...prev, status: 'draft' }));\n    handleSubmit();\n  };\n\n  const handlePublish = () => {\n    setFormData(prev => ({ ...prev, status: 'active' }));\n    handleSubmit();\n  };\n\n  const formatPrice = price => {\n    if (!price) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(price);\n  };\n\n  return (\n    <Container>\n      <Header>\n        <Title>\n          <FaCar />\n          Add New Vehicle\n        </Title>\n        <Description>\n          Add a new vehicle to your inventory with detailed specifications,\n          pricing, and images. All required fields must be completed before\n          publishing.\n        </Description>\n      </Header>\n\n      <form onSubmit={handleSubmit}>\n        <FormContainer>\n          <FormGrid>\n            <div>\n              {/* Basic Information */}\n              <FormSection>\n                <SectionTitle>\n                  <FaIdCard />\n                  Basic Information\n                </SectionTitle>\n\n                <FormRow>\n                  <FormGroup>\n                    <Label>\n                      VIN <span className=\"required\">*</span>\n                    </Label>\n                    <Input\n                      type=\"text\"\n                      name=\"vin\"\n                      value={formData.vin}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter 17-character VIN\"\n                      maxLength=\"17\"\n                      hasError={!!errors.vin}\n                    />\n                    {errors.vin && (\n                      <ErrorMessage>\n                        <FaExclamationTriangle />\n                        {errors.vin}\n                      </ErrorMessage>\n                    )}\n                  </FormGroup>\n                </FormRow>\n\n                <FormRow>\n                  <FormGroup>\n                    <Label>\n                      Year <span className=\"required\">*</span>\n                    </Label>\n                    <Select\n                      name=\"year\"\n                      value={formData.year}\n                      onChange={handleInputChange}\n                      hasError={!!errors.year}\n                    >\n                      <option value=\"\">Select Year</option>\n                      {years.map(year => (\n                        <option key={year} value={year}>\n                          {year}\n                        </option>\n                      ))}\n                    </Select>\n                    {errors.year && (\n                      <ErrorMessage>\n                        <FaExclamationTriangle />\n                        {errors.year}\n                      </ErrorMessage>\n                    )}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>\n                      Make <span className=\"required\">*</span>\n                    </Label>\n                    <Select\n                      name=\"make\"\n                      value={formData.make}\n                      onChange={handleInputChange}\n                      hasError={!!errors.make}\n                    >\n                      <option value=\"\">Select Make</option>\n                      {makes.map(make => (\n                        <option key={make} value={make}>\n                          {make}\n                        </option>\n                      ))}\n                    </Select>\n                    {errors.make && (\n                      <ErrorMessage>\n                        <FaExclamationTriangle />\n                        {errors.make}\n                      </ErrorMessage>\n                    )}\n                  </FormGroup>\n                </FormRow>\n\n                <FormRow>\n                  <FormGroup>\n                    <Label>\n                      Model <span className=\"required\">*</span>\n                    </Label>\n                    <Input\n                      type=\"text\"\n                      name=\"model\"\n                      value={formData.model}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter model name\"\n                      hasError={!!errors.model}\n                    />\n                    {errors.model && (\n                      <ErrorMessage>\n                        <FaExclamationTriangle />\n                        {errors.model}\n                      </ErrorMessage>\n                    )}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>Trim Level</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"trim\"\n                      value={formData.trim}\n                      onChange={handleInputChange}\n                      placeholder=\"e.g., LX, EX, Sport\"\n                    />\n                  </FormGroup>\n                </FormRow>\n\n                <FormRow>\n                  <FormGroup>\n                    <Label>Body Style</Label>\n                    <Select\n                      name=\"bodyStyle\"\n                      value={formData.bodyStyle}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"\">Select Body Style</option>\n                      {bodyStyles.map(style => (\n                        <option key={style} value={style}>\n                          {style}\n                        </option>\n                      ))}\n                    </Select>\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>\n                      Condition <span className=\"required\">*</span>\n                    </Label>\n                    <Select\n                      name=\"condition\"\n                      value={formData.condition}\n                      onChange={handleInputChange}\n                      hasError={!!errors.condition}\n                    >\n                      <option value=\"\">Select Condition</option>\n                      {conditions.map(condition => (\n                        <option key={condition} value={condition}>\n                          {condition}\n                        </option>\n                      ))}\n                    </Select>\n                    {errors.condition && (\n                      <ErrorMessage>\n                        <FaExclamationTriangle />\n                        {errors.condition}\n                      </ErrorMessage>\n                    )}\n                  </FormGroup>\n                </FormRow>\n              </FormSection>\n\n              {/* Engine & Performance */}\n              <FormSection>\n                <SectionTitle>\n                  <FaCogs />\n                  Engine & Performance\n                </SectionTitle>\n\n                <FormRow>\n                  <FormGroup>\n                    <Label>Engine</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"engine\"\n                      value={formData.engine}\n                      onChange={handleInputChange}\n                      placeholder=\"e.g., 2.0L Turbo I4\"\n                    />\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>Transmission</Label>\n                    <Select\n                      name=\"transmission\"\n                      value={formData.transmission}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"\">Select Transmission</option>\n                      {transmissions.map(trans => (\n                        <option key={trans} value={trans}>\n                          {trans}\n                        </option>\n                      ))}\n                    </Select>\n                  </FormGroup>\n                </FormRow>\n\n                <FormRow>\n                  <FormGroup>\n                    <Label>Drivetrain</Label>\n                    <Select\n                      name=\"drivetrain\"\n                      value={formData.drivetrain}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"\">Select Drivetrain</option>\n                      {drivetrains.map(drive => (\n                        <option key={drive} value={drive}>\n                          {drive}\n                        </option>\n                      ))}\n                    </Select>\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>Fuel Type</Label>\n                    <Select\n                      name=\"fuelType\"\n                      value={formData.fuelType}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"\">Select Fuel Type</option>\n                      {fuelTypes.map(fuel => (\n                        <option key={fuel} value={fuel}>\n                          {fuel}\n                        </option>\n                      ))}\n                    </Select>\n                  </FormGroup>\n                </FormRow>\n\n                <FormRow>\n                  <FormGroup>\n                    <Label>\n                      <FaGasPump />\n                      City MPG\n                    </Label>\n                    <Input\n                      type=\"number\"\n                      name=\"mpgCity\"\n                      value={formData.mpgCity}\n                      onChange={handleInputChange}\n                      placeholder=\"25\"\n                      min=\"1\"\n                      max=\"100\"\n                      hasError={!!errors.mpgCity}\n                    />\n                    {errors.mpgCity && (\n                      <ErrorMessage>\n                        <FaExclamationTriangle />\n                        {errors.mpgCity}\n                      </ErrorMessage>\n                    )}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>\n                      <FaRoad />\n                      Highway MPG\n                    </Label>\n                    <Input\n                      type=\"number\"\n                      name=\"mpgHighway\"\n                      value={formData.mpgHighway}\n                      onChange={handleInputChange}\n                      placeholder=\"32\"\n                      min=\"1\"\n                      max=\"100\"\n                      hasError={!!errors.mpgHighway}\n                    />\n                    {errors.mpgHighway && (\n                      <ErrorMessage>\n                        <FaExclamationTriangle />\n                        {errors.mpgHighway}\n                      </ErrorMessage>\n                    )}\n                  </FormGroup>\n                </FormRow>\n              </FormSection>\n\n              {/* Exterior & Interior */}\n              <FormSection>\n                <SectionTitle>\n                  <FaPalette />\n                  Exterior & Interior\n                </SectionTitle>\n\n                <FormRow>\n                  <FormGroup>\n                    <Label>Exterior Color</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"exteriorColor\"\n                      value={formData.exteriorColor}\n                      onChange={handleInputChange}\n                      placeholder=\"e.g., Crystal Black Pearl\"\n                    />\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>Interior Color</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"interiorColor\"\n                      value={formData.interiorColor}\n                      onChange={handleInputChange}\n                      placeholder=\"e.g., Black\"\n                    />\n                  </FormGroup>\n                </FormRow>\n\n                <FormRow>\n                  <FormGroup>\n                    <Label>Interior Material</Label>\n                    <Select\n                      name=\"interiorMaterial\"\n                      value={formData.interiorMaterial}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"\">Select Material</option>\n                      <option value=\"Cloth\">Cloth</option>\n                      <option value=\"Leather\">Leather</option>\n                      <option value=\"Synthetic Leather\">\n                        Synthetic Leather\n                      </option>\n                      <option value=\"Alcantara\">Alcantara</option>\n                    </Select>\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>\n                      Mileage <span className=\"required\">*</span>\n                    </Label>\n                    <Input\n                      type=\"number\"\n                      name=\"mileage\"\n                      value={formData.mileage}\n                      onChange={handleInputChange}\n                      placeholder=\"25000\"\n                      min=\"0\"\n                      hasError={!!errors.mileage}\n                    />\n                    {errors.mileage && (\n                      <ErrorMessage>\n                        <FaExclamationTriangle />\n                        {errors.mileage}\n                      </ErrorMessage>\n                    )}\n                  </FormGroup>\n                </FormRow>\n              </FormSection>\n\n              {/* Vehicle History */}\n              <FormSection>\n                <SectionTitle>\n                  <FaInfoCircle />\n                  Vehicle History\n                </SectionTitle>\n\n                <FormRow>\n                  <FormGroup>\n                    <Label>Previous Owners</Label>\n                    <Select\n                      name=\"previousOwners\"\n                      value={formData.previousOwners}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"1\">1 Owner</option>\n                      <option value=\"2\">2 Owners</option>\n                      <option value=\"3\">3 Owners</option>\n                      <option value=\"4+\">4+ Owners</option>\n                    </Select>\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>Accident History</Label>\n                    <Select\n                      name=\"accidentHistory\"\n                      value={formData.accidentHistory}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"no\">No Accidents</option>\n                      <option value=\"minor\">Minor Accident</option>\n                      <option value=\"major\">Major Accident</option>\n                    </Select>\n                  </FormGroup>\n                </FormRow>\n\n                <FormRow>\n                  <FormGroup>\n                    <Label>Service History</Label>\n                    <Select\n                      name=\"serviceHistory\"\n                      value={formData.serviceHistory}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"yes\">Complete Service Records</option>\n                      <option value=\"partial\">Partial Service Records</option>\n                      <option value=\"no\">No Service Records</option>\n                    </Select>\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>Stock Quantity</Label>\n                    <Input\n                      type=\"number\"\n                      name=\"stock\"\n                      value={formData.stock}\n                      onChange={handleInputChange}\n                      min=\"1\"\n                      placeholder=\"1\"\n                    />\n                  </FormGroup>\n                </FormRow>\n              </FormSection>\n\n              {/* Description & Features */}\n              <FormSection>\n                <SectionTitle>\n                  <FaInfoCircle />\n                  Description & Features\n                </SectionTitle>\n\n                <FormRow className=\"single\">\n                  <FormGroup>\n                    <Label>Vehicle Description</Label>\n                    <TextArea\n                      name=\"description\"\n                      value={formData.description}\n                      onChange={handleInputChange}\n                      placeholder=\"Describe the vehicle's condition, special features, and any additional information...\"\n                      rows=\"4\"\n                    />\n                    <HelpText>\n                      Provide a detailed description that will help customers\n                      understand the vehicle's condition and features.\n                    </HelpText>\n                  </FormGroup>\n                </FormRow>\n\n                <FormRow className=\"single\">\n                  <FormGroup>\n                    <Label>Key Features</Label>\n                    <TextArea\n                      name=\"features\"\n                      value={formData.features}\n                      onChange={handleInputChange}\n                      placeholder=\"e.g., Sunroof, Heated Seats, Navigation System, Backup Camera...\"\n                      rows=\"3\"\n                    />\n                    <HelpText>\n                      List the key features and options that come with this\n                      vehicle, separated by commas.\n                    </HelpText>\n                  </FormGroup>\n                </FormRow>\n              </FormSection>\n            </div>\n\n            <div>\n              {/* Pricing Section */}\n              <FormSection>\n                <SectionTitle>\n                  <FaDollarSign />\n                  Pricing\n                </SectionTitle>\n\n                <PriceDisplay>\n                  <PriceAmount>{formatPrice(formData.price)}</PriceAmount>\n                  <PriceLabel>Selling Price</PriceLabel>\n                </PriceDisplay>\n\n                <FormRow className=\"single\">\n                  <FormGroup>\n                    <Label>MSRP</Label>\n                    <Input\n                      type=\"number\"\n                      name=\"msrp\"\n                      value={formData.msrp}\n                      onChange={handleInputChange}\n                      placeholder=\"35000\"\n                      min=\"0\"\n                    />\n                    <HelpText>Manufacturer's Suggested Retail Price</HelpText>\n                  </FormGroup>\n                </FormRow>\n\n                <FormRow className=\"single\">\n                  <FormGroup>\n                    <Label>\n                      Selling Price <span className=\"required\">*</span>\n                    </Label>\n                    <Input\n                      type=\"number\"\n                      name=\"price\"\n                      value={formData.price}\n                      onChange={handleInputChange}\n                      placeholder=\"32000\"\n                      min=\"0\"\n                      hasError={!!errors.price}\n                    />\n                    {errors.price && (\n                      <ErrorMessage>\n                        <FaExclamationTriangle />\n                        {errors.price}\n                      </ErrorMessage>\n                    )}\n                  </FormGroup>\n                </FormRow>\n\n                <FormRow className=\"single\">\n                  <FormGroup>\n                    <Label>Cost Price</Label>\n                    <Input\n                      type=\"number\"\n                      name=\"costPrice\"\n                      value={formData.costPrice}\n                      onChange={handleInputChange}\n                      placeholder=\"28000\"\n                      min=\"0\"\n                    />\n                    <HelpText>Your acquisition cost (internal use)</HelpText>\n                  </FormGroup>\n                </FormRow>\n\n                {formData.price && formData.costPrice && (\n                  <PricingSection>\n                    <div\n                      style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        marginBottom: theme.spacing.sm,\n                        fontWeight: 600,\n                      }}\n                    >\n                      <span>Profit Margin:</span>\n                      <span style={{ color: theme.colors.success }}>\n                        {formatPrice(formData.price - formData.costPrice)}\n                      </span>\n                    </div>\n                    <div\n                      style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        fontSize: '0.9rem',\n                        color: theme.colors.gray600,\n                      }}\n                    >\n                      <span>Margin %:</span>\n                      <span>\n                        {(\n                          ((formData.price - formData.costPrice) /\n                            formData.price) *\n                          100\n                        ).toFixed(1)}\n                        %\n                      </span>\n                    </div>\n                  </PricingSection>\n                )}\n              </FormSection>\n\n              {/* Status Section */}\n              <StatusSection>\n                <SectionTitle>Status</SectionTitle>\n\n                <StatusIndicator status={formData.status}>\n                  {formData.status === 'draft' && <FaEdit />}\n                  {formData.status === 'active' && <FaCheck />}\n                  {formData.status === 'pending' && <FaClock />}\n\n                  {formData.status === 'draft' && 'Draft - Not Published'}\n                  {formData.status === 'active' &&\n                    'Active - Visible to Customers'}\n                  {formData.status === 'pending' && 'Pending Review'}\n                </StatusIndicator>\n\n                <HelpText>\n                  {formData.status === 'draft' &&\n                    'This vehicle is saved as a draft and not visible to customers yet.'}\n                  {formData.status === 'active' &&\n                    'This vehicle is published and visible to customers on your website.'}\n                  {formData.status === 'pending' &&\n                    'This vehicle is pending review before going live.'}\n                </HelpText>\n              </StatusSection>\n\n              {/* Image Upload Section */}\n              <FormSection>\n                <SectionTitle>\n                  <FaImage />\n                  Vehicle Images\n                </SectionTitle>\n\n                <ImageUploadSection\n                  onClick={() => document.getElementById('imageInput').click()}\n                >\n                  <ImageUploadIcon>\n                    <FaUpload />\n                  </ImageUploadIcon>\n                  <ImageUploadText>Upload Vehicle Images</ImageUploadText>\n                  <ImageUploadSubtext>\n                    Drag & drop images here or click to browse\n                    <br />\n                    Supports: JPG, PNG, WebP (Max 10MB each)\n                  </ImageUploadSubtext>\n                </ImageUploadSection>\n\n                <FileInput\n                  id=\"imageInput\"\n                  type=\"file\"\n                  accept=\"image/*\"\n                  multiple\n                  onChange={handleImageUpload}\n                />\n\n                {images.length > 0 && (\n                  <ImagePreviewGrid>\n                    {images.map(image => (\n                      <ImagePreview key={image.id}>\n                        <PreviewImage src={image.url} alt={image.name} />\n                        <RemoveImageButton\n                          onClick={e => {\n                            e.stopPropagation();\n                            removeImage(image.id);\n                          }}\n                        >\n                          <FaTimes />\n                        </RemoveImageButton>\n                      </ImagePreview>\n                    ))}\n                  </ImagePreviewGrid>\n                )}\n\n                <HelpText>\n                  Upload high-quality images from multiple angles. The first\n                  image will be used as the main listing photo.\n                </HelpText>\n              </FormSection>\n            </div>\n          </FormGrid>\n        </FormContainer>\n\n        <ActionButtons>\n          {submitStatus === 'success' && (\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                gap: theme.spacing.sm,\n                color: theme.colors.success,\n                fontWeight: 600,\n              }}\n            >\n              <FaCheck />\n              Vehicle saved successfully!\n            </div>\n          )}\n\n          {submitStatus === 'error' && (\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                gap: theme.spacing.sm,\n                color: theme.colors.error,\n                fontWeight: 600,\n              }}\n            >\n              <FaExclamationTriangle />\n              Please fix the errors above\n            </div>\n          )}\n\n          <Button\n            type=\"button\"\n            variant=\"secondary\"\n            onClick={handleSaveDraft}\n            disabled={isSubmitting}\n          >\n            <FaSave />\n            Save Draft\n          </Button>\n\n          <Button\n            type=\"submit\"\n            variant=\"primary\"\n            disabled={isSubmitting}\n            onClick={handlePublish}\n          >\n            {isSubmitting ? (\n              <>\n                <FaClock />\n                Publishing...\n              </>\n            ) : (\n              <>\n                <FaCheck />\n                Publish Vehicle\n              </>\n            )}\n          </Button>\n        </ActionButtons>\n      </form>\n    </Container>\n  );\n};\n\nexport default AddVehicleTab;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/components/AnalyticsTab.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport styled from 'styled-components';\nimport { FaChartLine } from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst Container = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  padding: ${theme.spacing.xl};\n`;\n\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.lg};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst ComingSoon = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray500};\n\n  .icon {\n    font-size: 4rem;\n    color: ${theme.colors.gray400};\n    margin-bottom: ${theme.spacing.lg};\n  }\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray700};\n  }\n\n  p {\n    font-size: 1rem;\n    max-width: 500px;\n    margin: 0 auto;\n  }\n`;\n\nconst AnalyticsTab = () => {\n  return (\n    <Container>\n      <Title>\n        <FaChartLine />\n        Analytics & Reports\n      </Title>\n      <ComingSoon>\n        <FaChartLine className=\"icon\" />\n        <h3>Analytics & Reports Coming Soon</h3>\n        <p>\n          Comprehensive analytics dashboard with sales reports, customer\n          insights, inventory analysis, and business performance metrics.\n        </p>\n      </ComingSoon>\n    </Container>\n  );\n};\n\nexport default AnalyticsTab;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/components/BulkImportTab.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'dealer' is defined but never used. Allowed unused args must match /^_/u.","line":394,"column":26,"nodeType":"Identifier","messageId":"unusedVar","endLine":394,"endColumn":32},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":406,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":406,"endColumn":47}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaFileImport,\n  FaDownload,\n  FaUpload,\n  FaCheck,\n  FaTimes,\n  FaSpinner,\n  FaExclamationTriangle,\n  FaInfoCircle,\n  FaCloud,\n  FaFileCsv,\n  FaTable,\n  FaEye,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst Container = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  overflow: hidden;\n`;\n\nconst Header = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.gray50};\n`;\n\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst Description = styled.p`\n  color: ${theme.colors.gray600};\n  font-size: 1rem;\n  line-height: 1.5;\n`;\n\nconst Content = styled.div`\n  padding: ${theme.spacing.xl};\n`;\n\nconst StepsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst StepCard = styled.div`\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xl};\n  text-align: center;\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    box-shadow: ${theme.shadows.md};\n  }\n`;\n\nconst StepNumber = styled.div`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  font-size: 1.2rem;\n  margin: 0 auto ${theme.spacing.md} auto;\n`;\n\nconst StepTitle = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst StepDescription = styled.p`\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.lg};\n  line-height: 1.5;\n`;\n\nconst ActionButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'primary',\n})`\n  background: ${props =>\n    props.primary ? theme.colors.primary : theme.colors.white};\n  color: ${props =>\n    props.primary ? theme.colors.white : theme.colors.primary};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border: 2px solid ${theme.colors.primary};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n  width: 100%;\n\n  &:hover {\n    background: ${props =>\n      props.primary ? theme.colors.primaryDark : theme.colors.primary};\n    color: ${theme.colors.white};\n    transform: translateY(-1px);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst UploadSection = styled.div`\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst UploadArea = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isDragOver',\n})`\n  border: 2px dashed\n    ${props => (props.isDragOver ? theme.colors.primary : theme.colors.gray300)};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xxl};\n  text-align: center;\n  background: ${props =>\n    props.isDragOver ? `${theme.colors.primary}10` : theme.colors.white};\n  transition: all 0.2s ease;\n  cursor: pointer;\n  position: relative;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    background: ${theme.colors.primary}10;\n  }\n`;\n\nconst UploadIcon = styled.div`\n  font-size: 3rem;\n  color: ${theme.colors.gray400};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst UploadText = styled.div`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray700};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst UploadSubtext = styled.div`\n  color: ${theme.colors.gray500};\n  font-size: 0.9rem;\n`;\n\nconst FileInput = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  cursor: pointer;\n`;\n\nconst FileInfo = styled.div`\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  padding: ${theme.spacing.lg};\n  margin-top: ${theme.spacing.lg};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst FileDetails = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n`;\n\nconst FileIcon = styled.div`\n  width: 40px;\n  height: 40px;\n  background: ${theme.colors.success}20;\n  border-radius: ${theme.borderRadius.md};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.success};\n  font-size: 1.2rem;\n`;\n\nconst FileName = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst FileSize = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n`;\n\nconst RemoveButton = styled.button`\n  background: none;\n  border: none;\n  color: ${theme.colors.error};\n  cursor: pointer;\n  padding: ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.error}20;\n  }\n`;\n\nconst ProcessButton = styled.button`\n  background: ${theme.colors.success};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  margin-top: ${theme.spacing.lg};\n  width: 100%;\n  justify-content: center;\n\n  &:hover:not(:disabled) {\n    background: ${theme.colors.successDark};\n    transform: translateY(-1px);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst ResultsSection = styled.div`\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xl};\n  margin-top: ${theme.spacing.xl};\n`;\n\nconst ResultsHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst ResultsTitle = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst StatCard = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  text-align: center;\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst StatValue = styled.div`\n  font-size: 1.8rem;\n  font-weight: 700;\n  color: ${props => props.color || theme.colors.primary};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst ErrorsList = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.md};\n  border: 1px solid ${theme.colors.gray200};\n  overflow: hidden;\n`;\n\nconst ErrorItem = styled.div`\n  padding: ${theme.spacing.md};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  display: flex;\n  align-items: flex-start;\n  gap: ${theme.spacing.md};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst ErrorIcon = styled.div`\n  color: ${theme.colors.error};\n  font-size: 1.1rem;\n  margin-top: 2px;\n`;\n\nconst ErrorDetails = styled.div`\n  flex: 1;\n`;\n\nconst ErrorRow = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst ErrorMessage = styled.div`\n  color: ${theme.colors.error};\n  font-size: 0.9rem;\n`;\n\nconst RequiredFields = styled.div`\n  background: ${theme.colors.info}10;\n  border: 1px solid ${theme.colors.info}30;\n  border-radius: ${theme.borderRadius.md};\n  padding: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst RequiredFieldsTitle = styled.h4`\n  font-size: 1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst FieldsList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.sm};\n`;\n\nconst FieldItem = styled.div`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.xs};\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.sm};\n`;\n\nconst BulkImportTab = ({ dealer }) => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [results, setResults] = useState(null);\n  const fileInputRef = useRef(null);\n\n  const handleFileSelect = file => {\n    if (file && file.type === 'text/csv') {\n      setSelectedFile(file);\n      setResults(null);\n    } else {\n      alert('Please select a valid CSV file.');\n    }\n  };\n\n  const handleDragOver = e => {\n    e.preventDefault();\n    setIsDragOver(true);\n  };\n\n  const handleDragLeave = e => {\n    e.preventDefault();\n    setIsDragOver(false);\n  };\n\n  const handleDrop = e => {\n    e.preventDefault();\n    setIsDragOver(false);\n    const file = e.dataTransfer.files[0];\n    handleFileSelect(file);\n  };\n\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    handleFileSelect(file);\n  };\n\n  const removeFile = () => {\n    setSelectedFile(null);\n    setResults(null);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const processFile = async () => {\n    if (!selectedFile) return;\n\n    setIsProcessing(true);\n\n    // Simulate file processing\n    await new Promise(resolve => setTimeout(resolve, 3000));\n\n    // Mock results\n    const mockResults = {\n      totalRows: 150,\n      successfulImports: 142,\n      failedImports: 8,\n      errors: [\n        {\n          row: 5,\n          message: 'Missing required field: VIN',\n        },\n        {\n          row: 12,\n          message: \"Invalid year format: 'Twenty Twenty Three'\",\n        },\n        {\n          row: 23,\n          message: 'Price must be a number',\n        },\n        {\n          row: 34,\n          message: 'Make field cannot be empty',\n        },\n        {\n          row: 67,\n          message: 'Invalid mileage value: -500',\n        },\n        {\n          row: 89,\n          message: 'Model field cannot be empty',\n        },\n        {\n          row: 101,\n          message: \"Invalid condition value: 'terrible'\",\n        },\n        {\n          row: 128,\n          message: 'Missing required field: Price',\n        },\n      ],\n    };\n\n    setResults(mockResults);\n    setIsProcessing(false);\n  };\n\n  const downloadTemplate = () => {\n    const csvContent = `VIN,Year,Make,Model,Trim,Body Style,Transmission,Engine,Fuel Type,Drivetrain,Exterior Color,Interior Color,Mileage,Condition,Price,Stock,Description,Features\n1HGBH41JXMN109186,2023,Honda,Civic,Sport,Sedan,Manual,1.5L Turbo,Gasoline,FWD,Crystal Black Pearl,Black,15000,New,28500,5,\"Sporty and fuel-efficient compact car\",\"Turbo Engine, Sport Suspension, Manual Transmission\"\n5NPE24AF4FH123456,2022,Hyundai,Elantra,SEL,Sedan,CVT,2.0L,Gasoline,FWD,Phantom Black,Gray,25000,Used,22000,3,\"Reliable sedan with great fuel economy\",\"Heated Seats, Backup Camera, Apple CarPlay\"\nKMHL14JA8MA123456,2021,Hyundai,Elantra,Limited,Sedan,CVT,2.0L,Gasoline,FWD,White,Black,35000,Used,20500,2,\"Fully loaded Elantra with premium features\",\"Leather Seats, Sunroof, Premium Audio\"`;\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'vehicle_import_template.csv';\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const requiredFields = [\n    'VIN',\n    'Year',\n    'Make',\n    'Model',\n    'Trim',\n    'Body Style',\n    'Transmission',\n    'Engine',\n    'Fuel Type',\n    'Drivetrain',\n    'Exterior Color',\n    'Interior Color',\n    'Mileage',\n    'Condition',\n    'Price',\n    'Stock',\n    'Description',\n    'Features',\n  ];\n\n  return (\n    <Container>\n      <Header>\n        <Title>\n          <FaFileImport />\n          Bulk Vehicle Import\n        </Title>\n        <Description>\n          Import multiple vehicles at once using a CSV file. Download the\n          template below, fill in your vehicle data, and upload it to quickly\n          add vehicles to your inventory.\n        </Description>\n      </Header>\n\n      <Content>\n        <RequiredFields>\n          <RequiredFieldsTitle>\n            <FaInfoCircle />\n            Required CSV Fields\n          </RequiredFieldsTitle>\n          <FieldsList>\n            {requiredFields.map((field, index) => (\n              <FieldItem key={index}>{field}</FieldItem>\n            ))}\n          </FieldsList>\n        </RequiredFields>\n\n        <StepsContainer>\n          <StepCard>\n            <StepNumber>1</StepNumber>\n            <StepTitle>Download Template</StepTitle>\n            <StepDescription>\n              Download the CSV template with all required fields and sample data\n              to get started.\n            </StepDescription>\n            <ActionButton onClick={downloadTemplate}>\n              <FaDownload />\n              Download Template\n            </ActionButton>\n          </StepCard>\n\n          <StepCard>\n            <StepNumber>2</StepNumber>\n            <StepTitle>Fill Vehicle Data</StepTitle>\n            <StepDescription>\n              Open the template in Excel or any spreadsheet application and fill\n              in your vehicle information.\n            </StepDescription>\n            <ActionButton>\n              <FaTable />\n              Open in Excel\n            </ActionButton>\n          </StepCard>\n\n          <StepCard>\n            <StepNumber>3</StepNumber>\n            <StepTitle>Upload & Import</StepTitle>\n            <StepDescription>\n              Upload your completed CSV file and we'll process it to add\n              vehicles to your inventory.\n            </StepDescription>\n            <ActionButton primary disabled={!selectedFile || isProcessing}>\n              <FaUpload />\n              {selectedFile ? 'Ready to Upload' : 'Select File First'}\n            </ActionButton>\n          </StepCard>\n        </StepsContainer>\n\n        <UploadSection>\n          <UploadArea\n            isDragOver={isDragOver}\n            onDragOver={handleDragOver}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n            onClick={() => fileInputRef.current?.click()}\n          >\n            <FileInput\n              ref={fileInputRef}\n              type=\"file\"\n              accept=\".csv\"\n              onChange={handleFileChange}\n            />\n            <UploadIcon>\n              <FaCloud />\n            </UploadIcon>\n            <UploadText>\n              {isDragOver\n                ? 'Drop your CSV file here'\n                : 'Click to select or drag & drop your CSV file'}\n            </UploadText>\n            <UploadSubtext>\n              Maximum file size: 10MB • Supported format: CSV\n            </UploadSubtext>\n          </UploadArea>\n\n          {selectedFile && (\n            <FileInfo>\n              <FileDetails>\n                <FileIcon>\n                  <FaFileCsv />\n                </FileIcon>\n                <div>\n                  <FileName>{selectedFile.name}</FileName>\n                  <FileSize>{formatFileSize(selectedFile.size)}</FileSize>\n                </div>\n              </FileDetails>\n              <RemoveButton onClick={removeFile}>\n                <FaTimes />\n              </RemoveButton>\n            </FileInfo>\n          )}\n\n          {selectedFile && (\n            <ProcessButton onClick={processFile} disabled={isProcessing}>\n              {isProcessing ? (\n                <>\n                  <FaSpinner className=\"fa-spin\" />\n                  Processing...\n                </>\n              ) : (\n                <>\n                  <FaUpload />\n                  Process Import\n                </>\n              )}\n            </ProcessButton>\n          )}\n        </UploadSection>\n\n        {results && (\n          <ResultsSection>\n            <ResultsHeader>\n              <ResultsTitle>\n                <FaCheck />\n                Import Results\n              </ResultsTitle>\n            </ResultsHeader>\n\n            <StatsGrid>\n              <StatCard>\n                <StatValue>{results.totalRows}</StatValue>\n                <StatLabel>Total Rows</StatLabel>\n              </StatCard>\n              <StatCard>\n                <StatValue color={theme.colors.success}>\n                  {results.successfulImports}\n                </StatValue>\n                <StatLabel>Successful</StatLabel>\n              </StatCard>\n              <StatCard>\n                <StatValue color={theme.colors.error}>\n                  {results.failedImports}\n                </StatValue>\n                <StatLabel>Failed</StatLabel>\n              </StatCard>\n              <StatCard>\n                <StatValue color={theme.colors.primary}>\n                  {Math.round(\n                    (results.successfulImports / results.totalRows) * 100\n                  )}\n                  %\n                </StatValue>\n                <StatLabel>Success Rate</StatLabel>\n              </StatCard>\n            </StatsGrid>\n\n            {results.errors.length > 0 && (\n              <div>\n                <h4\n                  style={{\n                    fontSize: '1rem',\n                    fontWeight: 600,\n                    color: theme.colors.gray900,\n                    marginBottom: theme.spacing.md,\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: theme.spacing.sm,\n                  }}\n                >\n                  <FaExclamationTriangle />\n                  Import Errors ({results.errors.length})\n                </h4>\n                <ErrorsList>\n                  {results.errors.map((error, index) => (\n                    <ErrorItem key={index}>\n                      <ErrorIcon>\n                        <FaExclamationTriangle />\n                      </ErrorIcon>\n                      <ErrorDetails>\n                        <ErrorRow>Row {error.row}</ErrorRow>\n                        <ErrorMessage>{error.message}</ErrorMessage>\n                      </ErrorDetails>\n                    </ErrorItem>\n                  ))}\n                </ErrorsList>\n              </div>\n            )}\n\n            <div\n              style={{\n                marginTop: theme.spacing.xl,\n                display: 'flex',\n                gap: theme.spacing.md,\n              }}\n            >\n              <ActionButton primary>\n                <FaEye />\n                View Imported Vehicles\n              </ActionButton>\n              <ActionButton>\n                <FaDownload />\n                Download Error Report\n              </ActionButton>\n            </div>\n          </ResultsSection>\n        )}\n      </Content>\n    </Container>\n  );\n};\n\nexport default BulkImportTab;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/components/CategoryCard.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaArrowRight } from 'react-icons/fa';\nimport { theme, media } from '../../styles/GlobalStyle';\n\nconst Card = styled(Link)`\n  display: block;\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  overflow: hidden;\n  box-shadow: ${theme.shadows.md};\n  transition: all 0.3s ease;\n  position: relative;\n  height: 250px;\n  text-decoration: none;\n\n  &:hover {\n    transform: translateY(-8px);\n    box-shadow: ${theme.shadows.xl};\n  }\n\n  ${media.mobile} {\n    height: 200px;\n    border-radius: ${theme.borderRadius.lg};\n\n    &:hover {\n      transform: translateY(-4px);\n      box-shadow: ${theme.shadows.lg};\n    }\n  }\n\n  ${media.tablet} {\n    height: 225px;\n\n    &:hover {\n      transform: translateY(-6px);\n    }\n  }\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  height: 70%;\n  overflow: hidden;\n`;\n\nconst CategoryImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s ease;\n\n  ${Card}:hover & {\n    transform: scale(1.1);\n  }\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    45deg,\n    rgba(0, 0, 0, 0.4) 0%,\n    rgba(0, 0, 0, 0.1) 100%\n  );\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n\n  ${Card}:hover & {\n    opacity: 1;\n  }\n\n  ${media.mobile} {\n    opacity: 0.7;\n    background: linear-gradient(\n      45deg,\n      rgba(0, 0, 0, 0.3) 0%,\n      rgba(0, 0, 0, 0.1) 100%\n    );\n  }\n`;\n\nconst ViewButton = styled.div`\n  background: ${theme.colors.white};\n  color: ${theme.colors.primary};\n  padding: ${theme.spacing.sm} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  transform: translateY(20px);\n  transition: transform 0.3s ease;\n\n  ${Card}:hover & {\n    transform: translateY(0);\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.xs} ${theme.spacing.md};\n    font-size: 0.875rem;\n    border-radius: ${theme.borderRadius.md};\n    transform: translateY(0);\n    gap: ${theme.spacing.xs};\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.sm} ${theme.spacing.lg};\n  }\n`;\n\nconst CardContent = styled.div`\n  padding: ${theme.spacing.lg};\n  height: 30%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  ${media.mobile} {\n    padding: ${theme.spacing.md};\n    height: 35%;\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.lg};\n    height: 32%;\n  }\n`;\n\nconst CategoryName = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n  text-align: center;\n\n  ${media.mobile} {\n    font-size: 1rem;\n    margin-bottom: ${theme.spacing.xs};\n  }\n\n  ${media.tablet} {\n    font-size: 1.125rem;\n  }\n`;\n\nconst CategoryDescription = styled.p`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n  text-align: center;\n  line-height: 1.4;\n\n  ${media.mobile} {\n    font-size: 0.8rem;\n    line-height: 1.3;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n  }\n\n  ${media.tablet} {\n    font-size: 0.875rem;\n  }\n`;\n\nconst CategoryCard = ({ category, dealerSlug = '' }) => {\n  const getBaseUrl = () => (dealerSlug ? `/${dealerSlug}` : '/automobiles');\n\n  return (\n    <Card to={`${getBaseUrl()}/vehicles?category=${category.slug}`}>\n      <ImageContainer>\n        <CategoryImage src={category.image} alt={category.name} />\n        <Overlay>\n          <ViewButton>\n            Browse Vehicles\n            <FaArrowRight />\n          </ViewButton>\n        </Overlay>\n      </ImageContainer>\n\n      <CardContent>\n        <CategoryName>{category.name}</CategoryName>\n        <CategoryDescription>{category.description}</CategoryDescription>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CategoryCard;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/components/CustomersTab.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'dealer' is defined but never used. Allowed unused args must match /^_/u.","line":404,"column":25,"nodeType":"Identifier","messageId":"unusedVar","endLine":404,"endColumn":31}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaUsers,\n  FaSearch,\n  FaUserPlus,\n  FaEye,\n  FaEdit,\n  FaPhone,\n  FaEnvelope,\n  FaCalendar,\n  FaStar,\n  FaMapMarkerAlt,\n  FaDownload,\n  FaChevronLeft,\n  FaChevronRight,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst Container = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  overflow: hidden;\n`;\n\nconst Header = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.gray50};\n`;\n\nconst HeaderTop = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n    align-items: stretch;\n  }\n`;\n\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst HeaderActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\n\nconst AddButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-1px);\n  }\n`;\n\nconst ExportButton = styled.button`\n  background: ${theme.colors.white};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst FiltersRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto auto;\n  gap: ${theme.spacing.md};\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst SearchContainer = styled.div`\n  position: relative;\n  flex: 1;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.sm} ${theme.spacing.sm} ${theme.spacing.sm} 2.5rem;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray500};\n  }\n`;\n\nconst SearchIcon = styled.div`\n  position: absolute;\n  left: ${theme.spacing.sm};\n  top: 50%;\n  transform: translateY(-50%);\n  color: ${theme.colors.gray400};\n  font-size: 1rem;\n`;\n\nconst FilterSelect = styled.select`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.white};\n  cursor: pointer;\n  min-width: 150px;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst StatsRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: ${theme.spacing.lg};\n  padding: ${theme.spacing.lg} ${theme.spacing.xl};\n  background: ${theme.colors.white};\n  border-bottom: 1px solid ${theme.colors.gray200};\n`;\n\nconst StatCard = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.md};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst StatValue = styled.div`\n  font-size: 1.8rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst CustomersGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n  gap: ${theme.spacing.lg};\n  padding: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    padding: ${theme.spacing.lg};\n  }\n`;\n\nconst CustomerCard = styled.div`\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.lg};\n  transition: all 0.2s ease;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: ${theme.shadows.md};\n    transform: translateY(-2px);\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst CustomerHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst CustomerAvatar = styled.div`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary},\n    ${theme.colors.secondary}\n  );\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.white};\n  font-weight: 600;\n  font-size: 1.2rem;\n  margin-right: ${theme.spacing.md};\n  flex-shrink: 0;\n`;\n\nconst CustomerInfo = styled.div`\n  flex: 1;\n`;\n\nconst CustomerName = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  font-size: 1.1rem;\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst CustomerEmail = styled.div`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst CustomerPhone = styled.div`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n`;\n\nconst CustomerRating = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  font-size: 0.8rem;\n  color: ${theme.colors.warning};\n  margin-left: auto;\n`;\n\nconst CustomerStats = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.md};\n  padding: ${theme.spacing.md};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst CustomerStatItem = styled.div`\n  text-align: center;\n`;\n\nconst CustomerStatValue = styled.div`\n  font-weight: 700;\n  color: ${theme.colors.primary};\n  font-size: 1.1rem;\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst CustomerStatLabel = styled.div`\n  font-size: 0.7rem;\n  color: ${theme.colors.gray600};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst CustomerMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.md};\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n`;\n\nconst ActionButton = styled.button`\n  background: none;\n  border: 1px solid ${theme.colors.gray300};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  color: ${theme.colors.gray600};\n  font-size: 0.8rem;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.primary};\n    border-color: ${theme.colors.primary};\n  }\n\n  &.primary {\n    background: ${theme.colors.primary};\n    color: ${theme.colors.white};\n    border-color: ${theme.colors.primary};\n\n    &:hover {\n      background: ${theme.colors.primaryDark};\n    }\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray500};\n  grid-column: 1 / -1;\n\n  .icon {\n    font-size: 4rem;\n    color: ${theme.colors.gray400};\n    margin-bottom: ${theme.spacing.lg};\n  }\n\n  h3 {\n    font-size: 1.2rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray700};\n  }\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  padding: ${theme.spacing.xl};\n  border-top: 1px solid ${theme.colors.gray200};\n`;\n\nconst PaginationButton = styled.button`\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.gray300};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover:not(:disabled) {\n    background: ${theme.colors.gray50};\n    border-color: ${theme.colors.primary};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst PaginationInfo = styled.span`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n`;\n\nconst CustomersTab = ({ dealer }) => {\n  const [customers, setCustomers] = useState([]);\n  const [filteredCustomers, setFilteredCustomers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterBy, setFilterBy] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const customersPerPage = 12;\n\n  useEffect(() => {\n    // Mock customer data - in real app, fetch from API\n    const mockCustomers = [\n      {\n        id: 1,\n        name: 'John Smith',\n        email: 'john.smith@email.com',\n        phone: '(555) 123-4567',\n        location: 'New York, NY',\n        joinDate: '2023-01-15',\n        totalPurchases: 2,\n        totalSpent: 85000,\n        lastPurchase: '2024-01-10',\n        rating: 4.8,\n        status: 'VIP',\n        notes: 'Prefers luxury vehicles, excellent payment history',\n        vehicles: ['2022 BMW X5', '2024 Tesla Model S'],\n      },\n      {\n        id: 2,\n        name: 'Sarah Johnson',\n        email: 'sarah.j@email.com',\n        phone: '(555) 234-5678',\n        location: 'Los Angeles, CA',\n        joinDate: '2023-03-22',\n        totalPurchases: 1,\n        totalSpent: 45000,\n        lastPurchase: '2023-11-20',\n        rating: 4.5,\n        status: 'Regular',\n        notes: 'First-time buyer, interested in eco-friendly options',\n        vehicles: ['2023 Toyota Prius'],\n      },\n      {\n        id: 3,\n        name: 'Michael Brown',\n        email: 'm.brown@email.com',\n        phone: '(555) 345-6789',\n        location: 'Chicago, IL',\n        joinDate: '2022-08-10',\n        totalPurchases: 3,\n        totalSpent: 125000,\n        lastPurchase: '2024-02-05',\n        rating: 4.9,\n        status: 'VIP',\n        notes: 'Fleet buyer for business, prefers trucks and SUVs',\n        vehicles: ['2022 Ford F-150', '2023 Chevy Tahoe', '2024 GMC Sierra'],\n      },\n      {\n        id: 4,\n        name: 'Emily Davis',\n        email: 'emily.davis@email.com',\n        phone: '(555) 456-7890',\n        location: 'Miami, FL',\n        joinDate: '2023-06-12',\n        totalPurchases: 1,\n        totalSpent: 32000,\n        lastPurchase: '2023-06-12',\n        rating: 4.2,\n        status: 'New',\n        notes: 'Young professional, budget-conscious',\n        vehicles: ['2021 Honda Civic'],\n      },\n      {\n        id: 5,\n        name: 'Robert Wilson',\n        email: 'r.wilson@email.com',\n        phone: '(555) 567-8901',\n        location: 'Dallas, TX',\n        joinDate: '2022-12-03',\n        totalPurchases: 2,\n        totalSpent: 95000,\n        lastPurchase: '2023-12-15',\n        rating: 4.7,\n        status: 'VIP',\n        notes: 'Enthusiast collector, prefers classic and sports cars',\n        vehicles: ['2023 Porsche 911', '2022 Mustang GT'],\n      },\n      {\n        id: 6,\n        name: 'Lisa Anderson',\n        email: 'lisa.anderson@email.com',\n        phone: '(555) 678-9012',\n        location: 'Seattle, WA',\n        joinDate: '2023-09-18',\n        totalPurchases: 1,\n        totalSpent: 58000,\n        lastPurchase: '2023-09-18',\n        rating: 4.6,\n        status: 'Regular',\n        notes: 'Family-oriented, safety is top priority',\n        vehicles: ['2023 Volvo XC90'],\n      },\n    ];\n\n    setCustomers(mockCustomers);\n    setFilteredCustomers(mockCustomers);\n  }, []);\n\n  useEffect(() => {\n    let filtered = [...customers];\n\n    // Search filter\n    if (searchTerm) {\n      filtered = filtered.filter(\n        customer =>\n          customer.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          customer.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          customer.phone.includes(searchTerm)\n      );\n    }\n\n    // Status filter\n    if (filterBy) {\n      filtered = filtered.filter(customer => customer.status === filterBy);\n    }\n\n    setFilteredCustomers(filtered);\n    setCurrentPage(1);\n  }, [customers, searchTerm, filterBy]);\n\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric',\n    });\n  };\n\n  const getInitials = name => {\n    return name\n      .split(' ')\n      .map(n => n[0])\n      .join('')\n      .toUpperCase();\n  };\n\n  const stats = {\n    total: customers.length,\n    vip: customers.filter(c => c.status === 'VIP').length,\n    regular: customers.filter(c => c.status === 'Regular').length,\n    new: customers.filter(c => c.status === 'New').length,\n    totalRevenue: customers.reduce((sum, c) => sum + c.totalSpent, 0),\n    avgSpending:\n      customers.length > 0\n        ? customers.reduce((sum, c) => sum + c.totalSpent, 0) / customers.length\n        : 0,\n  };\n\n  // Pagination\n  const indexOfLastCustomer = currentPage * customersPerPage;\n  const indexOfFirstCustomer = indexOfLastCustomer - customersPerPage;\n  const currentCustomers = filteredCustomers.slice(\n    indexOfFirstCustomer,\n    indexOfLastCustomer\n  );\n  const totalPages = Math.ceil(filteredCustomers.length / customersPerPage);\n\n  const handleExportCustomers = () => {\n    // Mock export functionality\n    const csvContent = [\n      [\n        'Name',\n        'Email',\n        'Phone',\n        'Total Purchases',\n        'Total Spent',\n        'Status',\n        'Join Date',\n      ],\n      ...customers.map(customer => [\n        customer.name,\n        customer.email,\n        customer.phone,\n        customer.totalPurchases,\n        customer.totalSpent,\n        customer.status,\n        customer.joinDate,\n      ]),\n    ]\n      .map(row => row.join(','))\n      .join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'customers.csv';\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  return (\n    <Container>\n      <Header>\n        <HeaderTop>\n          <Title>\n            <FaUsers />\n            Customer Management ({filteredCustomers.length})\n          </Title>\n          <HeaderActions>\n            <ExportButton onClick={handleExportCustomers}>\n              <FaDownload />\n              Export\n            </ExportButton>\n            <AddButton>\n              <FaUserPlus />\n              Add Customer\n            </AddButton>\n          </HeaderActions>\n        </HeaderTop>\n\n        <FiltersRow>\n          <SearchContainer>\n            <SearchIcon>\n              <FaSearch />\n            </SearchIcon>\n            <SearchInput\n              type=\"text\"\n              placeholder=\"Search customers by name, email, or phone...\"\n              value={searchTerm}\n              onChange={e => setSearchTerm(e.target.value)}\n            />\n          </SearchContainer>\n\n          <FilterSelect\n            value={filterBy}\n            onChange={e => setFilterBy(e.target.value)}\n          >\n            <option value=\"\">All Customers</option>\n            <option value=\"VIP\">VIP Customers</option>\n            <option value=\"Regular\">Regular Customers</option>\n            <option value=\"New\">New Customers</option>\n          </FilterSelect>\n\n          <FilterSelect defaultValue=\"recent\">\n            <option value=\"recent\">Recent First</option>\n            <option value=\"spending\">High Spending</option>\n            <option value=\"purchases\">Most Purchases</option>\n            <option value=\"rating\">Highest Rated</option>\n          </FilterSelect>\n        </FiltersRow>\n      </Header>\n\n      <StatsRow>\n        <StatCard>\n          <StatValue>{stats.total}</StatValue>\n          <StatLabel>Total Customers</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue>{stats.vip}</StatValue>\n          <StatLabel>VIP Customers</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue>{stats.new}</StatValue>\n          <StatLabel>New This Month</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue>{formatCurrency(stats.totalRevenue)}</StatValue>\n          <StatLabel>Total Revenue</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue>{formatCurrency(stats.avgSpending)}</StatValue>\n          <StatLabel>Avg. Spending</StatLabel>\n        </StatCard>\n      </StatsRow>\n\n      <CustomersGrid>\n        {currentCustomers.length > 0 ? (\n          currentCustomers.map(customer => (\n            <CustomerCard key={customer.id}>\n              <CustomerHeader>\n                <div style={{ display: 'flex', alignItems: 'flex-start' }}>\n                  <CustomerAvatar>{getInitials(customer.name)}</CustomerAvatar>\n                  <CustomerInfo>\n                    <CustomerName>{customer.name}</CustomerName>\n                    <CustomerEmail>\n                      <FaEnvelope\n                        style={{ marginRight: '6px', fontSize: '0.8rem' }}\n                      />\n                      {customer.email}\n                    </CustomerEmail>\n                    <CustomerPhone>\n                      <FaPhone\n                        style={{ marginRight: '6px', fontSize: '0.8rem' }}\n                      />\n                      {customer.phone}\n                    </CustomerPhone>\n                  </CustomerInfo>\n                </div>\n                <CustomerRating>\n                  <FaStar />\n                  {customer.rating}\n                </CustomerRating>\n              </CustomerHeader>\n\n              <CustomerStats>\n                <CustomerStatItem>\n                  <CustomerStatValue>\n                    {customer.totalPurchases}\n                  </CustomerStatValue>\n                  <CustomerStatLabel>Purchases</CustomerStatLabel>\n                </CustomerStatItem>\n                <CustomerStatItem>\n                  <CustomerStatValue>\n                    {formatCurrency(customer.totalSpent)}\n                  </CustomerStatValue>\n                  <CustomerStatLabel>Total Spent</CustomerStatLabel>\n                </CustomerStatItem>\n                <CustomerStatItem>\n                  <CustomerStatValue>{customer.status}</CustomerStatValue>\n                  <CustomerStatLabel>Status</CustomerStatLabel>\n                </CustomerStatItem>\n              </CustomerStats>\n\n              <CustomerMeta>\n                <div>\n                  <FaMapMarkerAlt style={{ marginRight: '4px' }} />\n                  {customer.location}\n                </div>\n                <div>\n                  <FaCalendar style={{ marginRight: '4px' }} />\n                  Joined {formatDate(customer.joinDate)}\n                </div>\n              </CustomerMeta>\n\n              <ActionButtons>\n                <ActionButton className=\"primary\">\n                  <FaEye />\n                  View Profile\n                </ActionButton>\n                <ActionButton>\n                  <FaPhone />\n                  Call\n                </ActionButton>\n                <ActionButton>\n                  <FaEnvelope />\n                  Email\n                </ActionButton>\n                <ActionButton>\n                  <FaEdit />\n                  Edit\n                </ActionButton>\n              </ActionButtons>\n            </CustomerCard>\n          ))\n        ) : (\n          <EmptyState>\n            <FaUsers className=\"icon\" />\n            <h3>No customers found</h3>\n            <p>\n              Try adjusting your search criteria or add new customers to your\n              database.\n            </p>\n          </EmptyState>\n        )}\n      </CustomersGrid>\n\n      {totalPages > 1 && (\n        <Pagination>\n          <PaginationButton\n            onClick={() => setCurrentPage(currentPage - 1)}\n            disabled={currentPage === 1}\n          >\n            <FaChevronLeft />\n            Previous\n          </PaginationButton>\n\n          <PaginationInfo>\n            Page {currentPage} of {totalPages} ({filteredCustomers.length}{' '}\n            customers)\n          </PaginationInfo>\n\n          <PaginationButton\n            onClick={() => setCurrentPage(currentPage + 1)}\n            disabled={currentPage === totalPages}\n          >\n            Next\n            <FaChevronRight />\n          </PaginationButton>\n        </Pagination>\n      )}\n    </Container>\n  );\n};\n\nexport default CustomersTab;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/components/DashboardTab.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'dealer' is defined but never used. Allowed unused args must match /^_/u.","line":235,"column":25,"nodeType":"Identifier","messageId":"unusedVar","endLine":235,"endColumn":31}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaCar,\n  FaDollarSign,\n  FaUsers,\n  FaChartLine,\n  FaEnvelope,\n  FaCalendar,\n  FaExchangeAlt,\n  FaStar,\n  FaArrowUp,\n  FaArrowDown,\n  FaEye,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst DashboardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.xl};\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst StatCard = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  border: 1px solid ${theme.colors.gray200};\n  transition: all 0.2s ease;\n\n  &:hover {\n    box-shadow: ${theme.shadows.md};\n    transform: translateY(-2px);\n  }\n`;\n\nconst StatHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst StatIcon = styled.div`\n  width: 50px;\n  height: 50px;\n  border-radius: ${theme.borderRadius.lg};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  color: ${theme.colors.white};\n  background: ${props => props.color || theme.colors.primary};\n`;\n\nconst StatValue = styled.div`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst StatChange = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'positive',\n})`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  font-size: 0.8rem;\n  font-weight: 600;\n  color: ${props =>\n    props.positive ? theme.colors.success : theme.colors.error};\n`;\n\nconst ContentGrid = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst ChartSection = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.lg};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst RecentActivity = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst ActivityList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.md};\n`;\n\nconst ActivityItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  padding: ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.gray50};\n`;\n\nconst ActivityIcon = styled.div`\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${props => props.color || theme.colors.primary};\n  color: ${theme.colors.white};\n  font-size: 0.9rem;\n  flex-shrink: 0;\n`;\n\nconst ActivityContent = styled.div`\n  flex: 1;\n`;\n\nconst ActivityText = styled.div`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray700};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst ActivityTime = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n`;\n\nconst QuickActions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-top: ${theme.spacing.xl};\n`;\n\nconst ActionCard = styled.button`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  border: 1px solid ${theme.colors.gray200};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  text-align: left;\n\n  &:hover {\n    box-shadow: ${theme.shadows.md};\n    transform: translateY(-2px);\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst ActionIcon = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: ${theme.borderRadius.md};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${props => props.color || theme.colors.primary}20;\n  color: ${props => props.color || theme.colors.primary};\n  font-size: 1.2rem;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst ActionTitle = styled.div`\n  font-size: 1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst ActionDescription = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst ChartPlaceholder = styled.div`\n  height: 300px;\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.gray500};\n  font-size: 1rem;\n  border: 2px dashed ${theme.colors.gray300};\n`;\n\nconst DashboardTab = ({ dealer }) => {\n  const [stats, setStats] = useState({});\n  const [recentActivity, setRecentActivity] = useState([]);\n\n  useEffect(() => {\n    // Simulate loading dashboard data\n    setStats({\n      totalVehicles: 147,\n      totalSales: 52,\n      revenue: 2840000,\n      customers: 1243,\n      enquiries: 28,\n      serviceAppointments: 15,\n      tradeIns: 8,\n      avgRating: 4.8,\n    });\n\n    setRecentActivity([\n      {\n        id: 1,\n        type: 'sale',\n        text: 'New sale: 2024 BMW X5 M50i',\n        time: '2 hours ago',\n        icon: FaDollarSign,\n        color: theme.colors.success,\n      },\n      {\n        id: 2,\n        type: 'enquiry',\n        text: 'New enquiry for Tesla Model S Plaid',\n        time: '4 hours ago',\n        icon: FaEnvelope,\n        color: theme.colors.primary,\n      },\n      {\n        id: 3,\n        type: 'service',\n        text: 'Service appointment scheduled',\n        time: '6 hours ago',\n        icon: FaCalendar,\n        color: theme.colors.warning,\n      },\n      {\n        id: 4,\n        type: 'trade-in',\n        text: 'Trade-in evaluation completed',\n        time: '1 day ago',\n        icon: FaExchangeAlt,\n        color: theme.colors.info,\n      },\n    ]);\n  }, []);\n\n  const statCards = [\n    {\n      label: 'Total Vehicles',\n      value: stats.totalVehicles,\n      icon: FaCar,\n      color: theme.colors.primary,\n      change: { value: '+12%', positive: true },\n    },\n    {\n      label: 'Monthly Sales',\n      value: stats.totalSales,\n      icon: FaDollarSign,\n      color: theme.colors.success,\n      change: { value: '+8%', positive: true },\n    },\n    {\n      label: 'Revenue (YTD)',\n      value: `$${(stats.revenue / 1000000).toFixed(1)}M`,\n      icon: FaChartLine,\n      color: theme.colors.info,\n      change: { value: '+15%', positive: true },\n    },\n    {\n      label: 'Total Customers',\n      value: stats.customers,\n      icon: FaUsers,\n      color: theme.colors.secondary,\n      change: { value: '+5%', positive: true },\n    },\n    {\n      label: 'Active Enquiries',\n      value: stats.enquiries,\n      icon: FaEnvelope,\n      color: theme.colors.warning,\n      change: { value: '-3%', positive: false },\n    },\n    {\n      label: 'Service Appointments',\n      value: stats.serviceAppointments,\n      icon: FaCalendar,\n      color: theme.colors.purple || '#8b5cf6',\n      change: { value: '+20%', positive: true },\n    },\n    {\n      label: 'Trade-Ins (Month)',\n      value: stats.tradeIns,\n      icon: FaExchangeAlt,\n      color: theme.colors.orange || '#f59e0b',\n      change: { value: '+25%', positive: true },\n    },\n    {\n      label: 'Average Rating',\n      value: stats.avgRating,\n      icon: FaStar,\n      color: theme.colors.yellow || '#eab308',\n      change: { value: '+0.2', positive: true },\n    },\n  ];\n\n  const quickActions = [\n    {\n      title: 'Add New Vehicle',\n      description: 'Add a new vehicle to inventory',\n      icon: FaCar,\n      color: theme.colors.primary,\n      action: () => {}, // Will be handled by parent\n    },\n    {\n      title: 'View Enquiries',\n      description: 'Check new customer enquiries',\n      icon: FaEnvelope,\n      color: theme.colors.secondary,\n      action: () => {},\n    },\n    {\n      title: 'Sales Report',\n      description: 'Generate monthly sales report',\n      icon: FaChartLine,\n      color: theme.colors.success,\n      action: () => {},\n    },\n    {\n      title: 'Customer Management',\n      description: 'Manage customer database',\n      icon: FaUsers,\n      color: theme.colors.info,\n      action: () => {},\n    },\n  ];\n\n  return (\n    <DashboardContainer>\n      <StatsGrid>\n        {statCards.map((stat, index) => (\n          <StatCard key={index}>\n            <StatHeader>\n              <div>\n                <StatValue>{stat.value}</StatValue>\n                <StatLabel>{stat.label}</StatLabel>\n                <StatChange positive={stat.change.positive}>\n                  {stat.change.positive ? <FaArrowUp /> : <FaArrowDown />}\n                  {stat.change.value} from last month\n                </StatChange>\n              </div>\n              <StatIcon color={stat.color}>\n                <stat.icon />\n              </StatIcon>\n            </StatHeader>\n          </StatCard>\n        ))}\n      </StatsGrid>\n\n      <ContentGrid>\n        <ChartSection>\n          <SectionTitle>\n            <FaChartLine />\n            Sales Performance\n          </SectionTitle>\n          <ChartPlaceholder>\n            Sales Chart Coming Soon\n            <br />\n            <small>Interactive sales analytics will be available here</small>\n          </ChartPlaceholder>\n        </ChartSection>\n\n        <RecentActivity>\n          <SectionTitle>\n            <FaEye />\n            Recent Activity\n          </SectionTitle>\n          <ActivityList>\n            {recentActivity.map(activity => (\n              <ActivityItem key={activity.id}>\n                <ActivityIcon color={activity.color}>\n                  <activity.icon />\n                </ActivityIcon>\n                <ActivityContent>\n                  <ActivityText>{activity.text}</ActivityText>\n                  <ActivityTime>{activity.time}</ActivityTime>\n                </ActivityContent>\n              </ActivityItem>\n            ))}\n          </ActivityList>\n        </RecentActivity>\n      </ContentGrid>\n\n      <div>\n        <SectionTitle>Quick Actions</SectionTitle>\n        <QuickActions>\n          {quickActions.map((action, index) => (\n            <ActionCard key={index} onClick={action.action}>\n              <ActionIcon color={action.color}>\n                <action.icon />\n              </ActionIcon>\n              <ActionTitle>{action.title}</ActionTitle>\n              <ActionDescription>{action.description}</ActionDescription>\n            </ActionCard>\n          ))}\n        </QuickActions>\n      </div>\n    </DashboardContainer>\n  );\n};\n\nexport default DashboardTab;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/components/DealerSettingsTab.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport styled from 'styled-components';\nimport { FaCog } from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst Container = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  padding: ${theme.spacing.xl};\n`;\n\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.lg};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst ComingSoon = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray500};\n\n  .icon {\n    font-size: 4rem;\n    color: ${theme.colors.gray400};\n    margin-bottom: ${theme.spacing.lg};\n  }\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray700};\n  }\n\n  p {\n    font-size: 1rem;\n    max-width: 500px;\n    margin: 0 auto;\n  }\n`;\n\nconst DealerSettingsTab = () => {\n  return (\n    <Container>\n      <Title>\n        <FaCog />\n        Dealership Settings\n      </Title>\n      <ComingSoon>\n        <FaCog className=\"icon\" />\n        <h3>Dealership Settings Coming Soon</h3>\n        <p>\n          Configure your dealership profile, business hours, contact\n          information, payment methods, and customize your storefront\n          appearance.\n        </p>\n      </ComingSoon>\n    </Container>\n  );\n};\n\nexport default DealerSettingsTab;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/components/DealerSidebar.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaHome,\n  FaCar,\n  FaPlus,\n  FaShoppingCart,\n  FaEnvelope,\n  FaChartLine,\n  FaUsers,\n  FaFileImport,\n  FaCog,\n  FaBars,\n  FaTimes,\n  FaDollarSign,\n  FaExchangeAlt,\n  FaWrench,\n  FaTags,\n  FaArrowLeft,\n} from 'react-icons/fa';\nimport { theme, media } from '../../styles/GlobalStyle';\nimport { useNavigate } from 'react-router-dom';\n\nconst SidebarContainer = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 280px;\n  height: 100vh;\n  background: ${theme.colors.white};\n  border-right: 1px solid ${theme.colors.gray200};\n  box-shadow: ${theme.shadows.sm};\n  z-index: 1000;\n  overflow-y: auto;\n  transition: transform 0.3s ease;\n\n  ${media.tabletDown} {\n    width: 260px;\n    transform: translateX(${props => (props.isOpen ? '0' : '-100%')});\n    z-index: 1001;\n  }\n\n  ${media.mobile} {\n    width: 240px;\n  }\n\n  /* Custom scrollbar */\n  &::-webkit-scrollbar {\n    width: 0.25rem;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: ${theme.colors.gray100};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: ${theme.colors.gray300};\n    border-radius: ${theme.borderRadius.sm};\n  }\n`;\n\nconst SidebarHeader = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n\n  ${media.mobile} {\n    padding: ${theme.spacing.lg};\n  }\n`;\n\nconst DealerBranding = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.lg};\n\n  ${media.mobile} {\n    gap: ${theme.spacing.sm};\n    margin-bottom: ${theme.spacing.md};\n  }\n`;\n\nconst DealerLogo = styled.div`\n  width: 50px;\n  height: 50px;\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary},\n    ${theme.colors.secondary}\n  );\n  border-radius: ${theme.borderRadius.lg};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.white};\n  font-size: 1.5rem;\n  font-weight: 600;\n\n  ${media.mobile} {\n    width: 45px;\n    height: 45px;\n    font-size: 1.3rem;\n  }\n`;\n\nconst DealerLogoImage = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: ${theme.borderRadius.lg};\n  object-fit: cover;\n\n  ${media.mobile} {\n    width: 45px;\n    height: 45px;\n  }\n`;\n\nconst DealerInfo = styled.div`\n  flex: 1;\n  min-width: 0;\n`;\n\nconst DealerName = styled.h3`\n  font-size: 1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  ${media.mobile} {\n    font-size: 0.9rem;\n  }\n`;\n\nconst DealerRole = styled.p`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n  margin: 0;\n`;\n\nconst BackToDealership = styled.button`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  background: ${theme.colors.gray100};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  color: ${theme.colors.gray700};\n  font-size: 0.9rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray200};\n    color: ${theme.colors.primary};\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.xs} ${theme.spacing.sm};\n    font-size: 0.8rem;\n  }\n`;\n\nconst Navigation = styled.nav`\n  padding: ${theme.spacing.lg} 0;\n`;\n\nconst NavSection = styled.div`\n  margin-bottom: ${theme.spacing.lg};\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst SectionTitle = styled.h4`\n  font-size: 0.75rem;\n  font-weight: 600;\n  color: ${theme.colors.gray500};\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  margin: 0 ${theme.spacing.xl} ${theme.spacing.md} ${theme.spacing.xl};\n\n  ${media.mobile} {\n    margin: 0 ${theme.spacing.lg} ${theme.spacing.sm} ${theme.spacing.lg};\n  }\n`;\n\nconst NavItem = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  background: ${props =>\n    props.active ? `${theme.colors.primary}15` : 'transparent'};\n  border: none;\n  border-left: 3px solid\n    ${props => (props.active ? theme.colors.primary : 'transparent')};\n  color: ${props =>\n    props.active ? theme.colors.primary : theme.colors.gray700};\n  font-size: 0.9rem;\n  font-weight: ${props => (props.active ? '600' : '500')};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  text-align: left;\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.primary};\n  }\n\n  .icon {\n    font-size: 1rem;\n    width: 18px;\n    flex-shrink: 0;\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.sm} ${theme.spacing.lg};\n    gap: ${theme.spacing.sm};\n    font-size: 0.85rem;\n\n    .icon {\n      font-size: 0.9rem;\n      width: 16px;\n    }\n  }\n`;\n\nconst MobileToggle = styled.button`\n  display: none;\n  position: fixed;\n  top: ${theme.spacing.lg};\n  left: ${theme.spacing.lg};\n  width: 50px;\n  height: 50px;\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.lg};\n  color: ${theme.colors.gray700};\n  font-size: 1.2rem;\n  cursor: pointer;\n  z-index: 1002;\n  box-shadow: ${theme.shadows.sm};\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray50};\n    color: ${theme.colors.primary};\n  }\n\n  ${media.tabletDown} {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nconst Overlay = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 999;\n  opacity: ${props => (props.isOpen ? 1 : 0)};\n  visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n  transition: all 0.3s ease;\n\n  ${media.tabletDown} {\n    display: block;\n  }\n`;\n\nconst DealerSidebar = ({ activeTab, onTabChange, dealer }) => {\n  const [isMobileOpen, setIsMobileOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const handleTabChange = tab => {\n    onTabChange(tab);\n    setIsMobileOpen(false);\n  };\n\n  const handleBackToDealership = () => {\n    navigate(`/${dealer.slug}`);\n  };\n\n  const navItems = [\n    {\n      section: 'Overview',\n      items: [{ id: 'dashboard', label: 'Dashboard', icon: FaHome }],\n    },\n    {\n      section: 'Inventory Management',\n      items: [\n        { id: 'inventory', label: 'Vehicle Inventory', icon: FaCar },\n        { id: 'add-vehicle', label: 'Add Vehicle', icon: FaPlus },\n        { id: 'bulk-import', label: 'Bulk Import', icon: FaFileImport },\n      ],\n    },\n    {\n      section: 'Sales & Orders',\n      items: [\n        { id: 'orders', label: 'Sales & Orders', icon: FaShoppingCart },\n        { id: 'enquiries', label: 'Enquiries', icon: FaEnvelope },\n        { id: 'customers', label: 'Customers', icon: FaUsers },\n      ],\n    },\n    {\n      section: 'Services',\n      items: [\n        { id: 'financing', label: 'Financing', icon: FaDollarSign },\n        { id: 'trade-ins', label: 'Trade-Ins', icon: FaExchangeAlt },\n        { id: 'service', label: 'Service Center', icon: FaWrench },\n        { id: 'promotions', label: 'Promotions', icon: FaTags },\n      ],\n    },\n    {\n      section: 'Analytics & Settings',\n      items: [\n        { id: 'analytics', label: 'Analytics', icon: FaChartLine },\n        { id: 'dealer-settings', label: 'Settings', icon: FaCog },\n      ],\n    },\n  ];\n\n  return (\n    <>\n      <MobileToggle onClick={() => setIsMobileOpen(!isMobileOpen)}>\n        {isMobileOpen ? <FaTimes /> : <FaBars />}\n      </MobileToggle>\n\n      <Overlay isOpen={isMobileOpen} onClick={() => setIsMobileOpen(false)} />\n\n      <SidebarContainer isOpen={isMobileOpen}>\n        <SidebarHeader>\n          <DealerBranding>\n            {dealer.logo ? (\n              <DealerLogoImage src={dealer.logo} alt={dealer.name} />\n            ) : (\n              <DealerLogo>{dealer.name.charAt(0)}</DealerLogo>\n            )}\n            <DealerInfo>\n              <DealerName>{dealer.name}</DealerName>\n              <DealerRole>Dealer Dashboard</DealerRole>\n            </DealerInfo>\n          </DealerBranding>\n\n          <BackToDealership onClick={handleBackToDealership}>\n            <FaArrowLeft />\n            Back to Dealership\n          </BackToDealership>\n        </SidebarHeader>\n\n        <Navigation>\n          {navItems.map(section => (\n            <NavSection key={section.section}>\n              <SectionTitle>{section.section}</SectionTitle>\n              {section.items.map(item => (\n                <NavItem\n                  key={item.id}\n                  active={activeTab === item.id}\n                  onClick={() => handleTabChange(item.id)}\n                >\n                  <item.icon className=\"icon\" />\n                  {item.label}\n                </NavItem>\n              ))}\n            </NavSection>\n          ))}\n        </Navigation>\n      </SidebarContainer>\n    </>\n  );\n};\n\nexport default DealerSidebar;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/components/EnquiriesTab.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaEnvelope,\n  FaEye,\n  FaReply,\n  FaPhone,\n  FaUser,\n  FaCar,\n  FaClock,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst Container = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  overflow: hidden;\n`;\n\nconst Header = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.gray50};\n`;\n\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst StatsRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-top: ${theme.spacing.lg};\n`;\n\nconst StatCard = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.md};\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.md};\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst StatValue = styled.div`\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst EnquiriesList = styled.div`\n  max-height: 600px;\n  overflow-y: auto;\n`;\n\nconst EnquiryItem = styled.div`\n  padding: ${theme.spacing.lg};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray50};\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst EnquiryHeader = styled.div`\n  display: flex;\n  justify-content: between;\n  align-items: flex-start;\n  margin-bottom: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst CustomerInfo = styled.div`\n  flex: 1;\n`;\n\nconst CustomerName = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst CustomerContact = styled.div`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst EnquiryMeta = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.lg};\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: ${theme.spacing.xs};\n  }\n`;\n\nconst VehicleInfo = styled.div`\n  background: ${theme.colors.gray50};\n  padding: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst VehicleName = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst VehiclePrice = styled.div`\n  color: ${theme.colors.primary};\n  font-weight: 600;\n`;\n\nconst EnquiryMessage = styled.div`\n  color: ${theme.colors.gray700};\n  line-height: 1.5;\n  margin-bottom: ${theme.spacing.md};\n  font-style: italic;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n  flex-wrap: wrap;\n`;\n\nconst ActionButton = styled.button`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n\n  &.primary {\n    background: ${theme.colors.primary};\n    color: ${theme.colors.white};\n    border: none;\n\n    &:hover {\n      background: ${theme.colors.primaryDark};\n    }\n  }\n\n  &.secondary {\n    background: ${theme.colors.white};\n    color: ${theme.colors.gray700};\n    border: 1px solid ${theme.colors.gray300};\n\n    &:hover {\n      background: ${theme.colors.gray50};\n    }\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray500};\n\n  .icon {\n    font-size: 4rem;\n    color: ${theme.colors.gray400};\n    margin-bottom: ${theme.spacing.lg};\n  }\n\n  h3 {\n    font-size: 1.2rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray700};\n  }\n`;\n\nconst EnquiriesTab = () => {\n  const [enquiries, setEnquiries] = useState([]);\n\n  useEffect(() => {\n    // Load enquiries from localStorage (demo data)\n    const storedEnquiries = JSON.parse(\n      localStorage.getItem('vehicleEnquiries') || '[]'\n    );\n    setEnquiries(storedEnquiries);\n  }, []);\n\n  const stats = {\n    total: enquiries.length,\n    new: enquiries.filter(e => e.status === 'pending').length,\n    responded: enquiries.filter(e => e.status === 'responded').length,\n    thisWeek: enquiries.filter(e => {\n      const enquiryDate = new Date(e.timestamp);\n      const weekAgo = new Date();\n      weekAgo.setDate(weekAgo.getDate() - 7);\n      return enquiryDate > weekAgo;\n    }).length,\n  };\n\n  const formatDate = timestamp => {\n    return new Date(timestamp).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  const formatPrice = price => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(price);\n  };\n\n  return (\n    <Container>\n      <Header>\n        <Title>\n          <FaEnvelope />\n          Customer Enquiries ({enquiries.length})\n        </Title>\n\n        <StatsRow>\n          <StatCard>\n            <StatValue>{stats.total}</StatValue>\n            <StatLabel>Total</StatLabel>\n          </StatCard>\n          <StatCard>\n            <StatValue>{stats.new}</StatValue>\n            <StatLabel>New</StatLabel>\n          </StatCard>\n          <StatCard>\n            <StatValue>{stats.responded}</StatValue>\n            <StatLabel>Responded</StatLabel>\n          </StatCard>\n          <StatCard>\n            <StatValue>{stats.thisWeek}</StatValue>\n            <StatLabel>This Week</StatLabel>\n          </StatCard>\n        </StatsRow>\n      </Header>\n\n      <EnquiriesList>\n        {enquiries.length > 0 ? (\n          enquiries.map(enquiry => (\n            <EnquiryItem key={enquiry.id}>\n              <EnquiryHeader>\n                <CustomerInfo>\n                  <CustomerName>\n                    <FaUser />\n                    {enquiry.name}\n                  </CustomerName>\n                  <CustomerContact>{enquiry.email}</CustomerContact>\n                  <CustomerContact>{enquiry.phone}</CustomerContact>\n                </CustomerInfo>\n                <EnquiryMeta>\n                  <div>\n                    <FaClock /> {formatDate(enquiry.timestamp)}\n                  </div>\n                  <div>Interest: {enquiry.interestType}</div>\n                </EnquiryMeta>\n              </EnquiryHeader>\n\n              {enquiry.vehicleName && (\n                <VehicleInfo>\n                  <VehicleName>\n                    <FaCar /> {enquiry.vehicleYear} {enquiry.vehicleMake}{' '}\n                    {enquiry.vehicleModel}\n                  </VehicleName>\n                  <VehiclePrice>\n                    {formatPrice(enquiry.vehiclePrice)}\n                  </VehiclePrice>\n                </VehicleInfo>\n              )}\n\n              {enquiry.message && (\n                <EnquiryMessage>\"{enquiry.message}\"</EnquiryMessage>\n              )}\n\n              <ActionButtons>\n                <ActionButton className=\"primary\">\n                  <FaReply />\n                  Reply\n                </ActionButton>\n                <ActionButton className=\"secondary\">\n                  <FaPhone />\n                  Call\n                </ActionButton>\n                <ActionButton className=\"secondary\">\n                  <FaEye />\n                  View Details\n                </ActionButton>\n              </ActionButtons>\n            </EnquiryItem>\n          ))\n        ) : (\n          <EmptyState>\n            <FaEnvelope className=\"icon\" />\n            <h3>No enquiries yet</h3>\n            <p>\n              Customer enquiries will appear here when customers are interested\n              in your vehicles.\n            </p>\n          </EmptyState>\n        )}\n      </EnquiriesList>\n    </Container>\n  );\n};\n\nexport default EnquiriesTab;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/components/EnquiryModal.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":412,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":412,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[9208,9258],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":413,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":413,"endColumn":59}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaTimes,\n  FaUser,\n  FaPhone,\n  FaEnvelope,\n  FaComment,\n  FaCheck,\n  FaCar,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  padding: ${theme.spacing.md};\n`;\n\nconst ModalContainer = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.xl};\n  max-width: 500px;\n  width: 100%;\n  max-height: 90vh;\n  overflow-y: auto;\n  position: relative;\n`;\n\nconst ModalHeader = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ModalTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0;\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: ${theme.colors.gray500};\n  cursor: pointer;\n  padding: ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.gray700};\n  }\n`;\n\nconst ModalBody = styled.div`\n  padding: ${theme.spacing.xl};\n`;\n\nconst VehicleInfo = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.xl};\n  padding: ${theme.spacing.md};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst VehicleImage = styled.img`\n  width: 80px;\n  height: 80px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst VehicleDetails = styled.div`\n  flex: 1;\n`;\n\nconst VehicleName = styled.h3`\n  font-size: 1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n`;\n\nconst VehiclePrice = styled.p`\n  font-size: 1.1rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n  margin: 0 0 ${theme.spacing.xs} 0;\n`;\n\nconst VehicleYear = styled.p`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n  margin: 0;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.lg};\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n`;\n\nconst Label = styled.label`\n  font-weight: 500;\n  color: ${theme.colors.gray700};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nconst InputIcon = styled.div`\n  position: absolute;\n  left: ${theme.spacing.md};\n  color: ${theme.colors.gray400};\n  z-index: 1;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.md}\n    ${theme.spacing.xxl};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray400};\n  }\n`;\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  padding: ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.md}\n    ${theme.spacing.xxl};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  min-height: 100px;\n  resize: vertical;\n  font-family: inherit;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray400};\n  }\n`;\n\nconst InterestGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n`;\n\nconst InterestOptions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: ${theme.spacing.sm};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst InterestOption = styled.label`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.sm};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    background: ${theme.colors.primary}10;\n  }\n\n  input:checked + & {\n    border-color: ${theme.colors.primary};\n    background: ${theme.colors.primary}10;\n  }\n`;\n\nconst CheckboxWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  gap: ${theme.spacing.sm};\n`;\n\nconst Checkbox = styled.input`\n  margin-top: 2px;\n`;\n\nconst CheckboxLabel = styled.label`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n  line-height: 1.5;\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  justify-content: flex-end;\n  margin-top: ${theme.spacing.lg};\n`;\n\nconst Button = styled.button`\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst CancelButton = styled(Button)`\n  background: ${theme.colors.white};\n  color: ${theme.colors.gray700};\n  border: 2px solid ${theme.colors.gray200};\n\n  &:hover:not(:disabled) {\n    background: ${theme.colors.gray50};\n    border-color: ${theme.colors.gray300};\n  }\n`;\n\nconst SubmitButton = styled(Button)`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  border: 2px solid ${theme.colors.primary};\n\n  &:hover:not(:disabled) {\n    background: ${theme.colors.primaryDark};\n    border-color: ${theme.colors.primaryDark};\n  }\n`;\n\nconst SuccessMessage = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xl};\n`;\n\nconst SuccessIcon = styled.div`\n  width: 80px;\n  height: 80px;\n  background: ${theme.colors.success};\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto ${theme.spacing.lg} auto;\n  color: ${theme.colors.white};\n  font-size: 2rem;\n`;\n\nconst SuccessTitle = styled.h3`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.md} 0;\n`;\n\nconst SuccessText = styled.p`\n  color: ${theme.colors.gray600};\n  margin: 0 0 ${theme.spacing.xl} 0;\n`;\n\nconst EnquiryModal = ({ isOpen, onClose, vehicle, userInfo = {} }) => {\n  const [formData, setFormData] = useState({\n    name: userInfo.name || '',\n    phone: userInfo.phone || '',\n    email: userInfo.email || '',\n    message: '',\n    interestType: 'purchase',\n    agreeToTerms: false,\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = e => {\n    const { name, value, type, checked } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value,\n    }));\n\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: '',\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!formData.name.trim()) {\n      newErrors.name = 'Name is required';\n    }\n\n    if (!formData.phone.trim()) {\n      newErrors.phone = 'Phone number is required';\n    } else if (!/^\\+?[\\d\\s\\-()]{10,}$/.test(formData.phone.trim())) {\n      newErrors.phone = 'Please enter a valid phone number';\n    }\n\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    if (!formData.agreeToTerms) {\n      newErrors.agreeToTerms = 'You must agree to the terms';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1500));\n\n      // Here you would typically send the enquiry to your backend\n      const enquiryData = {\n        ...formData,\n        vehicleId: vehicle.id,\n        vehicleName: vehicle.name,\n        vehiclePrice: vehicle.price,\n        vehicleYear: vehicle.year,\n        vehicleMake: vehicle.make,\n        vehicleModel: vehicle.model,\n        timestamp: new Date().toISOString(),\n        status: 'pending',\n      };\n\n      // Store in localStorage for demo (in real app, this would be in your database)\n      const existingEnquiries = JSON.parse(\n        localStorage.getItem('vehicleEnquiries') || '[]'\n      );\n      const newEnquiry = {\n        id: Date.now(),\n        ...enquiryData,\n      };\n      localStorage.setItem(\n        'vehicleEnquiries',\n        JSON.stringify([...existingEnquiries, newEnquiry])\n      );\n\n      setIsSuccess(true);\n    } catch (error) {\n      console.error('Error submitting enquiry:', error);\n      alert('Failed to submit enquiry. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleClose = () => {\n    if (isSuccess) {\n      setIsSuccess(false);\n      setFormData({\n        name: userInfo.name || '',\n        phone: userInfo.phone || '',\n        email: userInfo.email || '',\n        message: '',\n        interestType: 'purchase',\n        agreeToTerms: false,\n      });\n      setErrors({});\n    }\n    onClose();\n  };\n\n  const formatPrice = price => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(price);\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <ModalOverlay onClick={handleClose}>\n      <ModalContainer onClick={e => e.stopPropagation()}>\n        <ModalHeader>\n          <ModalTitle>\n            {isSuccess ? 'Enquiry Submitted!' : 'Vehicle Enquiry'}\n          </ModalTitle>\n          <CloseButton onClick={handleClose}>\n            <FaTimes />\n          </CloseButton>\n        </ModalHeader>\n\n        <ModalBody>\n          {isSuccess ? (\n            <SuccessMessage>\n              <SuccessIcon>\n                <FaCheck />\n              </SuccessIcon>\n              <SuccessTitle>Enquiry Sent Successfully!</SuccessTitle>\n              <SuccessText>\n                Thank you for your interest in the {vehicle.year} {vehicle.make}{' '}\n                {vehicle.model}. The dealer will contact you soon via phone or\n                email with pricing details and availability.\n              </SuccessText>\n              <SubmitButton onClick={handleClose}>\n                Continue Browsing\n              </SubmitButton>\n            </SuccessMessage>\n          ) : (\n            <>\n              <VehicleInfo>\n                <VehicleImage src={vehicle.image} alt={vehicle.name} />\n                <VehicleDetails>\n                  <VehicleName>\n                    {vehicle.year} {vehicle.make} {vehicle.model}\n                  </VehicleName>\n                  <VehiclePrice>{formatPrice(vehicle.price)}</VehiclePrice>\n                  <VehicleYear>\n                    {vehicle.trim} •{' '}\n                    {vehicle.condition === 'new' ? 'New' : 'Used'}\n                  </VehicleYear>\n                </VehicleDetails>\n              </VehicleInfo>\n\n              <Form onSubmit={handleSubmit}>\n                <FormGroup>\n                  <Label>\n                    <FaUser />\n                    Full Name *\n                  </Label>\n                  <InputWrapper>\n                    <InputIcon>\n                      <FaUser />\n                    </InputIcon>\n                    <Input\n                      type=\"text\"\n                      name=\"name\"\n                      value={formData.name}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter your full name\"\n                      style={{\n                        borderColor: errors.name\n                          ? theme.colors.error\n                          : undefined,\n                      }}\n                    />\n                  </InputWrapper>\n                  {errors.name && (\n                    <span\n                      style={{ color: theme.colors.error, fontSize: '0.9rem' }}\n                    >\n                      {errors.name}\n                    </span>\n                  )}\n                </FormGroup>\n\n                <FormGroup>\n                  <Label>\n                    <FaPhone />\n                    Phone Number *\n                  </Label>\n                  <InputWrapper>\n                    <InputIcon>\n                      <FaPhone />\n                    </InputIcon>\n                    <Input\n                      type=\"tel\"\n                      name=\"phone\"\n                      value={formData.phone}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter your phone number\"\n                      style={{\n                        borderColor: errors.phone\n                          ? theme.colors.error\n                          : undefined,\n                      }}\n                    />\n                  </InputWrapper>\n                  {errors.phone && (\n                    <span\n                      style={{ color: theme.colors.error, fontSize: '0.9rem' }}\n                    >\n                      {errors.phone}\n                    </span>\n                  )}\n                </FormGroup>\n\n                <FormGroup>\n                  <Label>\n                    <FaEnvelope />\n                    Email Address *\n                  </Label>\n                  <InputWrapper>\n                    <InputIcon>\n                      <FaEnvelope />\n                    </InputIcon>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      value={formData.email}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter your email address\"\n                      style={{\n                        borderColor: errors.email\n                          ? theme.colors.error\n                          : undefined,\n                      }}\n                    />\n                  </InputWrapper>\n                  {errors.email && (\n                    <span\n                      style={{ color: theme.colors.error, fontSize: '0.9rem' }}\n                    >\n                      {errors.email}\n                    </span>\n                  )}\n                </FormGroup>\n\n                <InterestGroup>\n                  <Label>\n                    <FaCar />\n                    I'm interested in *\n                  </Label>\n                  <InterestOptions>\n                    <InterestOption>\n                      <input\n                        type=\"radio\"\n                        name=\"interestType\"\n                        value=\"purchase\"\n                        checked={formData.interestType === 'purchase'}\n                        onChange={handleInputChange}\n                      />\n                      Purchasing this vehicle\n                    </InterestOption>\n                    <InterestOption>\n                      <input\n                        type=\"radio\"\n                        name=\"interestType\"\n                        value=\"financing\"\n                        checked={formData.interestType === 'financing'}\n                        onChange={handleInputChange}\n                      />\n                      Financing options\n                    </InterestOption>\n                    <InterestOption>\n                      <input\n                        type=\"radio\"\n                        name=\"interestType\"\n                        value=\"trade\"\n                        checked={formData.interestType === 'trade'}\n                        onChange={handleInputChange}\n                      />\n                      Trade-in value\n                    </InterestOption>\n                    <InterestOption>\n                      <input\n                        type=\"radio\"\n                        name=\"interestType\"\n                        value=\"test-drive\"\n                        checked={formData.interestType === 'test-drive'}\n                        onChange={handleInputChange}\n                      />\n                      Scheduling test drive\n                    </InterestOption>\n                  </InterestOptions>\n                </InterestGroup>\n\n                <FormGroup>\n                  <Label>\n                    <FaComment />\n                    Message (Optional)\n                  </Label>\n                  <InputWrapper>\n                    <InputIcon>\n                      <FaComment />\n                    </InputIcon>\n                    <TextArea\n                      name=\"message\"\n                      value={formData.message}\n                      onChange={handleInputChange}\n                      placeholder=\"Tell us about your preferences, trade-in vehicle, financing needs, or any specific questions...\"\n                    />\n                  </InputWrapper>\n                </FormGroup>\n\n                <CheckboxWrapper>\n                  <Checkbox\n                    type=\"checkbox\"\n                    id=\"agreeToTerms\"\n                    name=\"agreeToTerms\"\n                    checked={formData.agreeToTerms}\n                    onChange={handleInputChange}\n                  />\n                  <CheckboxLabel htmlFor=\"agreeToTerms\">\n                    I agree to share my contact information with the dealer and\n                    receive communications about this vehicle. By submitting\n                    this enquiry, I consent to the processing of my personal\n                    data.\n                  </CheckboxLabel>\n                </CheckboxWrapper>\n                {errors.agreeToTerms && (\n                  <span\n                    style={{ color: theme.colors.error, fontSize: '0.9rem' }}\n                  >\n                    {errors.agreeToTerms}\n                  </span>\n                )}\n\n                <ButtonGroup>\n                  <CancelButton type=\"button\" onClick={handleClose}>\n                    Cancel\n                  </CancelButton>\n                  <SubmitButton type=\"submit\" disabled={isSubmitting}>\n                    {isSubmitting ? 'Sending...' : 'Send Enquiry'}\n                  </SubmitButton>\n                </ButtonGroup>\n              </Form>\n            </>\n          )}\n        </ModalBody>\n      </ModalContainer>\n    </ModalOverlay>\n  );\n};\n\nexport default EnquiryModal;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/components/FinancingTab.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'dealer' is defined but never used. Allowed unused args must match /^_/u.","line":412,"column":25,"nodeType":"Identifier","messageId":"unusedVar","endLine":412,"endColumn":31}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaDollarSign,\n  FaSearch,\n  FaPlus,\n  FaEye,\n  FaEdit,\n  FaCheck,\n  FaTimes,\n  FaUser,\n  FaCalendar,\n  FaCalculator,\n  FaFileContract,\n  FaUniversity,\n  FaDownload,\n  FaPrint,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst Container = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  overflow: hidden;\n`;\n\nconst Header = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.gray50};\n`;\n\nconst HeaderTop = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n    align-items: stretch;\n  }\n`;\n\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst HeaderActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\n\nconst ActionButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'primary',\n})`\n  background: ${props =>\n    props.primary ? theme.colors.primary : theme.colors.white};\n  color: ${props =>\n    props.primary ? theme.colors.white : theme.colors.gray700};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border: ${props =>\n    props.primary ? 'none' : `2px solid ${theme.colors.gray200}`};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    background: ${props =>\n      props.primary ? theme.colors.primaryDark : theme.colors.gray50};\n    transform: translateY(-1px);\n    border-color: ${props =>\n      props.primary ? theme.colors.primaryDark : theme.colors.primary};\n  }\n`;\n\nconst FiltersRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto auto auto;\n  gap: ${theme.spacing.md};\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst SearchContainer = styled.div`\n  position: relative;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.sm} ${theme.spacing.sm} ${theme.spacing.sm} 2.5rem;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray500};\n  }\n`;\n\nconst SearchIcon = styled.div`\n  position: absolute;\n  left: ${theme.spacing.sm};\n  top: 50%;\n  transform: translateY(-50%);\n  color: ${theme.colors.gray400};\n  font-size: 1rem;\n`;\n\nconst FilterSelect = styled.select`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.white};\n  cursor: pointer;\n  min-width: 150px;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.lg};\n  padding: ${theme.spacing.lg} ${theme.spacing.xl};\n  background: ${theme.colors.white};\n  border-bottom: 1px solid ${theme.colors.gray200};\n`;\n\nconst StatCard = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.lg};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst StatValue = styled.div`\n  font-size: 1.8rem;\n  font-weight: 700;\n  color: ${props => props.color || theme.colors.primary};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst ContentGrid = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: ${theme.spacing.xl};\n  padding: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst ApplicationsList = styled.div`\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.lg};\n  overflow: hidden;\n`;\n\nconst ApplicationsHeader = styled.div`\n  padding: ${theme.spacing.lg};\n  background: ${theme.colors.gray50};\n  border-bottom: 1px solid ${theme.colors.gray200};\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst ApplicationItem = styled.div`\n  padding: ${theme.spacing.lg};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  transition: background-color 0.2s ease;\n  cursor: pointer;\n\n  &:hover {\n    background: ${theme.colors.gray50};\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst ApplicationHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst ApplicationInfo = styled.div`\n  flex: 1;\n`;\n\nconst ApplicationId = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst CustomerName = styled.div`\n  color: ${theme.colors.gray700};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst ApplicationDate = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n`;\n\nconst StatusBadge = styled.span.withConfig({\n  shouldForwardProp: prop => prop !== 'status',\n})`\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 600;\n  color: ${theme.colors.white};\n  background: ${props => {\n    switch (props.status) {\n      case 'pending':\n        return theme.colors.warning;\n      case 'under_review':\n        return theme.colors.info;\n      case 'approved':\n        return theme.colors.success;\n      case 'rejected':\n        return theme.colors.error;\n      case 'conditional':\n        return theme.colors.purple || '#8b5cf6';\n      default:\n        return theme.colors.gray500;\n    }\n  }};\n`;\n\nconst ApplicationDetails = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.md};\n  padding: ${theme.spacing.md};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst DetailItem = styled.div`\n  text-align: center;\n`;\n\nconst DetailValue = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst DetailLabel = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n  flex-wrap: wrap;\n`;\n\nconst ActionButtonSmall = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'variant',\n})`\n  background: ${props =>\n    props.variant === 'approve'\n      ? theme.colors.success\n      : props.variant === 'reject'\n        ? theme.colors.error\n        : theme.colors.white};\n  color: ${props =>\n    props.variant === 'approve' || props.variant === 'reject'\n      ? theme.colors.white\n      : theme.colors.gray700};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border: ${props =>\n    props.variant === 'approve' || props.variant === 'reject'\n      ? 'none'\n      : `1px solid ${theme.colors.gray300}`};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n\n  &:hover {\n    transform: translateY(-1px);\n    opacity: 0.9;\n  }\n`;\n\nconst LendersPanel = styled.div`\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.lg};\n`;\n\nconst LendersList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.md};\n  margin-top: ${theme.spacing.lg};\n`;\n\nconst LenderCard = styled.div`\n  padding: ${theme.spacing.md};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    box-shadow: ${theme.shadows.sm};\n  }\n`;\n\nconst LenderName = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst LenderDetails = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  gap: ${theme.spacing.sm};\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray500};\n\n  .icon {\n    font-size: 4rem;\n    color: ${theme.colors.gray400};\n    margin-bottom: ${theme.spacing.lg};\n  }\n\n  h3 {\n    font-size: 1.2rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray700};\n  }\n`;\n\nconst FinancingTab = ({ dealer }) => {\n  const [applications, setApplications] = useState([]);\n  const [filteredApplications, setFilteredApplications] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  const [lenders] = useState([\n    {\n      id: 1,\n      name: 'First National Bank',\n      minRate: 3.49,\n      maxRate: 7.99,\n      maxTerm: 84,\n      minCreditScore: 650,\n      status: 'active',\n    },\n    {\n      id: 2,\n      name: 'Capital Auto Finance',\n      minRate: 4.25,\n      maxRate: 12.99,\n      maxTerm: 72,\n      minCreditScore: 580,\n      status: 'active',\n    },\n    {\n      id: 3,\n      name: 'Credit Union Motors',\n      minRate: 2.99,\n      maxRate: 6.49,\n      maxTerm: 60,\n      minCreditScore: 700,\n      status: 'active',\n    },\n    {\n      id: 4,\n      name: 'Quick Approval Loans',\n      minRate: 8.99,\n      maxRate: 18.99,\n      maxTerm: 60,\n      minCreditScore: 500,\n      status: 'active',\n    },\n  ]);\n\n  useEffect(() => {\n    // Mock financing applications data\n    const mockApplications = [\n      {\n        id: 'FA-001',\n        applicationId: '24-FA-001',\n        customerId: 1,\n        customerName: 'John Smith',\n        customerEmail: 'john.smith@email.com',\n        vehicleId: 1,\n        vehicleName: '2024 BMW X5 M50i',\n        vehiclePrice: 75000,\n        downPayment: 15000,\n        loanAmount: 60000,\n        requestedTerm: 60,\n        creditScore: 750,\n        monthlyIncome: 8500,\n        employmentYears: 5,\n        applicationDate: '2024-02-15T10:30:00Z',\n        status: 'under_review',\n        lender: 'First National Bank',\n        interestRate: 4.25,\n        monthlyPayment: 1120,\n        notes: 'Excellent credit, stable employment',\n      },\n      {\n        id: 'FA-002',\n        applicationId: '24-FA-002',\n        customerId: 2,\n        customerName: 'Sarah Johnson',\n        customerEmail: 'sarah.j@email.com',\n        vehicleId: 2,\n        vehicleName: '2023 Tesla Model S Plaid',\n        vehiclePrice: 120000,\n        downPayment: 25000,\n        loanAmount: 95000,\n        requestedTerm: 72,\n        creditScore: 680,\n        monthlyIncome: 12000,\n        employmentYears: 3,\n        applicationDate: '2024-02-14T14:20:00Z',\n        status: 'approved',\n        lender: 'Capital Auto Finance',\n        interestRate: 5.75,\n        monthlyPayment: 1580,\n        notes: 'Approved with standard terms',\n      },\n      {\n        id: 'FA-003',\n        applicationId: '24-FA-003',\n        customerId: 3,\n        customerName: 'Michael Brown',\n        customerEmail: 'm.brown@email.com',\n        vehicleId: 3,\n        vehicleName: '2024 Ford F-150 Lightning',\n        vehiclePrice: 65000,\n        downPayment: 10000,\n        loanAmount: 55000,\n        requestedTerm: 60,\n        creditScore: 720,\n        monthlyIncome: 9500,\n        employmentYears: 8,\n        applicationDate: '2024-02-13T09:15:00Z',\n        status: 'conditional',\n        lender: 'Credit Union Motors',\n        interestRate: 3.99,\n        monthlyPayment: 1015,\n        notes: 'Conditional approval - needs updated pay stubs',\n      },\n      {\n        id: 'FA-004',\n        applicationId: '24-FA-004',\n        customerId: 4,\n        customerName: 'Emily Davis',\n        customerEmail: 'emily.davis@email.com',\n        vehicleId: 4,\n        vehicleName: '2023 Honda Civic Type R',\n        vehiclePrice: 42000,\n        downPayment: 5000,\n        loanAmount: 37000,\n        requestedTerm: 60,\n        creditScore: 620,\n        monthlyIncome: 4800,\n        employmentYears: 2,\n        applicationDate: '2024-02-12T16:45:00Z',\n        status: 'pending',\n        lender: null,\n        interestRate: null,\n        monthlyPayment: null,\n        notes: 'Application submitted, awaiting credit check',\n      },\n      {\n        id: 'FA-005',\n        applicationId: '24-FA-005',\n        customerId: 5,\n        customerName: 'Robert Wilson',\n        customerEmail: 'r.wilson@email.com',\n        vehicleId: 5,\n        vehicleName: '2024 Porsche 911 Turbo S',\n        vehiclePrice: 230000,\n        downPayment: 80000,\n        loanAmount: 150000,\n        requestedTerm: 84,\n        creditScore: 580,\n        monthlyIncome: 15000,\n        employmentYears: 1,\n        applicationDate: '2024-02-11T11:00:00Z',\n        status: 'rejected',\n        lender: 'First National Bank',\n        interestRate: null,\n        monthlyPayment: null,\n        notes: 'Insufficient credit history, debt-to-income ratio too high',\n      },\n    ];\n\n    setApplications(mockApplications);\n    setFilteredApplications(mockApplications);\n  }, []);\n\n  useEffect(() => {\n    let filtered = [...applications];\n\n    // Search filter\n    if (searchTerm) {\n      filtered = filtered.filter(\n        app =>\n          app.applicationId.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          app.customerName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          app.vehicleName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          (app.lender &&\n            app.lender.toLowerCase().includes(searchTerm.toLowerCase()))\n      );\n    }\n\n    // Status filter\n    if (statusFilter) {\n      filtered = filtered.filter(app => app.status === statusFilter);\n    }\n\n    setFilteredApplications(filtered);\n  }, [applications, searchTerm, statusFilter]);\n\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric',\n    });\n  };\n\n  const getStatusLabel = status => {\n    switch (status) {\n      case 'pending':\n        return 'Pending';\n      case 'under_review':\n        return 'Under Review';\n      case 'approved':\n        return 'Approved';\n      case 'rejected':\n        return 'Rejected';\n      case 'conditional':\n        return 'Conditional';\n      default:\n        return status;\n    }\n  };\n\n  const stats = {\n    total: applications.length,\n    pending: applications.filter(a => a.status === 'pending').length,\n    approved: applications.filter(a => a.status === 'approved').length,\n    rejected: applications.filter(a => a.status === 'rejected').length,\n    totalLoanAmount: applications\n      .filter(a => a.status === 'approved')\n      .reduce((sum, a) => sum + a.loanAmount, 0),\n    avgCreditScore:\n      applications.length > 0\n        ? Math.round(\n            applications.reduce((sum, a) => sum + a.creditScore, 0) /\n              applications.length\n          )\n        : 0,\n  };\n\n  return (\n    <Container>\n      <Header>\n        <HeaderTop>\n          <Title>\n            <FaDollarSign />\n            Financing & Loans ({filteredApplications.length})\n          </Title>\n          <HeaderActions>\n            <ActionButton>\n              <FaDownload />\n              Export Applications\n            </ActionButton>\n            <ActionButton>\n              <FaCalculator />\n              Loan Calculator\n            </ActionButton>\n            <ActionButton primary>\n              <FaPlus />\n              New Application\n            </ActionButton>\n          </HeaderActions>\n        </HeaderTop>\n\n        <FiltersRow>\n          <SearchContainer>\n            <SearchIcon>\n              <FaSearch />\n            </SearchIcon>\n            <SearchInput\n              type=\"text\"\n              placeholder=\"Search applications by ID, customer, vehicle, or lender...\"\n              value={searchTerm}\n              onChange={e => setSearchTerm(e.target.value)}\n            />\n          </SearchContainer>\n\n          <FilterSelect\n            value={statusFilter}\n            onChange={e => setStatusFilter(e.target.value)}\n          >\n            <option value=\"\">All Statuses</option>\n            <option value=\"pending\">Pending</option>\n            <option value=\"under_review\">Under Review</option>\n            <option value=\"approved\">Approved</option>\n            <option value=\"conditional\">Conditional</option>\n            <option value=\"rejected\">Rejected</option>\n          </FilterSelect>\n\n          <FilterSelect defaultValue=\"recent\">\n            <option value=\"recent\">Recent First</option>\n            <option value=\"oldest\">Oldest First</option>\n            <option value=\"amount\">Highest Amount</option>\n            <option value=\"credit\">Best Credit</option>\n          </FilterSelect>\n\n          <FilterSelect defaultValue=\"all\">\n            <option value=\"all\">All Lenders</option>\n            <option value=\"first-national\">First National Bank</option>\n            <option value=\"capital-auto\">Capital Auto Finance</option>\n            <option value=\"credit-union\">Credit Union Motors</option>\n            <option value=\"quick-approval\">Quick Approval Loans</option>\n          </FilterSelect>\n        </FiltersRow>\n      </Header>\n\n      <StatsGrid>\n        <StatCard>\n          <StatValue>{stats.total}</StatValue>\n          <StatLabel>Total Applications</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.warning}>{stats.pending}</StatValue>\n          <StatLabel>Pending Review</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.success}>{stats.approved}</StatValue>\n          <StatLabel>Approved</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.error}>{stats.rejected}</StatValue>\n          <StatLabel>Rejected</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.info}>\n            {formatCurrency(stats.totalLoanAmount)}\n          </StatValue>\n          <StatLabel>Total Financed</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.success}>\n            {stats.avgCreditScore}\n          </StatValue>\n          <StatLabel>Avg Credit Score</StatLabel>\n        </StatCard>\n      </StatsGrid>\n\n      <ContentGrid>\n        <ApplicationsList>\n          <ApplicationsHeader>\n            <SectionTitle>\n              <FaFileContract />\n              Financing Applications\n            </SectionTitle>\n          </ApplicationsHeader>\n\n          {filteredApplications.length > 0 ? (\n            filteredApplications.map(application => (\n              <ApplicationItem key={application.id}>\n                <ApplicationHeader>\n                  <ApplicationInfo>\n                    <ApplicationId>#{application.applicationId}</ApplicationId>\n                    <CustomerName>\n                      <FaUser\n                        style={{ marginRight: '6px', fontSize: '0.8rem' }}\n                      />\n                      {application.customerName}\n                    </CustomerName>\n                    <ApplicationDate>\n                      <FaCalendar\n                        style={{ marginRight: '4px', fontSize: '0.7rem' }}\n                      />\n                      Applied {formatDate(application.applicationDate)}\n                    </ApplicationDate>\n                  </ApplicationInfo>\n                  <StatusBadge status={application.status}>\n                    {getStatusLabel(application.status)}\n                  </StatusBadge>\n                </ApplicationHeader>\n\n                <ApplicationDetails>\n                  <DetailItem>\n                    <DetailValue>{application.vehicleName}</DetailValue>\n                    <DetailLabel>Vehicle</DetailLabel>\n                  </DetailItem>\n                  <DetailItem>\n                    <DetailValue>\n                      {formatCurrency(application.loanAmount)}\n                    </DetailValue>\n                    <DetailLabel>Loan Amount</DetailLabel>\n                  </DetailItem>\n                  <DetailItem>\n                    <DetailValue>\n                      {application.requestedTerm} months\n                    </DetailValue>\n                    <DetailLabel>Term</DetailLabel>\n                  </DetailItem>\n                  <DetailItem>\n                    <DetailValue>{application.creditScore}</DetailValue>\n                    <DetailLabel>Credit Score</DetailLabel>\n                  </DetailItem>\n                  {application.interestRate && (\n                    <DetailItem>\n                      <DetailValue>{application.interestRate}%</DetailValue>\n                      <DetailLabel>Interest Rate</DetailLabel>\n                    </DetailItem>\n                  )}\n                  {application.monthlyPayment && (\n                    <DetailItem>\n                      <DetailValue>\n                        {formatCurrency(application.monthlyPayment)}\n                      </DetailValue>\n                      <DetailLabel>Monthly Payment</DetailLabel>\n                    </DetailItem>\n                  )}\n                </ApplicationDetails>\n\n                {application.lender && (\n                  <div\n                    style={{\n                      marginBottom: theme.spacing.md,\n                      fontSize: '0.9rem',\n                      color: theme.colors.gray600,\n                    }}\n                  >\n                    <FaUniversity style={{ marginRight: '6px' }} />\n                    Lender: {application.lender}\n                  </div>\n                )}\n\n                {application.notes && (\n                  <div\n                    style={{\n                      marginBottom: theme.spacing.md,\n                      fontSize: '0.9rem',\n                      color: theme.colors.gray600,\n                      fontStyle: 'italic',\n                    }}\n                  >\n                    Notes: {application.notes}\n                  </div>\n                )}\n\n                <ActionButtons>\n                  <ActionButtonSmall>\n                    <FaEye />\n                    View Details\n                  </ActionButtonSmall>\n                  <ActionButtonSmall>\n                    <FaEdit />\n                    Edit\n                  </ActionButtonSmall>\n                  {application.status === 'pending' && (\n                    <>\n                      <ActionButtonSmall variant=\"approve\">\n                        <FaCheck />\n                        Approve\n                      </ActionButtonSmall>\n                      <ActionButtonSmall variant=\"reject\">\n                        <FaTimes />\n                        Reject\n                      </ActionButtonSmall>\n                    </>\n                  )}\n                  {application.status === 'approved' && (\n                    <ActionButtonSmall>\n                      <FaPrint />\n                      Print Contract\n                    </ActionButtonSmall>\n                  )}\n                </ActionButtons>\n              </ApplicationItem>\n            ))\n          ) : (\n            <EmptyState>\n              <FaFileContract className=\"icon\" />\n              <h3>No financing applications found</h3>\n              <p>\n                Try adjusting your search criteria or create a new financing\n                application.\n              </p>\n            </EmptyState>\n          )}\n        </ApplicationsList>\n\n        <LendersPanel>\n          <SectionTitle>\n            <FaUniversity />\n            Partner Lenders\n          </SectionTitle>\n\n          <LendersList>\n            {lenders.map(lender => (\n              <LenderCard key={lender.id}>\n                <LenderName>{lender.name}</LenderName>\n                <LenderDetails>\n                  <div>\n                    Rate: {lender.minRate}% - {lender.maxRate}%\n                  </div>\n                  <div>Max Term: {lender.maxTerm} mo</div>\n                  <div>Min Credit: {lender.minCreditScore}</div>\n                  <div>\n                    Status:{' '}\n                    <span\n                      style={{ color: theme.colors.success, fontWeight: 600 }}\n                    >\n                      {lender.status}\n                    </span>\n                  </div>\n                </LenderDetails>\n              </LenderCard>\n            ))}\n          </LendersList>\n        </LendersPanel>\n      </ContentGrid>\n    </Container>\n  );\n};\n\nexport default FinancingTab;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/components/Footer.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport styled from 'styled-components';\nimport {\n  FaFacebook,\n  FaTwitter,\n  FaInstagram,\n  FaLinkedin,\n  FaPhone,\n  FaEnvelope,\n  FaMapMarkerAlt,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst FooterContainer = styled.footer.withConfig({\n  shouldForwardProp: prop => !['backgroundColor', 'textColor'].includes(prop),\n})`\n  background: ${props => props.backgroundColor || theme.colors.gray900};\n  color: ${props => props.textColor || theme.colors.white};\n  padding: ${theme.spacing.xxl} 0 ${theme.spacing.lg} 0;\n  margin-top: auto;\n`;\n\nconst FooterContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n    text-align: center;\n  }\n`;\n\nconst FooterSection = styled.div`\n  h3 {\n    font-size: 1.2rem;\n    font-weight: 600;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.white};\n  }\n\n  p,\n  a {\n    color: ${theme.colors.gray300};\n    line-height: 1.6;\n    margin-bottom: ${theme.spacing.sm};\n    display: flex;\n    align-items: center;\n    gap: ${theme.spacing.sm};\n    text-decoration: none;\n\n    &:hover {\n      color: ${theme.colors.white};\n    }\n  }\n`;\n\nconst SocialLinks = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  margin-top: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    justify-content: center;\n  }\n`;\n\nconst SocialLink = styled.a`\n  color: ${theme.colors.gray400};\n  font-size: 1.5rem;\n  transition: all 0.2s ease;\n\n  &:hover {\n    color: ${theme.colors.white};\n    transform: translateY(-2px);\n  }\n`;\n\nconst FooterBottom = styled.div`\n  border-top: 1px solid ${theme.colors.gray700};\n  margin-top: ${theme.spacing.xl};\n  padding-top: ${theme.spacing.lg};\n  text-align: center;\n  color: ${theme.colors.gray400};\n  font-size: 0.9rem;\n`;\n\nconst Footer = ({\n  dealerSlug = '',\n  dealer = null,\n  theme: customTheme = {},\n}) => {\n  const currentYear = new Date().getFullYear();\n\n  return (\n    <FooterContainer\n      backgroundColor={customTheme.backgroundColor}\n      textColor={customTheme.textColor}\n    >\n      <FooterContent>\n        <FooterSection>\n          <h3>{dealer?.name || 'Auto Dealer'}</h3>\n          <p>{dealer?.description || 'Your trusted automobile dealer.'}</p>\n          <SocialLinks>\n            <SocialLink href=\"#\" aria-label=\"Facebook\">\n              <FaFacebook />\n            </SocialLink>\n            <SocialLink href=\"#\" aria-label=\"Twitter\">\n              <FaTwitter />\n            </SocialLink>\n            <SocialLink href=\"#\" aria-label=\"Instagram\">\n              <FaInstagram />\n            </SocialLink>\n            <SocialLink href=\"#\" aria-label=\"LinkedIn\">\n              <FaLinkedin />\n            </SocialLink>\n          </SocialLinks>\n        </FooterSection>\n\n        <FooterSection>\n          <h3>Contact Info</h3>\n          {dealer?.phone && (\n            <a href={`tel:${dealer.phone}`}>\n              <FaPhone />\n              {dealer.phone}\n            </a>\n          )}\n          {dealer?.email && (\n            <a href={`mailto:${dealer.email}`}>\n              <FaEnvelope />\n              {dealer.email}\n            </a>\n          )}\n          {dealer?.address && (\n            <p>\n              <FaMapMarkerAlt />\n              {dealer.address}, {dealer.city}, {dealer.state}\n            </p>\n          )}\n        </FooterSection>\n\n        <FooterSection>\n          <h3>Quick Links</h3>\n          <a href={`/${dealerSlug}/vehicles`}>Browse Vehicles</a>\n          <a href={`/${dealerSlug}/vehicles?category=luxury-cars`}>\n            Luxury Cars\n          </a>\n          <a href={`/${dealerSlug}/vehicles?category=electric-vehicles`}>\n            Electric Vehicles\n          </a>\n          <a href={`/${dealerSlug}/financing`}>Financing</a>\n          <a href={`/${dealerSlug}/trade-in`}>Trade-In</a>\n        </FooterSection>\n\n        <FooterSection>\n          <h3>Services</h3>\n          <button type=\"button\">Vehicle Sales</button>\n          <button type=\"button\">Financing Options</button>\n          <button type=\"button\">Trade-In Appraisal</button>\n          <button type=\"button\">Service & Maintenance</button>\n          <button type=\"button\">Extended Warranties</button>\n        </FooterSection>\n      </FooterContent>\n\n      <FooterBottom>\n        <p>\n          &copy; {currentYear} {dealer?.name || 'Auto Dealer'}. All rights\n          reserved.\n        </p>\n      </FooterBottom>\n    </FooterContainer>\n  );\n};\n\nexport default Footer;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/components/Navbar.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaCar,\n  FaUser,\n  FaSearch,\n  FaBars,\n  FaTimes,\n  FaHome,\n  FaEnvelope,\n  FaHeart,\n  FaTachometerAlt,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst NavbarContainer = styled.nav`\n  background: ${theme.colors.white};\n  box-shadow: ${theme.shadows.md};\n  position: sticky;\n  top: 0;\n  z-index: 100;\n  border-bottom: 1px solid ${theme.colors.gray100};\n  backdrop-filter: blur(10px);\n`;\n\nconst NavbarContent = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.sm};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 80px;\n  overflow: hidden;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    height: 70px;\n    padding: 0 ${theme.spacing.xs};\n  }\n\n  @media (min-width: 769px) and (max-width: 1024px) {\n    padding: 0 ${theme.spacing.sm};\n  }\n\n  @media (min-width: 1025px) {\n    padding: 0 ${theme.spacing.md};\n  }\n`;\n\nconst Logo = styled(Link).withConfig({\n  shouldForwardProp: prop => prop !== 'theme',\n})`\n  font-size: 1.8rem;\n  font-weight: 700;\n  color: ${props => props.theme?.primaryColor || theme.colors.primary};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  flex-shrink: 0;\n  white-space: nowrap;\n  min-width: 0;\n  text-decoration: none;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.4rem;\n    gap: ${theme.spacing.xs};\n  }\n\n  @media (max-width: 1024px) {\n    font-size: 1.6rem;\n  }\n`;\n\nconst LogoImage = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: ${theme.borderRadius.lg};\n  object-fit: cover;\n  border: 2px solid ${theme.colors.gray200};\n  transition: all 0.3s ease;\n  flex-shrink: 0;\n\n  &:hover {\n    transform: scale(1.05);\n    border-color: ${props => props.theme?.primaryColor || theme.colors.primary};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    width: 40px;\n    height: 40px;\n  }\n\n  @media (max-width: 1024px) {\n    width: 45px;\n    height: 45px;\n  }\n`;\n\nconst NavLinks = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.lg};\n  flex: 1;\n  justify-content: center;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    display: none;\n  }\n`;\n\nconst NavLink = styled(Link)`\n  color: ${theme.colors.gray700};\n  font-weight: 500;\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  text-decoration: none;\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.primary};\n  }\n\n  &.active {\n    background: ${theme.colors.primary}10;\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst SearchContainer = styled.div`\n  position: relative;\n  max-width: 400px;\n  width: 100%;\n  margin: 0 ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    display: none;\n  }\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.sm} ${theme.spacing.sm} ${theme.spacing.sm} 2.5rem;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.lg};\n  font-size: 0.9rem;\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    box-shadow: 0 0 0 3px ${theme.colors.primary}20;\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray500};\n  }\n`;\n\nconst SearchIcon = styled.div`\n  position: absolute;\n  left: ${theme.spacing.sm};\n  top: 50%;\n  transform: translateY(-50%);\n  color: ${theme.colors.gray400};\n  font-size: 1rem;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst IconButton = styled.button`\n  position: relative;\n  background: none;\n  border: none;\n  color: ${theme.colors.gray600};\n  padding: ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.primary};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.xs};\n  }\n`;\n\nconst MobileMenuButton = styled.button`\n  display: none;\n  background: none;\n  border: none;\n  color: ${theme.colors.gray700};\n  font-size: 1.5rem;\n  cursor: pointer;\n  padding: ${theme.spacing.sm};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    display: block;\n  }\n`;\n\nconst MobileMenu = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: ${theme.colors.white};\n  z-index: 200;\n  transform: translateX(${props => (props.isOpen ? '0' : '-100%')});\n  transition: transform 0.3s ease;\n  overflow-y: auto;\n\n  @media (min-width: ${theme.breakpoints.tablet + 1}px) {\n    display: none;\n  }\n`;\n\nconst MobileMenuHeader = styled.div`\n  padding: ${theme.spacing.lg};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst MobileMenuContent = styled.div`\n  padding: ${theme.spacing.lg};\n`;\n\nconst MobileNavLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  padding: ${theme.spacing.lg};\n  color: ${theme.colors.gray700};\n  font-weight: 500;\n  border-bottom: 1px solid ${theme.colors.gray100};\n  text-decoration: none;\n\n  &:hover {\n    background: ${theme.colors.gray50};\n    color: ${theme.colors.primary};\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst MobileSearchContainer = styled.div`\n  position: relative;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst Navbar = ({\n  dealerName = 'Auto Dealer',\n  dealerLogo,\n  dealerSlug = '',\n  theme: customTheme = {},\n}) => {\n  const navigate = useNavigate();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const getBaseUrl = () => (dealerSlug ? `/${dealerSlug}` : '/automobiles');\n\n  const handleSearch = e => {\n    e.preventDefault();\n    if (searchQuery.trim()) {\n      navigate(\n        `${getBaseUrl()}/vehicles?search=${encodeURIComponent(searchQuery)}`\n      );\n      setSearchQuery('');\n      setIsMobileMenuOpen(false);\n    }\n  };\n\n  const handleMobileMenuToggle = () => {\n    setIsMobileMenuOpen(!isMobileMenuOpen);\n  };\n\n  const closeMobileMenu = () => {\n    setIsMobileMenuOpen(false);\n  };\n\n  return (\n    <>\n      <NavbarContainer>\n        <NavbarContent>\n          <Logo to={getBaseUrl()} theme={customTheme}>\n            {dealerLogo && (\n              <LogoImage\n                src={dealerLogo}\n                alt={`${dealerName} logo`}\n                theme={customTheme}\n              />\n            )}\n            <span>{dealerName}</span>\n          </Logo>\n\n          <NavLinks>\n            <NavLink to={getBaseUrl()}>\n              <FaHome />\n              Home\n            </NavLink>\n            <NavLink to={`${getBaseUrl()}/vehicles`}>\n              <FaCar />\n              Vehicles\n            </NavLink>\n            <NavLink to={`${getBaseUrl()}/vehicles?category=luxury-cars`}>\n              Luxury\n            </NavLink>\n            <NavLink to={`${getBaseUrl()}/vehicles?category=electric-vehicles`}>\n              Electric\n            </NavLink>\n          </NavLinks>\n\n          <SearchContainer>\n            <form onSubmit={handleSearch}>\n              <SearchIcon>\n                <FaSearch />\n              </SearchIcon>\n              <SearchInput\n                type=\"text\"\n                placeholder=\"Search vehicles...\"\n                value={searchQuery}\n                onChange={e => setSearchQuery(e.target.value)}\n              />\n            </form>\n          </SearchContainer>\n\n          <ActionButtons>\n            <IconButton\n              title=\"Dealer Dashboard\"\n              onClick={() => navigate(`${getBaseUrl()}/autoadmindasboard`)}\n            >\n              <FaTachometerAlt />\n            </IconButton>\n            <IconButton\n              title=\"Wishlist\"\n              onClick={() => navigate(`${getBaseUrl()}/wishlist`)}\n            >\n              <FaHeart />\n            </IconButton>\n            <IconButton title=\"Contact\">\n              <FaEnvelope />\n            </IconButton>\n            <IconButton title=\"Account\">\n              <FaUser />\n            </IconButton>\n          </ActionButtons>\n\n          <MobileMenuButton onClick={handleMobileMenuToggle}>\n            <FaBars />\n          </MobileMenuButton>\n        </NavbarContent>\n      </NavbarContainer>\n\n      <MobileMenu isOpen={isMobileMenuOpen}>\n        <MobileMenuHeader>\n          <Logo to={getBaseUrl()} theme={customTheme} onClick={closeMobileMenu}>\n            {dealerLogo && (\n              <LogoImage\n                src={dealerLogo}\n                alt={`${dealerName} logo`}\n                theme={customTheme}\n              />\n            )}\n            <span>{dealerName}</span>\n          </Logo>\n          <IconButton onClick={closeMobileMenu}>\n            <FaTimes />\n          </IconButton>\n        </MobileMenuHeader>\n\n        <MobileMenuContent>\n          <MobileSearchContainer>\n            <form onSubmit={handleSearch}>\n              <SearchIcon>\n                <FaSearch />\n              </SearchIcon>\n              <SearchInput\n                type=\"text\"\n                placeholder=\"Search vehicles...\"\n                value={searchQuery}\n                onChange={e => setSearchQuery(e.target.value)}\n              />\n            </form>\n          </MobileSearchContainer>\n\n          <MobileNavLink to={getBaseUrl()} onClick={closeMobileMenu}>\n            <FaHome />\n            Home\n          </MobileNavLink>\n          <MobileNavLink\n            to={`${getBaseUrl()}/vehicles`}\n            onClick={closeMobileMenu}\n          >\n            <FaCar />\n            All Vehicles\n          </MobileNavLink>\n          <MobileNavLink\n            to={`${getBaseUrl()}/vehicles?category=luxury-cars`}\n            onClick={closeMobileMenu}\n          >\n            <FaCar />\n            Luxury Cars\n          </MobileNavLink>\n          <MobileNavLink\n            to={`${getBaseUrl()}/vehicles?category=electric-vehicles`}\n            onClick={closeMobileMenu}\n          >\n            <FaCar />\n            Electric Vehicles\n          </MobileNavLink>\n          <MobileNavLink\n            to={`${getBaseUrl()}/vehicles?category=suvs-trucks`}\n            onClick={closeMobileMenu}\n          >\n            <FaCar />\n            SUVs & Trucks\n          </MobileNavLink>\n          <MobileNavLink\n            to={`${getBaseUrl()}/vehicles?category=classic-cars`}\n            onClick={closeMobileMenu}\n          >\n            <FaCar />\n            Classic Cars\n          </MobileNavLink>\n          <MobileNavLink\n            to={`${getBaseUrl()}/dealer-dashboard`}\n            onClick={closeMobileMenu}\n          >\n            <FaTachometerAlt />\n            Dealer Dashboard\n          </MobileNavLink>\n          <MobileNavLink\n            to={`${getBaseUrl()}/wishlist`}\n            onClick={closeMobileMenu}\n          >\n            <FaHeart />\n            Wishlist\n          </MobileNavLink>\n          <MobileNavLink to=\"#\" onClick={closeMobileMenu}>\n            <FaEnvelope />\n            Contact\n          </MobileNavLink>\n          <MobileNavLink to=\"#\" onClick={closeMobileMenu}>\n            <FaUser />\n            Account\n          </MobileNavLink>\n        </MobileMenuContent>\n      </MobileMenu>\n    </>\n  );\n};\n\nexport default Navbar;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/components/PromotionsTab.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'dealer' is defined but never used. Allowed unused args must match /^_/u.","line":401,"column":26,"nodeType":"Identifier","messageId":"unusedVar","endLine":401,"endColumn":32}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaTags,\n  FaSearch,\n  FaPlus,\n  FaEye,\n  FaEdit,\n  FaPlay,\n  FaPause,\n  FaStop,\n  FaCalendar,\n  FaChartLine,\n  FaDownload,\n  FaCopy,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst Container = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  overflow: hidden;\n`;\n\nconst Header = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.gray50};\n`;\n\nconst HeaderTop = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n    align-items: stretch;\n  }\n`;\n\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst HeaderActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\n\nconst ActionButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'primary',\n})`\n  background: ${props =>\n    props.primary ? theme.colors.primary : theme.colors.white};\n  color: ${props =>\n    props.primary ? theme.colors.white : theme.colors.gray700};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border: ${props =>\n    props.primary ? 'none' : `2px solid ${theme.colors.gray200}`};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    background: ${props =>\n      props.primary ? theme.colors.primaryDark : theme.colors.gray50};\n    transform: translateY(-1px);\n    border-color: ${props =>\n      props.primary ? theme.colors.primaryDark : theme.colors.primary};\n  }\n`;\n\nconst FiltersRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto auto auto;\n  gap: ${theme.spacing.md};\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst SearchContainer = styled.div`\n  position: relative;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.sm} ${theme.spacing.sm} ${theme.spacing.sm} 2.5rem;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray500};\n  }\n`;\n\nconst SearchIcon = styled.div`\n  position: absolute;\n  left: ${theme.spacing.sm};\n  top: 50%;\n  transform: translateY(-50%);\n  color: ${theme.colors.gray400};\n  font-size: 1rem;\n`;\n\nconst FilterSelect = styled.select`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.white};\n  cursor: pointer;\n  min-width: 150px;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));\n  gap: ${theme.spacing.lg};\n  padding: ${theme.spacing.lg} ${theme.spacing.xl};\n  background: ${theme.colors.white};\n  border-bottom: 1px solid ${theme.colors.gray200};\n`;\n\nconst StatCard = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.lg};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst StatValue = styled.div`\n  font-size: 1.8rem;\n  font-weight: 700;\n  color: ${props => props.color || theme.colors.primary};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst PromotionsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n  gap: ${theme.spacing.lg};\n  padding: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    padding: ${theme.spacing.lg};\n  }\n`;\n\nconst PromotionCard = styled.div`\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.lg};\n  transition: all 0.2s ease;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: ${theme.shadows.md};\n    transform: translateY(-2px);\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst PromotionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst PromotionInfo = styled.div`\n  flex: 1;\n`;\n\nconst PromotionTitle = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  font-size: 1.1rem;\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst PromotionType = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst StatusBadge = styled.span.withConfig({\n  shouldForwardProp: prop => prop !== 'status',\n})`\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 600;\n  color: ${theme.colors.white};\n  background: ${props => {\n    switch (props.status) {\n      case 'draft':\n        return theme.colors.gray500;\n      case 'active':\n        return theme.colors.success;\n      case 'scheduled':\n        return theme.colors.info;\n      case 'paused':\n        return theme.colors.warning;\n      case 'expired':\n        return theme.colors.error;\n      default:\n        return theme.colors.gray500;\n    }\n  }};\n`;\n\nconst PromotionDescription = styled.div`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n  line-height: 1.4;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst PromotionDetails = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.md};\n  padding: ${theme.spacing.md};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst DetailItem = styled.div`\n  text-align: center;\n`;\n\nconst DetailValue = styled.div`\n  font-weight: 700;\n  color: ${props => props.color || theme.colors.gray900};\n  font-size: 1rem;\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst DetailLabel = styled.div`\n  font-size: 0.7rem;\n  color: ${theme.colors.gray600};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst DateRange = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${theme.spacing.md};\n  padding: ${theme.spacing.sm};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst PerformanceMetrics = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.md};\n  padding: ${theme.spacing.md};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst MetricItem = styled.div`\n  text-align: center;\n`;\n\nconst MetricValue = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.primary};\n  font-size: 0.9rem;\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst MetricLabel = styled.div`\n  font-size: 0.7rem;\n  color: ${theme.colors.gray600};\n  text-transform: uppercase;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n  flex-wrap: wrap;\n`;\n\nconst ActionButtonSmall = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'variant',\n})`\n  background: ${props =>\n    props.variant === 'activate'\n      ? theme.colors.success\n      : props.variant === 'pause'\n        ? theme.colors.warning\n        : props.variant === 'stop'\n          ? theme.colors.error\n          : props.variant === 'primary'\n            ? theme.colors.primary\n            : theme.colors.white};\n  color: ${props =>\n    props.variant === 'activate' ||\n    props.variant === 'pause' ||\n    props.variant === 'stop' ||\n    props.variant === 'primary'\n      ? theme.colors.white\n      : theme.colors.gray700};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border: ${props =>\n    props.variant === 'activate' ||\n    props.variant === 'pause' ||\n    props.variant === 'stop' ||\n    props.variant === 'primary'\n      ? 'none'\n      : `1px solid ${theme.colors.gray300}`};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n\n  &:hover {\n    transform: translateY(-1px);\n    opacity: 0.9;\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray500};\n  grid-column: 1 / -1;\n\n  .icon {\n    font-size: 4rem;\n    color: ${theme.colors.gray400};\n    margin-bottom: ${theme.spacing.lg};\n  }\n\n  h3 {\n    font-size: 1.2rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray700};\n  }\n`;\n\nconst PromotionsTab = ({ dealer }) => {\n  const [promotions, setPromotions] = useState([]);\n  const [filteredPromotions, setFilteredPromotions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  const [typeFilter, setTypeFilter] = useState('');\n\n  useEffect(() => {\n    // Mock promotions data\n    const mockPromotions = [\n      {\n        id: 'PROMO-001',\n        title: 'Summer Sales Spectacular',\n        type: 'percentage_discount',\n        description:\n          'Get 15% off all SUVs and trucks this summer! Perfect time to upgrade your vehicle.',\n        discountValue: 15,\n        discountType: 'percentage',\n        startDate: '2024-06-01',\n        endDate: '2024-08-31',\n        status: 'scheduled',\n        applicableVehicles: 'SUV, Truck',\n        minPurchaseAmount: 25000,\n        maxDiscountAmount: 5000,\n        usageCount: 0,\n        usageLimit: 100,\n        revenue: 0,\n        conversionRate: 0,\n        createdDate: '2024-05-15',\n      },\n      {\n        id: 'PROMO-002',\n        title: 'New Customer Welcome Deal',\n        type: 'fixed_discount',\n        description:\n          'First-time customers get $2,000 off any new vehicle purchase. Welcome to our dealership family!',\n        discountValue: 2000,\n        discountType: 'fixed',\n        startDate: '2024-02-01',\n        endDate: '2024-12-31',\n        status: 'active',\n        applicableVehicles: 'All New Vehicles',\n        minPurchaseAmount: 20000,\n        maxDiscountAmount: 2000,\n        usageCount: 23,\n        usageLimit: 200,\n        revenue: 920000,\n        conversionRate: 18.5,\n        createdDate: '2024-01-25',\n      },\n      {\n        id: 'PROMO-003',\n        title: 'Trade-In Bonus Program',\n        type: 'trade_in_bonus',\n        description:\n          'Extra $1,500 trade-in value for your old vehicle when purchasing any certified pre-owned car.',\n        discountValue: 1500,\n        discountType: 'trade_bonus',\n        startDate: '2024-01-15',\n        endDate: '2024-06-30',\n        status: 'active',\n        applicableVehicles: 'Certified Pre-Owned',\n        minPurchaseAmount: 15000,\n        maxDiscountAmount: 1500,\n        usageCount: 34,\n        usageLimit: 150,\n        revenue: 1360000,\n        conversionRate: 22.7,\n        createdDate: '2024-01-10',\n      },\n      {\n        id: 'PROMO-004',\n        title: 'Memorial Day Weekend Special',\n        type: 'financing_deal',\n        description:\n          '0.9% APR financing for qualified buyers on select new vehicles. Limited time offer!',\n        discountValue: 0.9,\n        discountType: 'apr_rate',\n        startDate: '2024-05-25',\n        endDate: '2024-05-28',\n        status: 'expired',\n        applicableVehicles: 'Select New Models',\n        minPurchaseAmount: 30000,\n        maxDiscountAmount: 0,\n        usageCount: 12,\n        usageLimit: 50,\n        revenue: 480000,\n        conversionRate: 24.0,\n        createdDate: '2024-05-15',\n      },\n      {\n        id: 'PROMO-005',\n        title: 'Fleet Customer Discount',\n        type: 'bulk_discount',\n        description:\n          'Special pricing for fleet customers purchasing 5 or more vehicles. Contact us for custom quotes.',\n        discountValue: 8,\n        discountType: 'percentage',\n        startDate: '2024-01-01',\n        endDate: '2024-12-31',\n        status: 'active',\n        applicableVehicles: 'All Vehicles',\n        minPurchaseAmount: 100000,\n        maxDiscountAmount: 50000,\n        usageCount: 6,\n        usageLimit: 25,\n        revenue: 780000,\n        conversionRate: 85.7,\n        createdDate: '2023-12-20',\n      },\n      {\n        id: 'PROMO-006',\n        title: 'Student Discount Program',\n        type: 'student_discount',\n        description:\n          'College students and recent graduates get $1,000 off their first car purchase.',\n        discountValue: 1000,\n        discountType: 'fixed',\n        startDate: '2024-03-01',\n        endDate: '2024-12-31',\n        status: 'paused',\n        applicableVehicles: 'All Vehicles',\n        minPurchaseAmount: 15000,\n        maxDiscountAmount: 1000,\n        usageCount: 8,\n        usageLimit: 100,\n        revenue: 240000,\n        conversionRate: 12.3,\n        createdDate: '2024-02-20',\n      },\n    ];\n\n    setPromotions(mockPromotions);\n    setFilteredPromotions(mockPromotions);\n  }, []);\n\n  useEffect(() => {\n    let filtered = [...promotions];\n\n    // Search filter\n    if (searchTerm) {\n      filtered = filtered.filter(\n        promotion =>\n          promotion.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          promotion.description\n            .toLowerCase()\n            .includes(searchTerm.toLowerCase()) ||\n          promotion.type.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n\n    // Status filter\n    if (statusFilter) {\n      filtered = filtered.filter(\n        promotion => promotion.status === statusFilter\n      );\n    }\n\n    // Type filter\n    if (typeFilter) {\n      filtered = filtered.filter(promotion => promotion.type === typeFilter);\n    }\n\n    setFilteredPromotions(filtered);\n  }, [promotions, searchTerm, statusFilter, typeFilter]);\n\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric',\n    });\n  };\n\n  const getStatusLabel = status => {\n    switch (status) {\n      case 'draft':\n        return 'Draft';\n      case 'active':\n        return 'Active';\n      case 'scheduled':\n        return 'Scheduled';\n      case 'paused':\n        return 'Paused';\n      case 'expired':\n        return 'Expired';\n      default:\n        return status;\n    }\n  };\n\n  const getTypeLabel = type => {\n    switch (type) {\n      case 'percentage_discount':\n        return 'Percentage Discount';\n      case 'fixed_discount':\n        return 'Fixed Discount';\n      case 'trade_in_bonus':\n        return 'Trade-In Bonus';\n      case 'financing_deal':\n        return 'Financing Deal';\n      case 'bulk_discount':\n        return 'Bulk Discount';\n      case 'student_discount':\n        return 'Student Discount';\n      default:\n        return type;\n    }\n  };\n\n  const formatDiscountValue = promotion => {\n    switch (promotion.discountType) {\n      case 'percentage':\n        return `${promotion.discountValue}%`;\n      case 'fixed':\n        return formatCurrency(promotion.discountValue);\n      case 'trade_bonus':\n        return `+${formatCurrency(promotion.discountValue)}`;\n      case 'apr_rate':\n        return `${promotion.discountValue}% APR`;\n      default:\n        return promotion.discountValue;\n    }\n  };\n\n  const stats = {\n    total: promotions.length,\n    active: promotions.filter(p => p.status === 'active').length,\n    scheduled: promotions.filter(p => p.status === 'scheduled').length,\n    paused: promotions.filter(p => p.status === 'paused').length,\n    totalRevenue: promotions\n      .filter(p => p.status === 'active' || p.status === 'expired')\n      .reduce((sum, p) => sum + p.revenue, 0),\n    totalUsage: promotions.reduce((sum, p) => sum + p.usageCount, 0),\n    avgConversion:\n      promotions.length > 0\n        ? promotions\n            .filter(p => p.conversionRate > 0)\n            .reduce((sum, p) => sum + p.conversionRate, 0) /\n          promotions.filter(p => p.conversionRate > 0).length\n        : 0,\n  };\n\n  return (\n    <Container>\n      <Header>\n        <HeaderTop>\n          <Title>\n            <FaTags />\n            Promotions & Deals ({filteredPromotions.length})\n          </Title>\n          <HeaderActions>\n            <ActionButton>\n              <FaDownload />\n              Export Report\n            </ActionButton>\n            <ActionButton>\n              <FaChartLine />\n              Analytics\n            </ActionButton>\n            <ActionButton primary>\n              <FaPlus />\n              New Promotion\n            </ActionButton>\n          </HeaderActions>\n        </HeaderTop>\n\n        <FiltersRow>\n          <SearchContainer>\n            <SearchIcon>\n              <FaSearch />\n            </SearchIcon>\n            <SearchInput\n              type=\"text\"\n              placeholder=\"Search promotions by title, description, or type...\"\n              value={searchTerm}\n              onChange={e => setSearchTerm(e.target.value)}\n            />\n          </SearchContainer>\n\n          <FilterSelect\n            value={statusFilter}\n            onChange={e => setStatusFilter(e.target.value)}\n          >\n            <option value=\"\">All Statuses</option>\n            <option value=\"active\">Active</option>\n            <option value=\"scheduled\">Scheduled</option>\n            <option value=\"paused\">Paused</option>\n            <option value=\"expired\">Expired</option>\n            <option value=\"draft\">Draft</option>\n          </FilterSelect>\n\n          <FilterSelect\n            value={typeFilter}\n            onChange={e => setTypeFilter(e.target.value)}\n          >\n            <option value=\"\">All Types</option>\n            <option value=\"percentage_discount\">Percentage Discount</option>\n            <option value=\"fixed_discount\">Fixed Discount</option>\n            <option value=\"trade_in_bonus\">Trade-In Bonus</option>\n            <option value=\"financing_deal\">Financing Deal</option>\n            <option value=\"bulk_discount\">Bulk Discount</option>\n            <option value=\"student_discount\">Student Discount</option>\n          </FilterSelect>\n\n          <FilterSelect defaultValue=\"recent\">\n            <option value=\"recent\">Recent First</option>\n            <option value=\"ending_soon\">Ending Soon</option>\n            <option value=\"performance\">Best Performance</option>\n            <option value=\"usage\">Most Used</option>\n          </FilterSelect>\n        </FiltersRow>\n      </Header>\n\n      <StatsGrid>\n        <StatCard>\n          <StatValue>{stats.total}</StatValue>\n          <StatLabel>Total Promotions</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.success}>{stats.active}</StatValue>\n          <StatLabel>Active</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.info}>{stats.scheduled}</StatValue>\n          <StatLabel>Scheduled</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.warning}>{stats.paused}</StatValue>\n          <StatLabel>Paused</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.success}>\n            {formatCurrency(stats.totalRevenue)}\n          </StatValue>\n          <StatLabel>Total Revenue</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.primary}>{stats.totalUsage}</StatValue>\n          <StatLabel>Total Usage</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.info}>\n            {stats.avgConversion.toFixed(1)}%\n          </StatValue>\n          <StatLabel>Avg Conversion</StatLabel>\n        </StatCard>\n      </StatsGrid>\n\n      <PromotionsGrid>\n        {filteredPromotions.length > 0 ? (\n          filteredPromotions.map(promotion => (\n            <PromotionCard key={promotion.id}>\n              <PromotionHeader>\n                <PromotionInfo>\n                  <PromotionTitle>{promotion.title}</PromotionTitle>\n                  <PromotionType>{getTypeLabel(promotion.type)}</PromotionType>\n                </PromotionInfo>\n                <StatusBadge status={promotion.status}>\n                  {getStatusLabel(promotion.status)}\n                </StatusBadge>\n              </PromotionHeader>\n\n              <PromotionDescription>\n                {promotion.description}\n              </PromotionDescription>\n\n              <PromotionDetails>\n                <DetailItem>\n                  <DetailValue color={theme.colors.success}>\n                    {formatDiscountValue(promotion)}\n                  </DetailValue>\n                  <DetailLabel>Discount Value</DetailLabel>\n                </DetailItem>\n                <DetailItem>\n                  <DetailValue>\n                    {formatCurrency(promotion.minPurchaseAmount)}\n                  </DetailValue>\n                  <DetailLabel>Min Purchase</DetailLabel>\n                </DetailItem>\n              </PromotionDetails>\n\n              <DateRange>\n                <div>\n                  <FaCalendar style={{ marginRight: '4px' }} />\n                  {formatDate(promotion.startDate)}\n                </div>\n                <div>→</div>\n                <div>\n                  <FaCalendar style={{ marginRight: '4px' }} />\n                  {formatDate(promotion.endDate)}\n                </div>\n              </DateRange>\n\n              <PerformanceMetrics>\n                <MetricItem>\n                  <MetricValue>\n                    {promotion.usageCount}/{promotion.usageLimit}\n                  </MetricValue>\n                  <MetricLabel>Usage</MetricLabel>\n                </MetricItem>\n                <MetricItem>\n                  <MetricValue>{formatCurrency(promotion.revenue)}</MetricValue>\n                  <MetricLabel>Revenue</MetricLabel>\n                </MetricItem>\n                <MetricItem>\n                  <MetricValue>{promotion.conversionRate}%</MetricValue>\n                  <MetricLabel>Conversion</MetricLabel>\n                </MetricItem>\n              </PerformanceMetrics>\n\n              <div\n                style={{\n                  marginBottom: theme.spacing.md,\n                  fontSize: '0.8rem',\n                  color: theme.colors.gray600,\n                }}\n              >\n                Applicable to: {promotion.applicableVehicles}\n              </div>\n\n              <ActionButtons>\n                <ActionButtonSmall>\n                  <FaEye />\n                  View Details\n                </ActionButtonSmall>\n                {promotion.status === 'draft' && (\n                  <ActionButtonSmall variant=\"activate\">\n                    <FaPlay />\n                    Activate\n                  </ActionButtonSmall>\n                )}\n                {promotion.status === 'active' && (\n                  <ActionButtonSmall variant=\"pause\">\n                    <FaPause />\n                    Pause\n                  </ActionButtonSmall>\n                )}\n                {promotion.status === 'paused' && (\n                  <ActionButtonSmall variant=\"activate\">\n                    <FaPlay />\n                    Resume\n                  </ActionButtonSmall>\n                )}\n                {(promotion.status === 'active' ||\n                  promotion.status === 'paused') && (\n                  <ActionButtonSmall variant=\"stop\">\n                    <FaStop />\n                    Stop\n                  </ActionButtonSmall>\n                )}\n                <ActionButtonSmall>\n                  <FaCopy />\n                  Duplicate\n                </ActionButtonSmall>\n                <ActionButtonSmall>\n                  <FaEdit />\n                  Edit\n                </ActionButtonSmall>\n              </ActionButtons>\n            </PromotionCard>\n          ))\n        ) : (\n          <EmptyState>\n            <FaTags className=\"icon\" />\n            <h3>No promotions found</h3>\n            <p>\n              Try adjusting your search criteria or create a new promotional\n              campaign.\n            </p>\n          </EmptyState>\n        )}\n      </PromotionsGrid>\n    </Container>\n  );\n};\n\nexport default PromotionsTab;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/components/SalesOrdersTab.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'dealer' is defined but never used. Allowed unused args must match /^_/u.","line":396,"column":27,"nodeType":"Identifier","messageId":"unusedVar","endLine":396,"endColumn":33}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaShoppingCart,\n  FaSearch,\n  FaPlus,\n  FaEye,\n  FaEdit,\n  FaTimes,\n  FaCalendar,\n  FaPrint,\n  FaDownload,\n  FaChevronLeft,\n  FaChevronRight,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst Container = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  overflow: hidden;\n`;\n\nconst Header = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.gray50};\n`;\n\nconst HeaderTop = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n    align-items: stretch;\n  }\n`;\n\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst HeaderActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\n\nconst ActionButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'primary',\n})`\n  background: ${props =>\n    props.primary ? theme.colors.primary : theme.colors.white};\n  color: ${props =>\n    props.primary ? theme.colors.white : theme.colors.gray700};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border: ${props =>\n    props.primary ? 'none' : `2px solid ${theme.colors.gray200}`};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    background: ${props =>\n      props.primary ? theme.colors.primaryDark : theme.colors.gray50};\n    transform: translateY(-1px);\n    border-color: ${props =>\n      props.primary ? theme.colors.primaryDark : theme.colors.primary};\n  }\n`;\n\nconst FiltersRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto auto auto;\n  gap: ${theme.spacing.md};\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst SearchContainer = styled.div`\n  position: relative;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.sm} ${theme.spacing.sm} ${theme.spacing.sm} 2.5rem;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray500};\n  }\n`;\n\nconst SearchIcon = styled.div`\n  position: absolute;\n  left: ${theme.spacing.sm};\n  top: 50%;\n  transform: translateY(-50%);\n  color: ${theme.colors.gray400};\n  font-size: 1rem;\n`;\n\nconst FilterSelect = styled.select`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.white};\n  cursor: pointer;\n  min-width: 150px;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst StatsRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));\n  gap: ${theme.spacing.lg};\n  padding: ${theme.spacing.lg} ${theme.spacing.xl};\n  background: ${theme.colors.white};\n  border-bottom: 1px solid ${theme.colors.gray200};\n`;\n\nconst StatCard = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.md};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst StatValue = styled.div`\n  font-size: 1.8rem;\n  font-weight: 700;\n  color: ${props => props.color || theme.colors.primary};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst OrdersTable = styled.div`\n  overflow-x: auto;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n`;\n\nconst TableHeader = styled.thead`\n  background: ${theme.colors.gray50};\n  border-bottom: 2px solid ${theme.colors.gray200};\n`;\n\nconst TableRow = styled.tr`\n  border-bottom: 1px solid ${theme.colors.gray200};\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray50};\n  }\n`;\n\nconst TableHeaderCell = styled.th`\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  text-align: left;\n  font-weight: 600;\n  color: ${theme.colors.gray700};\n  font-size: 0.9rem;\n  white-space: nowrap;\n`;\n\nconst TableCell = styled.td`\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  font-size: 0.9rem;\n  color: ${theme.colors.gray700};\n  vertical-align: middle;\n`;\n\nconst OrderInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.xs};\n`;\n\nconst OrderId = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n`;\n\nconst OrderDate = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n`;\n\nconst CustomerInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.xs};\n`;\n\nconst CustomerName = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n`;\n\nconst CustomerContact = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n`;\n\nconst VehicleInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n`;\n\nconst VehicleImage = styled.img`\n  width: 60px;\n  height: 45px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst VehicleDetails = styled.div``;\n\nconst VehicleName = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst VehicleSpec = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n`;\n\nconst StatusBadge = styled.span.withConfig({\n  shouldForwardProp: prop => prop !== 'status',\n})`\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 600;\n  color: ${theme.colors.white};\n  background: ${props => {\n    switch (props.status) {\n      case 'pending':\n        return theme.colors.warning;\n      case 'confirmed':\n        return theme.colors.info;\n      case 'processing':\n        return theme.colors.purple || '#8b5cf6';\n      case 'shipped':\n        return theme.colors.primary;\n      case 'delivered':\n        return theme.colors.success;\n      case 'cancelled':\n        return theme.colors.error;\n      default:\n        return theme.colors.gray500;\n    }\n  }};\n`;\n\nconst PriceCell = styled.div`\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  font-size: 1rem;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n`;\n\nconst ActionButtonSmall = styled.button`\n  background: none;\n  border: none;\n  padding: ${theme.spacing.xs};\n  border-radius: ${theme.borderRadius.sm};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  color: ${theme.colors.gray500};\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.primary};\n  }\n\n  &.edit:hover {\n    color: ${theme.colors.warning};\n  }\n\n  &.delete:hover {\n    color: ${theme.colors.error};\n  }\n\n  &.print:hover {\n    color: ${theme.colors.info};\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray500};\n\n  .icon {\n    font-size: 4rem;\n    color: ${theme.colors.gray400};\n    margin-bottom: ${theme.spacing.lg};\n  }\n\n  h3 {\n    font-size: 1.2rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray700};\n  }\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  padding: ${theme.spacing.xl};\n  border-top: 1px solid ${theme.colors.gray200};\n`;\n\nconst PaginationButton = styled.button`\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.gray300};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover:not(:disabled) {\n    background: ${theme.colors.gray50};\n    border-color: ${theme.colors.primary};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst PaginationInfo = styled.span`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n`;\n\nconst SalesOrdersTab = ({ dealer }) => {\n  const [orders, setOrders] = useState([]);\n  const [filteredOrders, setFilteredOrders] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  const [dateFilter, setDateFilter] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const ordersPerPage = 10;\n\n  useEffect(() => {\n    // Mock orders data - in real app, fetch from API\n    const mockOrders = [\n      {\n        id: 'ORD-001',\n        orderNumber: '24001',\n        customerId: 1,\n        customerName: 'John Smith',\n        customerEmail: 'john.smith@email.com',\n        customerPhone: '(555) 123-4567',\n        vehicleId: 1,\n        vehicleName: '2024 BMW X5 M50i',\n        vehicleImage:\n          'https://images.unsplash.com/photo-1555215695-3004980ad54e?w=300&h=200&fit=crop',\n        vehiclePrice: 75000,\n        orderDate: '2024-02-15T10:30:00Z',\n        status: 'confirmed',\n        paymentStatus: 'paid',\n        deliveryDate: '2024-03-01',\n        notes: 'Customer prefers early morning delivery',\n        salesPerson: 'Mike Johnson',\n        commission: 3750,\n      },\n      {\n        id: 'ORD-002',\n        orderNumber: '24002',\n        customerId: 2,\n        customerName: 'Sarah Johnson',\n        customerEmail: 'sarah.j@email.com',\n        customerPhone: '(555) 234-5678',\n        vehicleId: 2,\n        vehicleName: '2023 Tesla Model S Plaid',\n        vehicleImage:\n          'https://images.unsplash.com/photo-1560958089-b8a1929cea89?w=300&h=200&fit=crop',\n        vehiclePrice: 120000,\n        orderDate: '2024-02-14T14:20:00Z',\n        status: 'processing',\n        paymentStatus: 'pending',\n        deliveryDate: '2024-03-15',\n        notes: 'Financing application in progress',\n        salesPerson: 'Lisa Chen',\n        commission: 6000,\n      },\n      {\n        id: 'ORD-003',\n        orderNumber: '24003',\n        customerId: 3,\n        customerName: 'Michael Brown',\n        customerEmail: 'm.brown@email.com',\n        customerPhone: '(555) 345-6789',\n        vehicleId: 3,\n        vehicleName: '2024 Ford F-150 Lightning',\n        vehicleImage:\n          'https://images.unsplash.com/photo-1593950315186-76a92975b60c?w=300&h=200&fit=crop',\n        vehiclePrice: 65000,\n        orderDate: '2024-02-13T09:15:00Z',\n        status: 'shipped',\n        paymentStatus: 'paid',\n        deliveryDate: '2024-02-20',\n        notes: 'Fleet purchase - 3 units',\n        salesPerson: 'David Wilson',\n        commission: 3250,\n      },\n      {\n        id: 'ORD-004',\n        orderNumber: '24004',\n        customerId: 4,\n        customerName: 'Emily Davis',\n        customerEmail: 'emily.davis@email.com',\n        customerPhone: '(555) 456-7890',\n        vehicleId: 4,\n        vehicleName: '2023 Honda Civic Type R',\n        vehicleImage:\n          'https://images.unsplash.com/photo-1606152421802-db97b9c7a11b?w=300&h=200&fit=crop',\n        vehiclePrice: 42000,\n        orderDate: '2024-02-12T16:45:00Z',\n        status: 'delivered',\n        paymentStatus: 'paid',\n        deliveryDate: '2024-02-18',\n        notes: 'First-time buyer discount applied',\n        salesPerson: 'Jennifer Lee',\n        commission: 2100,\n      },\n      {\n        id: 'ORD-005',\n        orderNumber: '24005',\n        customerId: 5,\n        customerName: 'Robert Wilson',\n        customerEmail: 'r.wilson@email.com',\n        customerPhone: '(555) 567-8901',\n        vehicleId: 5,\n        vehicleName: '2024 Porsche 911 Turbo S',\n        vehicleImage:\n          'https://images.unsplash.com/photo-1544636331-e26879cd4d9b?w=300&h=200&fit=crop',\n        vehiclePrice: 230000,\n        orderDate: '2024-02-11T11:00:00Z',\n        status: 'pending',\n        paymentStatus: 'deposit',\n        deliveryDate: '2024-04-01',\n        notes: 'Special order - custom configuration',\n        salesPerson: 'Alex Rodriguez',\n        commission: 11500,\n      },\n      {\n        id: 'ORD-006',\n        orderNumber: '24006',\n        customerId: 6,\n        customerName: 'Lisa Anderson',\n        customerEmail: 'lisa.anderson@email.com',\n        customerPhone: '(555) 678-9012',\n        vehicleId: 6,\n        vehicleName: '2023 Volvo XC90 Recharge',\n        vehicleImage:\n          'https://images.unsplash.com/photo-1606016872875-84d1177d27bb?w=300&h=200&fit=crop',\n        vehiclePrice: 68000,\n        orderDate: '2024-02-10T13:30:00Z',\n        status: 'cancelled',\n        paymentStatus: 'refunded',\n        deliveryDate: null,\n        notes: 'Customer changed mind - full refund processed',\n        salesPerson: 'Mark Thompson',\n        commission: 0,\n      },\n    ];\n\n    setOrders(mockOrders);\n    setFilteredOrders(mockOrders);\n  }, []);\n\n  useEffect(() => {\n    let filtered = [...orders];\n\n    // Search filter\n    if (searchTerm) {\n      filtered = filtered.filter(\n        order =>\n          order.orderNumber.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          order.customerName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          order.vehicleName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          order.salesPerson.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n\n    // Status filter\n    if (statusFilter) {\n      filtered = filtered.filter(order => order.status === statusFilter);\n    }\n\n    // Date filter\n    if (dateFilter) {\n      const today = new Date();\n      const filterDate = new Date();\n\n      switch (dateFilter) {\n        case 'today':\n          filterDate.setHours(0, 0, 0, 0);\n          filtered = filtered.filter(\n            order => new Date(order.orderDate) >= filterDate\n          );\n          break;\n        case 'week':\n          filterDate.setDate(today.getDate() - 7);\n          filtered = filtered.filter(\n            order => new Date(order.orderDate) >= filterDate\n          );\n          break;\n        case 'month':\n          filterDate.setMonth(today.getMonth() - 1);\n          filtered = filtered.filter(\n            order => new Date(order.orderDate) >= filterDate\n          );\n          break;\n        default:\n          break;\n      }\n    }\n\n    setFilteredOrders(filtered);\n    setCurrentPage(1);\n  }, [orders, searchTerm, statusFilter, dateFilter]);\n\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric',\n    });\n  };\n\n  const getStatusLabel = status => {\n    switch (status) {\n      case 'pending':\n        return 'Pending';\n      case 'confirmed':\n        return 'Confirmed';\n      case 'processing':\n        return 'Processing';\n      case 'shipped':\n        return 'Shipped';\n      case 'delivered':\n        return 'Delivered';\n      case 'cancelled':\n        return 'Cancelled';\n      default:\n        return status;\n    }\n  };\n\n  const stats = {\n    total: orders.length,\n    pending: orders.filter(o => o.status === 'pending').length,\n    confirmed: orders.filter(o => o.status === 'confirmed').length,\n    shipped: orders.filter(o => o.status === 'shipped').length,\n    delivered: orders.filter(o => o.status === 'delivered').length,\n    cancelled: orders.filter(o => o.status === 'cancelled').length,\n    totalRevenue: orders\n      .filter(o => o.paymentStatus === 'paid')\n      .reduce((sum, o) => sum + o.vehiclePrice, 0),\n    totalCommission: orders\n      .filter(o => o.paymentStatus === 'paid')\n      .reduce((sum, o) => sum + o.commission, 0),\n  };\n\n  // Pagination\n  const indexOfLastOrder = currentPage * ordersPerPage;\n  const indexOfFirstOrder = indexOfLastOrder - ordersPerPage;\n  const currentOrders = filteredOrders.slice(\n    indexOfFirstOrder,\n    indexOfLastOrder\n  );\n  const totalPages = Math.ceil(filteredOrders.length / ordersPerPage);\n\n  return (\n    <Container>\n      <Header>\n        <HeaderTop>\n          <Title>\n            <FaShoppingCart />\n            Sales & Orders ({filteredOrders.length})\n          </Title>\n          <HeaderActions>\n            <ActionButton>\n              <FaDownload />\n              Export Orders\n            </ActionButton>\n            <ActionButton primary>\n              <FaPlus />\n              New Order\n            </ActionButton>\n          </HeaderActions>\n        </HeaderTop>\n\n        <FiltersRow>\n          <SearchContainer>\n            <SearchIcon>\n              <FaSearch />\n            </SearchIcon>\n            <SearchInput\n              type=\"text\"\n              placeholder=\"Search orders by number, customer, vehicle, or salesperson...\"\n              value={searchTerm}\n              onChange={e => setSearchTerm(e.target.value)}\n            />\n          </SearchContainer>\n\n          <FilterSelect\n            value={statusFilter}\n            onChange={e => setStatusFilter(e.target.value)}\n          >\n            <option value=\"\">All Statuses</option>\n            <option value=\"pending\">Pending</option>\n            <option value=\"confirmed\">Confirmed</option>\n            <option value=\"processing\">Processing</option>\n            <option value=\"shipped\">Shipped</option>\n            <option value=\"delivered\">Delivered</option>\n            <option value=\"cancelled\">Cancelled</option>\n          </FilterSelect>\n\n          <FilterSelect\n            value={dateFilter}\n            onChange={e => setDateFilter(e.target.value)}\n          >\n            <option value=\"\">All Time</option>\n            <option value=\"today\">Today</option>\n            <option value=\"week\">This Week</option>\n            <option value=\"month\">This Month</option>\n          </FilterSelect>\n\n          <FilterSelect defaultValue=\"recent\">\n            <option value=\"recent\">Recent First</option>\n            <option value=\"oldest\">Oldest First</option>\n            <option value=\"value\">Highest Value</option>\n            <option value=\"customer\">Customer A-Z</option>\n          </FilterSelect>\n        </FiltersRow>\n      </Header>\n\n      <StatsRow>\n        <StatCard>\n          <StatValue>{stats.total}</StatValue>\n          <StatLabel>Total Orders</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.warning}>{stats.pending}</StatValue>\n          <StatLabel>Pending</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.success}>{stats.delivered}</StatValue>\n          <StatLabel>Delivered</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.error}>{stats.cancelled}</StatValue>\n          <StatLabel>Cancelled</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.success}>\n            {formatCurrency(stats.totalRevenue)}\n          </StatValue>\n          <StatLabel>Total Revenue</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.info}>\n            {formatCurrency(stats.totalCommission)}\n          </StatValue>\n          <StatLabel>Total Commission</StatLabel>\n        </StatCard>\n      </StatsRow>\n\n      <OrdersTable>\n        {currentOrders.length > 0 ? (\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHeaderCell>Order</TableHeaderCell>\n                <TableHeaderCell>Customer</TableHeaderCell>\n                <TableHeaderCell>Vehicle</TableHeaderCell>\n                <TableHeaderCell>Amount</TableHeaderCell>\n                <TableHeaderCell>Status</TableHeaderCell>\n                <TableHeaderCell>Sales Person</TableHeaderCell>\n                <TableHeaderCell>Delivery</TableHeaderCell>\n                <TableHeaderCell>Actions</TableHeaderCell>\n              </TableRow>\n            </TableHeader>\n            <tbody>\n              {currentOrders.map(order => (\n                <TableRow key={order.id}>\n                  <TableCell>\n                    <OrderInfo>\n                      <OrderId>#{order.orderNumber}</OrderId>\n                      <OrderDate>\n                        <FaCalendar\n                          style={{ marginRight: '4px', fontSize: '0.7rem' }}\n                        />\n                        {formatDate(order.orderDate)}\n                      </OrderDate>\n                    </OrderInfo>\n                  </TableCell>\n                  <TableCell>\n                    <CustomerInfo>\n                      <CustomerName>{order.customerName}</CustomerName>\n                      <CustomerContact>{order.customerEmail}</CustomerContact>\n                      <CustomerContact>{order.customerPhone}</CustomerContact>\n                    </CustomerInfo>\n                  </TableCell>\n                  <TableCell>\n                    <VehicleInfo>\n                      <VehicleImage\n                        src={order.vehicleImage}\n                        alt={order.vehicleName}\n                      />\n                      <VehicleDetails>\n                        <VehicleName>{order.vehicleName}</VehicleName>\n                        <VehicleSpec>\n                          Commission: {formatCurrency(order.commission)}\n                        </VehicleSpec>\n                      </VehicleDetails>\n                    </VehicleInfo>\n                  </TableCell>\n                  <TableCell>\n                    <PriceCell>{formatCurrency(order.vehiclePrice)}</PriceCell>\n                  </TableCell>\n                  <TableCell>\n                    <StatusBadge status={order.status}>\n                      {getStatusLabel(order.status)}\n                    </StatusBadge>\n                  </TableCell>\n                  <TableCell>{order.salesPerson}</TableCell>\n                  <TableCell>\n                    {order.deliveryDate\n                      ? formatDate(order.deliveryDate)\n                      : 'TBD'}\n                  </TableCell>\n                  <TableCell>\n                    <ActionButtons>\n                      <ActionButtonSmall title=\"View Details\">\n                        <FaEye />\n                      </ActionButtonSmall>\n                      <ActionButtonSmall className=\"edit\" title=\"Edit Order\">\n                        <FaEdit />\n                      </ActionButtonSmall>\n                      <ActionButtonSmall\n                        className=\"print\"\n                        title=\"Print Invoice\"\n                      >\n                        <FaPrint />\n                      </ActionButtonSmall>\n                      <ActionButtonSmall\n                        className=\"delete\"\n                        title=\"Cancel Order\"\n                      >\n                        <FaTimes />\n                      </ActionButtonSmall>\n                    </ActionButtons>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </tbody>\n          </Table>\n        ) : (\n          <EmptyState>\n            <FaShoppingCart className=\"icon\" />\n            <h3>No orders found</h3>\n            <p>Try adjusting your search criteria or create a new order.</p>\n          </EmptyState>\n        )}\n      </OrdersTable>\n\n      {totalPages > 1 && (\n        <Pagination>\n          <PaginationButton\n            onClick={() => setCurrentPage(currentPage - 1)}\n            disabled={currentPage === 1}\n          >\n            <FaChevronLeft />\n            Previous\n          </PaginationButton>\n\n          <PaginationInfo>\n            Page {currentPage} of {totalPages} ({filteredOrders.length} orders)\n          </PaginationInfo>\n\n          <PaginationButton\n            onClick={() => setCurrentPage(currentPage + 1)}\n            disabled={currentPage === totalPages}\n          >\n            Next\n            <FaChevronRight />\n          </PaginationButton>\n        </Pagination>\n      )}\n    </Container>\n  );\n};\n\nexport default SalesOrdersTab;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/components/ServiceAppointmentsTab.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'dealer' is defined but never used. Allowed unused args must match /^_/u.","line":440,"column":35,"nodeType":"Identifier","messageId":"unusedVar","endLine":440,"endColumn":41}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaWrench,\n  FaSearch,\n  FaPlus,\n  FaEye,\n  FaEdit,\n  FaCheck,\n  FaTimes,\n  FaClock,\n  FaUser,\n  FaCalendar,\n  FaPhone,\n  FaEnvelope,\n  FaDownload,\n  FaPrint,\n  FaTools,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst Container = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  overflow: hidden;\n`;\n\nconst Header = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.gray50};\n`;\n\nconst HeaderTop = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n    align-items: stretch;\n  }\n`;\n\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst HeaderActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\n\nconst ActionButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'primary',\n})`\n  background: ${props =>\n    props.primary ? theme.colors.primary : theme.colors.white};\n  color: ${props =>\n    props.primary ? theme.colors.white : theme.colors.gray700};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border: ${props =>\n    props.primary ? 'none' : `2px solid ${theme.colors.gray200}`};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    background: ${props =>\n      props.primary ? theme.colors.primaryDark : theme.colors.gray50};\n    transform: translateY(-1px);\n    border-color: ${props =>\n      props.primary ? theme.colors.primaryDark : theme.colors.primary};\n  }\n`;\n\nconst FiltersRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto auto auto;\n  gap: ${theme.spacing.md};\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst SearchContainer = styled.div`\n  position: relative;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.sm} ${theme.spacing.sm} ${theme.spacing.sm} 2.5rem;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray500};\n  }\n`;\n\nconst SearchIcon = styled.div`\n  position: absolute;\n  left: ${theme.spacing.sm};\n  top: 50%;\n  transform: translateY(-50%);\n  color: ${theme.colors.gray400};\n  font-size: 1rem;\n`;\n\nconst FilterSelect = styled.select`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.white};\n  cursor: pointer;\n  min-width: 150px;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));\n  gap: ${theme.spacing.lg};\n  padding: ${theme.spacing.lg} ${theme.spacing.xl};\n  background: ${theme.colors.white};\n  border-bottom: 1px solid ${theme.colors.gray200};\n`;\n\nconst StatCard = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.lg};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst StatValue = styled.div`\n  font-size: 1.8rem;\n  font-weight: 700;\n  color: ${props => props.color || theme.colors.primary};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst AppointmentsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));\n  gap: ${theme.spacing.lg};\n  padding: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    padding: ${theme.spacing.lg};\n  }\n`;\n\nconst AppointmentCard = styled.div`\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.lg};\n  transition: all 0.2s ease;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: ${theme.shadows.md};\n    transform: translateY(-2px);\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst AppointmentHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst AppointmentInfo = styled.div`\n  flex: 1;\n`;\n\nconst AppointmentId = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  font-size: 1rem;\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst AppointmentTime = styled.div`\n  font-size: 0.9rem;\n  color: ${theme.colors.primary};\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst AppointmentDate = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst StatusBadge = styled.span.withConfig({\n  shouldForwardProp: prop => prop !== 'status',\n})`\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 600;\n  color: ${theme.colors.white};\n  background: ${props => {\n    switch (props.status) {\n      case 'scheduled':\n        return theme.colors.info;\n      case 'confirmed':\n        return theme.colors.primary;\n      case 'in_progress':\n        return theme.colors.warning;\n      case 'completed':\n        return theme.colors.success;\n      case 'cancelled':\n        return theme.colors.error;\n      case 'no_show':\n        return theme.colors.gray500;\n      default:\n        return theme.colors.gray500;\n    }\n  }};\n`;\n\nconst CustomerSection = styled.div`\n  margin-bottom: ${theme.spacing.md};\n  padding: ${theme.spacing.md};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst CustomerName = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst CustomerContact = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  margin-bottom: ${theme.spacing.xs};\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst VehicleSection = styled.div`\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst VehicleInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst VehicleImage = styled.img`\n  width: 70px;\n  height: 50px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.md};\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst VehicleDetails = styled.div`\n  flex: 1;\n`;\n\nconst VehicleName = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst VehicleSpecs = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst ServiceDetails = styled.div`\n  margin-bottom: ${theme.spacing.md};\n  padding: ${theme.spacing.md};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst ServiceType = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst ServiceDescription = styled.div`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray700};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst ServiceMeta = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: ${theme.spacing.sm};\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst TechnicianInfo = styled.div`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.md};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n  flex-wrap: wrap;\n`;\n\nconst ActionButtonSmall = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'variant',\n})`\n  background: ${props =>\n    props.variant === 'confirm'\n      ? theme.colors.primary\n      : props.variant === 'complete'\n        ? theme.colors.success\n        : props.variant === 'cancel'\n          ? theme.colors.error\n          : theme.colors.white};\n  color: ${props =>\n    props.variant === 'confirm' ||\n    props.variant === 'complete' ||\n    props.variant === 'cancel'\n      ? theme.colors.white\n      : theme.colors.gray700};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border: ${props =>\n    props.variant === 'confirm' ||\n    props.variant === 'complete' ||\n    props.variant === 'cancel'\n      ? 'none'\n      : `1px solid ${theme.colors.gray300}`};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n\n  &:hover {\n    transform: translateY(-1px);\n    opacity: 0.9;\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray500};\n  grid-column: 1 / -1;\n\n  .icon {\n    font-size: 4rem;\n    color: ${theme.colors.gray400};\n    margin-bottom: ${theme.spacing.lg};\n  }\n\n  h3 {\n    font-size: 1.2rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray700};\n  }\n`;\n\nconst ServiceAppointmentsTab = ({ dealer }) => {\n  const [appointments, setAppointments] = useState([]);\n  const [filteredAppointments, setFilteredAppointments] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  const [dateFilter, setDateFilter] = useState('');\n\n  useEffect(() => {\n    // Mock service appointments data\n    const mockAppointments = [\n      {\n        id: 'SA-001',\n        appointmentId: '24-SA-001',\n        customerId: 1,\n        customerName: 'John Smith',\n        customerEmail: 'john.smith@email.com',\n        customerPhone: '(555) 123-4567',\n        vehicle: {\n          year: 2022,\n          make: 'BMW',\n          model: 'X5',\n          trim: 'M50i',\n          color: 'Black',\n          mileage: 15000,\n          vin: '5UXCR6C05N9A12345',\n          image:\n            'https://images.unsplash.com/photo-1555215695-3004980ad54e?w=300&h=200&fit=crop',\n        },\n        appointmentDate: '2024-02-20T09:00:00Z',\n        scheduledDate: '2024-02-15T10:30:00Z',\n        status: 'confirmed',\n        serviceType: 'Oil Change & Multi-Point Inspection',\n        description:\n          'Regular maintenance service - oil change, filter replacement, and comprehensive vehicle inspection',\n        estimatedDuration: 90,\n        estimatedCost: 120,\n        technician: 'Mike Johnson',\n        bay: 'Bay 3',\n        notes: 'Customer mentioned unusual noise from engine',\n        services: [\n          'Oil Change',\n          'Oil Filter',\n          'Multi-Point Inspection',\n          'Fluid Top-off',\n        ],\n      },\n      {\n        id: 'SA-002',\n        appointmentId: '24-SA-002',\n        customerId: 2,\n        customerName: 'Sarah Johnson',\n        customerEmail: 'sarah.j@email.com',\n        customerPhone: '(555) 234-5678',\n        vehicle: {\n          year: 2023,\n          make: 'Tesla',\n          model: 'Model S',\n          trim: 'Plaid',\n          color: 'White',\n          mileage: 8000,\n          vin: '5YJ3E1EA9PF123456',\n          image:\n            'https://images.unsplash.com/photo-1560958089-b8a1929cea89?w=300&h=200&fit=crop',\n        },\n        appointmentDate: '2024-02-20T14:00:00Z',\n        scheduledDate: '2024-02-14T14:20:00Z',\n        status: 'in_progress',\n        serviceType: 'Software Update & Diagnostic',\n        description: 'Tesla software update and comprehensive diagnostic check',\n        estimatedDuration: 120,\n        estimatedCost: 200,\n        technician: 'Lisa Chen',\n        bay: 'Electric Bay 1',\n        notes: 'Software update requested by customer, check charging system',\n        services: [\n          'Software Update',\n          'Diagnostic Scan',\n          'Charging System Check',\n          'Tire Rotation',\n        ],\n      },\n      {\n        id: 'SA-003',\n        appointmentId: '24-SA-003',\n        customerId: 3,\n        customerName: 'Michael Brown',\n        customerEmail: 'm.brown@email.com',\n        customerPhone: '(555) 345-6789',\n        vehicle: {\n          year: 2021,\n          make: 'Ford',\n          model: 'F-150',\n          trim: 'Lariat',\n          color: 'Blue',\n          mileage: 35000,\n          vin: '1FTEW1EG5MKF12345',\n          image:\n            'https://images.unsplash.com/photo-1593950315186-76a92975b60c?w=300&h=200&fit=crop',\n        },\n        appointmentDate: '2024-02-21T08:00:00Z',\n        scheduledDate: '2024-02-13T09:15:00Z',\n        status: 'scheduled',\n        serviceType: 'Brake Service & Tire Rotation',\n        description: 'Brake pad replacement and tire rotation service',\n        estimatedDuration: 180,\n        estimatedCost: 450,\n        technician: 'David Wilson',\n        bay: 'Bay 1',\n        notes: 'Customer reported squeaking noise when braking',\n        services: [\n          'Brake Pad Replacement',\n          'Brake Fluid Change',\n          'Tire Rotation',\n          'Brake Inspection',\n        ],\n      },\n      {\n        id: 'SA-004',\n        appointmentId: '24-SA-004',\n        customerId: 4,\n        customerName: 'Emily Davis',\n        customerEmail: 'emily.davis@email.com',\n        customerPhone: '(555) 456-7890',\n        vehicle: {\n          year: 2023,\n          make: 'Honda',\n          model: 'Civic',\n          trim: 'Sport',\n          color: 'Red',\n          mileage: 12000,\n          vin: '2HGFC2F56PH123456',\n          image:\n            'https://images.unsplash.com/photo-1606152421802-db97b9c7a11b?w=300&h=200&fit=crop',\n        },\n        appointmentDate: '2024-02-19T11:00:00Z',\n        scheduledDate: '2024-02-12T16:45:00Z',\n        status: 'completed',\n        serviceType: 'Annual Maintenance Service',\n        description:\n          'Comprehensive annual maintenance including all fluid changes and inspections',\n        estimatedDuration: 240,\n        estimatedCost: 350,\n        actualCost: 325,\n        technician: 'Jennifer Lee',\n        bay: 'Bay 2',\n        notes:\n          'All services completed successfully, vehicle in excellent condition',\n        services: [\n          'Oil Change',\n          'Transmission Service',\n          'Coolant Flush',\n          'Air Filter',\n          'Cabin Filter',\n        ],\n      },\n      {\n        id: 'SA-005',\n        appointmentId: '24-SA-005',\n        customerId: 5,\n        customerName: 'Robert Wilson',\n        customerEmail: 'r.wilson@email.com',\n        customerPhone: '(555) 567-8901',\n        vehicle: {\n          year: 2024,\n          make: 'Porsche',\n          model: '911',\n          trim: 'Turbo S',\n          color: 'Silver',\n          mileage: 2500,\n          vin: 'WP0AB2A99PS123456',\n          image:\n            'https://images.unsplash.com/photo-1544636331-e26879cd4d9b?w=300&h=200&fit=crop',\n        },\n        appointmentDate: '2024-02-18T15:00:00Z',\n        scheduledDate: '2024-02-11T11:00:00Z',\n        status: 'cancelled',\n        serviceType: 'Recall Service',\n        description: 'Factory recall service for ECU update',\n        estimatedDuration: 60,\n        estimatedCost: 0,\n        technician: null,\n        bay: null,\n        notes: 'Customer cancelled - will reschedule for next week',\n        services: ['ECU Update', 'System Check'],\n      },\n      {\n        id: 'SA-006',\n        appointmentId: '24-SA-006',\n        customerId: 6,\n        customerName: 'Lisa Anderson',\n        customerEmail: 'lisa.anderson@email.com',\n        customerPhone: '(555) 678-9012',\n        vehicle: {\n          year: 2023,\n          make: 'Volvo',\n          model: 'XC90',\n          trim: 'Recharge',\n          color: 'Gray',\n          mileage: 18000,\n          vin: 'YV4BR0CA6P1123456',\n          image:\n            'https://images.unsplash.com/photo-1606016872875-84d1177d27bb?w=300&h=200&fit=crop',\n        },\n        appointmentDate: '2024-02-17T10:00:00Z',\n        scheduledDate: '2024-02-10T13:30:00Z',\n        status: 'no_show',\n        serviceType: 'Warranty Inspection',\n        description: 'Warranty inspection for hybrid system',\n        estimatedDuration: 120,\n        estimatedCost: 0,\n        technician: 'Mark Thompson',\n        bay: 'Hybrid Bay',\n        notes: 'Customer did not show up, attempting to reschedule',\n        services: [\n          'Hybrid System Check',\n          'Battery Inspection',\n          'Charging System Test',\n        ],\n      },\n    ];\n\n    setAppointments(mockAppointments);\n    setFilteredAppointments(mockAppointments);\n  }, []);\n\n  useEffect(() => {\n    let filtered = [...appointments];\n\n    // Search filter\n    if (searchTerm) {\n      filtered = filtered.filter(\n        appointment =>\n          appointment.appointmentId\n            .toLowerCase()\n            .includes(searchTerm.toLowerCase()) ||\n          appointment.customerName\n            .toLowerCase()\n            .includes(searchTerm.toLowerCase()) ||\n          `${appointment.vehicle.year} ${appointment.vehicle.make} ${appointment.vehicle.model}`\n            .toLowerCase()\n            .includes(searchTerm.toLowerCase()) ||\n          appointment.serviceType\n            .toLowerCase()\n            .includes(searchTerm.toLowerCase()) ||\n          (appointment.technician &&\n            appointment.technician\n              .toLowerCase()\n              .includes(searchTerm.toLowerCase()))\n      );\n    }\n\n    // Status filter\n    if (statusFilter) {\n      filtered = filtered.filter(\n        appointment => appointment.status === statusFilter\n      );\n    }\n\n    // Date filter\n    if (dateFilter) {\n      const today = new Date();\n      const filterDate = new Date();\n\n      switch (dateFilter) {\n        case 'today':\n          filterDate.setHours(0, 0, 0, 0);\n          const tomorrow = new Date(filterDate);\n          tomorrow.setDate(tomorrow.getDate() + 1);\n          filtered = filtered.filter(appointment => {\n            const apptDate = new Date(appointment.appointmentDate);\n            return apptDate >= filterDate && apptDate < tomorrow;\n          });\n          break;\n        case 'week':\n          filterDate.setDate(today.getDate() - 7);\n          filtered = filtered.filter(\n            appointment => new Date(appointment.appointmentDate) >= filterDate\n          );\n          break;\n        case 'upcoming':\n          filtered = filtered.filter(\n            appointment =>\n              new Date(appointment.appointmentDate) >= today &&\n              (appointment.status === 'scheduled' ||\n                appointment.status === 'confirmed')\n          );\n          break;\n        default:\n          break;\n      }\n    }\n\n    setFilteredAppointments(filtered);\n  }, [appointments, searchTerm, statusFilter, dateFilter]);\n\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  const formatDateTime = dateString => {\n    const date = new Date(dateString);\n    return {\n      date: date.toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric',\n      }),\n      time: date.toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        minute: '2-digit',\n        hour12: true,\n      }),\n    };\n  };\n\n  const getStatusLabel = status => {\n    switch (status) {\n      case 'scheduled':\n        return 'Scheduled';\n      case 'confirmed':\n        return 'Confirmed';\n      case 'in_progress':\n        return 'In Progress';\n      case 'completed':\n        return 'Completed';\n      case 'cancelled':\n        return 'Cancelled';\n      case 'no_show':\n        return 'No Show';\n      default:\n        return status;\n    }\n  };\n\n  const stats = {\n    total: appointments.length,\n    today: appointments.filter(a => {\n      const today = new Date();\n      const apptDate = new Date(a.appointmentDate);\n      return apptDate.toDateString() === today.toDateString();\n    }).length,\n    scheduled: appointments.filter(\n      a => a.status === 'scheduled' || a.status === 'confirmed'\n    ).length,\n    inProgress: appointments.filter(a => a.status === 'in_progress').length,\n    completed: appointments.filter(a => a.status === 'completed').length,\n    revenue: appointments\n      .filter(a => a.status === 'completed')\n      .reduce((sum, a) => sum + (a.actualCost || a.estimatedCost), 0),\n  };\n\n  return (\n    <Container>\n      <Header>\n        <HeaderTop>\n          <Title>\n            <FaWrench />\n            Service Appointments ({filteredAppointments.length})\n          </Title>\n          <HeaderActions>\n            <ActionButton>\n              <FaDownload />\n              Export Schedule\n            </ActionButton>\n            <ActionButton>\n              <FaCalendar />\n              View Calendar\n            </ActionButton>\n            <ActionButton primary>\n              <FaPlus />\n              New Appointment\n            </ActionButton>\n          </HeaderActions>\n        </HeaderTop>\n\n        <FiltersRow>\n          <SearchContainer>\n            <SearchIcon>\n              <FaSearch />\n            </SearchIcon>\n            <SearchInput\n              type=\"text\"\n              placeholder=\"Search by appointment ID, customer, vehicle, service type, or technician...\"\n              value={searchTerm}\n              onChange={e => setSearchTerm(e.target.value)}\n            />\n          </SearchContainer>\n\n          <FilterSelect\n            value={statusFilter}\n            onChange={e => setStatusFilter(e.target.value)}\n          >\n            <option value=\"\">All Statuses</option>\n            <option value=\"scheduled\">Scheduled</option>\n            <option value=\"confirmed\">Confirmed</option>\n            <option value=\"in_progress\">In Progress</option>\n            <option value=\"completed\">Completed</option>\n            <option value=\"cancelled\">Cancelled</option>\n            <option value=\"no_show\">No Show</option>\n          </FilterSelect>\n\n          <FilterSelect\n            value={dateFilter}\n            onChange={e => setDateFilter(e.target.value)}\n          >\n            <option value=\"\">All Dates</option>\n            <option value=\"today\">Today</option>\n            <option value=\"upcoming\">Upcoming</option>\n            <option value=\"week\">This Week</option>\n          </FilterSelect>\n\n          <FilterSelect defaultValue=\"date\">\n            <option value=\"date\">Sort by Date</option>\n            <option value=\"customer\">Customer A-Z</option>\n            <option value=\"technician\">Technician</option>\n            <option value=\"cost\">Highest Cost</option>\n          </FilterSelect>\n        </FiltersRow>\n      </Header>\n\n      <StatsGrid>\n        <StatCard>\n          <StatValue>{stats.total}</StatValue>\n          <StatLabel>Total Appointments</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.primary}>{stats.today}</StatValue>\n          <StatLabel>Today</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.info}>{stats.scheduled}</StatValue>\n          <StatLabel>Scheduled</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.warning}>{stats.inProgress}</StatValue>\n          <StatLabel>In Progress</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.success}>{stats.completed}</StatValue>\n          <StatLabel>Completed</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.success}>\n            {formatCurrency(stats.revenue)}\n          </StatValue>\n          <StatLabel>Service Revenue</StatLabel>\n        </StatCard>\n      </StatsGrid>\n\n      <AppointmentsGrid>\n        {filteredAppointments.length > 0 ? (\n          filteredAppointments.map(appointment => {\n            const dateTime = formatDateTime(appointment.appointmentDate);\n\n            return (\n              <AppointmentCard key={appointment.id}>\n                <AppointmentHeader>\n                  <AppointmentInfo>\n                    <AppointmentId>#{appointment.appointmentId}</AppointmentId>\n                    <AppointmentTime>\n                      <FaClock />\n                      {dateTime.time}\n                    </AppointmentTime>\n                    <AppointmentDate>\n                      <FaCalendar />\n                      {dateTime.date}\n                    </AppointmentDate>\n                  </AppointmentInfo>\n                  <StatusBadge status={appointment.status}>\n                    {getStatusLabel(appointment.status)}\n                  </StatusBadge>\n                </AppointmentHeader>\n\n                <CustomerSection>\n                  <CustomerName>\n                    <FaUser />\n                    {appointment.customerName}\n                  </CustomerName>\n                  <CustomerContact>\n                    <FaEnvelope />\n                    {appointment.customerEmail}\n                  </CustomerContact>\n                  <CustomerContact>\n                    <FaPhone />\n                    {appointment.customerPhone}\n                  </CustomerContact>\n                </CustomerSection>\n\n                <VehicleSection>\n                  <VehicleInfo>\n                    <VehicleImage\n                      src={appointment.vehicle.image}\n                      alt={`${appointment.vehicle.year} ${appointment.vehicle.make} ${appointment.vehicle.model}`}\n                    />\n                    <VehicleDetails>\n                      <VehicleName>\n                        {appointment.vehicle.year} {appointment.vehicle.make}{' '}\n                        {appointment.vehicle.model}\n                      </VehicleName>\n                      <VehicleSpecs>\n                        {appointment.vehicle.trim} • {appointment.vehicle.color}{' '}\n                        • {appointment.vehicle.mileage.toLocaleString()} mi\n                      </VehicleSpecs>\n                    </VehicleDetails>\n                  </VehicleInfo>\n                </VehicleSection>\n\n                <ServiceDetails>\n                  <ServiceType>\n                    <FaTools />\n                    {appointment.serviceType}\n                  </ServiceType>\n                  <ServiceDescription>\n                    {appointment.description}\n                  </ServiceDescription>\n                  <ServiceMeta>\n                    <div>Duration: {appointment.estimatedDuration} min</div>\n                    <div>\n                      Cost:{' '}\n                      {formatCurrency(\n                        appointment.actualCost || appointment.estimatedCost\n                      )}\n                    </div>\n                  </ServiceMeta>\n                </ServiceDetails>\n\n                {appointment.technician && (\n                  <TechnicianInfo>\n                    <FaUser />\n                    Technician: {appointment.technician}\n                    {appointment.bay && ` • ${appointment.bay}`}\n                  </TechnicianInfo>\n                )}\n\n                {appointment.notes && (\n                  <div\n                    style={{\n                      marginBottom: theme.spacing.md,\n                      fontSize: '0.9rem',\n                      color: theme.colors.gray600,\n                      fontStyle: 'italic',\n                    }}\n                  >\n                    Notes: {appointment.notes}\n                  </div>\n                )}\n\n                <ActionButtons>\n                  <ActionButtonSmall>\n                    <FaEye />\n                    View Details\n                  </ActionButtonSmall>\n                  {appointment.status === 'scheduled' && (\n                    <ActionButtonSmall variant=\"confirm\">\n                      <FaCheck />\n                      Confirm\n                    </ActionButtonSmall>\n                  )}\n                  {(appointment.status === 'confirmed' ||\n                    appointment.status === 'in_progress') && (\n                    <ActionButtonSmall variant=\"complete\">\n                      <FaCheck />\n                      Complete\n                    </ActionButtonSmall>\n                  )}\n                  {appointment.status === 'completed' && (\n                    <ActionButtonSmall>\n                      <FaPrint />\n                      Print Invoice\n                    </ActionButtonSmall>\n                  )}\n                  {(appointment.status === 'scheduled' ||\n                    appointment.status === 'confirmed') && (\n                    <ActionButtonSmall variant=\"cancel\">\n                      <FaTimes />\n                      Cancel\n                    </ActionButtonSmall>\n                  )}\n                  <ActionButtonSmall>\n                    <FaEdit />\n                    Edit\n                  </ActionButtonSmall>\n                </ActionButtons>\n              </AppointmentCard>\n            );\n          })\n        ) : (\n          <EmptyState>\n            <FaWrench className=\"icon\" />\n            <h3>No service appointments found</h3>\n            <p>\n              Try adjusting your search criteria or schedule a new service\n              appointment.\n            </p>\n          </EmptyState>\n        )}\n      </AppointmentsGrid>\n    </Container>\n  );\n};\n\nexport default ServiceAppointmentsTab;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/components/TradeInsTab.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'dealer' is defined but never used. Allowed unused args must match /^_/u.","line":430,"column":24,"nodeType":"Identifier","messageId":"unusedVar","endLine":430,"endColumn":30}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaExchangeAlt,\n  FaSearch,\n  FaPlus,\n  FaEye,\n  FaEdit,\n  FaCheck,\n  FaTimes,\n  FaUser,\n  FaCalendar,\n  FaStar,\n  FaClipboardList,\n  FaDownload,\n  FaPrint,\n  FaCamera,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst Container = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  overflow: hidden;\n`;\n\nconst Header = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.gray50};\n`;\n\nconst HeaderTop = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n    align-items: stretch;\n  }\n`;\n\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst HeaderActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\n\nconst ActionButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'primary',\n})`\n  background: ${props =>\n    props.primary ? theme.colors.primary : theme.colors.white};\n  color: ${props =>\n    props.primary ? theme.colors.white : theme.colors.gray700};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border: ${props =>\n    props.primary ? 'none' : `2px solid ${theme.colors.gray200}`};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    background: ${props =>\n      props.primary ? theme.colors.primaryDark : theme.colors.gray50};\n    transform: translateY(-1px);\n    border-color: ${props =>\n      props.primary ? theme.colors.primaryDark : theme.colors.primary};\n  }\n`;\n\nconst FiltersRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto auto auto;\n  gap: ${theme.spacing.md};\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst SearchContainer = styled.div`\n  position: relative;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.sm} ${theme.spacing.sm} ${theme.spacing.sm} 2.5rem;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray500};\n  }\n`;\n\nconst SearchIcon = styled.div`\n  position: absolute;\n  left: ${theme.spacing.sm};\n  top: 50%;\n  transform: translateY(-50%);\n  color: ${theme.colors.gray400};\n  font-size: 1rem;\n`;\n\nconst FilterSelect = styled.select`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.white};\n  cursor: pointer;\n  min-width: 150px;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));\n  gap: ${theme.spacing.lg};\n  padding: ${theme.spacing.lg} ${theme.spacing.xl};\n  background: ${theme.colors.white};\n  border-bottom: 1px solid ${theme.colors.gray200};\n`;\n\nconst StatCard = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.lg};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst StatValue = styled.div`\n  font-size: 1.8rem;\n  font-weight: 700;\n  color: ${props => props.color || theme.colors.primary};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst TradeInsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n  gap: ${theme.spacing.lg};\n  padding: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    padding: ${theme.spacing.lg};\n  }\n`;\n\nconst TradeInCard = styled.div`\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.lg};\n  transition: all 0.2s ease;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: ${theme.shadows.md};\n    transform: translateY(-2px);\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst TradeInHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst TradeInId = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  font-size: 1rem;\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst TradeInDate = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst StatusBadge = styled.span.withConfig({\n  shouldForwardProp: prop => prop !== 'status',\n})`\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 600;\n  color: ${theme.colors.white};\n  background: ${props => {\n    switch (props.status) {\n      case 'pending':\n        return theme.colors.warning;\n      case 'evaluating':\n        return theme.colors.info;\n      case 'appraised':\n        return theme.colors.purple || '#8b5cf6';\n      case 'accepted':\n        return theme.colors.success;\n      case 'rejected':\n        return theme.colors.error;\n      case 'completed':\n        return theme.colors.gray600;\n      default:\n        return theme.colors.gray500;\n    }\n  }};\n`;\n\nconst CustomerSection = styled.div`\n  margin-bottom: ${theme.spacing.md};\n  padding: ${theme.spacing.md};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst CustomerName = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst CustomerContact = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst VehicleSection = styled.div`\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst VehicleInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst VehicleImage = styled.img`\n  width: 80px;\n  height: 60px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.md};\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst VehicleDetails = styled.div`\n  flex: 1;\n`;\n\nconst VehicleName = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst VehicleSpecs = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.xs};\n`;\n\nconst PricingSection = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.md};\n  padding: ${theme.spacing.md};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst PriceItem = styled.div`\n  text-align: center;\n`;\n\nconst PriceValue = styled.div`\n  font-weight: 700;\n  color: ${props => props.color || theme.colors.gray900};\n  font-size: 1rem;\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst PriceLabel = styled.div`\n  font-size: 0.7rem;\n  color: ${theme.colors.gray600};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst ConditionRating = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${theme.spacing.md};\n  padding: ${theme.spacing.sm};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst ConditionLabel = styled.div`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray700};\n`;\n\nconst ConditionStars = styled.div`\n  display: flex;\n  gap: ${theme.spacing.xs};\n  color: ${theme.colors.warning};\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n  flex-wrap: wrap;\n`;\n\nconst ActionButtonSmall = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'variant',\n})`\n  background: ${props =>\n    props.variant === 'accept'\n      ? theme.colors.success\n      : props.variant === 'reject'\n        ? theme.colors.error\n        : props.variant === 'primary'\n          ? theme.colors.primary\n          : theme.colors.white};\n  color: ${props =>\n    props.variant === 'accept' ||\n    props.variant === 'reject' ||\n    props.variant === 'primary'\n      ? theme.colors.white\n      : theme.colors.gray700};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border: ${props =>\n    props.variant === 'accept' ||\n    props.variant === 'reject' ||\n    props.variant === 'primary'\n      ? 'none'\n      : `1px solid ${theme.colors.gray300}`};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n\n  &:hover {\n    transform: translateY(-1px);\n    opacity: 0.9;\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray500};\n  grid-column: 1 / -1;\n\n  .icon {\n    font-size: 4rem;\n    color: ${theme.colors.gray400};\n    margin-bottom: ${theme.spacing.lg};\n  }\n\n  h3 {\n    font-size: 1.2rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray700};\n  }\n`;\n\nconst TradeInsTab = ({ dealer }) => {\n  const [tradeIns, setTradeIns] = useState([]);\n  const [filteredTradeIns, setFilteredTradeIns] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n\n  useEffect(() => {\n    // Mock trade-in data\n    const mockTradeIns = [\n      {\n        id: 'TI-001',\n        tradeInId: '24-TI-001',\n        customerId: 1,\n        customerName: 'John Smith',\n        customerEmail: 'john.smith@email.com',\n        customerPhone: '(555) 123-4567',\n        vehicle: {\n          year: 2019,\n          make: 'BMW',\n          model: 'X3',\n          trim: 'xDrive30i',\n          mileage: 45000,\n          color: 'Black',\n          vin: '5UXTY3C52K9A12345',\n          image:\n            'https://images.unsplash.com/photo-1555215695-3004980ad54e?w=300&h=200&fit=crop',\n        },\n        submissionDate: '2024-02-15T10:30:00Z',\n        status: 'evaluating',\n        condition: {\n          overall: 4,\n          exterior: 4,\n          interior: 4,\n          mechanical: 5,\n        },\n        pricing: {\n          estimatedValue: 28000,\n          offerAmount: 26500,\n          marketValue: 30000,\n        },\n        appraiser: 'Mike Johnson',\n        notes:\n          'Good condition, minor scratches on rear bumper, recent maintenance records available',\n        photos: 8,\n      },\n      {\n        id: 'TI-002',\n        tradeInId: '24-TI-002',\n        customerId: 2,\n        customerName: 'Sarah Johnson',\n        customerEmail: 'sarah.j@email.com',\n        customerPhone: '(555) 234-5678',\n        vehicle: {\n          year: 2020,\n          make: 'Toyota',\n          model: 'Camry',\n          trim: 'XLE',\n          mileage: 32000,\n          color: 'Silver',\n          vin: '4T1G11AK4LU123456',\n          image:\n            'https://images.unsplash.com/photo-1621007947382-bb3c3994e3fb?w=300&h=200&fit=crop',\n        },\n        submissionDate: '2024-02-14T14:20:00Z',\n        status: 'accepted',\n        condition: {\n          overall: 5,\n          exterior: 5,\n          interior: 5,\n          mechanical: 5,\n        },\n        pricing: {\n          estimatedValue: 22000,\n          offerAmount: 21500,\n          marketValue: 24000,\n        },\n        appraiser: 'Lisa Chen',\n        notes: 'Excellent condition, single owner, full service history',\n        photos: 12,\n      },\n      {\n        id: 'TI-003',\n        tradeInId: '24-TI-003',\n        customerId: 3,\n        customerName: 'Michael Brown',\n        customerEmail: 'm.brown@email.com',\n        customerPhone: '(555) 345-6789',\n        vehicle: {\n          year: 2018,\n          make: 'Ford',\n          model: 'F-150',\n          trim: 'Lariat',\n          mileage: 68000,\n          color: 'Blue',\n          vin: '1FTEW1EG5JKF12345',\n          image:\n            'https://images.unsplash.com/photo-1593950315186-76a92975b60c?w=300&h=200&fit=crop',\n        },\n        submissionDate: '2024-02-13T09:15:00Z',\n        status: 'appraised',\n        condition: {\n          overall: 3,\n          exterior: 3,\n          interior: 4,\n          mechanical: 3,\n        },\n        pricing: {\n          estimatedValue: 32000,\n          offerAmount: 29500,\n          marketValue: 35000,\n        },\n        appraiser: 'David Wilson',\n        notes:\n          'Work truck with some wear, bed liner installed, maintenance up to date',\n        photos: 6,\n      },\n      {\n        id: 'TI-004',\n        tradeInId: '24-TI-004',\n        customerId: 4,\n        customerName: 'Emily Davis',\n        customerEmail: 'emily.davis@email.com',\n        customerPhone: '(555) 456-7890',\n        vehicle: {\n          year: 2021,\n          make: 'Honda',\n          model: 'Civic',\n          trim: 'Sport',\n          mileage: 25000,\n          color: 'Red',\n          vin: '2HGFC2F56MH123456',\n          image:\n            'https://images.unsplash.com/photo-1606152421802-db97b9c7a11b?w=300&h=200&fit=crop',\n        },\n        submissionDate: '2024-02-12T16:45:00Z',\n        status: 'pending',\n        condition: {\n          overall: 0,\n          exterior: 0,\n          interior: 0,\n          mechanical: 0,\n        },\n        pricing: {\n          estimatedValue: 0,\n          offerAmount: 0,\n          marketValue: 0,\n        },\n        appraiser: null,\n        notes: 'Initial submission, awaiting inspection appointment',\n        photos: 4,\n      },\n      {\n        id: 'TI-005',\n        tradeInId: '24-TI-005',\n        customerId: 5,\n        customerName: 'Robert Wilson',\n        customerEmail: 'r.wilson@email.com',\n        customerPhone: '(555) 567-8901',\n        vehicle: {\n          year: 2017,\n          make: 'Mercedes-Benz',\n          model: 'C300',\n          trim: '4MATIC',\n          mileage: 75000,\n          color: 'White',\n          vin: '55SWF4KB4HU123456',\n          image:\n            'https://images.unsplash.com/photo-1618843479313-40f8afb4b4d8?w=300&h=200&fit=crop',\n        },\n        submissionDate: '2024-02-11T11:00:00Z',\n        status: 'rejected',\n        condition: {\n          overall: 2,\n          exterior: 2,\n          interior: 3,\n          mechanical: 2,\n        },\n        pricing: {\n          estimatedValue: 18000,\n          offerAmount: 0,\n          marketValue: 22000,\n        },\n        appraiser: 'Alex Rodriguez',\n        notes:\n          'High mileage, multiple accident history, extensive wear and tear',\n        photos: 10,\n      },\n    ];\n\n    setTradeIns(mockTradeIns);\n    setFilteredTradeIns(mockTradeIns);\n  }, []);\n\n  useEffect(() => {\n    let filtered = [...tradeIns];\n\n    // Search filter\n    if (searchTerm) {\n      filtered = filtered.filter(\n        tradeIn =>\n          tradeIn.tradeInId.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          tradeIn.customerName\n            .toLowerCase()\n            .includes(searchTerm.toLowerCase()) ||\n          `${tradeIn.vehicle.year} ${tradeIn.vehicle.make} ${tradeIn.vehicle.model}`\n            .toLowerCase()\n            .includes(searchTerm.toLowerCase()) ||\n          (tradeIn.appraiser &&\n            tradeIn.appraiser.toLowerCase().includes(searchTerm.toLowerCase()))\n      );\n    }\n\n    // Status filter\n    if (statusFilter) {\n      filtered = filtered.filter(tradeIn => tradeIn.status === statusFilter);\n    }\n\n    setFilteredTradeIns(filtered);\n  }, [tradeIns, searchTerm, statusFilter]);\n\n  const formatCurrency = amount => {\n    if (amount === 0) return 'TBD';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric',\n    });\n  };\n\n  const getStatusLabel = status => {\n    switch (status) {\n      case 'pending':\n        return 'Pending';\n      case 'evaluating':\n        return 'Evaluating';\n      case 'appraised':\n        return 'Appraised';\n      case 'accepted':\n        return 'Accepted';\n      case 'rejected':\n        return 'Rejected';\n      case 'completed':\n        return 'Completed';\n      default:\n        return status;\n    }\n  };\n\n  const renderStars = rating => {\n    return Array.from({ length: 5 }, (_, i) => (\n      <FaStar\n        key={i}\n        style={{\n          color: i < rating ? theme.colors.warning : theme.colors.gray300,\n        }}\n      />\n    ));\n  };\n\n  const stats = {\n    total: tradeIns.length,\n    pending: tradeIns.filter(t => t.status === 'pending').length,\n    evaluating: tradeIns.filter(t => t.status === 'evaluating').length,\n    accepted: tradeIns.filter(t => t.status === 'accepted').length,\n    rejected: tradeIns.filter(t => t.status === 'rejected').length,\n    totalValue: tradeIns\n      .filter(t => t.status === 'accepted')\n      .reduce((sum, t) => sum + t.pricing.offerAmount, 0),\n    avgCondition:\n      tradeIns.length > 0\n        ? Math.round(\n            (tradeIns\n              .filter(t => t.condition.overall > 0)\n              .reduce((sum, t) => sum + t.condition.overall, 0) /\n              tradeIns.filter(t => t.condition.overall > 0).length) *\n              10\n          ) / 10\n        : 0,\n  };\n\n  return (\n    <Container>\n      <Header>\n        <HeaderTop>\n          <Title>\n            <FaExchangeAlt />\n            Trade-In Management ({filteredTradeIns.length})\n          </Title>\n          <HeaderActions>\n            <ActionButton>\n              <FaDownload />\n              Export Report\n            </ActionButton>\n            <ActionButton>\n              <FaClipboardList />\n              Appraisal Form\n            </ActionButton>\n            <ActionButton primary>\n              <FaPlus />\n              New Trade-In\n            </ActionButton>\n          </HeaderActions>\n        </HeaderTop>\n\n        <FiltersRow>\n          <SearchContainer>\n            <SearchIcon>\n              <FaSearch />\n            </SearchIcon>\n            <SearchInput\n              type=\"text\"\n              placeholder=\"Search by trade-in ID, customer, vehicle, or appraiser...\"\n              value={searchTerm}\n              onChange={e => setSearchTerm(e.target.value)}\n            />\n          </SearchContainer>\n\n          <FilterSelect\n            value={statusFilter}\n            onChange={e => setStatusFilter(e.target.value)}\n          >\n            <option value=\"\">All Statuses</option>\n            <option value=\"pending\">Pending</option>\n            <option value=\"evaluating\">Evaluating</option>\n            <option value=\"appraised\">Appraised</option>\n            <option value=\"accepted\">Accepted</option>\n            <option value=\"rejected\">Rejected</option>\n            <option value=\"completed\">Completed</option>\n          </FilterSelect>\n\n          <FilterSelect defaultValue=\"recent\">\n            <option value=\"recent\">Recent First</option>\n            <option value=\"oldest\">Oldest First</option>\n            <option value=\"value\">Highest Value</option>\n            <option value=\"condition\">Best Condition</option>\n          </FilterSelect>\n\n          <FilterSelect defaultValue=\"all\">\n            <option value=\"all\">All Appraisers</option>\n            <option value=\"mike\">Mike Johnson</option>\n            <option value=\"lisa\">Lisa Chen</option>\n            <option value=\"david\">David Wilson</option>\n            <option value=\"alex\">Alex Rodriguez</option>\n          </FilterSelect>\n        </FiltersRow>\n      </Header>\n\n      <StatsGrid>\n        <StatCard>\n          <StatValue>{stats.total}</StatValue>\n          <StatLabel>Total Trade-Ins</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.warning}>{stats.pending}</StatValue>\n          <StatLabel>Pending Review</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.info}>{stats.evaluating}</StatValue>\n          <StatLabel>Under Evaluation</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.success}>{stats.accepted}</StatValue>\n          <StatLabel>Accepted</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.error}>{stats.rejected}</StatValue>\n          <StatLabel>Rejected</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.success}>\n            {formatCurrency(stats.totalValue)}\n          </StatValue>\n          <StatLabel>Total Value</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatValue color={theme.colors.warning}>\n            {stats.avgCondition}\n          </StatValue>\n          <StatLabel>Avg Condition</StatLabel>\n        </StatCard>\n      </StatsGrid>\n\n      <TradeInsGrid>\n        {filteredTradeIns.length > 0 ? (\n          filteredTradeIns.map(tradeIn => (\n            <TradeInCard key={tradeIn.id}>\n              <TradeInHeader>\n                <div>\n                  <TradeInId>#{tradeIn.tradeInId}</TradeInId>\n                  <TradeInDate>\n                    <FaCalendar />\n                    {formatDate(tradeIn.submissionDate)}\n                  </TradeInDate>\n                </div>\n                <StatusBadge status={tradeIn.status}>\n                  {getStatusLabel(tradeIn.status)}\n                </StatusBadge>\n              </TradeInHeader>\n\n              <CustomerSection>\n                <CustomerName>\n                  <FaUser />\n                  {tradeIn.customerName}\n                </CustomerName>\n                <CustomerContact>{tradeIn.customerEmail}</CustomerContact>\n                <CustomerContact>{tradeIn.customerPhone}</CustomerContact>\n              </CustomerSection>\n\n              <VehicleSection>\n                <VehicleInfo>\n                  <VehicleImage\n                    src={tradeIn.vehicle.image}\n                    alt={`${tradeIn.vehicle.year} ${tradeIn.vehicle.make} ${tradeIn.vehicle.model}`}\n                  />\n                  <VehicleDetails>\n                    <VehicleName>\n                      {tradeIn.vehicle.year} {tradeIn.vehicle.make}{' '}\n                      {tradeIn.vehicle.model}\n                    </VehicleName>\n                    <VehicleSpecs>\n                      <div>\n                        {tradeIn.vehicle.trim} • {tradeIn.vehicle.color}\n                      </div>\n                      <div>\n                        {tradeIn.vehicle.mileage.toLocaleString()} miles\n                      </div>\n                      <div>VIN: {tradeIn.vehicle.vin}</div>\n                    </VehicleSpecs>\n                  </VehicleDetails>\n                </VehicleInfo>\n              </VehicleSection>\n\n              {tradeIn.condition.overall > 0 && (\n                <ConditionRating>\n                  <ConditionLabel>Condition Rating:</ConditionLabel>\n                  <ConditionStars>\n                    {renderStars(tradeIn.condition.overall)}\n                  </ConditionStars>\n                </ConditionRating>\n              )}\n\n              <PricingSection>\n                <PriceItem>\n                  <PriceValue color={theme.colors.info}>\n                    {formatCurrency(tradeIn.pricing.marketValue)}\n                  </PriceValue>\n                  <PriceLabel>Market Value</PriceLabel>\n                </PriceItem>\n                <PriceItem>\n                  <PriceValue>\n                    {formatCurrency(tradeIn.pricing.estimatedValue)}\n                  </PriceValue>\n                  <PriceLabel>Estimated</PriceLabel>\n                </PriceItem>\n                <PriceItem>\n                  <PriceValue color={theme.colors.success}>\n                    {formatCurrency(tradeIn.pricing.offerAmount)}\n                  </PriceValue>\n                  <PriceLabel>Our Offer</PriceLabel>\n                </PriceItem>\n              </PricingSection>\n\n              {tradeIn.appraiser && (\n                <div\n                  style={{\n                    marginBottom: theme.spacing.md,\n                    fontSize: '0.9rem',\n                    color: theme.colors.gray600,\n                  }}\n                >\n                  Appraiser: {tradeIn.appraiser} • {tradeIn.photos} photos\n                </div>\n              )}\n\n              {tradeIn.notes && (\n                <div\n                  style={{\n                    marginBottom: theme.spacing.md,\n                    fontSize: '0.9rem',\n                    color: theme.colors.gray600,\n                    fontStyle: 'italic',\n                  }}\n                >\n                  Notes: {tradeIn.notes}\n                </div>\n              )}\n\n              <ActionButtons>\n                <ActionButtonSmall>\n                  <FaEye />\n                  View Details\n                </ActionButtonSmall>\n                <ActionButtonSmall>\n                  <FaCamera />\n                  Photos ({tradeIn.photos})\n                </ActionButtonSmall>\n                {tradeIn.status === 'pending' && (\n                  <ActionButtonSmall variant=\"primary\">\n                    <FaClipboardList />\n                    Start Appraisal\n                  </ActionButtonSmall>\n                )}\n                {tradeIn.status === 'appraised' && (\n                  <>\n                    <ActionButtonSmall variant=\"accept\">\n                      <FaCheck />\n                      Accept\n                    </ActionButtonSmall>\n                    <ActionButtonSmall variant=\"reject\">\n                      <FaTimes />\n                      Reject\n                    </ActionButtonSmall>\n                  </>\n                )}\n                {tradeIn.status === 'accepted' && (\n                  <ActionButtonSmall>\n                    <FaPrint />\n                    Print Contract\n                  </ActionButtonSmall>\n                )}\n                <ActionButtonSmall>\n                  <FaEdit />\n                  Edit\n                </ActionButtonSmall>\n              </ActionButtons>\n            </TradeInCard>\n          ))\n        ) : (\n          <EmptyState>\n            <FaExchangeAlt className=\"icon\" />\n            <h3>No trade-ins found</h3>\n            <p>\n              Try adjusting your search criteria or add a new trade-in\n              evaluation.\n            </p>\n          </EmptyState>\n        )}\n      </TradeInsGrid>\n    </Container>\n  );\n};\n\nexport default TradeInsTab;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/components/VehicleCard.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaStar,\n  FaHeart,\n  FaEnvelope,\n  FaCar,\n  FaGasPump,\n  FaRoad,\n} from 'react-icons/fa';\nimport { theme, media } from '../../styles/GlobalStyle';\nimport EnquiryModal from './EnquiryModal';\nimport {\n  getVehicleAvailabilityStatus as getAvailabilityStatus,\n  getVehicleAvailabilityLabel as getAvailabilityLabel,\n  getVehicleAvailabilityColor as getAvailabilityColor,\n} from '../../DummyData';\n\nconst Card = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  overflow: hidden;\n  box-shadow: ${theme.shadows.sm};\n  transition: all 0.4s ease;\n  position: relative;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid ${theme.colors.gray100};\n\n  &:hover {\n    transform: translateY(-8px);\n    box-shadow: ${theme.shadows.xl};\n    border-color: ${theme.colors.primary}20;\n  }\n\n  ${media.mobile} {\n    border-radius: ${theme.borderRadius.md};\n\n    &:hover {\n      transform: translateY(-2px);\n      box-shadow: ${theme.shadows.md};\n    }\n  }\n\n  ${media.tablet} {\n    &:hover {\n      transform: translateY(-3px);\n    }\n  }\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  overflow: hidden;\n  height: 280px;\n\n  ${media.mobile} {\n    height: 240px;\n  }\n\n  ${media.tablet} {\n    height: 260px;\n  }\n`;\n\nconst VehicleImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s ease;\n\n  ${Card}:hover & {\n    transform: scale(1.05);\n  }\n`;\n\nconst Badge = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'type',\n})`\n  position: absolute;\n  top: ${theme.spacing.md};\n  left: ${theme.spacing.md};\n  background: ${props =>\n    props.type === 'sale'\n      ? theme.colors.error\n      : props.type === 'featured'\n        ? theme.colors.success\n        : props.type === 'new'\n          ? theme.colors.primary\n          : props.type === 'certified'\n            ? theme.colors.warning\n            : theme.colors.gray600};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 600;\n  text-transform: uppercase;\n\n  ${media.mobile} {\n    top: ${theme.spacing.sm};\n    left: ${theme.spacing.sm};\n    padding: ${theme.spacing.xs} ${theme.spacing.xs};\n    font-size: 0.7rem;\n  }\n`;\n\nconst ConditionBadge = styled.div`\n  position: absolute;\n  top: ${theme.spacing.md};\n  right: ${theme.spacing.lg + 40}px;\n  background: ${props =>\n    props.condition === 'new'\n      ? theme.colors.success\n      : props.condition === 'used'\n        ? theme.colors.warning\n        : props.condition === 'certified'\n          ? theme.colors.primary\n          : theme.colors.gray600};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.7rem;\n  font-weight: 600;\n  text-transform: uppercase;\n\n  ${media.mobile} {\n    top: ${theme.spacing.sm};\n    right: ${theme.spacing.lg + 36}px;\n    font-size: 0.65rem;\n  }\n`;\n\nconst WishlistButton = styled.button`\n  position: absolute;\n  top: ${theme.spacing.md};\n  right: ${theme.spacing.md};\n  background: ${theme.colors.white};\n  border-radius: 50%;\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.gray400};\n  transition: all 0.2s ease;\n  opacity: 0;\n  border: none;\n  cursor: pointer;\n\n  ${Card}:hover & {\n    opacity: 1;\n  }\n\n  &:hover {\n    color: ${theme.colors.error};\n    transform: scale(1.1);\n  }\n\n  ${media.mobile} {\n    top: ${theme.spacing.sm};\n    right: ${theme.spacing.sm};\n    width: 32px;\n    height: 32px;\n    opacity: 1;\n\n    &:hover {\n      transform: none;\n    }\n  }\n\n  ${media.tablet} {\n    width: 34px;\n    height: 34px;\n  }\n`;\n\nconst CardContent = styled.div`\n  padding: ${theme.spacing.lg};\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n\n  ${media.mobile} {\n    padding: ${theme.spacing.md};\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.lg};\n  }\n`;\n\nconst VehicleHeader = styled.div`\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst YearMake = styled.span`\n  color: ${theme.colors.gray500};\n  font-size: 0.9rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n\n  ${media.mobile} {\n    font-size: 0.8rem;\n  }\n`;\n\nconst VehicleName = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin: ${theme.spacing.xs} 0;\n  line-height: 1.3;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n\n  ${media.mobile} {\n    font-size: 1.1rem;\n  }\n`;\n\nconst VehicleSpecs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: ${theme.spacing.sm};\n  margin: ${theme.spacing.md} 0;\n  padding: ${theme.spacing.sm};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n\n  ${media.mobile} {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.xs};\n    padding: ${theme.spacing.xs};\n  }\n`;\n\nconst SpecItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n\n  .icon {\n    color: ${theme.colors.primary};\n    font-size: 0.9rem;\n  }\n\n  ${media.mobile} {\n    font-size: 0.75rem;\n\n    .icon {\n      font-size: 0.8rem;\n    }\n  }\n`;\n\nconst Description = styled.p`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n  line-height: 1.5;\n  margin-bottom: ${theme.spacing.md};\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  flex: 1;\n\n  ${media.mobile} {\n    font-size: 0.8rem;\n    margin-bottom: ${theme.spacing.sm};\n    -webkit-line-clamp: 3;\n  }\n`;\n\nconst RatingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.md};\n\n  ${media.mobile} {\n    gap: ${theme.spacing.xs};\n    margin-bottom: ${theme.spacing.sm};\n  }\n`;\n\nconst StarRating = styled.div`\n  display: flex;\n  gap: 2px;\n`;\n\nconst Star = styled(FaStar).withConfig({\n  shouldForwardProp: prop => prop !== 'filled',\n})`\n  color: ${props => (props.filled ? '#fbbf24' : theme.colors.gray300)};\n  font-size: 0.8rem;\n`;\n\nconst ReviewCount = styled.span`\n  color: ${theme.colors.gray500};\n  font-size: 0.8rem;\n\n  ${media.mobile} {\n    font-size: 0.7rem;\n  }\n`;\n\nconst PriceContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.lg};\n\n  ${media.mobile} {\n    gap: ${theme.spacing.xs};\n    margin-bottom: ${theme.spacing.md};\n    flex-wrap: wrap;\n  }\n`;\n\nconst CurrentPrice = styled.span`\n  font-size: 1.4rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n\n  ${media.mobile} {\n    font-size: 1.2rem;\n  }\n\n  ${media.tablet} {\n    font-size: 1.3rem;\n  }\n`;\n\nconst OriginalPrice = styled.span`\n  font-size: 1rem;\n  color: ${theme.colors.gray500};\n  text-decoration: line-through;\n\n  ${media.mobile} {\n    font-size: 0.9rem;\n  }\n`;\n\nconst Discount = styled.span`\n  background: ${theme.colors.error};\n  color: ${theme.colors.white};\n  padding: 2px 6px;\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.7rem;\n  font-weight: 600;\n\n  ${media.mobile} {\n    font-size: 0.65rem;\n    padding: 1px 4px;\n  }\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n\n  ${media.mobile} {\n    gap: ${theme.spacing.xs};\n  }\n`;\n\nconst EnquireButton = styled.button`\n  flex: 1;\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary} 0%,\n    ${theme.colors.primaryDark} 100%\n  );\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  font-weight: 700;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n  transition: all 0.3s ease;\n  border: none;\n  cursor: pointer;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  font-size: 0.9rem;\n\n  &:hover {\n    background: linear-gradient(\n      135deg,\n      ${theme.colors.primaryDark} 0%,\n      ${theme.colors.primary} 100%\n    );\n    transform: translateY(-3px);\n    box-shadow: ${theme.shadows.lg};\n  }\n\n  &:disabled {\n    background: ${theme.colors.gray400};\n    cursor: not-allowed;\n    transform: none;\n    box-shadow: none;\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.sm};\n    gap: ${theme.spacing.xs};\n    font-size: 0.875rem;\n\n    &:hover {\n      transform: none;\n    }\n  }\n`;\n\nconst StockIndicator = styled.div.withConfig({\n  shouldForwardProp: prop => !['availability', 'color'].includes(prop),\n})`\n  color: ${props => props.color || theme.colors.gray600};\n  font-size: 0.8rem;\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.sm};\n\n  ${media.mobile} {\n    font-size: 0.7rem;\n    margin-bottom: ${theme.spacing.xs};\n  }\n`;\n\nconst VehicleCard = ({\n  vehicle,\n  onToggleWishlist,\n  isInWishlist = false,\n  dealerSlug = '',\n}) => {\n  const [isEnquiryModalOpen, setIsEnquiryModalOpen] = useState(false);\n\n  const renderStars = rating => {\n    const stars = [];\n    for (let i = 1; i <= 5; i++) {\n      stars.push(<Star key={i} filled={i <= Math.floor(rating)} />);\n    }\n    return stars;\n  };\n\n  const calculateDiscount = (original, current) => {\n    return Math.round(((original - current) / original) * 100);\n  };\n\n  const handleEnquireClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsEnquiryModalOpen(true);\n  };\n\n  const handleWishlistToggle = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const wishlist = JSON.parse(\n      localStorage.getItem('vehicleWishlist') || '[]'\n    );\n    let newWishlist;\n\n    if (isInWishlist) {\n      newWishlist = wishlist.filter(id => id !== vehicle.id);\n    } else {\n      newWishlist = [...wishlist, vehicle.id];\n    }\n\n    localStorage.setItem('vehicleWishlist', JSON.stringify(newWishlist));\n    onToggleWishlist?.(vehicle);\n  };\n\n  const getBaseUrl = () => `/${dealerSlug}`;\n\n  const formatPrice = price => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(price);\n  };\n\n  const formatMileage = mileage => {\n    if (mileage === 0) return 'New';\n    return new Intl.NumberFormat('en-US').format(mileage) + ' miles';\n  };\n\n  const availabilityStatus = getAvailabilityStatus(vehicle);\n  const availabilityLabel = getAvailabilityLabel(availabilityStatus);\n  const availabilityColor = getAvailabilityColor(availabilityStatus);\n\n  return (\n    <Link to={`${getBaseUrl()}/vehicledetail/${vehicle.id}`}>\n      <Card>\n        <ImageContainer>\n          <VehicleImage src={vehicle.image} alt={vehicle.name} />\n\n          {vehicle.onSale && vehicle.originalPrice && (\n            <Badge type=\"sale\">Sale</Badge>\n          )}\n\n          {vehicle.featured && !vehicle.onSale && (\n            <Badge type=\"featured\">Featured</Badge>\n          )}\n\n          {vehicle.condition && (\n            <ConditionBadge condition={vehicle.condition}>\n              {vehicle.condition === 'new'\n                ? 'New'\n                : vehicle.condition === 'certified'\n                  ? 'Certified'\n                  : vehicle.condition === 'restored'\n                    ? 'Restored'\n                    : 'Used'}\n            </ConditionBadge>\n          )}\n\n          <WishlistButton\n            onClick={handleWishlistToggle}\n            title={isInWishlist ? 'Remove from wishlist' : 'Add to wishlist'}\n          >\n            <FaHeart\n              style={{\n                color: isInWishlist ? theme.colors.error : 'currentColor',\n              }}\n            />\n          </WishlistButton>\n        </ImageContainer>\n\n        <CardContent>\n          <VehicleHeader>\n            <YearMake>\n              {vehicle.year} {vehicle.make}\n            </YearMake>\n            <VehicleName>\n              {vehicle.model} {vehicle.trim}\n            </VehicleName>\n          </VehicleHeader>\n\n          <VehicleSpecs>\n            <SpecItem>\n              <FaCar className=\"icon\" />\n              <span>{vehicle.specifications?.engine || 'N/A'}</span>\n            </SpecItem>\n            <SpecItem>\n              <FaGasPump className=\"icon\" />\n              <span>\n                {vehicle.specifications?.fuelEconomy ||\n                  vehicle.specifications?.range ||\n                  'N/A'}\n              </span>\n            </SpecItem>\n            <SpecItem>\n              <FaRoad className=\"icon\" />\n              <span>{formatMileage(vehicle.mileage)}</span>\n            </SpecItem>\n          </VehicleSpecs>\n\n          <Description>{vehicle.description}</Description>\n\n          <RatingContainer>\n            <StarRating>{renderStars(vehicle.rating)}</StarRating>\n            <ReviewCount>({vehicle.reviews} reviews)</ReviewCount>\n          </RatingContainer>\n\n          <PriceContainer>\n            <CurrentPrice>{formatPrice(vehicle.price)}</CurrentPrice>\n            {vehicle.originalPrice && vehicle.originalPrice > vehicle.price && (\n              <>\n                <OriginalPrice>\n                  {formatPrice(vehicle.originalPrice)}\n                </OriginalPrice>\n                <Discount>\n                  -{calculateDiscount(vehicle.originalPrice, vehicle.price)}%\n                </Discount>\n              </>\n            )}\n          </PriceContainer>\n\n          <StockIndicator\n            availability={availabilityStatus}\n            color={availabilityColor}\n          >\n            {availabilityStatus === 'in_stock' && vehicle.stock > 0\n              ? `${vehicle.stock} available`\n              : availabilityLabel}\n          </StockIndicator>\n\n          <ActionButtons>\n            <EnquireButton\n              onClick={handleEnquireClick}\n              disabled={availabilityStatus === 'out_of_stock'}\n            >\n              <FaEnvelope />\n              {availabilityStatus === 'out_of_stock'\n                ? 'Not Available'\n                : 'Get Quote'}\n            </EnquireButton>\n          </ActionButtons>\n        </CardContent>\n      </Card>\n\n      <EnquiryModal\n        isOpen={isEnquiryModalOpen}\n        onClose={() => setIsEnquiryModalOpen(false)}\n        vehicle={vehicle}\n      />\n    </Link>\n  );\n};\n\nexport default VehicleCard;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/components/VehicleInventoryTab.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'dealer' is defined but never used. Allowed unused args must match /^_/u.","line":305,"column":32,"nodeType":"Identifier","messageId":"unusedVar","endLine":305,"endColumn":38}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaCar,\n  FaSearch,\n  FaPlus,\n  FaEdit,\n  FaTrash,\n  FaEye,\n  FaSortAmountUp,\n  FaSortAmountDown,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport {\n  automobileVehicles as vehicles,\n  getVehicleAvailabilityStatus as getAvailabilityStatus,\n  getVehicleAvailabilityLabel as getAvailabilityLabel,\n  getVehicleAvailabilityColor as getAvailabilityColor,\n} from '../../DummyData';\n\nconst InventoryContainer = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  overflow: hidden;\n`;\n\nconst InventoryHeader = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.gray50};\n`;\n\nconst HeaderTop = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n    align-items: stretch;\n  }\n`;\n\nconst HeaderTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst AddButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-1px);\n  }\n`;\n\nconst FiltersRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto auto auto;\n  gap: ${theme.spacing.md};\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst SearchContainer = styled.div`\n  position: relative;\n  flex: 1;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.sm} ${theme.spacing.sm} ${theme.spacing.sm} 2.5rem;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray500};\n  }\n`;\n\nconst SearchIcon = styled.div`\n  position: absolute;\n  left: ${theme.spacing.sm};\n  top: 50%;\n  transform: translateY(-50%);\n  color: ${theme.colors.gray400};\n  font-size: 1rem;\n`;\n\nconst FilterSelect = styled.select`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.white};\n  cursor: pointer;\n  min-width: 150px;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst SortButton = styled.button`\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst StatsRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: ${theme.spacing.lg};\n  padding: ${theme.spacing.lg} ${theme.spacing.xl};\n  background: ${theme.colors.white};\n  border-bottom: 1px solid ${theme.colors.gray200};\n`;\n\nconst StatItem = styled.div`\n  text-align: center;\n`;\n\nconst StatValue = styled.div`\n  font-size: 1.8rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst TableContainer = styled.div`\n  overflow-x: auto;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n`;\n\nconst TableHeader = styled.thead`\n  background: ${theme.colors.gray50};\n  border-bottom: 2px solid ${theme.colors.gray200};\n`;\n\nconst TableRow = styled.tr`\n  border-bottom: 1px solid ${theme.colors.gray200};\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray50};\n  }\n`;\n\nconst TableHeaderCell = styled.th`\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  text-align: left;\n  font-weight: 600;\n  color: ${theme.colors.gray700};\n  font-size: 0.9rem;\n  white-space: nowrap;\n`;\n\nconst TableCell = styled.td`\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  font-size: 0.9rem;\n  color: ${theme.colors.gray700};\n  vertical-align: middle;\n`;\n\nconst VehicleInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n`;\n\nconst VehicleImage = styled.img`\n  width: 60px;\n  height: 45px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst VehicleDetails = styled.div``;\n\nconst VehicleName = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst VehicleSpec = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n`;\n\nconst StatusBadge = styled.span.withConfig({\n  shouldForwardProp: prop => prop !== 'color',\n})`\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 600;\n  color: ${theme.colors.white};\n  background: ${props => props.color || theme.colors.gray500};\n`;\n\nconst Price = styled.div`\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  font-size: 1rem;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n`;\n\nconst ActionButton = styled.button`\n  background: none;\n  border: none;\n  padding: ${theme.spacing.xs};\n  border-radius: ${theme.borderRadius.sm};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  color: ${theme.colors.gray500};\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.primary};\n  }\n\n  &.edit:hover {\n    color: ${theme.colors.warning};\n  }\n\n  &.delete:hover {\n    color: ${theme.colors.error};\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray500};\n\n  .icon {\n    font-size: 3rem;\n    margin-bottom: ${theme.spacing.lg};\n    color: ${theme.colors.gray400};\n  }\n\n  h3 {\n    font-size: 1.2rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray700};\n  }\n`;\n\nconst VehicleInventoryTab = ({ dealer }) => {\n  const [vehicleList, setVehicleList] = useState([]);\n  const [filteredVehicles, setFilteredVehicles] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [categoryFilter, setCategoryFilter] = useState('');\n  const [conditionFilter, setConditionFilter] = useState('');\n  const [sortBy, setSortBy] = useState('name');\n  const [sortDirection, setSortDirection] = useState('asc');\n\n  useEffect(() => {\n    // In a real app, this would fetch vehicles for the specific dealer\n    setVehicleList(vehicles);\n    setFilteredVehicles(vehicles);\n  }, []);\n\n  useEffect(() => {\n    let filtered = [...vehicleList];\n\n    // Search filter\n    if (searchTerm) {\n      filtered = filtered.filter(\n        vehicle =>\n          vehicle.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          vehicle.make.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          vehicle.model.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n\n    // Category filter\n    if (categoryFilter) {\n      filtered = filtered.filter(\n        vehicle => vehicle.category === categoryFilter\n      );\n    }\n\n    // Condition filter\n    if (conditionFilter) {\n      filtered = filtered.filter(\n        vehicle => vehicle.condition === conditionFilter\n      );\n    }\n\n    // Sort\n    filtered.sort((a, b) => {\n      let aVal, bVal;\n\n      switch (sortBy) {\n        case 'price':\n          aVal = a.price;\n          bVal = b.price;\n          break;\n        case 'year':\n          aVal = a.year;\n          bVal = b.year;\n          break;\n        case 'mileage':\n          aVal = a.mileage;\n          bVal = b.mileage;\n          break;\n        case 'name':\n        default:\n          aVal = a.name.toLowerCase();\n          bVal = b.name.toLowerCase();\n          break;\n      }\n\n      if (sortDirection === 'asc') {\n        return aVal > bVal ? 1 : -1;\n      } else {\n        return aVal < bVal ? 1 : -1;\n      }\n    });\n\n    setFilteredVehicles(filtered);\n  }, [\n    vehicleList,\n    searchTerm,\n    categoryFilter,\n    conditionFilter,\n    sortBy,\n    sortDirection,\n  ]);\n\n  const handleSort = field => {\n    if (sortBy === field) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(field);\n      setSortDirection('asc');\n    }\n  };\n\n  const formatPrice = price => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(price);\n  };\n\n  const stats = {\n    total: vehicleList.length,\n    available: vehicleList.filter(v => getAvailabilityStatus(v) === 'in_stock')\n      .length,\n    sold: vehicleList.filter(v => getAvailabilityStatus(v) === 'out_of_stock')\n      .length,\n    newVehicles: vehicleList.filter(v => v.condition === 'new').length,\n  };\n\n  const categories = [...new Set(vehicleList.map(v => v.category))];\n  const conditions = [...new Set(vehicleList.map(v => v.condition))];\n\n  return (\n    <InventoryContainer>\n      <InventoryHeader>\n        <HeaderTop>\n          <HeaderTitle>\n            <FaCar />\n            Vehicle Inventory ({filteredVehicles.length})\n          </HeaderTitle>\n          <AddButton>\n            <FaPlus />\n            Add New Vehicle\n          </AddButton>\n        </HeaderTop>\n\n        <FiltersRow>\n          <SearchContainer>\n            <SearchIcon>\n              <FaSearch />\n            </SearchIcon>\n            <SearchInput\n              type=\"text\"\n              placeholder=\"Search vehicles by name, make, or model...\"\n              value={searchTerm}\n              onChange={e => setSearchTerm(e.target.value)}\n            />\n          </SearchContainer>\n\n          <FilterSelect\n            value={categoryFilter}\n            onChange={e => setCategoryFilter(e.target.value)}\n          >\n            <option value=\"\">All Categories</option>\n            {categories.map(category => (\n              <option key={category} value={category}>\n                {category\n                  .replace('-', ' ')\n                  .replace(/\\b\\w/g, l => l.toUpperCase())}\n              </option>\n            ))}\n          </FilterSelect>\n\n          <FilterSelect\n            value={conditionFilter}\n            onChange={e => setConditionFilter(e.target.value)}\n          >\n            <option value=\"\">All Conditions</option>\n            {conditions.map(condition => (\n              <option key={condition} value={condition}>\n                {condition.charAt(0).toUpperCase() + condition.slice(1)}\n              </option>\n            ))}\n          </FilterSelect>\n\n          <SortButton onClick={() => handleSort('price')}>\n            {sortBy === 'price' && sortDirection === 'desc' ? (\n              <FaSortAmountDown />\n            ) : (\n              <FaSortAmountUp />\n            )}\n            Sort by Price\n          </SortButton>\n        </FiltersRow>\n      </InventoryHeader>\n\n      <StatsRow>\n        <StatItem>\n          <StatValue>{stats.total}</StatValue>\n          <StatLabel>Total Vehicles</StatLabel>\n        </StatItem>\n        <StatItem>\n          <StatValue>{stats.available}</StatValue>\n          <StatLabel>Available</StatLabel>\n        </StatItem>\n        <StatItem>\n          <StatValue>{stats.sold}</StatValue>\n          <StatLabel>Sold</StatLabel>\n        </StatItem>\n        <StatItem>\n          <StatValue>{stats.newVehicles}</StatValue>\n          <StatLabel>New Vehicles</StatLabel>\n        </StatItem>\n      </StatsRow>\n\n      <TableContainer>\n        {filteredVehicles.length > 0 ? (\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHeaderCell>Vehicle</TableHeaderCell>\n                <TableHeaderCell>Category</TableHeaderCell>\n                <TableHeaderCell>Condition</TableHeaderCell>\n                <TableHeaderCell>Price</TableHeaderCell>\n                <TableHeaderCell>Status</TableHeaderCell>\n                <TableHeaderCell>Stock</TableHeaderCell>\n                <TableHeaderCell>Actions</TableHeaderCell>\n              </TableRow>\n            </TableHeader>\n            <tbody>\n              {filteredVehicles.map(vehicle => {\n                const status = getAvailabilityStatus(vehicle);\n                const statusLabel = getAvailabilityLabel(status);\n                const statusColor = getAvailabilityColor(status);\n\n                return (\n                  <TableRow key={vehicle.id}>\n                    <TableCell>\n                      <VehicleInfo>\n                        <VehicleImage src={vehicle.image} alt={vehicle.name} />\n                        <VehicleDetails>\n                          <VehicleName>\n                            {vehicle.year} {vehicle.make} {vehicle.model}\n                          </VehicleName>\n                          <VehicleSpec>\n                            {vehicle.trim} •{' '}\n                            {vehicle.mileage === 0\n                              ? 'New'\n                              : `${vehicle.mileage.toLocaleString()} mi`}\n                          </VehicleSpec>\n                        </VehicleDetails>\n                      </VehicleInfo>\n                    </TableCell>\n                    <TableCell>\n                      {vehicle.category\n                        .replace('-', ' ')\n                        .replace(/\\b\\w/g, l => l.toUpperCase())}\n                    </TableCell>\n                    <TableCell>\n                      {vehicle.condition.charAt(0).toUpperCase() +\n                        vehicle.condition.slice(1)}\n                    </TableCell>\n                    <TableCell>\n                      <Price>{formatPrice(vehicle.price)}</Price>\n                    </TableCell>\n                    <TableCell>\n                      <StatusBadge color={statusColor}>\n                        {statusLabel}\n                      </StatusBadge>\n                    </TableCell>\n                    <TableCell>{vehicle.stock}</TableCell>\n                    <TableCell>\n                      <ActionButtons>\n                        <ActionButton title=\"View Details\">\n                          <FaEye />\n                        </ActionButton>\n                        <ActionButton className=\"edit\" title=\"Edit Vehicle\">\n                          <FaEdit />\n                        </ActionButton>\n                        <ActionButton className=\"delete\" title=\"Delete Vehicle\">\n                          <FaTrash />\n                        </ActionButton>\n                      </ActionButtons>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </tbody>\n          </Table>\n        ) : (\n          <EmptyState>\n            <FaCar className=\"icon\" />\n            <h3>No vehicles found</h3>\n            <p>\n              Try adjusting your search criteria or add new vehicles to your\n              inventory.\n            </p>\n          </EmptyState>\n        )}\n      </TableContainer>\n    </InventoryContainer>\n  );\n};\n\nexport default VehicleInventoryTab;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'useLocation' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport AutomobileMain from './pages/AutomobileMain';\n\nconst AutomobileModule = () => {\n  return <AutomobileMain />;\n};\n\nexport default AutomobileModule;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/pages/AutomobileMain.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate, Link } from 'react-router-dom';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { FaArrowRight, FaCar, FaHome } from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport VehicleCard from '../components/VehicleCard';\nimport CategoryCard from '../components/CategoryCard';\nimport BackToTop from '../../ecommerce/components/BackToTop';\nimport {\n  automobileCategories as categories,\n  getFeaturedVehicles,\n  getOnSaleVehicles,\n  getAutomobileVendorByIdOrSlug as getVendorByIdOrSlug,\n} from '../../DummyData';\n\n// Dynamic theme styles that override global styles\nconst DynamicGlobalStyle = createGlobalStyle`\n  :root {\n    --dealer-primary: ${props => props.primaryColor || theme.colors.primary};\n    --dealer-secondary: ${props => props.secondaryColor || theme.colors.secondary};\n    --dealer-background: ${props => props.backgroundColor || theme.colors.gray50};\n    --dealer-text: ${props => props.textColor || theme.colors.gray900};\n  }\n`;\n\nconst PageContainer = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'backgroundColor',\n})`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${props => props.backgroundColor || theme.colors.gray50};\n`;\n\nconst HeroSection = styled.section.withConfig({\n  shouldForwardProp: prop =>\n    !['primaryColor', 'secondaryColor', 'heroImage'].includes(prop),\n})`\n  background:\n    linear-gradient(\n      135deg,\n      ${props => props.primaryColor || '#1f2937'}dd 0%,\n      ${props => props.secondaryColor || '#374151'}dd 100%\n    ),\n    ${props => (props.heroImage ? `url(\"${props.heroImage}\")` : 'none')};\n  background-size: cover;\n  background-position: center;\n  background-attachment: fixed;\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xxl} 0;\n  text-align: center;\n  position: relative;\n  overflow: hidden;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.3);\n    z-index: 1;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    min-height: 100vh;\n    background-attachment: scroll;\n  }\n`;\n\nconst HeroContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n  position: relative;\n  z-index: 2;\n  width: 100%;\n`;\n\nconst DealerHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.sm};\n    text-align: center;\n  }\n`;\n\nconst DealerLogo = styled.img`\n  width: 120px;\n  height: 120px;\n  border-radius: ${theme.borderRadius.xl};\n  border: 4px solid ${theme.colors.white};\n  object-fit: cover;\n  box-shadow: ${theme.shadows.xl};\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    width: 100px;\n    height: 100px;\n  }\n`;\n\nconst HeroTitle = styled.h1`\n  font-size: 4rem;\n  font-weight: 800;\n  margin-bottom: ${theme.spacing.lg};\n  background: linear-gradient(45deg, #ffffff, #f0f8ff);\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n  letter-spacing: -1px;\n  line-height: 1.1;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    font-size: 3rem;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2.2rem;\n  }\n`;\n\nconst HeroSubtitle = styled.p`\n  font-size: 1.4rem;\n  margin-bottom: ${theme.spacing.xl};\n  opacity: 0.95;\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  font-weight: 300;\n  line-height: 1.6;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    font-size: 1.2rem;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1rem;\n  }\n`;\n\nconst HeroActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.lg};\n  justify-content: center;\n  flex-wrap: wrap;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    align-items: center;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst HeroButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  background: ${theme.colors.white};\n  color: ${props => props.primaryColor || theme.colors.primary};\n  padding: ${theme.spacing.lg} ${theme.spacing.xxl};\n  border: none;\n  border-radius: ${theme.borderRadius.xl};\n  font-weight: 700;\n  font-size: 1.1rem;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  transition: all 0.3s ease;\n  box-shadow: ${theme.shadows.xl};\n  cursor: pointer;\n  min-width: 200px;\n  justify-content: center;\n\n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n    background: ${theme.colors.gray50};\n  }\n\n  &.secondary {\n    background: rgba(255, 255, 255, 0.1);\n    color: ${theme.colors.white};\n    border: 2px solid ${theme.colors.white};\n    backdrop-filter: blur(10px);\n\n    &:hover {\n      background: rgba(255, 255, 255, 0.2);\n      transform: translateY(-3px);\n    }\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.md} ${theme.spacing.xl};\n    min-width: 180px;\n    font-size: 1rem;\n  }\n`;\n\nconst Section = styled.section`\n  padding: ${theme.spacing.xxl} 0;\n  background: ${props => props.background || theme.colors.white};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    padding: ${theme.spacing.xl} 0;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg} 0;\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    padding: 0 ${theme.spacing.md};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: 0 ${theme.spacing.sm};\n  }\n`;\n\nconst SectionHeader = styled.div`\n  text-align: center;\n  margin-bottom: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    margin-bottom: ${theme.spacing.xl};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    margin-bottom: ${theme.spacing.lg};\n    padding: 0 ${theme.spacing.sm};\n  }\n`;\n\nconst SectionTitle = styled.h2.withConfig({\n  shouldForwardProp: prop => prop !== 'textColor',\n})`\n  font-size: 2.5rem;\n  font-weight: 600;\n  color: ${props => props.textColor || theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    font-size: 2rem;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.75rem;\n    margin-bottom: ${theme.spacing.sm};\n  }\n`;\n\nconst SectionSubtitle = styled.p`\n  font-size: 1.1rem;\n  color: ${theme.colors.gray600};\n  max-width: 600px;\n  margin: 0 auto;\n  line-height: 1.6;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    font-size: 1rem;\n    max-width: 500px;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 0.95rem;\n    max-width: 100%;\n    padding: 0 ${theme.spacing.sm};\n  }\n`;\n\nconst Grid = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'minWidth',\n})`\n  display: grid;\n  grid-template-columns: repeat(\n    auto-fit,\n    minmax(${props => props.minWidth || '280px'}, 1fr)\n  );\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: ${theme.spacing.lg};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n    gap: ${theme.spacing.md};\n    padding: 0 ${theme.spacing.sm};\n  }\n\n  @media (max-width: 320px) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst BackButton = styled.button`\n  position: fixed;\n  top: ${theme.spacing.xl};\n  left: ${theme.spacing.xl};\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  z-index: 1000;\n  box-shadow: ${theme.shadows.md};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n    transform: translateY(-1px);\n  }\n`;\n\nconst FallbackContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  padding: ${theme.spacing.xl};\n  background: ${theme.colors.gray50};\n`;\n\nconst FallbackTitle = styled.h1`\n  font-size: 2.5rem;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst FallbackText = styled.p`\n  font-size: 1.1rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.xl};\n  max-width: 500px;\n`;\n\nconst FallbackButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-1px);\n  }\n`;\n\nconst Breadcrumb = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.md} 0;\n  border-bottom: 1px solid ${theme.colors.gray100};\n`;\n\nconst BreadcrumbNav = styled.nav`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n\n  a {\n    color: ${theme.colors.primary};\n    text-decoration: none;\n    transition: color 0.2s ease;\n\n    &:hover {\n      color: ${theme.colors.primaryDark};\n      text-decoration: underline;\n    }\n  }\n\n  .separator {\n    color: ${theme.colors.gray400};\n  }\n\n  .current {\n    color: ${theme.colors.gray900};\n    font-weight: 600;\n  }\n`;\n\nconst AutomobileMain = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [featuredVehicles, setFeaturedVehicles] = useState([]);\n  const [saleVehicles, setSaleVehicles] = useState([]);\n  const [selectedDealer, setSelectedDealer] = useState(null);\n\n  const getBaseUrl = () =>\n    selectedDealer ? `/${selectedDealer.slug}` : '/automobiles';\n\n  useEffect(() => {\n    // Get dealer data from URL slug or navigation state (fallback)\n    const path = location.pathname;\n    let dealer = null;\n\n    if (path !== '/automobiles') {\n      // Extract dealer slug from URL like \"/luxury-auto-gallery\"\n      const pathSegments = path.split('/').filter(Boolean);\n      const dealerSlug = pathSegments[0];\n      dealer = getVendorByIdOrSlug(dealerSlug);\n    }\n\n    // Fallback to location state if no dealer found by slug\n    if (!dealer) {\n      dealer = location.state?.selectedDealer;\n    }\n\n    if (dealer) {\n      setSelectedDealer(dealer);\n    } else {\n      // If no dealer found, redirect to dealer listing\n      navigate('/auto-dealers');\n      return;\n    }\n\n    // Load vehicles (these would be filtered by dealer in a real app)\n    setFeaturedVehicles(getFeaturedVehicles());\n    setSaleVehicles(getOnSaleVehicles());\n  }, [location.pathname, location.state, navigate]);\n\n  const handleBackToDealers = () => {\n    navigate('/auto-dealers');\n  };\n\n  // Show fallback if no dealer is selected\n  if (!selectedDealer) {\n    return (\n      <FallbackContainer>\n        <FallbackTitle>Please Select a Dealer</FallbackTitle>\n        <FallbackText>\n          You need to select a dealer first to view their vehicles and continue\n          browsing.\n        </FallbackText>\n        <FallbackButton onClick={handleBackToDealers}>\n          <FaCar />\n          Browse Dealers\n        </FallbackButton>\n      </FallbackContainer>\n    );\n  }\n\n  const dealerTheme = selectedDealer.theme || {};\n\n  return (\n    <>\n      <DynamicGlobalStyle\n        primaryColor={dealerTheme.primaryColor}\n        secondaryColor={dealerTheme.secondaryColor}\n        backgroundColor={dealerTheme.backgroundColor}\n        textColor={dealerTheme.textColor}\n      />\n\n      <PageContainer backgroundColor={dealerTheme.backgroundColor}>\n        <BackButton onClick={handleBackToDealers}>\n          <FaHome />\n          Back to Dealers\n        </BackButton>\n\n        <Navbar\n          dealerName={selectedDealer.name}\n          dealerLogo={selectedDealer.logo}\n          dealerSlug={selectedDealer.slug}\n          theme={dealerTheme}\n        />\n\n        <Breadcrumb>\n          <BreadcrumbNav>\n            <Link to=\"/auto-dealers\">All Dealers</Link>\n            <span className=\"separator\">›</span>\n            <span className=\"current\">{selectedDealer.name}</span>\n          </BreadcrumbNav>\n        </Breadcrumb>\n\n        <HeroSection\n          primaryColor={dealerTheme.primaryColor}\n          secondaryColor={dealerTheme.secondaryColor}\n          heroImage={selectedDealer.image}\n        >\n          <HeroContent>\n            <DealerHeader>\n              <DealerLogo\n                src={selectedDealer.logo}\n                alt={`${selectedDealer.name} logo`}\n              />\n              <div>\n                <HeroTitle>Welcome to {selectedDealer.name}</HeroTitle>\n              </div>\n            </DealerHeader>\n            <HeroSubtitle>{selectedDealer.description}</HeroSubtitle>\n            <HeroActions>\n              <HeroButton\n                primaryColor={dealerTheme.primaryColor}\n                onClick={() => navigate(`${getBaseUrl()}/vehicles`)}\n              >\n                <FaCar />\n                Browse Vehicles\n              </HeroButton>\n              <HeroButton\n                className=\"secondary\"\n                onClick={() =>\n                  navigate(`${getBaseUrl()}/vehicles?category=luxury-cars`)\n                }\n              >\n                View Categories\n                <FaArrowRight />\n              </HeroButton>\n            </HeroActions>\n          </HeroContent>\n        </HeroSection>\n\n        <Section>\n          <Container>\n            <SectionHeader>\n              <SectionTitle textColor={dealerTheme.textColor}>\n                Browse by Category\n              </SectionTitle>\n              <SectionSubtitle>\n                Explore our diverse range of vehicles across different\n                categories\n              </SectionSubtitle>\n            </SectionHeader>\n            <Grid minWidth=\"280px\">\n              {categories.map(category => (\n                <CategoryCard\n                  key={category.id}\n                  category={category}\n                  dealerSlug={selectedDealer.slug}\n                />\n              ))}\n            </Grid>\n          </Container>\n        </Section>\n\n        <Section\n          background={dealerTheme.backgroundColor || theme.colors.gray50}\n        >\n          <Container>\n            <SectionHeader>\n              <SectionTitle textColor={dealerTheme.textColor}>\n                Featured Vehicles\n              </SectionTitle>\n              <SectionSubtitle>\n                Handpicked vehicles from {selectedDealer.name} that customers\n                love the most\n              </SectionSubtitle>\n            </SectionHeader>\n            <Grid>\n              {featuredVehicles.slice(0, 4).map(vehicle => (\n                <VehicleCard\n                  key={vehicle.id}\n                  vehicle={vehicle}\n                  dealerSlug={selectedDealer.slug}\n                />\n              ))}\n            </Grid>\n          </Container>\n        </Section>\n\n        {saleVehicles.length > 0 && (\n          <Section>\n            <Container>\n              <SectionHeader>\n                <SectionTitle textColor={dealerTheme.textColor}>\n                  🔥 Special Offers\n                </SectionTitle>\n                <SectionSubtitle>\n                  Limited time deals from {selectedDealer.name} you don't want\n                  to miss\n                </SectionSubtitle>\n              </SectionHeader>\n              <Grid>\n                {saleVehicles.slice(0, 4).map(vehicle => (\n                  <VehicleCard\n                    key={vehicle.id}\n                    vehicle={vehicle}\n                    dealerSlug={selectedDealer.slug}\n                  />\n                ))}\n              </Grid>\n            </Container>\n          </Section>\n        )}\n\n        <Footer\n          dealerSlug={selectedDealer.slug}\n          dealer={selectedDealer}\n          theme={dealerTheme}\n        />\n        <BackToTop />\n      </PageContainer>\n    </>\n  );\n};\n\nexport default AutomobileMain;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/pages/DealerDashboard.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { theme } from '../../styles/GlobalStyle';\nimport DealerSidebar from '../components/DealerSidebar';\nimport DashboardTab from '../components/DashboardTab';\nimport VehicleInventoryTab from '../components/VehicleInventoryTab';\nimport AddVehicleTab from '../components/AddVehicleTab';\nimport BulkImportTab from '../components/BulkImportTab';\nimport SalesOrdersTab from '../components/SalesOrdersTab';\nimport EnquiriesTab from '../components/EnquiriesTab';\nimport CustomersTab from '../components/CustomersTab';\nimport FinancingTab from '../components/FinancingTab';\nimport TradeInsTab from '../components/TradeInsTab';\nimport ServiceAppointmentsTab from '../components/ServiceAppointmentsTab';\nimport PromotionsTab from '../components/PromotionsTab';\nimport DealerSettingsTab from '../components/DealerSettingsTab';\nimport AnalyticsTab from '../components/AnalyticsTab';\nimport { getAutomobileVendorByIdOrSlug as getVendorByIdOrSlug } from '../../DummyData';\n\nconst DashboardContainer = styled.div`\n  display: flex;\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n`;\n\nconst MainContent = styled.div`\n  flex: 1;\n  margin-left: 280px;\n  padding: ${theme.spacing.xl};\n  min-height: 100vh;\n\n  @media (max-width: 1024px) {\n    margin-left: 0;\n    padding: ${theme.spacing.lg};\n  }\n\n  @media (max-width: 768px) {\n    padding: ${theme.spacing.md};\n  }\n`;\n\nconst ContentWrapper = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n`;\n\nconst PageHeader = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0;\n`;\n\nconst PageSubtitle = styled.p`\n  color: ${theme.colors.gray600};\n  margin: ${theme.spacing.sm} 0 0 0;\n  font-size: 1rem;\n`;\n\nconst LoadingContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 50vh;\n  font-size: 1.2rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst DealerDashboard = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const [dealer, setDealer] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Get dealer data from URL\n    const path = location.pathname;\n    const pathSegments = path.split('/').filter(Boolean);\n    const dealerSlug = pathSegments[0];\n\n    const dealerData = getVendorByIdOrSlug(dealerSlug);\n\n    if (dealerData) {\n      setDealer(dealerData);\n      setLoading(false);\n    } else {\n      // If no dealer found, redirect to dealer listing\n      navigate('/auto-dealers');\n    }\n  }, [location.pathname, navigate]);\n\n  const getPageTitle = () => {\n    switch (activeTab) {\n      case 'dashboard':\n        return 'Dealership Overview';\n      case 'inventory':\n        return 'Vehicle Inventory';\n      case 'add-vehicle':\n        return 'Add New Vehicle';\n      case 'bulk-import':\n        return 'Bulk Import Vehicles';\n      case 'orders':\n        return 'Sales & Orders';\n      case 'enquiries':\n        return 'Customer Enquiries';\n      case 'customers':\n        return 'Customer Management';\n      case 'financing':\n        return 'Financing & Loans';\n      case 'trade-ins':\n        return 'Trade-In Management';\n      case 'service':\n        return 'Service Appointments';\n      case 'promotions':\n        return 'Promotions & Deals';\n      case 'dealer-settings':\n        return 'Dealership Settings';\n      case 'analytics':\n        return 'Analytics & Reports';\n      default:\n        return 'Dealership Dashboard';\n    }\n  };\n\n  const getPageSubtitle = () => {\n    switch (activeTab) {\n      case 'dashboard':\n        return 'Monitor your dealership performance and key metrics';\n      case 'inventory':\n        return 'Manage your vehicle inventory and stock levels';\n      case 'add-vehicle':\n        return 'Add a new vehicle to your inventory';\n      case 'bulk-import':\n        return 'Import multiple vehicles via CSV file';\n      case 'orders':\n        return 'Track sales, deliveries, and customer orders';\n      case 'enquiries':\n        return 'Manage customer enquiries and communications';\n      case 'customers':\n        return 'View and manage your customer database';\n      case 'financing':\n        return 'Manage financing applications and loan approvals';\n      case 'trade-ins':\n        return 'Handle trade-in evaluations and transactions';\n      case 'service':\n        return 'Schedule and manage service appointments';\n      case 'promotions':\n        return 'Create and manage promotional offers';\n      case 'dealer-settings':\n        return 'Configure your dealership settings and preferences';\n      case 'analytics':\n        return 'Analyze your business data and sales trends';\n      default:\n        return '';\n    }\n  };\n\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'dashboard':\n        return <DashboardTab dealer={dealer} />;\n      case 'inventory':\n        return <VehicleInventoryTab dealer={dealer} />;\n      case 'add-vehicle':\n        return <AddVehicleTab dealer={dealer} />;\n      case 'bulk-import':\n        return <BulkImportTab dealer={dealer} />;\n      case 'orders':\n        return <SalesOrdersTab dealer={dealer} />;\n      case 'enquiries':\n        return <EnquiriesTab dealer={dealer} />;\n      case 'customers':\n        return <CustomersTab dealer={dealer} />;\n      case 'financing':\n        return <FinancingTab dealer={dealer} />;\n      case 'trade-ins':\n        return <TradeInsTab dealer={dealer} />;\n      case 'service':\n        return <ServiceAppointmentsTab dealer={dealer} />;\n      case 'promotions':\n        return <PromotionsTab dealer={dealer} />;\n      case 'dealer-settings':\n        return <DealerSettingsTab dealer={dealer} />;\n      case 'analytics':\n        return <AnalyticsTab dealer={dealer} />;\n      default:\n        return <DashboardTab dealer={dealer} />;\n    }\n  };\n\n  if (loading) {\n    return <LoadingContainer>Loading dealership dashboard...</LoadingContainer>;\n  }\n\n  if (!dealer) {\n    return null; // Will redirect\n  }\n\n  return (\n    <DashboardContainer>\n      <DealerSidebar\n        activeTab={activeTab}\n        onTabChange={setActiveTab}\n        dealer={dealer}\n      />\n      <MainContent>\n        <ContentWrapper>\n          <PageHeader>\n            <PageTitle>{getPageTitle()}</PageTitle>\n            <PageSubtitle>{getPageSubtitle()}</PageSubtitle>\n          </PageHeader>\n          {renderContent()}\n        </ContentWrapper>\n      </MainContent>\n    </DashboardContainer>\n  );\n};\n\nexport default DealerDashboard;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/pages/StoresListing.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":344,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":344,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[8201,8249],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":369,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":369,"endColumn":76},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":382,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":384,"endColumn":8}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaMapMarkerAlt,\n  FaSearch,\n  FaLocationArrow,\n  FaHome,\n  FaCar,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport StoreCard from '../../components/shared/StoreCard';\nimport { automobileVendors } from '../data/vendors';\nimport {\n  getCurrentLocation,\n  getLocationFromZip,\n  searchLocationByCity,\n  updateVendorsWithDistance,\n  getDefaultLocation,\n} from '../../utils/location';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst NavHeader = styled.div`\n  background: ${theme.colors.white};\n  box-shadow: ${theme.shadows.sm};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  position: sticky;\n  top: 0;\n  z-index: 100;\n`;\n\nconst NavContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.lg} ${theme.spacing.md};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Logo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n`;\n\nconst BackButton = styled.button`\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n  flex: 1;\n`;\n\nconst PageHeader = styled.div`\n  text-align: center;\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst PageSubtitle = styled.p`\n  font-size: 1.1rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst LocationDisplay = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.primary};\n  font-weight: 600;\n`;\n\nconst SearchSection = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst SearchForm = styled.form`\n  display: grid;\n  grid-template-columns: 1fr auto auto;\n  gap: ${theme.spacing.md};\n  align-items: end;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst SearchInputContainer = styled.div`\n  position: relative;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.md} 3rem;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray500};\n  }\n`;\n\nconst SearchIcon = styled.div`\n  position: absolute;\n  left: ${theme.spacing.md};\n  top: 50%;\n  transform: translateY(-50%);\n  color: ${theme.colors.gray400};\n  font-size: 1.1rem;\n`;\n\nconst LocationButton = styled.button`\n  background: ${theme.colors.gray100};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  white-space: nowrap;\n\n  &:hover {\n    background: ${theme.colors.gray200};\n    border-color: ${theme.colors.primary};\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst SearchButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  white-space: nowrap;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-1px);\n  }\n`;\n\nconst FiltersSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.xl};\n  flex-wrap: wrap;\n  gap: ${theme.spacing.md};\n`;\n\nconst FilterGroup = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  flex-wrap: wrap;\n`;\n\nconst FilterButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  background: ${props =>\n    props.active ? theme.colors.primary : theme.colors.white};\n  color: ${props => (props.active ? theme.colors.white : theme.colors.gray700)};\n  border: 2px solid\n    ${props => (props.active ? theme.colors.primary : theme.colors.gray200)};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst SortSelect = styled.select`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.white};\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst ResultsInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.lg};\n  color: ${theme.colors.gray600};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst StoresGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst LoadingState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n\n  .spinner {\n    margin-bottom: ${theme.spacing.lg};\n    font-size: 2rem;\n    animation: spin 1s linear infinite;\n  }\n\n  @keyframes spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray900};\n  }\n\n  p {\n    font-size: 1rem;\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst AutomobileStoresListing = () => {\n  const navigate = useNavigate();\n  const [stores, setStores] = useState([]);\n  const [filteredStores, setFilteredStores] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [activeFilter, setActiveFilter] = useState('all');\n  const [sortBy, setSortBy] = useState('distance');\n  const [locationLoading, setLocationLoading] = useState(false);\n\n  const loadStoresForLocation = useCallback(location => {\n    const vendorsWithDistance = updateVendorsWithDistance(\n      automobileVendors,\n      location\n    );\n    setStores(vendorsWithDistance);\n    setFilteredStores(vendorsWithDistance);\n    setLoading(false);\n  }, []);\n\n  const initializeLocation = useCallback(async () => {\n    setLoading(true);\n    try {\n      const location = await getCurrentLocation();\n      setCurrentLocation(location);\n      loadStoresForLocation(location);\n    } catch (error) {\n      console.error('Failed to get location:', error);\n      const defaultLocation = getDefaultLocation();\n      setCurrentLocation(defaultLocation);\n      loadStoresForLocation(defaultLocation);\n    }\n  }, [loadStoresForLocation]);\n\n  const handleLocationSearch = async e => {\n    e.preventDefault();\n    if (!searchTerm.trim()) return;\n\n    setLocationLoading(true);\n    try {\n      let newLocation;\n\n      if (/^\\d{5}$/.test(searchTerm.trim())) {\n        newLocation = await getLocationFromZip(searchTerm.trim());\n      } else {\n        newLocation = await searchLocationByCity(searchTerm.trim());\n      }\n\n      setCurrentLocation(newLocation);\n      loadStoresForLocation(newLocation);\n      setSearchTerm('');\n    } catch (error) {\n      alert('Location not found. Please try a different city or ZIP code.');\n    } finally {\n      setLocationLoading(false);\n    }\n  };\n\n  const handleUseCurrentLocation = async () => {\n    setLocationLoading(true);\n    try {\n      const location = await getCurrentLocation();\n      setCurrentLocation(location);\n      loadStoresForLocation(location);\n    } catch (error) {\n      alert(\n        'Unable to get your current location. Please check your browser settings.'\n      );\n    } finally {\n      setLocationLoading(false);\n    }\n  };\n\n  const applyFilters = useCallback(() => {\n    let filtered = [...stores];\n\n    if (activeFilter === 'featured') {\n      filtered = filtered.filter(store => store.featured);\n    }\n\n    switch (sortBy) {\n      case 'distance':\n        filtered.sort((a, b) => a.distance - b.distance);\n        break;\n      case 'rating':\n        filtered.sort((a, b) => b.rating - a.rating);\n        break;\n      case 'name':\n        filtered.sort((a, b) => a.name.localeCompare(b.name));\n        break;\n      default:\n        break;\n    }\n\n    setFilteredStores(filtered);\n  }, [stores, activeFilter, sortBy]);\n\n  useEffect(() => {\n    initializeLocation();\n  }, [initializeLocation]);\n\n  useEffect(() => {\n    applyFilters();\n  }, [applyFilters]);\n\n  if (loading) {\n    return (\n      <PageContainer>\n        <NavHeader>\n          <NavContent>\n            <Logo>\n              <FaCar /> Auto Dealers\n            </Logo>\n            <BackButton onClick={() => navigate('/')}>\n              <FaHome />\n              Back to Home\n            </BackButton>\n          </NavContent>\n        </NavHeader>\n        <LoadingState>\n          <div className=\"spinner\">🚗</div>\n          <h3>Finding auto dealers near you...</h3>\n          <p>Please wait while we locate nearby dealerships.</p>\n        </LoadingState>\n      </PageContainer>\n    );\n  }\n\n  return (\n    <PageContainer>\n      <NavHeader>\n        <NavContent>\n          <Logo>\n            <FaCar /> Auto Dealers\n          </Logo>\n          <BackButton onClick={() => navigate('/')}>\n            <FaHome />\n            Back to Home\n          </BackButton>\n        </NavContent>\n      </NavHeader>\n\n      <Container>\n        <PageHeader>\n          <PageTitle>Auto Dealers Near You</PageTitle>\n          <PageSubtitle>\n            Find the perfect vehicle from trusted dealerships in your area\n          </PageSubtitle>\n          {currentLocation && (\n            <LocationDisplay>\n              <FaMapMarkerAlt />\n              <span>\n                {currentLocation.city}, {currentLocation.state}\n                {currentLocation.isDefault && ' (Default Location)'}\n              </span>\n            </LocationDisplay>\n          )}\n        </PageHeader>\n\n        <SearchSection>\n          <SearchForm onSubmit={handleLocationSearch}>\n            <SearchInputContainer>\n              <SearchIcon>\n                <FaSearch />\n              </SearchIcon>\n              <SearchInput\n                type=\"text\"\n                placeholder=\"Enter city name or ZIP code...\"\n                value={searchTerm}\n                onChange={e => setSearchTerm(e.target.value)}\n              />\n            </SearchInputContainer>\n\n            <LocationButton\n              type=\"button\"\n              onClick={handleUseCurrentLocation}\n              disabled={locationLoading}\n            >\n              <FaLocationArrow />\n              Use My Location\n            </LocationButton>\n\n            <SearchButton type=\"submit\" disabled={locationLoading}>\n              {locationLoading ? 'Searching...' : 'Search'}\n            </SearchButton>\n          </SearchForm>\n        </SearchSection>\n\n        <FiltersSection>\n          <FilterGroup>\n            <FilterButton\n              active={activeFilter === 'all'}\n              onClick={() => setActiveFilter('all')}\n            >\n              All Dealers\n            </FilterButton>\n            <FilterButton\n              active={activeFilter === 'featured'}\n              onClick={() => setActiveFilter('featured')}\n            >\n              Featured\n            </FilterButton>\n          </FilterGroup>\n\n          <FilterGroup>\n            <SortSelect\n              value={sortBy}\n              onChange={e => setSortBy(e.target.value)}\n            >\n              <option value=\"distance\">Sort by Distance</option>\n              <option value=\"rating\">Sort by Rating</option>\n              <option value=\"name\">Sort by Name</option>\n            </SortSelect>\n          </FilterGroup>\n        </FiltersSection>\n\n        <ResultsInfo>\n          <span>\n            {filteredStores.length} dealer\n            {filteredStores.length !== 1 ? 's' : ''} found\n          </span>\n        </ResultsInfo>\n\n        {filteredStores.length > 0 ? (\n          <StoresGrid>\n            {filteredStores.map(store => (\n              <StoreCard key={store.id} store={store} category=\"automobiles\" />\n            ))}\n          </StoresGrid>\n        ) : (\n          <EmptyState>\n            <h3>No dealers found</h3>\n            <p>\n              Try searching for a different location or adjusting your filters.\n            </p>\n          </EmptyState>\n        )}\n      </Container>\n    </PageContainer>\n  );\n};\n\nexport default AutomobileStoresListing;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/pages/VehicleDetail.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":498,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":498,"endColumn":41}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaArrowLeft,\n  FaHeart,\n  FaShare,\n  FaEnvelope,\n  FaPhone,\n  FaCar,\n  FaGasPump,\n  FaRoad,\n  FaCalendar,\n  FaCog,\n  FaCheckCircle,\n  FaStar,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport VehicleCard from '../components/VehicleCard';\nimport EnquiryModal from '../components/EnquiryModal';\nimport BackToTop from '../../ecommerce/components/BackToTop';\nimport {\n  getVehicleById,\n  getFeaturedVehicles,\n  getVehicleAvailabilityStatus as getAvailabilityStatus,\n  getVehicleAvailabilityLabel as getAvailabilityLabel,\n  getVehicleAvailabilityColor as getAvailabilityColor,\n  getAutomobileVendorByIdOrSlug as getVendorByIdOrSlug,\n} from '../../DummyData';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst Container = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n  flex: 1;\n`;\n\nconst Breadcrumb = styled.nav`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.xl};\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n\n  a {\n    color: ${theme.colors.primary};\n    text-decoration: none;\n    transition: color 0.2s ease;\n\n    &:hover {\n      color: ${theme.colors.primaryDark};\n    }\n  }\n\n  .separator {\n    color: ${theme.colors.gray400};\n  }\n\n  .current {\n    color: ${theme.colors.gray900};\n    font-weight: 600;\n  }\n`;\n\nconst VehicleDetailContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 400px;\n  gap: ${theme.spacing.xxl};\n  margin-bottom: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.desktop}) {\n    grid-template-columns: 1fr 350px;\n    gap: ${theme.spacing.xl};\n  }\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst VehicleImages = styled.div``;\n\nconst MainImage = styled.div`\n  position: relative;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst MainImageContainer = styled.img`\n  width: 100%;\n  height: 500px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.lg};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    height: 400px;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    height: 300px;\n  }\n`;\n\nconst ImageThumbnails = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  gap: ${theme.spacing.sm};\n  max-width: 500px;\n`;\n\nconst Thumbnail = styled.img.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  width: 100%;\n  height: 80px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  border: 3px solid\n    ${props => (props.active ? theme.colors.primary : 'transparent')};\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: ${theme.shadows.md};\n  }\n`;\n\nconst VehicleInfo = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  position: sticky;\n  top: ${theme.spacing.xl};\n`;\n\nconst VehicleHeader = styled.div`\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst VehicleTitle = styled.h1`\n  font-size: 2rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n  line-height: 1.3;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.75rem;\n  }\n`;\n\nconst VehicleSubtitle = styled.p`\n  font-size: 1.1rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst PriceContainer = styled.div`\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst CurrentPrice = styled.div`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst OriginalPrice = styled.div`\n  font-size: 1.2rem;\n  color: ${theme.colors.gray500};\n  text-decoration: line-through;\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst Savings = styled.div`\n  background: ${theme.colors.success};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  display: inline-block;\n`;\n\nconst AvailabilityStatus = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'color',\n})`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.lg};\n  padding: ${theme.spacing.md};\n  background: ${props => props.color}20;\n  border: 2px solid ${props => props.color};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  color: ${props => props.color};\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst PrimaryButton = styled.button`\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary} 0%,\n    ${theme.colors.primaryDark} 100%\n  );\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border: none;\n  border-radius: ${theme.borderRadius.lg};\n  font-weight: 700;\n  font-size: 1.1rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: ${theme.shadows.lg};\n  }\n\n  &:disabled {\n    background: ${theme.colors.gray400};\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst SecondaryButton = styled.button`\n  background: ${theme.colors.white};\n  color: ${theme.colors.primary};\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.primary};\n  border-radius: ${theme.borderRadius.lg};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    background: ${theme.colors.primary};\n    color: ${theme.colors.white};\n  }\n`;\n\nconst IconButton = styled.button`\n  background: ${theme.colors.gray100};\n  border: none;\n  padding: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background: ${theme.colors.gray200};\n  }\n`;\n\nconst IconButtonsRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: ${theme.spacing.sm};\n`;\n\nconst SpecsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst SpecItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.sm};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n\n  .icon {\n    color: ${theme.colors.primary};\n    font-size: 1.1rem;\n  }\n\n  .label {\n    font-size: 0.9rem;\n    color: ${theme.colors.gray600};\n  }\n\n  .value {\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n  }\n`;\n\nconst VehicleDetails = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst DetailsSection = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.lg};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst Description = styled.p`\n  color: ${theme.colors.gray700};\n  line-height: 1.6;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst FeaturesList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: ${theme.spacing.sm};\n`;\n\nconst FeatureItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.sm};\n  color: ${theme.colors.gray700};\n\n  .icon {\n    color: ${theme.colors.success};\n    font-size: 1rem;\n  }\n`;\n\nconst SpecificationsTable = styled.div`\n  display: grid;\n  gap: ${theme.spacing.sm};\n`;\n\nconst SpecRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  padding: ${theme.spacing.md};\n  border-bottom: 1px solid ${theme.colors.gray200};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst SpecLabel = styled.span`\n  font-weight: 500;\n  color: ${theme.colors.gray600};\n`;\n\nconst SpecValue = styled.span`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n`;\n\nconst RelatedVehicles = styled.div`\n  margin-top: ${theme.spacing.xxl};\n`;\n\nconst RelatedGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: ${theme.spacing.xl};\n  margin-top: ${theme.spacing.xl};\n`;\n\nconst VehicleDetail = () => {\n  const { vehicleId } = useParams();\n  const navigate = useNavigate();\n  const [vehicle, setVehicle] = useState(null);\n  const [selectedDealer, setSelectedDealer] = useState(null);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [isEnquiryModalOpen, setIsEnquiryModalOpen] = useState(false);\n  const [isWishlisted, setIsWishlisted] = useState(false);\n  const [relatedVehicles, setRelatedVehicles] = useState([]);\n\n  useEffect(() => {\n    // Get vehicle data\n    const vehicleData = getVehicleById(parseInt(vehicleId));\n    if (!vehicleData) {\n      navigate('/auto-dealers');\n      return;\n    }\n    setVehicle(vehicleData);\n\n    // Get dealer data from URL\n    const pathSegments = window.location.pathname.split('/').filter(Boolean);\n    const dealerSlug = pathSegments[0];\n    const dealer = getVendorByIdOrSlug(dealerSlug);\n\n    if (dealer) {\n      setSelectedDealer(dealer);\n    } else {\n      navigate('/auto-dealers');\n      return;\n    }\n\n    // Get related vehicles (same category)\n    const featured = getFeaturedVehicles().filter(\n      v => v.vehicleId !== vehicleData.vehicleId\n    );\n    setRelatedVehicles(featured.slice(0, 3));\n\n    // Check wishlist status\n    const wishlist = JSON.parse(\n      localStorage.getItem('vehicleWishlist') || '[]'\n    );\n    setIsWishlisted(wishlist.includes(vehicleData.vehicleId));\n  }, [vehicleId, navigate]);\n\n  const formatPrice = price => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(price);\n  };\n\n  const calculateSavings = (original, current) => {\n    return original - current;\n  };\n\n  const handleWishlistToggle = () => {\n    const wishlist = JSON.parse(\n      localStorage.getItem('vehicleWishlist') || '[]'\n    );\n    let newWishlist;\n\n    if (isWishlisted) {\n      newWishlist = wishlist.filter(\n        vehicleId => vehicleId !== vehicle.vehicleId\n      );\n    } else {\n      newWishlist = [...wishlist, vehicle.vehicleId];\n    }\n\n    localStorage.setItem('vehicleWishlist', JSON.stringify(newWishlist));\n    setIsWishlisted(!isWishlisted);\n  };\n\n  const handleShare = () => {\n    if (navigator.share) {\n      navigator.share({\n        title: vehicle.name,\n        text: `Check out this ${vehicle.year} ${vehicle.make} ${vehicle.model}`,\n        url: window.location.href,\n      });\n    } else {\n      navigator.clipboard.writeText(window.location.href);\n      alert('Link copied to clipboard!');\n    }\n  };\n\n  if (!vehicle || !selectedDealer) {\n    return null;\n  }\n\n  const dealerTheme = selectedDealer.theme || {};\n  const availabilityStatus = getAvailabilityStatus(vehicle);\n  const availabilityLabel = getAvailabilityLabel(availabilityStatus);\n  const availabilityColor = getAvailabilityColor(availabilityStatus);\n\n  return (\n    <PageContainer>\n      <Navbar\n        dealerName={selectedDealer.name}\n        dealerLogo={selectedDealer.logo}\n        dealerSlug={selectedDealer.slug}\n        theme={dealerTheme}\n      />\n\n      <Container>\n        <Breadcrumb>\n          <Link to={`/${selectedDealer.slug}`}>Home</Link>\n          <span className=\"separator\">›</span>\n          <Link to={`/${selectedDealer.slug}/vehicles`}>Vehicles</Link>\n          <span className=\"separator\">›</span>\n          <span className=\"current\">\n            {vehicle.year} {vehicle.make} {vehicle.model}\n          </span>\n        </Breadcrumb>\n\n        <VehicleDetailContainer>\n          <VehicleImages>\n            <MainImage>\n              <MainImageContainer\n                src={\n                  vehicle.images\n                    ? vehicle.images[currentImageIndex]\n                    : vehicle.image\n                }\n                alt={vehicle.name}\n              />\n            </MainImage>\n\n            {vehicle.images && vehicle.images.length > 1 && (\n              <ImageThumbnails>\n                {vehicle.images.map((img, index) => (\n                  <Thumbnail\n                    key={index}\n                    src={img}\n                    alt={`${vehicle.name} ${index + 1}`}\n                    active={index === currentImageIndex}\n                    onClick={() => setCurrentImageIndex(index)}\n                  />\n                ))}\n              </ImageThumbnails>\n            )}\n          </VehicleImages>\n\n          <VehicleInfo>\n            <VehicleHeader>\n              <VehicleTitle>\n                {vehicle.year} {vehicle.make} {vehicle.model}\n              </VehicleTitle>\n              <VehicleSubtitle>\n                {vehicle.trim} • {vehicle.condition === 'new' ? 'New' : 'Used'}\n              </VehicleSubtitle>\n            </VehicleHeader>\n\n            <PriceContainer>\n              <CurrentPrice>{formatPrice(vehicle.price)}</CurrentPrice>\n              {vehicle.originalPrice &&\n                vehicle.originalPrice > vehicle.price && (\n                  <>\n                    <OriginalPrice>\n                      {formatPrice(vehicle.originalPrice)}\n                    </OriginalPrice>\n                    <Savings>\n                      Save{' '}\n                      {formatPrice(\n                        calculateSavings(vehicle.originalPrice, vehicle.price)\n                      )}\n                    </Savings>\n                  </>\n                )}\n            </PriceContainer>\n\n            <AvailabilityStatus color={availabilityColor}>\n              <FaCheckCircle />\n              {availabilityLabel}\n              {availabilityStatus === 'in_stock' &&\n                vehicle.stock > 0 &&\n                ` (${vehicle.stock} available)`}\n            </AvailabilityStatus>\n\n            <SpecsGrid>\n              <SpecItem>\n                <FaCalendar className=\"icon\" />\n                <div>\n                  <div className=\"label\">Year</div>\n                  <div className=\"value\">{vehicle.year}</div>\n                </div>\n              </SpecItem>\n              <SpecItem>\n                <FaRoad className=\"icon\" />\n                <div>\n                  <div className=\"label\">Mileage</div>\n                  <div className=\"value\">\n                    {vehicle.mileage === 0\n                      ? 'New'\n                      : `${vehicle.mileage.toLocaleString()} mi`}\n                  </div>\n                </div>\n              </SpecItem>\n              <SpecItem>\n                <FaCar className=\"icon\" />\n                <div>\n                  <div className=\"label\">Engine</div>\n                  <div className=\"value\">\n                    {vehicle.specifications?.engine || 'N/A'}\n                  </div>\n                </div>\n              </SpecItem>\n              <SpecItem>\n                <FaGasPump className=\"icon\" />\n                <div>\n                  <div className=\"label\">Fuel Economy</div>\n                  <div className=\"value\">\n                    {vehicle.specifications?.fuelEconomy ||\n                      vehicle.specifications?.range ||\n                      'N/A'}\n                  </div>\n                </div>\n              </SpecItem>\n            </SpecsGrid>\n\n            <ActionButtons>\n              <PrimaryButton\n                onClick={() => setIsEnquiryModalOpen(true)}\n                disabled={availabilityStatus === 'out_of_stock'}\n              >\n                <FaEnvelope />\n                {availabilityStatus === 'out_of_stock'\n                  ? 'Not Available'\n                  : 'Get Quote'}\n              </PrimaryButton>\n\n              <SecondaryButton>\n                <FaPhone />\n                Call Dealer\n              </SecondaryButton>\n\n              <IconButtonsRow>\n                <IconButton\n                  onClick={handleWishlistToggle}\n                  title=\"Add to Wishlist\"\n                >\n                  <FaHeart\n                    style={{\n                      color: isWishlisted ? theme.colors.error : 'currentColor',\n                    }}\n                  />\n                </IconButton>\n                <IconButton onClick={handleShare} title=\"Share\">\n                  <FaShare />\n                </IconButton>\n                <IconButton\n                  onClick={() => navigate(`/${selectedDealer.slug}/vehicles`)}\n                  title=\"Back to Vehicles\"\n                >\n                  <FaArrowLeft />\n                </IconButton>\n              </IconButtonsRow>\n            </ActionButtons>\n          </VehicleInfo>\n        </VehicleDetailContainer>\n\n        <VehicleDetails>\n          <DetailsSection>\n            <SectionTitle>\n              <FaCar />\n              Description\n            </SectionTitle>\n            <Description>{vehicle.description}</Description>\n          </DetailsSection>\n\n          {vehicle.features && vehicle.features.length > 0 && (\n            <DetailsSection>\n              <SectionTitle>\n                <FaCheckCircle />\n                Key Features\n              </SectionTitle>\n              <FeaturesList>\n                {vehicle.features.map((feature, index) => (\n                  <FeatureItem key={index}>\n                    <FaCheckCircle className=\"icon\" />\n                    {feature}\n                  </FeatureItem>\n                ))}\n              </FeaturesList>\n            </DetailsSection>\n          )}\n\n          {vehicle.specifications && (\n            <DetailsSection>\n              <SectionTitle>\n                <FaCog />\n                Specifications\n              </SectionTitle>\n              <SpecificationsTable>\n                {Object.entries(vehicle.specifications).map(([key, value]) => (\n                  <SpecRow key={key}>\n                    <SpecLabel>\n                      {key.charAt(0).toUpperCase() +\n                        key.slice(1).replace(/([A-Z])/g, ' $1')}\n                    </SpecLabel>\n                    <SpecValue>{value}</SpecValue>\n                  </SpecRow>\n                ))}\n              </SpecificationsTable>\n            </DetailsSection>\n          )}\n        </VehicleDetails>\n\n        {relatedVehicles.length > 0 && (\n          <RelatedVehicles>\n            <SectionTitle>\n              <FaStar />\n              You Might Also Like\n            </SectionTitle>\n            <RelatedGrid>\n              {relatedVehicles.map(relatedVehicle => (\n                <VehicleCard\n                  key={relatedVehicle.vehicleId}\n                  vehicle={relatedVehicle}\n                  dealerSlug={selectedDealer.slug}\n                />\n              ))}\n            </RelatedGrid>\n          </RelatedVehicles>\n        )}\n      </Container>\n\n      <Footer\n        dealerSlug={selectedDealer.slug}\n        dealer={selectedDealer}\n        theme={dealerTheme}\n      />\n      <BackToTop />\n\n      <EnquiryModal\n        isOpen={isEnquiryModalOpen}\n        onClose={() => setIsEnquiryModalOpen(false)}\n        vehicle={vehicle}\n      />\n    </PageContainer>\n  );\n};\n\nexport default VehicleDetail;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/pages/Vehicles.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useCallback } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaFilter, FaSort, FaTh, FaList, FaHome } from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport VehicleCard from '../components/VehicleCard';\nimport BackToTop from '../../ecommerce/components/BackToTop';\nimport {\n  automobileVehicles as vehicles,\n  automobileCategories as categories,\n  getVehiclesByCategory,\n  getAutomobileVendorByIdOrSlug as getVendorByIdOrSlug,\n} from '../../DummyData';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst BackButton = styled.button`\n  position: fixed;\n  top: ${theme.spacing.xl};\n  left: ${theme.spacing.xl};\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  z-index: 1000;\n  box-shadow: ${theme.shadows.md};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n    transform: translateY(-1px);\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n  flex: 1;\n`;\n\nconst PageHeader = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst PageSubtitle = styled.p`\n  font-size: 1.1rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst FilterSection = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst FilterHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n    align-items: stretch;\n  }\n`;\n\nconst FilterTitle = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst ViewToggle = styled.div`\n  display: flex;\n  background: ${theme.colors.gray100};\n  border-radius: ${theme.borderRadius.md};\n  padding: 4px;\n`;\n\nconst ViewButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  background: ${props => (props.active ? theme.colors.white : 'transparent')};\n  border: none;\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.sm};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  color: ${props =>\n    props.active ? theme.colors.primary : theme.colors.gray600};\n  box-shadow: ${props => (props.active ? theme.shadows.sm : 'none')};\n`;\n\nconst FilterGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst FilterGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n`;\n\nconst FilterLabel = styled.label`\n  font-weight: 500;\n  color: ${theme.colors.gray700};\n  font-size: 0.9rem;\n`;\n\nconst Select = styled.select`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.white};\n  cursor: pointer;\n  font-size: 0.9rem;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst PriceRangeContainer = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n  align-items: center;\n`;\n\nconst PriceInput = styled.input`\n  padding: ${theme.spacing.sm};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  width: 100px;\n  font-size: 0.9rem;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst ResultsHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n    align-items: stretch;\n  }\n`;\n\nconst ResultsCount = styled.h2`\n  font-size: 1.3rem;\n  color: ${theme.colors.gray900};\n  font-weight: 600;\n`;\n\nconst SortContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n`;\n\nconst VehiclesGrid = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'viewMode',\n})`\n  display: grid;\n  grid-template-columns: ${props =>\n    props.viewMode === 'list'\n      ? '1fr'\n      : 'repeat(auto-fill, minmax(350px, 1fr))'};\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: ${theme.spacing.lg};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray900};\n  }\n\n  p {\n    font-size: 1rem;\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst ClearFiltersButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.sm} ${theme.spacing.lg};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n  }\n`;\n\nconst Vehicles = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [selectedDealer, setSelectedDealer] = useState(null);\n  const [filteredVehicles, setFilteredVehicles] = useState(vehicles);\n  const [filters, setFilters] = useState({\n    category: searchParams.get('category') || '',\n    make: searchParams.get('make') || '',\n    condition: searchParams.get('condition') || '',\n    minPrice: searchParams.get('minPrice') || '',\n    maxPrice: searchParams.get('maxPrice') || '',\n    sortBy: searchParams.get('sort') || 'name',\n  });\n  const [viewMode, setViewMode] = useState('grid');\n\n  const makes = [...new Set(vehicles.map(v => v.make))].sort();\n  const conditions = [...new Set(vehicles.map(v => v.condition))].sort();\n\n  useEffect(() => {\n    // Get dealer data from URL\n    const path = location.pathname;\n    let dealer = null;\n\n    if (path !== '/automobiles/vehicles') {\n      const pathSegments = path.split('/').filter(Boolean);\n      const dealerSlug = pathSegments[0];\n      dealer = getVendorByIdOrSlug(dealerSlug);\n    }\n\n    if (dealer) {\n      setSelectedDealer(dealer);\n    } else {\n      // If no dealer found, redirect to dealer listing\n      navigate('/auto-dealers');\n      return;\n    }\n  }, [location.pathname, navigate]);\n\n  const applyFilters = useCallback(() => {\n    let filtered = [...vehicles];\n\n    // Category filter\n    if (filters.category) {\n      filtered = getVehiclesByCategory(filters.category);\n    }\n\n    // Make filter\n    if (filters.make) {\n      filtered = filtered.filter(v => v.make === filters.make);\n    }\n\n    // Condition filter\n    if (filters.condition) {\n      filtered = filtered.filter(v => v.condition === filters.condition);\n    }\n\n    // Price range filter\n    if (filters.minPrice) {\n      filtered = filtered.filter(v => v.price >= parseInt(filters.minPrice));\n    }\n    if (filters.maxPrice) {\n      filtered = filtered.filter(v => v.price <= parseInt(filters.maxPrice));\n    }\n\n    // Sort\n    switch (filters.sortBy) {\n      case 'price-low':\n        filtered.sort((a, b) => a.price - b.price);\n        break;\n      case 'price-high':\n        filtered.sort((a, b) => b.price - a.price);\n        break;\n      case 'year-new':\n        filtered.sort((a, b) => b.year - a.year);\n        break;\n      case 'year-old':\n        filtered.sort((a, b) => a.year - b.year);\n        break;\n      case 'name':\n      default:\n        filtered.sort((a, b) => a.name.localeCompare(b.name));\n        break;\n    }\n\n    setFilteredVehicles(filtered);\n  }, [filters]);\n\n  useEffect(() => {\n    applyFilters();\n  }, [applyFilters]);\n\n  const handleFilterChange = (key, value) => {\n    const newFilters = { ...filters, [key]: value };\n    setFilters(newFilters);\n\n    // Update URL params\n    const newParams = new URLSearchParams();\n    Object.entries(newFilters).forEach(([k, v]) => {\n      if (v) newParams.set(k, v);\n    });\n    setSearchParams(newParams);\n  };\n\n  const clearFilters = () => {\n    const clearedFilters = {\n      category: '',\n      make: '',\n      condition: '',\n      minPrice: '',\n      maxPrice: '',\n      sortBy: 'name',\n    };\n    setFilters(clearedFilters);\n    setSearchParams({});\n  };\n\n  const handleBackToDealer = () => {\n    if (selectedDealer) {\n      navigate(`/${selectedDealer.slug}`);\n    } else {\n      navigate('/auto-dealers');\n    }\n  };\n\n  if (!selectedDealer) {\n    return null; // Will redirect\n  }\n\n  const dealerTheme = selectedDealer.theme || {};\n\n  return (\n    <PageContainer>\n      <BackButton onClick={handleBackToDealer}>\n        <FaHome />\n        Back to {selectedDealer.name}\n      </BackButton>\n\n      <Navbar\n        dealerName={selectedDealer.name}\n        dealerLogo={selectedDealer.logo}\n        dealerSlug={selectedDealer.slug}\n        theme={dealerTheme}\n      />\n\n      <Container>\n        <PageHeader>\n          <PageTitle>Vehicle Inventory</PageTitle>\n          <PageSubtitle>\n            Browse our complete selection of vehicles at {selectedDealer.name}\n          </PageSubtitle>\n        </PageHeader>\n\n        <FilterSection>\n          <FilterHeader>\n            <FilterTitle>\n              <FaFilter />\n              Filter & Search\n            </FilterTitle>\n            <ViewToggle>\n              <ViewButton\n                active={viewMode === 'grid'}\n                onClick={() => setViewMode('grid')}\n              >\n                <FaTh />\n                Grid\n              </ViewButton>\n              <ViewButton\n                active={viewMode === 'list'}\n                onClick={() => setViewMode('list')}\n              >\n                <FaList />\n                List\n              </ViewButton>\n            </ViewToggle>\n          </FilterHeader>\n\n          <FilterGrid>\n            <FilterGroup>\n              <FilterLabel>Category</FilterLabel>\n              <Select\n                value={filters.category}\n                onChange={e => handleFilterChange('category', e.target.value)}\n              >\n                <option value=\"\">All Categories</option>\n                {categories.map(cat => (\n                  <option key={cat.id} value={cat.slug}>\n                    {cat.name}\n                  </option>\n                ))}\n              </Select>\n            </FilterGroup>\n\n            <FilterGroup>\n              <FilterLabel>Make</FilterLabel>\n              <Select\n                value={filters.make}\n                onChange={e => handleFilterChange('make', e.target.value)}\n              >\n                <option value=\"\">All Makes</option>\n                {makes.map(make => (\n                  <option key={make} value={make}>\n                    {make}\n                  </option>\n                ))}\n              </Select>\n            </FilterGroup>\n\n            <FilterGroup>\n              <FilterLabel>Condition</FilterLabel>\n              <Select\n                value={filters.condition}\n                onChange={e => handleFilterChange('condition', e.target.value)}\n              >\n                <option value=\"\">All Conditions</option>\n                {conditions.map(condition => (\n                  <option key={condition} value={condition}>\n                    {condition.charAt(0).toUpperCase() + condition.slice(1)}\n                  </option>\n                ))}\n              </Select>\n            </FilterGroup>\n\n            <FilterGroup>\n              <FilterLabel>Price Range</FilterLabel>\n              <PriceRangeContainer>\n                <PriceInput\n                  type=\"number\"\n                  placeholder=\"Min\"\n                  value={filters.minPrice}\n                  onChange={e => handleFilterChange('minPrice', e.target.value)}\n                />\n                <span>-</span>\n                <PriceInput\n                  type=\"number\"\n                  placeholder=\"Max\"\n                  value={filters.maxPrice}\n                  onChange={e => handleFilterChange('maxPrice', e.target.value)}\n                />\n              </PriceRangeContainer>\n            </FilterGroup>\n          </FilterGrid>\n\n          {Object.values(filters).some(v => v && v !== 'name') && (\n            <div style={{ marginTop: theme.spacing.lg, textAlign: 'center' }}>\n              <ClearFiltersButton onClick={clearFilters}>\n                Clear All Filters\n              </ClearFiltersButton>\n            </div>\n          )}\n        </FilterSection>\n\n        <ResultsHeader>\n          <ResultsCount>\n            {filteredVehicles.length} Vehicle\n            {filteredVehicles.length !== 1 ? 's' : ''} Found\n          </ResultsCount>\n          <SortContainer>\n            <FaSort />\n            <Select\n              value={filters.sortBy}\n              onChange={e => handleFilterChange('sortBy', e.target.value)}\n            >\n              <option value=\"name\">Sort by Name</option>\n              <option value=\"price-low\">Price: Low to High</option>\n              <option value=\"price-high\">Price: High to Low</option>\n              <option value=\"year-new\">Year: Newest First</option>\n              <option value=\"year-old\">Year: Oldest First</option>\n            </Select>\n          </SortContainer>\n        </ResultsHeader>\n\n        {filteredVehicles.length > 0 ? (\n          <VehiclesGrid viewMode={viewMode}>\n            {filteredVehicles.map(vehicle => (\n              <VehicleCard\n                key={vehicle.id}\n                vehicle={vehicle}\n                dealerSlug={selectedDealer.slug}\n              />\n            ))}\n          </VehiclesGrid>\n        ) : (\n          <EmptyState>\n            <h3>No vehicles found</h3>\n            <p>\n              Try adjusting your filters or search criteria to find more\n              vehicles.\n            </p>\n            <ClearFiltersButton onClick={clearFilters}>\n              Clear All Filters\n            </ClearFiltersButton>\n          </EmptyState>\n        )}\n      </Container>\n\n      <Footer\n        dealerSlug={selectedDealer.slug}\n        dealer={selectedDealer}\n        theme={dealerTheme}\n      />\n      <BackToTop />\n    </PageContainer>\n  );\n};\n\nexport default Vehicles;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/automobiles/pages/Wishlist.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":224,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":226,"endColumn":8},{"ruleId":"no-unused-vars","severity":1,"message":"'vehicleId' is defined but never used. Allowed unused args must match /^_/u.","line":233,"column":32,"nodeType":"Identifier","messageId":"unusedVar","endLine":233,"endColumn":41}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaHeart, FaHome, FaTrash } from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport VehicleCard from '../components/VehicleCard';\nimport BackToTop from '../../ecommerce/components/BackToTop';\nimport {\n  getVehicleById,\n  getAutomobileVendorByIdOrSlug as getVendorByIdOrSlug,\n} from '../../DummyData';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst BackButton = styled.button`\n  position: fixed;\n  top: ${theme.spacing.xl};\n  left: ${theme.spacing.xl};\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  z-index: 1000;\n  box-shadow: ${theme.shadows.md};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n    transform: translateY(-1px);\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n  flex: 1;\n`;\n\nconst PageHeader = styled.div`\n  text-align: center;\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.md};\n`;\n\nconst PageSubtitle = styled.p`\n  font-size: 1.1rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst WishlistActions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.xl};\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst WishlistCount = styled.h2`\n  font-size: 1.3rem;\n  color: ${theme.colors.gray900};\n  font-weight: 600;\n`;\n\nconst ClearAllButton = styled.button`\n  background: ${theme.colors.error};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.sm} ${theme.spacing.lg};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    background: ${theme.colors.errorDark || '#dc2626'};\n    transform: translateY(-1px);\n  }\n\n  &:disabled {\n    background: ${theme.colors.gray400};\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst VehiclesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: ${theme.spacing.lg};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n\n  .icon {\n    font-size: 4rem;\n    color: ${theme.colors.gray400};\n    margin-bottom: ${theme.spacing.lg};\n  }\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray900};\n  }\n\n  p {\n    font-size: 1rem;\n    margin-bottom: ${theme.spacing.lg};\n    max-width: 400px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nconst BrowseButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  margin: 0 auto;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-1px);\n  }\n`;\n\nconst Wishlist = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [selectedDealer, setSelectedDealer] = useState(null);\n  const [wishlistedVehicles, setWishlistedVehicles] = useState([]);\n\n  useEffect(() => {\n    // Get dealer data from URL\n    const path = location.pathname;\n    let dealer = null;\n\n    if (path !== '/automobiles/wishlist') {\n      const pathSegments = path.split('/').filter(Boolean);\n      const dealerSlug = pathSegments[0];\n      dealer = getVendorByIdOrSlug(dealerSlug);\n    }\n\n    if (dealer) {\n      setSelectedDealer(dealer);\n    } else {\n      // If no dealer found, redirect to dealer listing\n      navigate('/auto-dealers');\n      return;\n    }\n\n    // Load wishlist\n    loadWishlist();\n  }, [location.pathname, navigate]);\n\n  const loadWishlist = () => {\n    const wishlist = JSON.parse(\n      localStorage.getItem('vehicleWishlist') || '[]'\n    );\n    const vehicles = wishlist.map(id => getVehicleById(id)).filter(Boolean);\n    setWishlistedVehicles(vehicles);\n  };\n\n  const handleClearAll = () => {\n    if (\n      window.confirm(\n        'Are you sure you want to remove all vehicles from your wishlist?'\n      )\n    ) {\n      localStorage.setItem('vehicleWishlist', JSON.stringify([]));\n      setWishlistedVehicles([]);\n    }\n  };\n\n  const handleVehicleRemoved = vehicleId => {\n    // This will be called when a vehicle is removed from wishlist via VehicleCard\n    loadWishlist();\n  };\n\n  const handleBackToDealer = () => {\n    if (selectedDealer) {\n      navigate(`/${selectedDealer.slug}`);\n    } else {\n      navigate('/auto-dealers');\n    }\n  };\n\n  if (!selectedDealer) {\n    return null; // Will redirect\n  }\n\n  const dealerTheme = selectedDealer.theme || {};\n\n  return (\n    <PageContainer>\n      <BackButton onClick={handleBackToDealer}>\n        <FaHome />\n        Back to {selectedDealer.name}\n      </BackButton>\n\n      <Navbar\n        dealerName={selectedDealer.name}\n        dealerLogo={selectedDealer.logo}\n        dealerSlug={selectedDealer.slug}\n        theme={dealerTheme}\n      />\n\n      <Container>\n        <PageHeader>\n          <PageTitle>\n            <FaHeart />\n            My Wishlist\n          </PageTitle>\n          <PageSubtitle>\n            Keep track of your favorite vehicles from {selectedDealer.name}\n          </PageSubtitle>\n        </PageHeader>\n\n        {wishlistedVehicles.length > 0 ? (\n          <>\n            <WishlistActions>\n              <WishlistCount>\n                {wishlistedVehicles.length} Vehicle\n                {wishlistedVehicles.length !== 1 ? 's' : ''} in Wishlist\n              </WishlistCount>\n              <ClearAllButton onClick={handleClearAll}>\n                <FaTrash />\n                Clear All\n              </ClearAllButton>\n            </WishlistActions>\n\n            <VehiclesGrid>\n              {wishlistedVehicles.map(vehicle => (\n                <VehicleCard\n                  key={vehicle.id}\n                  vehicle={vehicle}\n                  dealerSlug={selectedDealer.slug}\n                  isInWishlist={true}\n                  onToggleWishlist={() => handleVehicleRemoved(vehicle.id)}\n                />\n              ))}\n            </VehiclesGrid>\n          </>\n        ) : (\n          <EmptyState>\n            <FaHeart className=\"icon\" />\n            <h3>Your Wishlist is Empty</h3>\n            <p>\n              Start browsing our vehicle inventory to add your favorite cars to\n              your wishlist. We'll keep them saved here for you!\n            </p>\n            <BrowseButton\n              onClick={() => navigate(`/${selectedDealer.slug}/vehicles`)}\n            >\n              Browse Vehicles\n            </BrowseButton>\n          </EmptyState>\n        )}\n      </Container>\n\n      <Footer\n        dealerSlug={selectedDealer.slug}\n        dealer={selectedDealer}\n        theme={dealerTheme}\n      />\n      <BackToTop />\n    </PageContainer>\n  );\n};\n\nexport default Wishlist;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/business/index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'useLocation' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport BusinessWebsitePage from './pages/BusinessWebsitePage';\n\nconst BusinessModule = () => {\n  return <BusinessWebsitePage />;\n};\n\nexport default BusinessModule;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/business/pages/BuisnessAdminDashboard.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'FaGlobe' is defined but never used.","line":25,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":25,"endColumn":10},{"ruleId":"no-unused-vars","severity":1,"message":"'FaEnvelope' is defined but never used.","line":27,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":27,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'FaMapMarkerAlt' is defined but never used.","line":28,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":28,"endColumn":17},{"ruleId":"no-unused-vars","severity":1,"message":"'FaChevronRight' is defined but never used.","line":30,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":30,"endColumn":17},{"ruleId":"no-unused-vars","severity":1,"message":"'FaCheck' is defined but never used.","line":33,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":33,"endColumn":10},{"ruleId":"no-unused-vars","severity":1,"message":"'FaLock' is defined but never used.","line":35,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":35,"endColumn":9},{"ruleId":"no-unused-vars","severity":1,"message":"'FaQuoteLeft' is defined but never used.","line":39,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":39,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'FaVideo' is defined but never used.","line":42,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":42,"endColumn":10},{"ruleId":"no-unused-vars","severity":1,"message":"'FaLink' is defined but never used.","line":45,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":45,"endColumn":9},{"ruleId":"no-unused-vars","severity":1,"message":"'FaCopy' is defined but never used.","line":46,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":46,"endColumn":9},{"ruleId":"no-unused-vars","severity":1,"message":"'FaPalette' is defined but never used.","line":49,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":49,"endColumn":12},{"ruleId":"no-unused-vars","severity":1,"message":"'FaCalendarAlt' is defined but never used.","line":51,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":51,"endColumn":16},{"ruleId":"no-unused-vars","severity":1,"message":"'updateBusinessImage' is defined but never used.","line":62,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":62,"endColumn":22},{"ruleId":"no-unused-vars","severity":1,"message":"'updateBusinessGallery' is defined but never used.","line":63,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":63,"endColumn":24},{"ruleId":"no-unused-vars","severity":1,"message":"'updateBusinessServices' is defined but never used.","line":64,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":64,"endColumn":25},{"ruleId":"no-unused-vars","severity":1,"message":"'updateBusinessTestimonials' is defined but never used.","line":65,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":65,"endColumn":29},{"ruleId":"no-unused-vars","severity":1,"message":"'updateBusinessPackages' is defined but never used.","line":66,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":66,"endColumn":25},{"ruleId":"no-unused-vars","severity":1,"message":"'updateBusinessPortfolio' is defined but never used.","line":67,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":67,"endColumn":26},{"ruleId":"no-unused-vars","severity":1,"message":"'updateBusinessSkills' is defined but never used.","line":68,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":68,"endColumn":23},{"ruleId":"no-unused-vars","severity":1,"message":"'updateBusinessExperience' is defined but never used.","line":69,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":69,"endColumn":27},{"ruleId":"no-unused-vars","severity":1,"message":"'updateBusinessTeam' is defined but never used.","line":70,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":70,"endColumn":21},{"ruleId":"no-unused-vars","severity":1,"message":"'updateBusinessCustomSections' is defined but never used.","line":71,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":71,"endColumn":31},{"ruleId":"no-unused-vars","severity":1,"message":"'toggleBusinessSectionVisibility' is defined but never used.","line":74,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":74,"endColumn":34},{"ruleId":"no-unused-vars","severity":1,"message":"'SidebarFooter' is assigned a value but never used.","line":213,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":213,"endColumn":20},{"ruleId":"no-unused-vars","severity":1,"message":"'SidebarFooterContent' is assigned a value but never used.","line":223,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":223,"endColumn":27},{"ruleId":"no-unused-vars","severity":1,"message":"'user' is assigned a value but never used.","line":711,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":711,"endColumn":15},{"ruleId":"no-unused-vars","severity":1,"message":"'apiLoading' is assigned a value but never used.","line":729,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":729,"endColumn":20},{"ruleId":"no-unused-vars","severity":1,"message":"'apiError' is assigned a value but never used.","line":730,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":730,"endColumn":18},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":883,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":883,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[21466,21575],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":888,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":888,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[21604,21707],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'editingBusiness' and 'updateEditingBusinessInRedux'. Either include them or remove the dependency array.","line":900,"column":6,"nodeType":"ArrayExpression","endLine":900,"endColumn":21,"suggestions":[{"desc":"Update the dependencies array to be: [editingBusiness, uiContentData, updateEditingBusinessInRedux]","fix":{"range":[21902,21917],"text":"[editingBusiness, uiContentData, updateEditingBusinessInRedux]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'editingBusiness' and 'updateEditingBusinessInRedux'. Either include them or remove the dependency array.","line":907,"column":6,"nodeType":"ArrayExpression","endLine":907,"endColumn":22,"suggestions":[{"desc":"Update the dependencies array to be: [editingBusiness, statisticsData, updateEditingBusinessInRedux]","fix":{"range":[22109,22125],"text":"[editingBusiness, statisticsData, updateEditingBusinessInRedux]"}}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1026,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1026,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[24689,24785],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1034,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1034,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[24935,25003],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1037,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1037,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[25071,25168],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1058,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1058,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[25825,25881],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1185,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1185,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[30103,30174],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1204,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1204,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[30662,30702],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1212,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":1214,"endColumn":8},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1215,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1215,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[31033,31095],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1217,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1217,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[31124,31182],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1218,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":1218,"endColumn":67},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1224,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1224,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[31368,31410],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1227,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":1227,"endColumn":76},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1232,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1232,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[31554,31596],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1236,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":1236,"endColumn":73},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1241,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1241,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[31837,31883],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1242,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":1242,"endColumn":55},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1275,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":1275,"endColumn":69},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1277,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1277,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[33008,33058],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1278,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":1278,"endColumn":59}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":52,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport {\n  FaArrowLeft,\n  FaUser,\n  FaImages,\n  FaCog,\n  FaServicestack,\n  FaBriefcase,\n  FaAddressCard,\n  FaQuestionCircle,\n  FaComments,\n  FaDollarSign,\n  FaUpload,\n  FaTrash,\n  FaPlus,\n  FaEdit,\n  FaSave,\n  FaTimes,\n  FaExternalLinkAlt,\n  FaEye,\n  FaCamera,\n  FaGlobe,\n  FaPhone,\n  FaEnvelope,\n  FaMapMarkerAlt,\n  FaStar,\n  FaChevronRight,\n  FaChevronUp,\n  FaChevronDown,\n  FaCheck,\n  FaBars,\n  FaLock,\n  FaGripHorizontal,\n  FaTextHeight,\n  FaList,\n  FaQuoteLeft,\n  FaUndo,\n  FaCheckCircle,\n  FaVideo,\n  FaEyeSlash,\n  FaFileImage,\n  FaLink,\n  FaCopy,\n  FaUsers,\n  FaChartBar,\n  FaPalette,\n  FaClock,\n  FaCalendarAlt,\n  FaRandom,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport { getBusinessTemplate } from '../../DummyData';\nimport { fetchBusinessData } from '../../utils/businessAPI';\nimport { useAuth } from '../../context/AuthContext';\nimport {\n  setEditingBusiness,\n  initializeBusiness,\n  updateBusinessField,\n  updateBusinessImage,\n  updateBusinessGallery,\n  updateBusinessServices,\n  updateBusinessTestimonials,\n  updateBusinessPackages,\n  updateBusinessPortfolio,\n  updateBusinessSkills,\n  updateBusinessExperience,\n  updateBusinessTeam,\n  updateBusinessCustomSections,\n  saveBusinessChanges,\n  discardBusinessChanges,\n  toggleBusinessSectionVisibility,\n} from '../../store/slices/businessManagementSlice';\n\nconst DashboardContainer = styled.div`\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n  display: flex;\n`;\n\nconst MobileSidebarCloseButton = styled.button`\n  display: none;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    display: flex;\n    position: absolute;\n    top: ${theme.spacing.lg};\n    right: ${theme.spacing.lg};\n    background: none;\n    border: none;\n    color: white;\n    font-size: 1.5rem;\n    cursor: pointer;\n    z-index: 1001;\n    padding: ${theme.spacing.sm};\n    border-radius: ${theme.borderRadius.md};\n    align-items: center;\n    justify-content: center;\n    transition: all 0.2s ease;\n\n    &:hover {\n      background: rgba(255, 255, 255, 0.1);\n    }\n  }\n`;\n\nconst Sidebar = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'mobileOpen',\n})`\n  width: 280px;\n  background: ${theme.colors.white};\n  border-right: 1px solid ${theme.colors.gray200};\n  box-shadow: ${theme.shadows.md};\n  position: fixed;\n  height: 100vh;\n  overflow-y: auto;\n  z-index: 100;\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    width: 260px;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    width: 100%;\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 100vh;\n    z-index: 1000;\n    transform: translateX(${props => (props.mobileOpen ? '0' : '-100%')});\n    transition: transform 0.3s ease;\n    overflow-y: auto;\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst SidebarHeader = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.primary};\n  color: white;\n  flex-shrink: 0;\n`;\n\nconst BusinessName = styled.h2`\n  margin: 0 0 ${theme.spacing.xs} 0;\n  font-size: 1.3rem;\n  font-weight: 700;\n`;\n\nconst BusinessRole = styled.p`\n  margin: 0;\n  font-size: 0.9rem;\n  opacity: 0.9;\n`;\n\nconst SidebarNav = styled.nav`\n  padding: ${theme.spacing.lg} 0;\n  flex: 1;\n  overflow-y: auto;\n  min-height: 0;\n`;\n\nconst NavSection = styled.div`\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst NavSectionTitle = styled.h3`\n  font-size: 0.8rem;\n  font-weight: 600;\n  color: ${theme.colors.gray500};\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  padding: 0 ${theme.spacing.lg};\n  margin: 0 0 ${theme.spacing.sm} 0;\n`;\n\nconst NavItem = styled.button.withConfig({\n  shouldForwardProp: prop => !['active'].includes(prop),\n})`\n  width: 100%;\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  background: none;\n  border: none;\n  text-align: left;\n  cursor: pointer;\n  font-size: 0.95rem;\n  color: ${props =>\n    props.active ? theme.colors.primary : theme.colors.gray700};\n  background: ${props =>\n    props.active ? theme.colors.primary + '10' : 'transparent'};\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  border-left: 3px solid\n    ${props => (props.active ? theme.colors.primary : 'transparent')};\n\n  &:hover {\n    background: ${theme.colors.gray50};\n    color: ${theme.colors.primary};\n  }\n\n  svg {\n    font-size: 1rem;\n  }\n`;\n\nconst SidebarFooter = styled.div`\n  border-top: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.gray50};\n  flex-shrink: 0;\n  max-height: 350px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SidebarFooterContent = styled.div`\n  padding: ${theme.spacing.lg};\n  flex: 1;\n  min-height: 0;\n`;\n\nconst SaveActionsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.md};\n`;\n\nconst SaveButton = styled.button.withConfig({\n  shouldForwardProp: prop => !['variant', 'disabled', 'saved'].includes(prop),\n})`\n  background: ${props => {\n    if (props.disabled) {\n      return props.saved ? theme.colors.success : theme.colors.gray300;\n    }\n    return props.variant === 'primary'\n      ? `linear-gradient(135deg, ${theme.colors.primary}, ${theme.colors.primaryDark})`\n      : props.variant === 'secondary'\n        ? theme.colors.gray300\n        : theme.colors.white;\n  }};\n  color: ${props => {\n    if (props.disabled) {\n      return props.saved ? 'white' : theme.colors.gray500;\n    }\n    return props.variant === 'primary'\n      ? 'white'\n      : props.variant === 'secondary'\n        ? theme.colors.gray700\n        : theme.colors.gray700;\n  }};\n  border: ${props =>\n    props.variant === 'primary'\n      ? 'none'\n      : `2px solid ${props.disabled && props.saved ? theme.colors.success : theme.colors.gray300}`};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: ${props => (props.disabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n  transition: all 0.3s ease;\n  font-size: 0.9rem;\n  white-space: nowrap;\n  width: 100%;\n\n  &:hover {\n    transform: ${props => (props.disabled ? 'none' : 'translateY(-1px)')};\n    box-shadow: ${props => (props.disabled ? 'none' : theme.shadows.md)};\n  }\n`;\n\nconst ChangesIndicator = styled.div`\n  color: ${theme.colors.warning};\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  font-size: 0.85rem;\n  margin-bottom: ${theme.spacing.sm};\n  justify-content: center;\n`;\n\nconst MobileMenuButton = styled.button`\n  display: none;\n  position: fixed;\n  top: ${theme.spacing.lg};\n  left: ${theme.spacing.lg};\n  z-index: 1001;\n  background: ${theme.colors.primary};\n  color: white;\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  padding: ${theme.spacing.sm};\n  font-size: 1.25rem;\n  cursor: pointer;\n  box-shadow: ${theme.shadows.md};\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: scale(1.05);\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nconst MobileSidebarOverlay = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  display: none;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    display: block;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.2);\n    z-index: 999;\n    opacity: ${props => (props.isOpen ? '1' : '0')};\n    visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n    transition:\n      opacity 0.3s ease,\n      visibility 0.3s ease;\n  }\n`;\n\nconst MainContent = styled.div`\n  flex: 1;\n  margin-left: 280px;\n  padding: ${theme.spacing.xl};\n  min-height: 100vh;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    margin-left: 260px;\n    padding: ${theme.spacing.lg};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    margin-left: 0;\n    padding: ${theme.spacing.md};\n    padding-top: 4rem;\n  }\n`;\n\nconst ContentHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.xxl};\n  padding-bottom: ${theme.spacing.lg};\n  border-bottom: 1px solid ${theme.colors.gray200};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin: 0;\n  flex: 1;\n`;\n\nconst PageActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  align-items: center;\n  flex-wrap: wrap;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    width: 100%;\n    justify-content: flex-start;\n  }\n`;\n\nconst ActionButton = styled.button.withConfig({\n  shouldForwardProp: prop => !['variant'].includes(prop),\n})`\n  background: ${props =>\n    props.variant === 'primary'\n      ? theme.colors.primary\n      : props.variant === 'success'\n        ? theme.colors.green500\n        : props.variant === 'danger'\n          ? theme.colors.error\n          : theme.colors.white};\n  color: ${props =>\n    props.variant === 'primary' ||\n    props.variant === 'success' ||\n    props.variant === 'danger'\n      ? 'white'\n      : theme.colors.gray700};\n  border: 2px solid\n    ${props =>\n      props.variant === 'primary'\n        ? theme.colors.primary\n        : props.variant === 'success'\n          ? theme.colors.green500\n          : props.variant === 'danger'\n            ? theme.colors.error\n            : theme.colors.gray200};\n  padding: ${theme.spacing.sm} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n\n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: ${theme.shadows.md};\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.xs} ${theme.spacing.md};\n    font-size: 0.9rem;\n    gap: ${theme.spacing.xs};\n    white-space: nowrap;\n\n    &:hover {\n      transform: none;\n    }\n  }\n`;\n\nconst ContentSection = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xxl};\n  box-shadow: ${theme.shadows.sm};\n  margin-bottom: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg};\n    margin-bottom: ${theme.spacing.lg};\n    border-radius: ${theme.borderRadius.md};\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.lg} 0;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst VisibilityToggleContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  font-size: 0.9rem;\n  color: ${theme.colors.gray700};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    width: 100%;\n    justify-content: space-between;\n  }\n`;\n\nconst FormGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.md};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n`;\n\nconst FormLabel = styled.label`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  font-size: 0.95rem;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst FormInput = styled.input`\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n\nconst FormTextarea = styled.textarea`\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  min-height: 120px;\n  resize: vertical;\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n\nconst ToggleSwitch = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 50px;\n  height: 24px;\n  margin-left: auto;\n\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  span {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: ${theme.colors.gray300};\n    transition: 0.4s;\n    border-radius: 24px;\n\n    &:before {\n      position: absolute;\n      content: '';\n      height: 18px;\n      width: 18px;\n      left: 3px;\n      bottom: 3px;\n      background-color: white;\n      transition: 0.4s;\n      border-radius: 50%;\n    }\n  }\n\n  input:checked + span {\n    background-color: ${theme.colors.primary};\n  }\n\n  input:checked + span:before {\n    transform: translateX(26px);\n  }\n`;\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.md};\n`;\n\nconst ListItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: ${theme.spacing.lg};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.gray50};\n\n  .item-info {\n    flex: 1;\n    min-width: 0;\n\n    h4 {\n      font-weight: 600;\n      color: ${theme.colors.gray900};\n      margin-bottom: ${theme.spacing.xs};\n    }\n\n    p {\n      color: ${theme.colors.gray600};\n      font-size: 0.9rem;\n      margin-bottom: ${theme.spacing.xs};\n    }\n\n    .item-meta {\n      font-size: 0.8rem;\n      color: ${theme.colors.gray500};\n    }\n  }\n\n  .item-actions {\n    display: flex;\n    gap: ${theme.spacing.sm};\n    flex-shrink: 0;\n    margin-left: ${theme.spacing.md};\n  }\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: ${theme.spacing.md};\n\n    .item-actions {\n      width: 100%;\n      justify-content: flex-end;\n      margin-left: 0;\n    }\n  }\n`;\n\nconst AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  background: ${theme.colors.primary};\n  color: white;\n  border: none;\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  margin-bottom: ${theme.spacing.lg};\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-1px);\n  }\n`;\n\nconst ItemButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  background: ${props =>\n    props.variant === 'danger' ? theme.colors.error : theme.colors.white};\n  color: ${props =>\n    props.variant === 'danger' ? 'white' : theme.colors.gray700};\n  border: 1px solid\n    ${props =>\n      props.variant === 'danger' ? theme.colors.error : theme.colors.gray300};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${props =>\n      props.variant === 'danger' ? '#dc2626' : theme.colors.gray50};\n  }\n`;\n\nconst BuisnessAdminDashboard = () => {\n  const { businessSlug, slug } = useParams();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n\n  // Support both businessSlug (legacy routes) and slug (new optimized routes)\n  const actualSlug = businessSlug || slug;\n\n  // Redux state\n  const { editingBusiness, hasUnsavedChanges, originalBusiness } = useSelector(\n    state => state.businessManagement\n  );\n\n  // Get business ID from URL path\n  const currentPath = window.location.pathname;\n  const pathSegments = currentPath.split('/').filter(Boolean);\n  const businessId = actualSlug || pathSegments[0];\n\n  const [business, setBusiness] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [apiLoading, setApiLoading] = useState(false);\n  const [apiError, setApiError] = useState(null);\n  const [activeSection, setActiveSection] = useState('hero');\n  const [mobileSidebarOpen, setMobileSidebarOpen] = useState(false);\n  const [saved, setSaved] = useState(false);\n  const [changedSections, setChangedSections] = useState(new Set());\n\n  // Local form states\n  const [heroData, setHeroData] = useState({\n    title: '',\n    subtitle: '',\n    backgroundImage: '',\n  });\n\n  const [aboutData, setAboutData] = useState({\n    title: '',\n    description: '',\n    profileImage: '',\n  });\n\n  const [servicesData, setServicesData] = useState([]);\n  const [teamData, setTeamData] = useState([]);\n  const [portfolioData, setPortfolioData] = useState([]);\n  const [skillsData, setSkillsData] = useState([]);\n  const [experienceData, setExperienceData] = useState([]);\n  const [galleryData, setGalleryData] = useState([]);\n  const [packagesData, setPackagesData] = useState([]);\n  const [testimonialsData, setTestimonialsData] = useState([]);\n  const [reviewsData, setReviewsData] = useState([]);\n  const [faqData, setFaqData] = useState([]);\n  const [contactData, setContactData] = useState({\n    title: 'Get In Touch',\n    description: '',\n    email: '',\n    phone: '',\n    address: '',\n    hours: {\n      monday: '9:00 AM - 6:00 PM',\n      tuesday: '9:00 AM - 6:00 PM',\n      wednesday: '9:00 AM - 6:00 PM',\n      thursday: '9:00 AM - 6:00 PM',\n      friday: '9:00 AM - 6:00 PM',\n      saturday: '10:00 AM - 4:00 PM',\n      sunday: 'Closed',\n    },\n    socialMedia: {\n      facebook: '',\n      twitter: '',\n      instagram: '',\n      linkedin: '',\n    },\n  });\n  const [businessHoursData, setBusinessHoursData] = useState({\n    title: 'Business Hours',\n    hours: {\n      monday: '9:00 AM - 6:00 PM',\n      tuesday: '9:00 AM - 6:00 PM',\n      wednesday: '9:00 AM - 6:00 PM',\n      thursday: '9:00 AM - 6:00 PM',\n      friday: '9:00 AM - 6:00 PM',\n      saturday: '10:00 AM - 4:00 PM',\n      sunday: 'Closed',\n    },\n  });\n  const [customSectionsData, setCustomSectionsData] = useState([]);\n  const [sectionOrderData, setSectionOrderData] = useState([]);\n  const [uiContentData, setUiContentData] = useState({\n    sections: {},\n    buttons: {},\n    contactForm: { placeholders: {} },\n    businessHours: {},\n  });\n  const [statisticsData, setStatisticsData] = useState([]);\n\n  // Section visibility state\n  const [sectionVisibility, setSectionVisibility] = useState({\n    hero: true,\n    'about-us': true,\n    'services-offered': true,\n    portfolio: true,\n    skills: true,\n    experience: true,\n    team: true,\n    gallery: true,\n    packages: true,\n    testimonials: true,\n    reviews: true,\n    faq: true,\n    'business-hours': true,\n    contact: true,\n  });\n\n  // Track changes in a section and update Redux editing business for real-time preview\n  const trackSectionChange = sectionId => {\n    setChangedSections(prev => new Set([...prev, sectionId]));\n    setSaved(false);\n\n    // Immediately update Redux editing business for real-time preview\n    updateEditingBusinessInRedux();\n  };\n\n  // Handle section visibility toggle\n  const toggleSectionVisibility = sectionId => {\n    setSectionVisibility(prev => ({\n      ...prev,\n      [sectionId]: !prev[sectionId],\n    }));\n    trackSectionChange(sectionId);\n  };\n\n  // Helper function to immediately update Redux editing business\n  const updateEditingBusinessInRedux = () => {\n    if (!editingBusiness) return;\n\n    try {\n      // Create updated business object with current form data\n      const updatedBusiness = {\n        ...editingBusiness,\n        hero: heroData,\n        about: {\n          ...aboutData,\n          stats: statisticsData,\n        },\n        services: servicesData,\n        team: teamData,\n        portfolio: portfolioData,\n        skills: skillsData,\n        experience: experienceData,\n        gallery: galleryData,\n        packages: packagesData,\n        testimonials: testimonialsData,\n        reviews: reviewsData,\n        faq: faqData,\n        contact: contactData,\n        businessHours: businessHoursData,\n        customSections: customSectionsData,\n        sectionOrder: sectionOrderData,\n        sectionVisibility: sectionVisibility,\n        ui: uiContentData,\n      };\n\n      // Update Redux with the current form data for real-time preview\n      Object.keys(updatedBusiness).forEach(key => {\n        if (\n          key !== 'id' &&\n          JSON.stringify(updatedBusiness[key]) !==\n            JSON.stringify(editingBusiness[key])\n        ) {\n          dispatch(\n            updateBusinessField({ field: key, value: updatedBusiness[key] })\n          );\n        }\n      });\n\n      console.log(\n        'Real-time preview: Updated editing business in Redux',\n        updatedBusiness\n      );\n    } catch (error) {\n      console.error(\n        'Error updating editing business for real-time preview:',\n        error\n      );\n    }\n  };\n\n  // Auto-update Redux when UI content changes for real-time preview\n  useEffect(() => {\n    if (editingBusiness && uiContentData) {\n      updateEditingBusinessInRedux();\n    }\n  }, [uiContentData]);\n\n  // Auto-update Redux when statistics data changes for real-time preview\n  useEffect(() => {\n    if (editingBusiness && statisticsData) {\n      updateEditingBusinessInRedux();\n    }\n  }, [statisticsData]);\n\n  const navigationItems = [\n    {\n      id: 'hero',\n      label: 'Hero Section',\n      icon: FaImages,\n      section: 'Content Management',\n    },\n    {\n      id: 'about-us',\n      label: 'About Us',\n      icon: FaUser,\n      section: 'Content Management',\n    },\n    {\n      id: 'services-offered',\n      label: 'Services Offered',\n      icon: FaServicestack,\n      section: 'Content Management',\n    },\n    ...(business?.slug === 'freelancer'\n      ? [\n          {\n            id: 'portfolio',\n            label: 'Portfolio',\n            icon: FaBriefcase,\n            section: 'Content Management',\n          },\n          {\n            id: 'skills',\n            label: 'Skills',\n            icon: FaGripHorizontal,\n            section: 'Content Management',\n          },\n          {\n            id: 'experience',\n            label: 'Experience',\n            icon: FaAddressCard,\n            section: 'Content Management',\n          },\n        ]\n      : [\n          {\n            id: 'team',\n            label: 'Team',\n            icon: FaUsers,\n            section: 'Content Management',\n          },\n          {\n            id: 'gallery',\n            label: 'Gallery',\n            icon: FaImages,\n            section: 'Content Management',\n          },\n          {\n            id: 'packages',\n            label: 'Packages & Pricing',\n            icon: FaDollarSign,\n            section: 'Content Management',\n          },\n        ]),\n    {\n      id: 'testimonials',\n      label: 'Testimonials',\n      icon: FaComments,\n      section: 'Content Management',\n    },\n    {\n      id: 'reviews',\n      label: 'Reviews',\n      icon: FaStar,\n      section: 'Content Management',\n    },\n    {\n      id: 'faq',\n      label: 'FAQ',\n      icon: FaQuestionCircle,\n      section: 'Content Management',\n    },\n    {\n      id: 'business-hours',\n      label: 'Business Hours',\n      icon: FaClock,\n      section: 'Content Management',\n    },\n    {\n      id: 'contact',\n      label: 'Contact Info',\n      icon: FaPhone,\n      section: 'Content Management',\n    },\n\n    {\n      id: 'custom-sections',\n      label: 'Custom Sections',\n      icon: FaPlus,\n      section: 'Advanced',\n    },\n    {\n      id: 'section-order',\n      label: 'Section Order',\n      icon: FaList,\n      section: 'Advanced',\n    },\n    {\n      id: 'settings',\n      label: 'Settings',\n      icon: FaCog,\n      section: 'Account Management',\n    },\n  ];\n\n  useEffect(() => {\n    const fetchBusinessDataForAdmin = async () => {\n      try {\n        setApiLoading(true);\n        setApiError(null);\n\n        console.log(\n          `[AdminDashboard] Making API call for business: ${businessId}`\n        );\n        const response = await fetchBusinessData(businessId);\n\n        let businessData;\n\n        if (response.success && response.data) {\n          console.log('[AdminDashboard] API call successful:', response.data);\n          businessData = response.data;\n        } else {\n          console.log(\n            '[AdminDashboard] API call failed, using template fallback'\n          );\n          businessData = getBusinessTemplate(businessId);\n          if (!businessData) {\n            setApiError('Business not found');\n            setLoading(false);\n            setApiLoading(false);\n            return;\n          }\n        }\n\n        setBusiness(businessData);\n\n        // Initialize business in Redux state if it doesn't exist, then set as editing\n        try {\n          // Create a sanitized version for Redux\n          const sanitizedBusiness = JSON.parse(JSON.stringify(businessData));\n          dispatch(initializeBusiness(sanitizedBusiness));\n          dispatch(setEditingBusiness(businessId));\n        } catch (error) {\n          console.error('Error setting editing business:', error);\n        }\n\n        // Pre-fill all form data from business data (using API data structure)\n        setHeroData({\n          title: businessData.hero?.title || `${businessData.name}`,\n          subtitle:\n            businessData.hero?.subtitle || `Welcome to ${businessData.name}`,\n          backgroundImage:\n            businessData.hero?.backgroundImage || businessData.image || '',\n        });\n\n        setAboutData({\n          title: businessData.about?.title || 'About Us',\n          description:\n            businessData.about?.description ||\n            `Learn more about ${businessData.name}`,\n          profileImage: businessData.about?.profileImage || '',\n        });\n\n        // Use API data directly instead of getSampleContent\n        setServicesData(businessData.services || []);\n        setTeamData(businessData.team || []);\n        setPortfolioData(businessData.portfolio || []);\n        setSkillsData(businessData.skills || []);\n        setExperienceData(businessData.experience || []);\n        setGalleryData(businessData.gallery || []);\n        setPackagesData(businessData.packages || []);\n        setTestimonialsData(businessData.testimonials || []);\n        setReviewsData(businessData.reviews || []);\n        setFaqData(businessData.faq || []);\n\n        // Initialize business hours from API data\n        setBusinessHoursData(\n          businessData.businessHours || {\n            title: 'Business Hours',\n            hours: {\n              monday: '9:00 AM - 6:00 PM',\n              tuesday: '9:00 AM - 6:00 PM',\n              wednesday: '9:00 AM - 6:00 PM',\n              thursday: '9:00 AM - 6:00 PM',\n              friday: '9:00 AM - 6:00 PM',\n              saturday: '10:00 AM - 4:00 PM',\n              sunday: 'Closed',\n            },\n          }\n        );\n\n        // Initialize section order\n        setSectionOrderData([\n          'hero',\n          'about-us',\n          'services-offered',\n          'portfolio',\n          'skills',\n          'experience',\n          'team',\n          'gallery',\n          'packages',\n          'testimonials',\n          'reviews',\n          'faq',\n          'business-hours',\n          'contact',\n        ]);\n\n        // Initialize contact data from API data\n        setContactData(\n          businessData.contact || {\n            title: 'Get In Touch',\n            description: `Contact us to learn more about ${businessData.name}`,\n            email: `hello@${businessData.slug}.com`,\n            phone: '+1 (555) 123-4567',\n            address: '123 Business Street, City, State 12345',\n            hours: {\n              monday: '9:00 AM - 6:00 PM',\n              tuesday: '9:00 AM - 6:00 PM',\n              wednesday: '9:00 AM - 6:00 PM',\n              thursday: '9:00 AM - 6:00 PM',\n              friday: '9:00 AM - 6:00 PM',\n              saturday: '10:00 AM - 4:00 PM',\n              sunday: 'Closed',\n            },\n            socialMedia: {\n              facebook: '',\n              twitter: '',\n              instagram: '',\n              linkedin: '',\n            },\n          }\n        );\n\n        // Initialize UI content data from API data\n        setUiContentData(\n          businessData.ui || {\n            sections: businessData.sections || {},\n            buttons: {\n              bookNow: 'Book Now',\n              learnMore: 'Learn More',\n              sendMessage: 'Send Message',\n              contactUs: 'Contact Us',\n            },\n            contactForm: {\n              placeholders: {\n                name: 'Your Name',\n                email: 'Your Email',\n                phone: 'Your Phone',\n                message: 'Your Message',\n              },\n            },\n            businessHours: {\n              title: 'Business Hours',\n              contactInfoTitle: 'Contact Information',\n            },\n          }\n        );\n\n        // Initialize statistics data from API data\n        setStatisticsData(\n          businessData.about?.stats || [\n            { number: '100+', label: 'Services' },\n            { number: '5+', label: 'Years Experience' },\n            { number: '4.9', label: '★ Average Rating' },\n            { number: '200+', label: 'Happy Clients' },\n          ]\n        );\n      } catch (error) {\n        console.error('[AdminDashboard] Error fetching business data:', error);\n        setApiError(error.message);\n\n        // Fallback to template data on error\n        const businessData = getBusinessTemplate(businessId);\n        if (businessData) {\n          setBusiness(businessData);\n        }\n      } finally {\n        setLoading(false);\n        setApiLoading(false);\n      }\n    };\n\n    fetchBusinessDataForAdmin();\n  }, [businessId, dispatch]);\n\n  // Handle Save Changes - saves to editing state for real-time preview\n  const handleSaveChanges = () => {\n    console.log('handleSaveChanges called');\n\n    try {\n      // Update editing business with current form data for real-time preview\n      updateEditingBusinessInRedux();\n\n      setSaved(true);\n      setChangedSections(new Set());\n      alert(\n        'Changes saved! You can preview them in the business page. Click \"Save & Go Live\" to publish permanently.'\n      );\n      console.log('Updated editing business for real-time preview');\n    } catch (error) {\n      console.error('Error saving changes for preview:', error);\n      alert('Error saving changes for preview. Please try again.');\n    }\n  };\n\n  // Handle Save & Go Live - publishes changes to global state\n  const handleSaveAndGoLive = () => {\n    console.log('handleSaveAndGoLive called');\n\n    if (!editingBusiness) {\n      alert('No business is being edited. Please try refreshing the page.');\n      return;\n    }\n\n    try {\n      console.log('Saving business changes...');\n      dispatch(saveBusinessChanges());\n\n      setSaved(false);\n      alert('All changes published to live business page successfully!');\n\n      // Navigate back to business page\n      navigate(`/${businessId}`);\n    } catch (error) {\n      console.error('Error saving changes:', error);\n      alert('Error saving changes. Please try again.');\n    }\n  };\n\n  // Handle Discard Changes - revert to original state\n  const handleDiscardChanges = () => {\n    if (!originalBusiness) return;\n\n    try {\n      // Reset all local form data to original values\n      setHeroData({\n        title: originalBusiness.hero?.title || `${originalBusiness.name}`,\n        subtitle:\n          originalBusiness.hero?.subtitle ||\n          `Welcome to ${originalBusiness.name}`,\n        backgroundImage:\n          originalBusiness.hero?.backgroundImage ||\n          originalBusiness.image ||\n          '',\n      });\n\n      setAboutData({\n        title: originalBusiness.about?.title || 'About Us',\n        description:\n          originalBusiness.about?.description ||\n          `Learn more about ${originalBusiness.name}`,\n        profileImage: originalBusiness.about?.profileImage || '',\n      });\n\n      // Discard changes in Redux\n      dispatch(discardBusinessChanges());\n      setSaved(false);\n      setChangedSections(new Set());\n      alert('All changes discarded. Form reset to original values.');\n    } catch (error) {\n      console.error('Error discarding changes:', error);\n      alert('Error discarding changes. Please try again.');\n    }\n  };\n\n  const closeMobileSidebar = () => setMobileSidebarOpen(false);\n\n  // Close mobile sidebar on escape key\n  useEffect(() => {\n    const handleEscapeKey = event => {\n      if (event.key === 'Escape' && mobileSidebarOpen) {\n        closeMobileSidebar();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscapeKey);\n    return () => document.removeEventListener('keydown', handleEscapeKey);\n  }, [mobileSidebarOpen]);\n\n  // Prevent body scroll when mobile sidebar is open\n  useEffect(() => {\n    if (mobileSidebarOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n\n    return () => {\n      document.body.style.overflow = 'unset';\n    };\n  }, [mobileSidebarOpen]);\n\n  // Helper functions for managing dynamic lists\n  const addService = () => {\n    const newService = {\n      id: Date.now(),\n      icon: '🔧',\n      title: 'New Service',\n      description: 'Service description',\n      price: 'From $0',\n    };\n    setServicesData(prev => [...prev, newService]);\n    trackSectionChange('services-offered');\n  };\n\n  const updateService = (id, field, value) => {\n    setServicesData(prev =>\n      prev.map(service =>\n        service.id === id ? { ...service, [field]: value } : service\n      )\n    );\n    trackSectionChange('services-offered');\n  };\n\n  const deleteService = id => {\n    setServicesData(prev => prev.filter(service => service.id !== id));\n    trackSectionChange('services-offered');\n  };\n\n  const addTeamMember = () => {\n    const newMember = {\n      id: Date.now(),\n      name: 'New Team Member',\n      role: 'Role',\n      bio: 'Bio description',\n      photo: '',\n      specialties: [],\n    };\n    setTeamData(prev => [...prev, newMember]);\n    trackSectionChange('team');\n  };\n\n  const updateTeamMember = (id, field, value) => {\n    setTeamData(prev =>\n      prev.map(member =>\n        member.id === id ? { ...member, [field]: value } : member\n      )\n    );\n    trackSectionChange('team');\n  };\n\n  const deleteTeamMember = id => {\n    setTeamData(prev => prev.filter(member => member.id !== id));\n    trackSectionChange('team');\n  };\n\n  // Portfolio management functions\n  const addPortfolioItem = () => {\n    const newItem = {\n      id: Date.now(),\n      title: 'New Project',\n      category: 'Design',\n      description: 'Project description',\n      image: '',\n      technologies: [],\n    };\n    setPortfolioData(prev => [...prev, newItem]);\n    trackSectionChange('portfolio');\n  };\n\n  const updatePortfolioItem = (id, field, value) => {\n    setPortfolioData(prev =>\n      prev.map(item => (item.id === id ? { ...item, [field]: value } : item))\n    );\n    trackSectionChange('portfolio');\n  };\n\n  const deletePortfolioItem = id => {\n    setPortfolioData(prev => prev.filter(item => item.id !== id));\n    trackSectionChange('portfolio');\n  };\n\n  // Skills management functions\n  const addSkill = () => {\n    const newSkill = {\n      id: Date.now(),\n      name: 'New Skill',\n      level: 70,\n      icon: '🔧',\n    };\n    setSkillsData(prev => [...prev, newSkill]);\n    trackSectionChange('skills');\n  };\n\n  const updateSkill = (id, field, value) => {\n    setSkillsData(prev =>\n      prev.map(skill =>\n        skill.id === id ? { ...skill, [field]: value } : skill\n      )\n    );\n    trackSectionChange('skills');\n  };\n\n  const deleteSkill = id => {\n    setSkillsData(prev => prev.filter(skill => skill.id !== id));\n    trackSectionChange('skills');\n  };\n\n  // Experience management functions\n  const addExperience = () => {\n    const newExperience = {\n      id: Date.now(),\n      company: 'Company Name',\n      role: 'Position',\n      period: '2023 - Present',\n      description: 'Job description',\n    };\n    setExperienceData(prev => [...prev, newExperience]);\n    trackSectionChange('experience');\n  };\n\n  const updateExperience = (id, field, value) => {\n    setExperienceData(prev =>\n      prev.map(exp => (exp.id === id ? { ...exp, [field]: value } : exp))\n    );\n    trackSectionChange('experience');\n  };\n\n  const deleteExperience = id => {\n    setExperienceData(prev => prev.filter(exp => exp.id !== id));\n    trackSectionChange('experience');\n  };\n\n  // Gallery management functions\n  const addGalleryCategory = () => {\n    const newCategory = {\n      id: Date.now(),\n      category: 'New Category',\n      images: [],\n      description: 'Category description',\n    };\n    setGalleryData(prev => [...prev, newCategory]);\n    trackSectionChange('gallery');\n  };\n\n  const updateGalleryCategory = (id, field, value) => {\n    setGalleryData(prev =>\n      prev.map(cat => (cat.id === id ? { ...cat, [field]: value } : cat))\n    );\n    trackSectionChange('gallery');\n  };\n\n  const deleteGalleryCategory = id => {\n    setGalleryData(prev => prev.filter(cat => cat.id !== id));\n    trackSectionChange('gallery');\n  };\n\n  // Packages management functions\n  const addPackage = () => {\n    const newPackage = {\n      id: Date.now(),\n      name: 'New Package',\n      description: 'Package description',\n      price: '$0',\n      duration: '1 hour',\n      features: [],\n      featured: false,\n    };\n    setPackagesData(prev => [...prev, newPackage]);\n    trackSectionChange('packages');\n  };\n\n  const updatePackage = (id, field, value) => {\n    setPackagesData(prev =>\n      prev.map(pkg => (pkg.id === id ? { ...pkg, [field]: value } : pkg))\n    );\n    trackSectionChange('packages');\n  };\n\n  const deletePackage = id => {\n    setPackagesData(prev => prev.filter(pkg => pkg.id !== id));\n    trackSectionChange('packages');\n  };\n\n  // Testimonials management functions\n  const addTestimonial = () => {\n    const newTestimonial = {\n      id: Date.now(),\n      name: 'Client Name',\n      company: 'Company',\n      role: 'Position',\n      review: 'Great experience!',\n      rating: 5,\n      image: '',\n    };\n    setTestimonialsData(prev => [...prev, newTestimonial]);\n    trackSectionChange('testimonials');\n  };\n\n  const updateTestimonial = (id, field, value) => {\n    setTestimonialsData(prev =>\n      prev.map(testimonial =>\n        testimonial.id === id ? { ...testimonial, [field]: value } : testimonial\n      )\n    );\n    trackSectionChange('testimonials');\n  };\n\n  const deleteTestimonial = id => {\n    setTestimonialsData(prev =>\n      prev.filter(testimonial => testimonial.id !== id)\n    );\n    trackSectionChange('testimonials');\n  };\n\n  // Reviews management functions\n  const addReview = () => {\n    const newReview = {\n      id: Date.now(),\n      name: 'Reviewer Name',\n      date: new Date().toLocaleDateString(),\n      rating: 5,\n      review: 'Excellent service!',\n      avatar: '',\n    };\n    setReviewsData(prev => [...prev, newReview]);\n    trackSectionChange('reviews');\n  };\n\n  const updateReview = (id, field, value) => {\n    setReviewsData(prev =>\n      prev.map(review =>\n        review.id === id ? { ...review, [field]: value } : review\n      )\n    );\n    trackSectionChange('reviews');\n  };\n\n  const deleteReview = id => {\n    setReviewsData(prev => prev.filter(review => review.id !== id));\n    trackSectionChange('reviews');\n  };\n\n  // FAQ management functions\n  const addFAQ = () => {\n    const newFAQ = {\n      id: Date.now(),\n      question: 'New Question?',\n      answer: 'Answer to the question.',\n    };\n    setFaqData(prev => [...prev, newFAQ]);\n    trackSectionChange('faq');\n  };\n\n  const updateFAQ = (id, field, value) => {\n    setFaqData(prev =>\n      prev.map(faq => (faq.id === id ? { ...faq, [field]: value } : faq))\n    );\n    trackSectionChange('faq');\n  };\n\n  const deleteFAQ = id => {\n    setFaqData(prev => prev.filter(faq => faq.id !== id));\n    trackSectionChange('faq');\n  };\n\n  // Custom sections management\n  const addCustomSection = (type = 'text') => {\n    const templates = {\n      text: {\n        title: 'Text Section',\n        content: {\n          heading: 'Section Heading',\n          description: 'Add your content here...',\n          backgroundColor: '#ffffff',\n          textColor: '#333333',\n        },\n      },\n      list: {\n        title: 'List Section',\n        content: {\n          heading: 'List Heading',\n          items: ['Item 1', 'Item 2', 'Item 3'],\n          style: 'bullets', // bullets, numbers, icons\n          backgroundColor: '#f8f9fa',\n        },\n      },\n      card: {\n        title: 'Card Section',\n        content: {\n          heading: 'Card Section',\n          cards: [\n            { title: 'Card 1', description: 'Description 1', icon: '🎯' },\n            { title: 'Card 2', description: 'Description 2', icon: '⚡' },\n            { title: 'Card 3', description: 'Description 3', icon: '🚀' },\n          ],\n          layout: 'grid', // grid, horizontal, vertical\n        },\n      },\n      image: {\n        title: 'Image Gallery',\n        content: {\n          heading: 'Image Gallery',\n          images: [],\n          layout: 'grid', // grid, masonry, carousel\n          columns: 3,\n        },\n      },\n    };\n\n    const template = templates[type] || templates.text;\n    const newSection = {\n      id: Date.now(),\n      type,\n      title: template.title,\n      content: template.content,\n      order: customSectionsData.length,\n      visible: true,\n    };\n    setCustomSectionsData(prev => [...prev, newSection]);\n    trackSectionChange('custom');\n  };\n\n  const updateCustomSection = (id, field, value) => {\n    setCustomSectionsData(prev =>\n      prev.map(section =>\n        section.id === id ? { ...section, [field]: value } : section\n      )\n    );\n    trackSectionChange('custom');\n  };\n\n  const deleteCustomSection = id => {\n    setCustomSectionsData(prev => prev.filter(section => section.id !== id));\n    trackSectionChange('custom');\n  };\n\n  // Image upload handler\n  const handleImageUpload = (event, callback) => {\n    const file = event.target.files[0];\n    if (file) {\n      // In a real app, you would upload to a service like AWS S3, Cloudinary, etc.\n      // For demo purposes, we'll create a blob URL\n      const imageUrl = URL.createObjectURL(file);\n      callback(imageUrl);\n    }\n  };\n\n  // Section reorder handler\n  const reorderSections = (startIndex, endIndex) => {\n    const result = Array.from(sectionOrderData);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    setSectionOrderData(result);\n    trackSectionChange('order');\n  };\n\n  const renderContent = () => {\n    switch (activeSection) {\n      case 'hero':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaImages />\n                Hero Section\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>{sectionVisibility['hero'] ? 'Visible' : 'Hidden'}</span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['hero']}\n                    onChange={() => toggleSectionVisibility('hero')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n            <FormGrid>\n              <FormGroup style={{ gridColumn: '1 / -1' }}>\n                <FormLabel>Business Title</FormLabel>\n                <FormInput\n                  value={heroData.title}\n                  onChange={e => {\n                    setHeroData(prev => ({ ...prev, title: e.target.value }));\n                    trackSectionChange('hero');\n                  }}\n                  placeholder=\"Enter your business title\"\n                />\n              </FormGroup>\n              <FormGroup style={{ gridColumn: '1 / -1' }}>\n                <FormLabel>Subtitle</FormLabel>\n                <FormTextarea\n                  value={heroData.subtitle}\n                  onChange={e => {\n                    setHeroData(prev => ({\n                      ...prev,\n                      subtitle: e.target.value,\n                    }));\n                    trackSectionChange('hero');\n                  }}\n                  placeholder=\"Enter your business subtitle...\"\n                  rows={3}\n                />\n              </FormGroup>\n              <FormGroup style={{ gridColumn: '1 / -1' }}>\n                <FormLabel>\n                  <FaCamera />\n                  Background Image URL\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    style={{ display: 'none' }}\n                    id=\"hero-background-upload\"\n                    onChange={e =>\n                      handleImageUpload(e, url => {\n                        setHeroData(prev => ({\n                          ...prev,\n                          backgroundImage: url,\n                        }));\n                        trackSectionChange('hero');\n                      })\n                    }\n                  />\n                  <label\n                    htmlFor=\"hero-background-upload\"\n                    style={{\n                      marginLeft: '10px',\n                      cursor: 'pointer',\n                      color: '#3b82f6',\n                      display: 'inline-flex',\n                      alignItems: 'center',\n                      gap: '4px',\n                    }}\n                  >\n                    <FaUpload /> Upload\n                  </label>\n                </FormLabel>\n                <FormInput\n                  value={heroData.backgroundImage}\n                  onChange={e => {\n                    setHeroData(prev => ({\n                      ...prev,\n                      backgroundImage: e.target.value,\n                    }));\n                    trackSectionChange('hero');\n                  }}\n                  placeholder=\"Enter background image URL or upload\"\n                />\n                {heroData.backgroundImage && (\n                  <div\n                    style={{\n                      marginTop: '10px',\n                      padding: '10px',\n                      border: '1px solid #e2e8f0',\n                      borderRadius: '6px',\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '10px',\n                    }}\n                  >\n                    <div\n                      style={{\n                        width: '60px',\n                        height: '60px',\n                        backgroundImage: `url(${heroData.backgroundImage})`,\n                        backgroundSize: 'cover',\n                        backgroundPosition: 'center',\n                        borderRadius: '6px',\n                        border: '1px solid #d1d5db',\n                      }}\n                    />\n                    <span style={{ fontSize: '0.9rem', color: '#6b7280' }}>\n                      Image preview\n                    </span>\n                  </div>\n                )}\n              </FormGroup>\n            </FormGrid>\n          </ContentSection>\n        );\n\n      case 'about-us':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaUser />\n                About Us Section\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>\n                  {sectionVisibility['about-us'] ? 'Visible' : 'Hidden'}\n                </span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['about-us']}\n                    onChange={() => toggleSectionVisibility('about-us')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n            <FormGrid>\n              <FormGroup style={{ gridColumn: '1 / -1' }}>\n                <FormLabel>Section Title</FormLabel>\n                <FormInput\n                  value={aboutData.title}\n                  onChange={e => {\n                    setAboutData(prev => ({ ...prev, title: e.target.value }));\n                    trackSectionChange('about-us');\n                  }}\n                  placeholder=\"Enter section title\"\n                />\n              </FormGroup>\n              <FormGroup style={{ gridColumn: '1 / -1' }}>\n                <FormLabel>Description</FormLabel>\n                <FormTextarea\n                  value={aboutData.description}\n                  onChange={e => {\n                    setAboutData(prev => ({\n                      ...prev,\n                      description: e.target.value,\n                    }));\n                    trackSectionChange('about-us');\n                  }}\n                  placeholder=\"Enter about description...\"\n                  rows={5}\n                />\n              </FormGroup>\n              <FormGroup style={{ gridColumn: '1 / -1' }}>\n                <FormLabel>\n                  <FaCamera />\n                  Profile Image URL\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    style={{ display: 'none' }}\n                    id=\"about-profile-upload\"\n                    onChange={e =>\n                      handleImageUpload(e, url => {\n                        setAboutData(prev => ({ ...prev, profileImage: url }));\n                        trackSectionChange('about-us');\n                      })\n                    }\n                  />\n                  <label\n                    htmlFor=\"about-profile-upload\"\n                    style={{\n                      marginLeft: '10px',\n                      cursor: 'pointer',\n                      color: '#3b82f6',\n                      display: 'inline-flex',\n                      alignItems: 'center',\n                      gap: '4px',\n                    }}\n                  >\n                    <FaUpload /> Upload\n                  </label>\n                </FormLabel>\n                <FormInput\n                  value={aboutData.profileImage}\n                  onChange={e => {\n                    setAboutData(prev => ({\n                      ...prev,\n                      profileImage: e.target.value,\n                    }));\n                    trackSectionChange('about-us');\n                  }}\n                  placeholder=\"Enter profile image URL or upload\"\n                />\n                {aboutData.profileImage && (\n                  <div\n                    style={{\n                      marginTop: '10px',\n                      padding: '10px',\n                      border: '1px solid #e2e8f0',\n                      borderRadius: '6px',\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '10px',\n                    }}\n                  >\n                    <div\n                      style={{\n                        width: '60px',\n                        height: '60px',\n                        backgroundImage: `url(${aboutData.profileImage})`,\n                        backgroundSize: 'cover',\n                        backgroundPosition: 'center',\n                        borderRadius: '6px',\n                        border: '1px solid #d1d5db',\n                      }}\n                    />\n                    <span style={{ fontSize: '0.9rem', color: '#6b7280' }}>\n                      Profile image preview\n                    </span>\n                  </div>\n                )}\n              </FormGroup>\n\n              {/* Statistics Section within About Us */}\n              <FormGroup\n                style={{ gridColumn: '1 / -1', marginTop: theme.spacing.xl }}\n              >\n                <h3\n                  style={{\n                    marginBottom: theme.spacing.lg,\n                    color: theme.colors.gray800,\n                    borderTop: `1px solid ${theme.colors.gray200}`,\n                    paddingTop: theme.spacing.lg,\n                  }}\n                >\n                  Statistics\n                </h3>\n                <p\n                  style={{\n                    marginBottom: theme.spacing.md,\n                    color: theme.colors.gray600,\n                  }}\n                >\n                  Edit the statistics displayed in the about section of your\n                  website.\n                </p>\n\n                <AddButton\n                  onClick={() => {\n                    const newStat = {\n                      number: '0',\n                      label: 'New Stat',\n                      id: Date.now(),\n                    };\n                    setStatisticsData(prev => [...prev, newStat]);\n                    trackSectionChange('about-us');\n                  }}\n                  style={{ marginBottom: theme.spacing.lg }}\n                >\n                  <FaPlus />\n                  Add Statistic\n                </AddButton>\n\n                <ListContainer>\n                  {statisticsData.map((stat, index) => (\n                    <ListItem key={stat.id || index}>\n                      <div className=\"item-info\">\n                        <FormGrid>\n                          <FormGroup>\n                            <FormLabel>Number/Value</FormLabel>\n                            <FormInput\n                              value={stat.number}\n                              onChange={e => {\n                                setStatisticsData(prev =>\n                                  prev.map((s, i) =>\n                                    i === index\n                                      ? { ...s, number: e.target.value }\n                                      : s\n                                  )\n                                );\n                                trackSectionChange('about-us');\n                              }}\n                              placeholder=\"100+\"\n                            />\n                          </FormGroup>\n                          <FormGroup>\n                            <FormLabel>Label</FormLabel>\n                            <FormInput\n                              value={stat.label}\n                              onChange={e => {\n                                setStatisticsData(prev =>\n                                  prev.map((s, i) =>\n                                    i === index\n                                      ? { ...s, label: e.target.value }\n                                      : s\n                                  )\n                                );\n                                trackSectionChange('about-us');\n                              }}\n                              placeholder=\"Happy Clients\"\n                            />\n                          </FormGroup>\n                        </FormGrid>\n                      </div>\n                      <div className=\"item-actions\">\n                        <ItemButton\n                          variant=\"danger\"\n                          onClick={() => {\n                            setStatisticsData(prev =>\n                              prev.filter((_, i) => i !== index)\n                            );\n                            trackSectionChange('about-us');\n                          }}\n                        >\n                          <FaTrash />\n                          Delete\n                        </ItemButton>\n                      </div>\n                    </ListItem>\n                  ))}\n                </ListContainer>\n              </FormGroup>\n            </FormGrid>\n          </ContentSection>\n        );\n\n      case 'services-offered':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaServicestack />\n                Services Offered\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>\n                  {sectionVisibility['services-offered'] ? 'Visible' : 'Hidden'}\n                </span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['services-offered']}\n                    onChange={() => toggleSectionVisibility('services-offered')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n\n            {/* Section UI Content Editing */}\n            <div\n              style={{\n                marginBottom: theme.spacing.xl,\n                padding: theme.spacing.lg,\n                background: theme.colors.gray50,\n                borderRadius: theme.borderRadius.md,\n              }}\n            >\n              <h3\n                style={{\n                  marginBottom: theme.spacing.md,\n                  color: theme.colors.gray800,\n                }}\n              >\n                Section Text & Labels\n              </h3>\n              <FormGrid>\n                <FormGroup>\n                  <FormLabel>Section Title</FormLabel>\n                  <FormInput\n                    value={\n                      uiContentData.sections?.services?.title ||\n                      (business?.slug === 'freelancer'\n                        ? 'My Services'\n                        : 'Our Services')\n                    }\n                    onChange={e => {\n                      setUiContentData(prev => ({\n                        ...prev,\n                        sections: {\n                          ...prev.sections,\n                          services: {\n                            ...prev.sections?.services,\n                            title: e.target.value,\n                          },\n                        },\n                      }));\n                      trackSectionChange('services-offered');\n                    }}\n                    placeholder={\n                      business?.slug === 'freelancer'\n                        ? 'My Services'\n                        : 'Our Services'\n                    }\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <FormLabel>Section Subtitle</FormLabel>\n                  <FormTextarea\n                    value={\n                      uiContentData.sections?.services?.subtitle ||\n                      'We offer a comprehensive range of professional services designed to meet your needs and exceed your expectations.'\n                    }\n                    onChange={e => {\n                      setUiContentData(prev => ({\n                        ...prev,\n                        sections: {\n                          ...prev.sections,\n                          services: {\n                            ...prev.sections?.services,\n                            subtitle: e.target.value,\n                          },\n                        },\n                      }));\n                      trackSectionChange('services-offered');\n                    }}\n                    placeholder=\"We offer a comprehensive range of professional services designed to meet your needs and exceed your expectations.\"\n                    rows={3}\n                  />\n                </FormGroup>\n              </FormGrid>\n            </div>\n\n            <AddButton onClick={addService}>\n              <FaPlus />\n              Add New Service\n            </AddButton>\n\n            <ListContainer>\n              {servicesData.map(service => (\n                <ListItem key={service.id}>\n                  <div className=\"item-info\">\n                    <FormGrid>\n                      <FormGroup>\n                        <FormLabel>Icon (Emoji)</FormLabel>\n                        <FormInput\n                          value={service.icon}\n                          onChange={e =>\n                            updateService(service.id, 'icon', e.target.value)\n                          }\n                          placeholder=\"🔧\"\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>Price</FormLabel>\n                        <FormInput\n                          value={service.price}\n                          onChange={e =>\n                            updateService(service.id, 'price', e.target.value)\n                          }\n                          placeholder=\"From $0\"\n                        />\n                      </FormGroup>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>Service Title</FormLabel>\n                        <FormInput\n                          value={service.title}\n                          onChange={e =>\n                            updateService(service.id, 'title', e.target.value)\n                          }\n                          placeholder=\"Service Name\"\n                        />\n                      </FormGroup>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>Description</FormLabel>\n                        <FormTextarea\n                          value={service.description}\n                          onChange={e =>\n                            updateService(\n                              service.id,\n                              'description',\n                              e.target.value\n                            )\n                          }\n                          placeholder=\"Service description\"\n                          rows={3}\n                        />\n                      </FormGroup>\n                    </FormGrid>\n                  </div>\n                  <div className=\"item-actions\">\n                    <ItemButton\n                      variant=\"danger\"\n                      onClick={() => deleteService(service.id)}\n                    >\n                      <FaTrash />\n                      Delete\n                    </ItemButton>\n                  </div>\n                </ListItem>\n              ))}\n            </ListContainer>\n          </ContentSection>\n        );\n\n      case 'team':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaUsers />\n                Team Management\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>{sectionVisibility['team'] ? 'Visible' : 'Hidden'}</span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['team']}\n                    onChange={() => toggleSectionVisibility('team')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n\n            {/* Section UI Content Editing */}\n            <div\n              style={{\n                marginBottom: theme.spacing.xl,\n                padding: theme.spacing.lg,\n                background: theme.colors.gray50,\n                borderRadius: theme.borderRadius.md,\n              }}\n            >\n              <h3\n                style={{\n                  marginBottom: theme.spacing.md,\n                  color: theme.colors.gray800,\n                }}\n              >\n                Section Text & Labels\n              </h3>\n              <FormGrid>\n                <FormGroup>\n                  <FormLabel>Section Title</FormLabel>\n                  <FormInput\n                    value={\n                      uiContentData.sections?.team?.title || 'Meet Our Team'\n                    }\n                    onChange={e => {\n                      setUiContentData(prev => ({\n                        ...prev,\n                        sections: {\n                          ...prev.sections,\n                          team: {\n                            ...prev.sections?.team,\n                            title: e.target.value,\n                          },\n                        },\n                      }));\n                      trackSectionChange('team');\n                    }}\n                    placeholder=\"Meet Our Team\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <FormLabel>Section Subtitle</FormLabel>\n                  <FormTextarea\n                    value={\n                      uiContentData.sections?.team?.subtitle ||\n                      'Our experienced professionals are passionate about delivering exceptional service and results.'\n                    }\n                    onChange={e => {\n                      setUiContentData(prev => ({\n                        ...prev,\n                        sections: {\n                          ...prev.sections,\n                          team: {\n                            ...prev.sections?.team,\n                            subtitle: e.target.value,\n                          },\n                        },\n                      }));\n                      trackSectionChange('team');\n                    }}\n                    placeholder=\"Our experienced professionals are passionate about delivering exceptional service and results.\"\n                    rows={3}\n                  />\n                </FormGroup>\n              </FormGrid>\n            </div>\n\n            <AddButton onClick={addTeamMember}>\n              <FaPlus />\n              Add Team Member\n            </AddButton>\n\n            <ListContainer>\n              {teamData.map(member => (\n                <ListItem key={member.id}>\n                  <div className=\"item-info\">\n                    <FormGrid>\n                      <FormGroup>\n                        <FormLabel>Name</FormLabel>\n                        <FormInput\n                          value={member.name}\n                          onChange={e =>\n                            updateTeamMember(member.id, 'name', e.target.value)\n                          }\n                          placeholder=\"Team member name\"\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>Role</FormLabel>\n                        <FormInput\n                          value={member.role}\n                          onChange={e =>\n                            updateTeamMember(member.id, 'role', e.target.value)\n                          }\n                          placeholder=\"Job title\"\n                        />\n                      </FormGroup>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>\n                          <FaCamera />\n                          Photo URL\n                          <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            style={{ display: 'none' }}\n                            id={`team-photo-${member.id}`}\n                            onChange={e =>\n                              handleImageUpload(e, url =>\n                                updateTeamMember(member.id, 'photo', url)\n                              )\n                            }\n                          />\n                          <label\n                            htmlFor={`team-photo-${member.id}`}\n                            style={{\n                              marginLeft: '10px',\n                              cursor: 'pointer',\n                              color: '#3b82f6',\n                              display: 'inline-flex',\n                              alignItems: 'center',\n                              gap: '4px',\n                            }}\n                          >\n                            <FaUpload /> Upload\n                          </label>\n                        </FormLabel>\n                        <FormInput\n                          value={member.photo}\n                          onChange={e =>\n                            updateTeamMember(member.id, 'photo', e.target.value)\n                          }\n                          placeholder=\"Profile photo URL or upload\"\n                        />\n                        {member.photo && (\n                          <div\n                            style={{\n                              marginTop: '10px',\n                              padding: '10px',\n                              border: '1px solid #e2e8f0',\n                              borderRadius: '6px',\n                              display: 'flex',\n                              alignItems: 'center',\n                              gap: '10px',\n                            }}\n                          >\n                            <div\n                              style={{\n                                width: '50px',\n                                height: '50px',\n                                backgroundImage: `url(${member.photo})`,\n                                backgroundSize: 'cover',\n                                backgroundPosition: 'center',\n                                borderRadius: '50%',\n                                border: '1px solid #d1d5db',\n                              }}\n                            />\n                            <span\n                              style={{ fontSize: '0.9rem', color: '#6b7280' }}\n                            >\n                              {member.name} photo\n                            </span>\n                          </div>\n                        )}\n                      </FormGroup>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>Bio</FormLabel>\n                        <FormTextarea\n                          value={member.bio}\n                          onChange={e =>\n                            updateTeamMember(member.id, 'bio', e.target.value)\n                          }\n                          placeholder=\"Brief bio about the team member\"\n                          rows={3}\n                        />\n                      </FormGroup>\n                    </FormGrid>\n                  </div>\n                  <div className=\"item-actions\">\n                    <ItemButton\n                      variant=\"danger\"\n                      onClick={() => deleteTeamMember(member.id)}\n                    >\n                      <FaTrash />\n                      Delete\n                    </ItemButton>\n                  </div>\n                </ListItem>\n              ))}\n            </ListContainer>\n          </ContentSection>\n        );\n\n      case 'portfolio':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaBriefcase />\n                Portfolio Management\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>\n                  {sectionVisibility['portfolio'] ? 'Visible' : 'Hidden'}\n                </span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['portfolio']}\n                    onChange={() => toggleSectionVisibility('portfolio')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n\n            <AddButton onClick={addPortfolioItem}>\n              <FaPlus />\n              Add Portfolio Item\n            </AddButton>\n\n            <ListContainer>\n              {portfolioData.map(item => (\n                <ListItem key={item.id}>\n                  <div className=\"item-info\">\n                    <FormGrid>\n                      <FormGroup>\n                        <FormLabel>Project Title</FormLabel>\n                        <FormInput\n                          value={item.title}\n                          onChange={e =>\n                            updatePortfolioItem(\n                              item.id,\n                              'title',\n                              e.target.value\n                            )\n                          }\n                          placeholder=\"Project Name\"\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>Category</FormLabel>\n                        <FormInput\n                          value={item.category}\n                          onChange={e =>\n                            updatePortfolioItem(\n                              item.id,\n                              'category',\n                              e.target.value\n                            )\n                          }\n                          placeholder=\"Design, Development, etc.\"\n                        />\n                      </FormGroup>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>\n                          <FaFileImage />\n                          Project Image URL\n                          <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            style={{ display: 'none' }}\n                            id={`portfolio-image-${item.id}`}\n                            onChange={e =>\n                              handleImageUpload(e, url =>\n                                updatePortfolioItem(item.id, 'image', url)\n                              )\n                            }\n                          />\n                          <label\n                            htmlFor={`portfolio-image-${item.id}`}\n                            style={{\n                              marginLeft: '10px',\n                              cursor: 'pointer',\n                              color: '#3b82f6',\n                            }}\n                          >\n                            <FaUpload /> Upload\n                          </label>\n                        </FormLabel>\n                        <FormInput\n                          value={item.image || ''}\n                          onChange={e =>\n                            updatePortfolioItem(\n                              item.id,\n                              'image',\n                              e.target.value\n                            )\n                          }\n                          placeholder=\"Enter image URL or upload\"\n                        />\n                      </FormGroup>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>Description</FormLabel>\n                        <FormTextarea\n                          value={item.description}\n                          onChange={e =>\n                            updatePortfolioItem(\n                              item.id,\n                              'description',\n                              e.target.value\n                            )\n                          }\n                          placeholder=\"Project description\"\n                          rows={3}\n                        />\n                      </FormGroup>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>Technologies (comma-separated)</FormLabel>\n                        <FormInput\n                          value={\n                            Array.isArray(item.technologies)\n                              ? item.technologies.join(', ')\n                              : ''\n                          }\n                          onChange={e =>\n                            updatePortfolioItem(\n                              item.id,\n                              'technologies',\n                              e.target.value.split(', ').filter(t => t.trim())\n                            )\n                          }\n                          placeholder=\"React, Node.js, MongoDB\"\n                        />\n                      </FormGroup>\n                    </FormGrid>\n                  </div>\n                  <div className=\"item-actions\">\n                    <ItemButton\n                      variant=\"danger\"\n                      onClick={() => deletePortfolioItem(item.id)}\n                    >\n                      <FaTrash />\n                      Delete\n                    </ItemButton>\n                  </div>\n                </ListItem>\n              ))}\n            </ListContainer>\n          </ContentSection>\n        );\n\n      case 'skills':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaGripHorizontal />\n                Skills Management\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>\n                  {sectionVisibility['skills'] ? 'Visible' : 'Hidden'}\n                </span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['skills']}\n                    onChange={() => toggleSectionVisibility('skills')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n\n            <AddButton onClick={addSkill}>\n              <FaPlus />\n              Add Skill\n            </AddButton>\n\n            <ListContainer>\n              {skillsData.map(skill => (\n                <ListItem key={skill.id}>\n                  <div className=\"item-info\">\n                    <FormGrid>\n                      <FormGroup>\n                        <FormLabel>Skill Name</FormLabel>\n                        <FormInput\n                          value={skill.name}\n                          onChange={e =>\n                            updateSkill(skill.id, 'name', e.target.value)\n                          }\n                          placeholder=\"Skill name\"\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>Icon (Emoji)</FormLabel>\n                        <FormInput\n                          value={skill.icon}\n                          onChange={e =>\n                            updateSkill(skill.id, 'icon', e.target.value)\n                          }\n                          placeholder=\"🔧\"\n                        />\n                      </FormGroup>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>Skill Level ({skill.level}%)</FormLabel>\n                        <FormInput\n                          type=\"range\"\n                          min=\"0\"\n                          max=\"100\"\n                          value={skill.level}\n                          onChange={e =>\n                            updateSkill(\n                              skill.id,\n                              'level',\n                              parseInt(e.target.value)\n                            )\n                          }\n                        />\n                      </FormGroup>\n                    </FormGrid>\n                  </div>\n                  <div className=\"item-actions\">\n                    <ItemButton\n                      variant=\"danger\"\n                      onClick={() => deleteSkill(skill.id)}\n                    >\n                      <FaTrash />\n                      Delete\n                    </ItemButton>\n                  </div>\n                </ListItem>\n              ))}\n            </ListContainer>\n          </ContentSection>\n        );\n\n      case 'experience':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaAddressCard />\n                Experience Management\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>\n                  {sectionVisibility['experience'] ? 'Visible' : 'Hidden'}\n                </span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['experience']}\n                    onChange={() => toggleSectionVisibility('experience')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n\n            <AddButton onClick={addExperience}>\n              <FaPlus />\n              Add Experience\n            </AddButton>\n\n            <ListContainer>\n              {experienceData.map(exp => (\n                <ListItem key={exp.id}>\n                  <div className=\"item-info\">\n                    <FormGrid>\n                      <FormGroup>\n                        <FormLabel>Company</FormLabel>\n                        <FormInput\n                          value={exp.company}\n                          onChange={e =>\n                            updateExperience(exp.id, 'company', e.target.value)\n                          }\n                          placeholder=\"Company name\"\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>Role</FormLabel>\n                        <FormInput\n                          value={exp.role}\n                          onChange={e =>\n                            updateExperience(exp.id, 'role', e.target.value)\n                          }\n                          placeholder=\"Job title\"\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>Period</FormLabel>\n                        <FormInput\n                          value={exp.period}\n                          onChange={e =>\n                            updateExperience(exp.id, 'period', e.target.value)\n                          }\n                          placeholder=\"2020 - Present\"\n                        />\n                      </FormGroup>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>Description</FormLabel>\n                        <FormTextarea\n                          value={exp.description}\n                          onChange={e =>\n                            updateExperience(\n                              exp.id,\n                              'description',\n                              e.target.value\n                            )\n                          }\n                          placeholder=\"Job description\"\n                          rows={3}\n                        />\n                      </FormGroup>\n                    </FormGrid>\n                  </div>\n                  <div className=\"item-actions\">\n                    <ItemButton\n                      variant=\"danger\"\n                      onClick={() => deleteExperience(exp.id)}\n                    >\n                      <FaTrash />\n                      Delete\n                    </ItemButton>\n                  </div>\n                </ListItem>\n              ))}\n            </ListContainer>\n          </ContentSection>\n        );\n\n      case 'gallery':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaImages />\n                Gallery Management\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>\n                  {sectionVisibility['gallery'] ? 'Visible' : 'Hidden'}\n                </span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['gallery']}\n                    onChange={() => toggleSectionVisibility('gallery')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n\n            <AddButton onClick={addGalleryCategory}>\n              <FaPlus />\n              Add Gallery Category\n            </AddButton>\n\n            <ListContainer>\n              {galleryData.map(category => (\n                <ListItem key={category.id}>\n                  <div className=\"item-info\">\n                    <FormGrid>\n                      <FormGroup>\n                        <FormLabel>Category Name</FormLabel>\n                        <FormInput\n                          value={category.category}\n                          onChange={e =>\n                            updateGalleryCategory(\n                              category.id,\n                              'category',\n                              e.target.value\n                            )\n                          }\n                          placeholder=\"Category name\"\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>Image Count</FormLabel>\n                        <FormInput\n                          type=\"number\"\n                          value={category.images}\n                          onChange={e =>\n                            updateGalleryCategory(\n                              category.id,\n                              'images',\n                              parseInt(e.target.value) || 0\n                            )\n                          }\n                          placeholder=\"Number of images\"\n                        />\n                      </FormGroup>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>Description</FormLabel>\n                        <FormTextarea\n                          value={category.description || ''}\n                          onChange={e =>\n                            updateGalleryCategory(\n                              category.id,\n                              'description',\n                              e.target.value\n                            )\n                          }\n                          placeholder=\"Category description\"\n                          rows={2}\n                        />\n                      </FormGroup>\n                    </FormGrid>\n                  </div>\n                  <div className=\"item-actions\">\n                    <ItemButton\n                      variant=\"danger\"\n                      onClick={() => deleteGalleryCategory(category.id)}\n                    >\n                      <FaTrash />\n                      Delete\n                    </ItemButton>\n                  </div>\n                </ListItem>\n              ))}\n            </ListContainer>\n          </ContentSection>\n        );\n\n      case 'packages':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaDollarSign />\n                Packages & Pricing\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>\n                  {sectionVisibility['packages'] ? 'Visible' : 'Hidden'}\n                </span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['packages']}\n                    onChange={() => toggleSectionVisibility('packages')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n\n            <AddButton onClick={addPackage}>\n              <FaPlus />\n              Add Package\n            </AddButton>\n\n            <ListContainer>\n              {packagesData.map(pkg => (\n                <ListItem key={pkg.id}>\n                  <div className=\"item-info\">\n                    <FormGrid>\n                      <FormGroup>\n                        <FormLabel>Package Name</FormLabel>\n                        <FormInput\n                          value={pkg.name}\n                          onChange={e =>\n                            updatePackage(pkg.id, 'name', e.target.value)\n                          }\n                          placeholder=\"Package name\"\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>Price</FormLabel>\n                        <FormInput\n                          value={pkg.price}\n                          onChange={e =>\n                            updatePackage(pkg.id, 'price', e.target.value)\n                          }\n                          placeholder=\"$99\"\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>Duration</FormLabel>\n                        <FormInput\n                          value={pkg.duration}\n                          onChange={e =>\n                            updatePackage(pkg.id, 'duration', e.target.value)\n                          }\n                          placeholder=\"2 hours\"\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>\n                          <input\n                            type=\"checkbox\"\n                            checked={pkg.featured || false}\n                            onChange={e =>\n                              updatePackage(\n                                pkg.id,\n                                'featured',\n                                e.target.checked\n                              )\n                            }\n                            style={{ marginRight: '8px' }}\n                          />\n                          Featured Package\n                        </FormLabel>\n                      </FormGroup>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>Description</FormLabel>\n                        <FormTextarea\n                          value={pkg.description}\n                          onChange={e =>\n                            updatePackage(pkg.id, 'description', e.target.value)\n                          }\n                          placeholder=\"Package description\"\n                          rows={3}\n                        />\n                      </FormGroup>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>Features (comma-separated)</FormLabel>\n                        <FormInput\n                          value={\n                            Array.isArray(pkg.features)\n                              ? pkg.features.join(', ')\n                              : ''\n                          }\n                          onChange={e =>\n                            updatePackage(\n                              pkg.id,\n                              'features',\n                              e.target.value.split(', ').filter(f => f.trim())\n                            )\n                          }\n                          placeholder=\"Feature 1, Feature 2, Feature 3\"\n                        />\n                      </FormGroup>\n                    </FormGrid>\n                  </div>\n                  <div className=\"item-actions\">\n                    <ItemButton\n                      variant=\"danger\"\n                      onClick={() => deletePackage(pkg.id)}\n                    >\n                      <FaTrash />\n                      Delete\n                    </ItemButton>\n                  </div>\n                </ListItem>\n              ))}\n            </ListContainer>\n          </ContentSection>\n        );\n\n      case 'testimonials':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaComments />\n                Testimonials Management\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>\n                  {sectionVisibility['testimonials'] ? 'Visible' : 'Hidden'}\n                </span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['testimonials']}\n                    onChange={() => toggleSectionVisibility('testimonials')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n\n            {/* Section UI Content Editing */}\n            <div\n              style={{\n                marginBottom: theme.spacing.xl,\n                padding: theme.spacing.lg,\n                background: theme.colors.gray50,\n                borderRadius: theme.borderRadius.md,\n              }}\n            >\n              <h3\n                style={{\n                  marginBottom: theme.spacing.md,\n                  color: theme.colors.gray800,\n                }}\n              >\n                Section Text & Labels\n              </h3>\n              <FormGrid>\n                <FormGroup>\n                  <FormLabel>Section Title</FormLabel>\n                  <FormInput\n                    value={\n                      uiContentData.sections?.testimonials?.title ||\n                      'What Our Clients Say'\n                    }\n                    onChange={e => {\n                      setUiContentData(prev => ({\n                        ...prev,\n                        sections: {\n                          ...prev.sections,\n                          testimonials: {\n                            ...prev.sections?.testimonials,\n                            title: e.target.value,\n                          },\n                        },\n                      }));\n                      trackSectionChange('testimonials');\n                    }}\n                    placeholder=\"What Our Clients Say\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <FormLabel>Section Subtitle</FormLabel>\n                  <FormTextarea\n                    value={\n                      uiContentData.sections?.testimonials?.subtitle ||\n                      \"Don't just take our word for it - hear from our satisfied customers about their experiences.\"\n                    }\n                    onChange={e => {\n                      setUiContentData(prev => ({\n                        ...prev,\n                        sections: {\n                          ...prev.sections,\n                          testimonials: {\n                            ...prev.sections?.testimonials,\n                            subtitle: e.target.value,\n                          },\n                        },\n                      }));\n                      trackSectionChange('testimonials');\n                    }}\n                    placeholder=\"Don't just take our word for it - hear from our satisfied customers about their experiences.\"\n                    rows={3}\n                  />\n                </FormGroup>\n              </FormGrid>\n            </div>\n\n            <AddButton onClick={addTestimonial}>\n              <FaPlus />\n              Add Testimonial\n            </AddButton>\n\n            <ListContainer>\n              {testimonialsData.map(testimonial => (\n                <ListItem key={testimonial.id}>\n                  <div className=\"item-info\">\n                    <FormGrid>\n                      <FormGroup>\n                        <FormLabel>Client Name</FormLabel>\n                        <FormInput\n                          value={testimonial.name}\n                          onChange={e =>\n                            updateTestimonial(\n                              testimonial.id,\n                              'name',\n                              e.target.value\n                            )\n                          }\n                          placeholder=\"Client name\"\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>Company</FormLabel>\n                        <FormInput\n                          value={testimonial.company}\n                          onChange={e =>\n                            updateTestimonial(\n                              testimonial.id,\n                              'company',\n                              e.target.value\n                            )\n                          }\n                          placeholder=\"Company name\"\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>Role</FormLabel>\n                        <FormInput\n                          value={testimonial.role}\n                          onChange={e =>\n                            updateTestimonial(\n                              testimonial.id,\n                              'role',\n                              e.target.value\n                            )\n                          }\n                          placeholder=\"Job title\"\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>Rating</FormLabel>\n                        <FormInput\n                          type=\"number\"\n                          min=\"1\"\n                          max=\"5\"\n                          value={testimonial.rating}\n                          onChange={e =>\n                            updateTestimonial(\n                              testimonial.id,\n                              'rating',\n                              parseInt(e.target.value)\n                            )\n                          }\n                        />\n                      </FormGroup>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>\n                          <FaFileImage />\n                          Client Photo URL\n                          <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            style={{ display: 'none' }}\n                            id={`testimonial-image-${testimonial.id}`}\n                            onChange={e =>\n                              handleImageUpload(e, url =>\n                                updateTestimonial(testimonial.id, 'image', url)\n                              )\n                            }\n                          />\n                          <label\n                            htmlFor={`testimonial-image-${testimonial.id}`}\n                            style={{\n                              marginLeft: '10px',\n                              cursor: 'pointer',\n                              color: '#3b82f6',\n                            }}\n                          >\n                            <FaUpload /> Upload\n                          </label>\n                        </FormLabel>\n                        <FormInput\n                          value={testimonial.image || ''}\n                          onChange={e =>\n                            updateTestimonial(\n                              testimonial.id,\n                              'image',\n                              e.target.value\n                            )\n                          }\n                          placeholder=\"Enter image URL or upload\"\n                        />\n                      </FormGroup>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>Review</FormLabel>\n                        <FormTextarea\n                          value={testimonial.review}\n                          onChange={e =>\n                            updateTestimonial(\n                              testimonial.id,\n                              'review',\n                              e.target.value\n                            )\n                          }\n                          placeholder=\"Client testimonial\"\n                          rows={4}\n                        />\n                      </FormGroup>\n                    </FormGrid>\n                  </div>\n                  <div className=\"item-actions\">\n                    <ItemButton\n                      variant=\"danger\"\n                      onClick={() => deleteTestimonial(testimonial.id)}\n                    >\n                      <FaTrash />\n                      Delete\n                    </ItemButton>\n                  </div>\n                </ListItem>\n              ))}\n            </ListContainer>\n          </ContentSection>\n        );\n\n      case 'reviews':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaStar />\n                Reviews Management\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>\n                  {sectionVisibility['reviews'] ? 'Visible' : 'Hidden'}\n                </span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['reviews']}\n                    onChange={() => toggleSectionVisibility('reviews')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n\n            <AddButton onClick={addReview}>\n              <FaPlus />\n              Add Review\n            </AddButton>\n\n            <ListContainer>\n              {reviewsData.map(review => (\n                <ListItem key={review.id}>\n                  <div className=\"item-info\">\n                    <FormGrid>\n                      <FormGroup>\n                        <FormLabel>Reviewer Name</FormLabel>\n                        <FormInput\n                          value={review.name}\n                          onChange={e =>\n                            updateReview(review.id, 'name', e.target.value)\n                          }\n                          placeholder=\"Reviewer name\"\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>Date</FormLabel>\n                        <FormInput\n                          type=\"date\"\n                          value={review.date}\n                          onChange={e =>\n                            updateReview(review.id, 'date', e.target.value)\n                          }\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>Rating</FormLabel>\n                        <FormInput\n                          type=\"number\"\n                          min=\"1\"\n                          max=\"5\"\n                          value={review.rating}\n                          onChange={e =>\n                            updateReview(\n                              review.id,\n                              'rating',\n                              parseInt(e.target.value)\n                            )\n                          }\n                        />\n                      </FormGroup>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>\n                          <FaFileImage />\n                          Avatar URL\n                          <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            style={{ display: 'none' }}\n                            id={`review-avatar-${review.id}`}\n                            onChange={e =>\n                              handleImageUpload(e, url =>\n                                updateReview(review.id, 'avatar', url)\n                              )\n                            }\n                          />\n                          <label\n                            htmlFor={`review-avatar-${review.id}`}\n                            style={{\n                              marginLeft: '10px',\n                              cursor: 'pointer',\n                              color: '#3b82f6',\n                            }}\n                          >\n                            <FaUpload /> Upload\n                          </label>\n                        </FormLabel>\n                        <FormInput\n                          value={review.avatar || ''}\n                          onChange={e =>\n                            updateReview(review.id, 'avatar', e.target.value)\n                          }\n                          placeholder=\"Enter avatar URL or upload\"\n                        />\n                      </FormGroup>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>Review Text</FormLabel>\n                        <FormTextarea\n                          value={review.review}\n                          onChange={e =>\n                            updateReview(review.id, 'review', e.target.value)\n                          }\n                          placeholder=\"Review content\"\n                          rows={3}\n                        />\n                      </FormGroup>\n                    </FormGrid>\n                  </div>\n                  <div className=\"item-actions\">\n                    <ItemButton\n                      variant=\"danger\"\n                      onClick={() => deleteReview(review.id)}\n                    >\n                      <FaTrash />\n                      Delete\n                    </ItemButton>\n                  </div>\n                </ListItem>\n              ))}\n            </ListContainer>\n          </ContentSection>\n        );\n\n      case 'faq':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaQuestionCircle />\n                FAQ Management\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>{sectionVisibility['faq'] ? 'Visible' : 'Hidden'}</span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['faq']}\n                    onChange={() => toggleSectionVisibility('faq')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n\n            <AddButton onClick={addFAQ}>\n              <FaPlus />\n              Add FAQ\n            </AddButton>\n\n            <ListContainer>\n              {faqData.map(faq => (\n                <ListItem key={faq.id}>\n                  <div className=\"item-info\">\n                    <FormGrid>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>Question</FormLabel>\n                        <FormInput\n                          value={faq.question}\n                          onChange={e =>\n                            updateFAQ(faq.id, 'question', e.target.value)\n                          }\n                          placeholder=\"Frequently asked question\"\n                        />\n                      </FormGroup>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>Answer</FormLabel>\n                        <FormTextarea\n                          value={faq.answer}\n                          onChange={e =>\n                            updateFAQ(faq.id, 'answer', e.target.value)\n                          }\n                          placeholder=\"Answer to the question\"\n                          rows={4}\n                        />\n                      </FormGroup>\n                    </FormGrid>\n                  </div>\n                  <div className=\"item-actions\">\n                    <ItemButton\n                      variant=\"danger\"\n                      onClick={() => deleteFAQ(faq.id)}\n                    >\n                      <FaTrash />\n                      Delete\n                    </ItemButton>\n                  </div>\n                </ListItem>\n              ))}\n            </ListContainer>\n          </ContentSection>\n        );\n\n      case 'business-hours':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaClock />\n                Business Hours\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>\n                  {sectionVisibility['business-hours'] ? 'Visible' : 'Hidden'}\n                </span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['business-hours']}\n                    onChange={() => toggleSectionVisibility('business-hours')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n            <FormGrid>\n              <FormGroup style={{ gridColumn: '1 / -1' }}>\n                <FormLabel>Section Title</FormLabel>\n                <FormInput\n                  value={businessHoursData.title}\n                  onChange={e => {\n                    setBusinessHoursData(prev => ({\n                      ...prev,\n                      title: e.target.value,\n                    }));\n                    trackSectionChange('business-hours');\n                  }}\n                  placeholder=\"Business Hours\"\n                />\n              </FormGroup>\n              {Object.entries(businessHoursData.hours).map(([day, time]) => (\n                <FormGroup key={day}>\n                  <FormLabel>\n                    {day.charAt(0).toUpperCase() + day.slice(1)}\n                  </FormLabel>\n                  <FormInput\n                    value={time}\n                    onChange={e => {\n                      setBusinessHoursData(prev => ({\n                        ...prev,\n                        hours: { ...prev.hours, [day]: e.target.value },\n                      }));\n                      trackSectionChange('business-hours');\n                    }}\n                    placeholder=\"9:00 AM - 6:00 PM\"\n                  />\n                </FormGroup>\n              ))}\n            </FormGrid>\n          </ContentSection>\n        );\n\n      case 'contact':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaPhone />\n                Contact Information\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>\n                  {sectionVisibility['contact'] ? 'Visible' : 'Hidden'}\n                </span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['contact']}\n                    onChange={() => toggleSectionVisibility('contact')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n            <FormGrid>\n              <FormGroup style={{ gridColumn: '1 / -1' }}>\n                <FormLabel>Section Title</FormLabel>\n                <FormInput\n                  value={contactData.title}\n                  onChange={e => {\n                    setContactData(prev => ({\n                      ...prev,\n                      title: e.target.value,\n                    }));\n                    trackSectionChange('contact');\n                  }}\n                  placeholder=\"Get In Touch\"\n                />\n              </FormGroup>\n              <FormGroup style={{ gridColumn: '1 / -1' }}>\n                <FormLabel>Description</FormLabel>\n                <FormTextarea\n                  value={contactData.description}\n                  onChange={e => {\n                    setContactData(prev => ({\n                      ...prev,\n                      description: e.target.value,\n                    }));\n                    trackSectionChange('contact');\n                  }}\n                  placeholder=\"Contact section description\"\n                  rows={3}\n                />\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Email</FormLabel>\n                <FormInput\n                  type=\"email\"\n                  value={contactData.email}\n                  onChange={e => {\n                    setContactData(prev => ({\n                      ...prev,\n                      email: e.target.value,\n                    }));\n                    trackSectionChange('contact');\n                  }}\n                  placeholder=\"hello@business.com\"\n                />\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Phone</FormLabel>\n                <FormInput\n                  type=\"tel\"\n                  value={contactData.phone}\n                  onChange={e => {\n                    setContactData(prev => ({\n                      ...prev,\n                      phone: e.target.value,\n                    }));\n                    trackSectionChange('contact');\n                  }}\n                  placeholder=\"+1 (555) 123-4567\"\n                />\n              </FormGroup>\n              <FormGroup style={{ gridColumn: '1 / -1' }}>\n                <FormLabel>Address</FormLabel>\n                <FormTextarea\n                  value={contactData.address}\n                  onChange={e => {\n                    setContactData(prev => ({\n                      ...prev,\n                      address: e.target.value,\n                    }));\n                    trackSectionChange('contact');\n                  }}\n                  placeholder=\"123 Business Street, City, State 12345\"\n                  rows={3}\n                />\n              </FormGroup>\n              <FormGroup style={{ gridColumn: '1 / -1' }}>\n                <FormLabel>Social Media</FormLabel>\n                <FormGrid>\n                  <FormGroup>\n                    <FormLabel>Facebook</FormLabel>\n                    <FormInput\n                      value={contactData.socialMedia?.facebook || ''}\n                      onChange={e => {\n                        setContactData(prev => ({\n                          ...prev,\n                          socialMedia: {\n                            ...prev.socialMedia,\n                            facebook: e.target.value,\n                          },\n                        }));\n                        trackSectionChange('contact');\n                      }}\n                      placeholder=\"Facebook URL\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>Instagram</FormLabel>\n                    <FormInput\n                      value={contactData.socialMedia?.instagram || ''}\n                      onChange={e => {\n                        setContactData(prev => ({\n                          ...prev,\n                          socialMedia: {\n                            ...prev.socialMedia,\n                            instagram: e.target.value,\n                          },\n                        }));\n                        trackSectionChange('contact');\n                      }}\n                      placeholder=\"Instagram URL\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>Twitter</FormLabel>\n                    <FormInput\n                      value={contactData.socialMedia?.twitter || ''}\n                      onChange={e => {\n                        setContactData(prev => ({\n                          ...prev,\n                          socialMedia: {\n                            ...prev.socialMedia,\n                            twitter: e.target.value,\n                          },\n                        }));\n                        trackSectionChange('contact');\n                      }}\n                      placeholder=\"Twitter URL\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>LinkedIn</FormLabel>\n                    <FormInput\n                      value={contactData.socialMedia?.linkedin || ''}\n                      onChange={e => {\n                        setContactData(prev => ({\n                          ...prev,\n                          socialMedia: {\n                            ...prev.socialMedia,\n                            linkedin: e.target.value,\n                          },\n                        }));\n                        trackSectionChange('contact');\n                      }}\n                      placeholder=\"LinkedIn URL\"\n                    />\n                  </FormGroup>\n                </FormGrid>\n              </FormGroup>\n\n              {/* Button Labels & Contact Form UI */}\n              <FormGroup\n                style={{ gridColumn: '1 / -1', marginTop: theme.spacing.xl }}\n              >\n                <h3\n                  style={{\n                    marginBottom: theme.spacing.lg,\n                    color: theme.colors.gray800,\n                    borderTop: `1px solid ${theme.colors.gray200}`,\n                    paddingTop: theme.spacing.lg,\n                  }}\n                >\n                  Button Labels\n                </h3>\n                <FormGrid>\n                  <FormGroup>\n                    <FormLabel>Primary Action Button</FormLabel>\n                    <FormInput\n                      value={uiContentData.buttons?.bookNow || 'Book Now'}\n                      onChange={e => {\n                        setUiContentData(prev => ({\n                          ...prev,\n                          buttons: { ...prev.buttons, bookNow: e.target.value },\n                        }));\n                        trackSectionChange('contact');\n                      }}\n                      placeholder=\"Book Now\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>Send Message Button</FormLabel>\n                    <FormInput\n                      value={\n                        uiContentData.buttons?.sendMessage || 'Send Message'\n                      }\n                      onChange={e => {\n                        setUiContentData(prev => ({\n                          ...prev,\n                          buttons: {\n                            ...prev.buttons,\n                            sendMessage: e.target.value,\n                          },\n                        }));\n                        trackSectionChange('contact');\n                      }}\n                      placeholder=\"Send Message\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>Contact Us Button</FormLabel>\n                    <FormInput\n                      value={uiContentData.buttons?.contactUs || 'Contact Us'}\n                      onChange={e => {\n                        setUiContentData(prev => ({\n                          ...prev,\n                          buttons: {\n                            ...prev.buttons,\n                            contactUs: e.target.value,\n                          },\n                        }));\n                        trackSectionChange('contact');\n                      }}\n                      placeholder=\"Contact Us\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>Learn More Button</FormLabel>\n                    <FormInput\n                      value={uiContentData.buttons?.learnMore || 'Learn More'}\n                      onChange={e => {\n                        setUiContentData(prev => ({\n                          ...prev,\n                          buttons: {\n                            ...prev.buttons,\n                            learnMore: e.target.value,\n                          },\n                        }));\n                        trackSectionChange('contact');\n                      }}\n                      placeholder=\"Learn More\"\n                    />\n                  </FormGroup>\n                </FormGrid>\n              </FormGroup>\n\n              <FormGroup\n                style={{ gridColumn: '1 / -1', marginTop: theme.spacing.lg }}\n              >\n                <h3\n                  style={{\n                    marginBottom: theme.spacing.lg,\n                    color: theme.colors.gray800,\n                  }}\n                >\n                  Contact Form Placeholders\n                </h3>\n                <FormGrid>\n                  <FormGroup>\n                    <FormLabel>Name Field Placeholder</FormLabel>\n                    <FormInput\n                      value={\n                        uiContentData.contactForm?.placeholders?.name ||\n                        'Your Name'\n                      }\n                      onChange={e => {\n                        setUiContentData(prev => ({\n                          ...prev,\n                          contactForm: {\n                            ...prev.contactForm,\n                            placeholders: {\n                              ...prev.contactForm?.placeholders,\n                              name: e.target.value,\n                            },\n                          },\n                        }));\n                        trackSectionChange('contact');\n                      }}\n                      placeholder=\"Your Name\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>Email Field Placeholder</FormLabel>\n                    <FormInput\n                      value={\n                        uiContentData.contactForm?.placeholders?.email ||\n                        'Your Email'\n                      }\n                      onChange={e => {\n                        setUiContentData(prev => ({\n                          ...prev,\n                          contactForm: {\n                            ...prev.contactForm,\n                            placeholders: {\n                              ...prev.contactForm?.placeholders,\n                              email: e.target.value,\n                            },\n                          },\n                        }));\n                        trackSectionChange('contact');\n                      }}\n                      placeholder=\"Your Email\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>Phone Field Placeholder</FormLabel>\n                    <FormInput\n                      value={\n                        uiContentData.contactForm?.placeholders?.phone ||\n                        'Your Phone'\n                      }\n                      onChange={e => {\n                        setUiContentData(prev => ({\n                          ...prev,\n                          contactForm: {\n                            ...prev.contactForm,\n                            placeholders: {\n                              ...prev.contactForm?.placeholders,\n                              phone: e.target.value,\n                            },\n                          },\n                        }));\n                        trackSectionChange('contact');\n                      }}\n                      placeholder=\"Your Phone\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>Message Field Placeholder</FormLabel>\n                    <FormInput\n                      value={\n                        uiContentData.contactForm?.placeholders?.message ||\n                        'Your Message'\n                      }\n                      onChange={e => {\n                        setUiContentData(prev => ({\n                          ...prev,\n                          contactForm: {\n                            ...prev.contactForm,\n                            placeholders: {\n                              ...prev.contactForm?.placeholders,\n                              message: e.target.value,\n                            },\n                          },\n                        }));\n                        trackSectionChange('contact');\n                      }}\n                      placeholder=\"Your Message\"\n                    />\n                  </FormGroup>\n                </FormGrid>\n              </FormGroup>\n            </FormGrid>\n          </ContentSection>\n        );\n\n      case 'custom-sections':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaPlus />\n                Custom Sections\n              </SectionTitle>\n            </SectionHeader>\n\n            <div\n              style={{\n                display: 'flex',\n                gap: '10px',\n                marginBottom: '20px',\n                flexWrap: 'wrap',\n              }}\n            >\n              <AddButton onClick={() => addCustomSection('text')}>\n                <FaTextHeight />\n                Add Text Section\n              </AddButton>\n              <AddButton\n                onClick={() => addCustomSection('list')}\n                style={{ background: '#10b981' }}\n              >\n                <FaList />\n                Add List Section\n              </AddButton>\n              <AddButton\n                onClick={() => addCustomSection('card')}\n                style={{ background: '#8b5cf6' }}\n              >\n                <FaServicestack />\n                Add Card Section\n              </AddButton>\n              <AddButton\n                onClick={() => addCustomSection('image')}\n                style={{ background: '#f59e0b' }}\n              >\n                <FaImages />\n                Add Image Section\n              </AddButton>\n            </div>\n\n            <ListContainer>\n              {customSectionsData.map(section => (\n                <ListItem\n                  key={section.id}\n                  style={{\n                    border: `2px solid ${section.visible ? '#10b981' : '#6b7280'}`,\n                  }}\n                >\n                  <div className=\"item-info\">\n                    <FormGrid>\n                      <FormGroup>\n                        <FormLabel>Section Title</FormLabel>\n                        <FormInput\n                          value={section.title}\n                          onChange={e =>\n                            updateCustomSection(\n                              section.id,\n                              'title',\n                              e.target.value\n                            )\n                          }\n                          placeholder=\"Section title\"\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>Section Type</FormLabel>\n                        <select\n                          value={section.type}\n                          onChange={e =>\n                            updateCustomSection(\n                              section.id,\n                              'type',\n                              e.target.value\n                            )\n                          }\n                          style={{\n                            padding: '10px',\n                            border: '2px solid #e2e8f0',\n                            borderRadius: '6px',\n                            fontSize: '1rem',\n                            width: '100%',\n                          }}\n                        >\n                          <option value=\"text\">📝 Text Content</option>\n                          <option value=\"list\">📋 List Items</option>\n                          <option value=\"card\">🎴 Card Layout</option>\n                          <option value=\"image\">🖼️ Image Gallery</option>\n                        </select>\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>\n                          <input\n                            type=\"checkbox\"\n                            checked={section.visible || false}\n                            onChange={e =>\n                              updateCustomSection(\n                                section.id,\n                                'visible',\n                                e.target.checked\n                              )\n                            }\n                            style={{ marginRight: '8px' }}\n                          />\n                          <span\n                            style={{\n                              color: section.visible ? '#10b981' : '#6b7280',\n                            }}\n                          >\n                            {section.visible ? '👁️ Visible' : '🚫 Hidden'}\n                          </span>\n                        </FormLabel>\n                      </FormGroup>\n\n                      {/* Smart editing interface based on section type */}\n                      {section.type === 'text' && (\n                        <>\n                          <FormGroup style={{ gridColumn: '1 / -1' }}>\n                            <FormLabel>Heading</FormLabel>\n                            <FormInput\n                              value={section.content.heading || ''}\n                              onChange={e =>\n                                updateCustomSection(section.id, 'content', {\n                                  ...section.content,\n                                  heading: e.target.value,\n                                })\n                              }\n                              placeholder=\"Section heading\"\n                            />\n                          </FormGroup>\n                          <FormGroup style={{ gridColumn: '1 / -1' }}>\n                            <FormLabel>Description</FormLabel>\n                            <FormTextarea\n                              value={section.content.description || ''}\n                              onChange={e =>\n                                updateCustomSection(section.id, 'content', {\n                                  ...section.content,\n                                  description: e.target.value,\n                                })\n                              }\n                              placeholder=\"Your content here...\"\n                              rows={4}\n                            />\n                          </FormGroup>\n                        </>\n                      )}\n\n                      {section.type === 'list' && (\n                        <>\n                          <FormGroup style={{ gridColumn: '1 / -1' }}>\n                            <FormLabel>List Heading</FormLabel>\n                            <FormInput\n                              value={section.content.heading || ''}\n                              onChange={e =>\n                                updateCustomSection(section.id, 'content', {\n                                  ...section.content,\n                                  heading: e.target.value,\n                                })\n                              }\n                              placeholder=\"List heading\"\n                            />\n                          </FormGroup>\n                          <FormGroup style={{ gridColumn: '1 / -1' }}>\n                            <FormLabel>List Items (one per line)</FormLabel>\n                            <FormTextarea\n                              value={(section.content.items || []).join('\\n')}\n                              onChange={e =>\n                                updateCustomSection(section.id, 'content', {\n                                  ...section.content,\n                                  items: e.target.value\n                                    .split('\\n')\n                                    .filter(item => item.trim()),\n                                })\n                              }\n                              placeholder=\"Item 1&#10;Item 2&#10;Item 3\"\n                              rows={5}\n                            />\n                          </FormGroup>\n                        </>\n                      )}\n\n                      {section.type === 'card' && (\n                        <>\n                          <FormGroup style={{ gridColumn: '1 / -1' }}>\n                            <FormLabel>Card Section Heading</FormLabel>\n                            <FormInput\n                              value={section.content.heading || ''}\n                              onChange={e =>\n                                updateCustomSection(section.id, 'content', {\n                                  ...section.content,\n                                  heading: e.target.value,\n                                })\n                              }\n                              placeholder=\"Card section heading\"\n                            />\n                          </FormGroup>\n                          <FormGroup style={{ gridColumn: '1 / -1' }}>\n                            <FormLabel>Cards (JSON format)</FormLabel>\n                            <FormTextarea\n                              value={JSON.stringify(\n                                section.content.cards || [],\n                                null,\n                                2\n                              )}\n                              onChange={e => {\n                                try {\n                                  const cards = JSON.parse(e.target.value);\n                                  updateCustomSection(section.id, 'content', {\n                                    ...section.content,\n                                    cards,\n                                  });\n                                } catch (error) {\n                                  // Invalid JSON, ignore\n                                }\n                              }}\n                              placeholder='[{\"title\": \"Card Title\", \"description\": \"Card description\", \"icon\": \"🎯\"}]'\n                              rows={6}\n                            />\n                          </FormGroup>\n                        </>\n                      )}\n\n                      {section.type === 'image' && (\n                        <>\n                          <FormGroup style={{ gridColumn: '1 / -1' }}>\n                            <FormLabel>Gallery Heading</FormLabel>\n                            <FormInput\n                              value={section.content.heading || ''}\n                              onChange={e =>\n                                updateCustomSection(section.id, 'content', {\n                                  ...section.content,\n                                  heading: e.target.value,\n                                })\n                              }\n                              placeholder=\"Gallery heading\"\n                            />\n                          </FormGroup>\n                          <FormGroup>\n                            <FormLabel>Columns</FormLabel>\n                            <FormInput\n                              type=\"number\"\n                              min=\"1\"\n                              max=\"6\"\n                              value={section.content.columns || 3}\n                              onChange={e =>\n                                updateCustomSection(section.id, 'content', {\n                                  ...section.content,\n                                  columns: parseInt(e.target.value),\n                                })\n                              }\n                            />\n                          </FormGroup>\n                          <FormGroup style={{ gridColumn: '1 / -1' }}>\n                            <FormLabel>Image URLs (one per line)</FormLabel>\n                            <FormTextarea\n                              value={(section.content.images || []).join('\\n')}\n                              onChange={e =>\n                                updateCustomSection(section.id, 'content', {\n                                  ...section.content,\n                                  images: e.target.value\n                                    .split('\\n')\n                                    .filter(url => url.trim()),\n                                })\n                              }\n                              placeholder=\"https://example.com/image1.jpg&#10;https://example.com/image2.jpg\"\n                              rows={4}\n                            />\n                          </FormGroup>\n                        </>\n                      )}\n\n                      <FormGroup\n                        style={{\n                          gridColumn: '1 / -1',\n                          marginTop: '20px',\n                          padding: '10px',\n                          background: '#f8f9fa',\n                          borderRadius: '6px',\n                        }}\n                      >\n                        <FormLabel>Advanced: Raw JSON Content</FormLabel>\n                        <FormTextarea\n                          value={JSON.stringify(section.content, null, 2)}\n                          onChange={e => {\n                            try {\n                              const content = JSON.parse(e.target.value);\n                              updateCustomSection(\n                                section.id,\n                                'content',\n                                content\n                              );\n                            } catch (error) {\n                              // Invalid JSON, but still update to show user's input\n                              updateCustomSection(section.id, 'content', {\n                                raw: e.target.value,\n                              });\n                            }\n                          }}\n                          placeholder='{\"title\": \"Custom Content\", \"description\": \"Your content here\"}'\n                          rows={4}\n                          style={{\n                            fontSize: '0.85rem',\n                            fontFamily: 'monospace',\n                          }}\n                        />\n                      </FormGroup>\n                    </FormGrid>\n                  </div>\n                  <div className=\"item-actions\">\n                    <ItemButton\n                      onClick={() => {\n                        const newOrder =\n                          customSectionsData.indexOf(section) - 1;\n                        if (newOrder >= 0) {\n                          const newData = [...customSectionsData];\n                          const [removed] = newData.splice(\n                            customSectionsData.indexOf(section),\n                            1\n                          );\n                          newData.splice(newOrder, 0, removed);\n                          setCustomSectionsData(newData);\n                          trackSectionChange('custom');\n                        }\n                      }}\n                      disabled={customSectionsData.indexOf(section) === 0}\n                    >\n                      ↑ Up\n                    </ItemButton>\n                    <ItemButton\n                      onClick={() => {\n                        const newOrder =\n                          customSectionsData.indexOf(section) + 1;\n                        if (newOrder < customSectionsData.length) {\n                          const newData = [...customSectionsData];\n                          const [removed] = newData.splice(\n                            customSectionsData.indexOf(section),\n                            1\n                          );\n                          newData.splice(newOrder, 0, removed);\n                          setCustomSectionsData(newData);\n                          trackSectionChange('custom');\n                        }\n                      }}\n                      disabled={\n                        customSectionsData.indexOf(section) ===\n                        customSectionsData.length - 1\n                      }\n                    >\n                      ↓ Down\n                    </ItemButton>\n                    <ItemButton\n                      variant=\"danger\"\n                      onClick={() => deleteCustomSection(section.id)}\n                    >\n                      <FaTrash />\n                      Delete\n                    </ItemButton>\n                  </div>\n                </ListItem>\n              ))}\n              {customSectionsData.length === 0 && (\n                <div\n                  style={{\n                    textAlign: 'center',\n                    padding: '40px',\n                    color: '#6b7280',\n                    border: '2px dashed #d1d5db',\n                    borderRadius: '8px',\n                  }}\n                >\n                  <FaPlus\n                    style={{\n                      fontSize: '3rem',\n                      marginBottom: '16px',\n                      opacity: 0.5,\n                    }}\n                  />\n                  <h3>No Custom Sections Yet</h3>\n                  <p>\n                    Click one of the buttons above to add your first custom\n                    section!\n                  </p>\n                </div>\n              )}\n            </ListContainer>\n          </ContentSection>\n        );\n\n      case 'section-order':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaList />\n                Section Order Management\n              </SectionTitle>\n            </SectionHeader>\n\n            <div\n              style={{\n                background: '#eff6ff',\n                border: '1px solid #dbeafe',\n                padding: '16px',\n                borderRadius: '8px',\n                marginBottom: '24px',\n              }}\n            >\n              <h4\n                style={{\n                  margin: '0 0 8px 0',\n                  color: '#1e40af',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '8px',\n                }}\n              >\n                <FaChartBar />\n                Section Management\n              </h4>\n              <p style={{ margin: '0', color: '#1e40af', fontSize: '0.9rem' }}>\n                Reorder sections to customize your website layout. Use the arrow\n                buttons to move sections up or down. Disabled sections will\n                appear grayed out but can still be reordered.\n              </p>\n            </div>\n\n            <div\n              style={{\n                display: 'flex',\n                gap: '12px',\n                marginBottom: '20px',\n                flexWrap: 'wrap',\n              }}\n            >\n              <button\n                onClick={() => {\n                  const defaultOrder = [\n                    'hero',\n                    'about-us',\n                    'services-offered',\n                    'portfolio',\n                    'skills',\n                    'experience',\n                    'team',\n                    'gallery',\n                    'packages',\n                    'testimonials',\n                    'reviews',\n                    'faq',\n                    'business-hours',\n                    'contact',\n                  ];\n                  setSectionOrderData(defaultOrder);\n                  trackSectionChange('order');\n                }}\n                style={{\n                  padding: '8px 16px',\n                  background: '#3b82f6',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  fontSize: '0.9rem',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '6px',\n                }}\n              >\n                <FaUndo />\n                Reset to Default\n              </button>\n              <button\n                onClick={() => {\n                  const shuffled = [...sectionOrderData].sort(\n                    () => Math.random() - 0.5\n                  );\n                  setSectionOrderData(shuffled);\n                  trackSectionChange('order');\n                }}\n                style={{\n                  padding: '8px 16px',\n                  background: '#8b5cf6',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  fontSize: '0.9rem',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '6px',\n                }}\n              >\n                <FaRandom />\n                Shuffle\n              </button>\n            </div>\n\n            <ListContainer>\n              {sectionOrderData.map((sectionId, index) => {\n                const isVisible = sectionVisibility[sectionId];\n                const sectionIcon =\n                  {\n                    hero: '🏠',\n                    'about-us': '👥',\n                    'services-offered': '⚙️',\n                    portfolio: '💼',\n                    skills: '🎯',\n                    experience: '📄',\n                    team: '👨‍👩‍👧‍👦',\n                    gallery: '📸',\n                    packages: '💰',\n                    testimonials: '💬',\n                    reviews: '⭐',\n                    faq: '❓',\n                    'business-hours': '🕐',\n                    contact: '📞',\n                  }[sectionId] || '📋';\n\n                return (\n                  <ListItem\n                    key={sectionId}\n                    style={{\n                      cursor: 'move',\n                      opacity: isVisible ? 1 : 0.6,\n                      border: `2px solid ${isVisible ? '#10b981' : '#6b7280'}`,\n                      background: isVisible ? '#ffffff' : '#f9fafb',\n                    }}\n                  >\n                    <div\n                      className=\"item-info\"\n                      style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: '12px',\n                        flex: 1,\n                      }}\n                    >\n                      <div\n                        style={{\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          width: '32px',\n                          height: '32px',\n                          background: '#f3f4f6',\n                          borderRadius: '6px',\n                          fontSize: '1.2rem',\n                        }}\n                      >\n                        {index + 1}\n                      </div>\n                      <span style={{ fontSize: '1.5rem' }}>{sectionIcon}</span>\n                      <div style={{ flex: 1 }}>\n                        <div\n                          style={{\n                            fontWeight: '600',\n                            textTransform: 'capitalize',\n                            color: isVisible ? '#111827' : '#6b7280',\n                          }}\n                        >\n                          {sectionId.replace(/-/g, ' ')}\n                        </div>\n                        <div\n                          style={{\n                            fontSize: '0.8rem',\n                            color: isVisible ? '#10b981' : '#6b7280',\n                            display: 'flex',\n                            alignItems: 'center',\n                            gap: '4px',\n                          }}\n                        >\n                          {isVisible ? (\n                            <>\n                              <FaEye />\n                              Visible\n                            </>\n                          ) : (\n                            <>\n                              <FaEyeSlash />\n                              Hidden\n                            </>\n                          )}\n                        </div>\n                      </div>\n                      <FaGripHorizontal\n                        style={{ color: '#9ca3af', fontSize: '1.2rem' }}\n                      />\n                    </div>\n                    <div className=\"item-actions\">\n                      <ItemButton\n                        onClick={() => {\n                          if (index > 0) {\n                            reorderSections(index, index - 1);\n                          }\n                        }}\n                        disabled={index === 0}\n                        title=\"Move up\"\n                      >\n                        <FaChevronUp />\n                      </ItemButton>\n                      <ItemButton\n                        onClick={() => {\n                          if (index < sectionOrderData.length - 1) {\n                            reorderSections(index, index + 1);\n                          }\n                        }}\n                        disabled={index === sectionOrderData.length - 1}\n                        title=\"Move down\"\n                      >\n                        <FaChevronDown />\n                      </ItemButton>\n                      <ItemButton\n                        onClick={() => toggleSectionVisibility(sectionId)}\n                        style={{\n                          background: isVisible ? '#ef4444' : '#10b981',\n                          color: 'white',\n                        }}\n                        title={isVisible ? 'Hide section' : 'Show section'}\n                      >\n                        {isVisible ? <FaEyeSlash /> : <FaEye />}\n                      </ItemButton>\n                    </div>\n                  </ListItem>\n                );\n              })}\n            </ListContainer>\n\n            {/* Preview order */}\n            <div\n              style={{\n                marginTop: '24px',\n                padding: '16px',\n                background: '#f8fafc',\n                border: '1px solid #e2e8f0',\n                borderRadius: '8px',\n              }}\n            >\n              <h4 style={{ margin: '0 0 12px 0', color: '#374151' }}>\n                Section Preview Order\n              </h4>\n              <div style={{ display: 'flex', flexWrap: 'wrap', gap: '6px' }}>\n                {sectionOrderData.map((sectionId, index) => (\n                  <span\n                    key={sectionId}\n                    style={{\n                      padding: '4px 8px',\n                      background: sectionVisibility[sectionId]\n                        ? '#3b82f6'\n                        : '#6b7280',\n                      color: 'white',\n                      borderRadius: '4px',\n                      fontSize: '0.8rem',\n                      opacity: sectionVisibility[sectionId] ? 1 : 0.6,\n                    }}\n                  >\n                    {index + 1}. {sectionId.replace(/-/g, ' ')}\n                  </span>\n                ))}\n              </div>\n            </div>\n          </ContentSection>\n        );\n\n      default:\n        return (\n          <ContentSection>\n            <SectionTitle>\n              <FaEdit />\n              {activeSection.charAt(0).toUpperCase() +\n                activeSection.slice(1).replace(/-/g, ' ')}{' '}\n              Management\n            </SectionTitle>\n            <p>\n              This section is under development. Please select another section\n              to edit.\n            </p>\n            <p>\n              Available sections: Hero, About Us, Services, Team, Portfolio,\n              Skills, Experience, Gallery, Packages, Testimonials, Reviews, FAQ,\n              Business Hours, Contact\n            </p>\n          </ContentSection>\n        );\n    }\n  };\n\n  if (loading) {\n    return (\n      <DashboardContainer>\n        <div style={{ padding: '4rem', textAlign: 'center' }}>\n          <h2>Loading Dashboard...</h2>\n          <p>Please wait while we load your business dashboard.</p>\n        </div>\n      </DashboardContainer>\n    );\n  }\n\n  if (!business) {\n    return (\n      <DashboardContainer>\n        <div style={{ padding: '4rem', textAlign: 'center' }}>\n          <h2>Business Not Found</h2>\n          <p>The business you're trying to edit doesn't exist.</p>\n          <ActionButton onClick={() => navigate('/business-websites')}>\n            <FaArrowLeft />\n            Back to Business Templates\n          </ActionButton>\n        </div>\n      </DashboardContainer>\n    );\n  }\n\n  return (\n    <DashboardContainer>\n      {/* Mobile Sidebar Overlay */}\n      <MobileSidebarOverlay\n        isOpen={mobileSidebarOpen}\n        onClick={closeMobileSidebar}\n      />\n\n      {/* Mobile Menu Button */}\n      <MobileMenuButton\n        onClick={() => setMobileSidebarOpen(!mobileSidebarOpen)}\n        aria-label={mobileSidebarOpen ? 'Close menu' : 'Open menu'}\n      >\n        {mobileSidebarOpen ? <FaTimes /> : <FaBars />}\n      </MobileMenuButton>\n\n      {/* Sidebar */}\n      <Sidebar mobileOpen={mobileSidebarOpen}>\n        <MobileSidebarCloseButton onClick={closeMobileSidebar}>\n          <FaTimes />\n        </MobileSidebarCloseButton>\n\n        <SidebarHeader>\n          <BusinessName>{business.name}</BusinessName>\n          <BusinessRole>Business Dashboard</BusinessRole>\n        </SidebarHeader>\n\n        <SidebarNav>\n          <NavSection>\n            <NavSectionTitle>Content Management</NavSectionTitle>\n            {navigationItems\n              .filter(item => item.section === 'Content Management')\n              .map(item => (\n                <NavItem\n                  key={item.id}\n                  active={activeSection === item.id}\n                  onClick={() => setActiveSection(item.id)}\n                >\n                  <item.icon />\n                  {item.label}\n                </NavItem>\n              ))}\n          </NavSection>\n\n          <NavSection>\n            <NavSectionTitle>Advanced</NavSectionTitle>\n            {navigationItems\n              .filter(item => item.section === 'Advanced')\n              .map(item => (\n                <NavItem\n                  key={item.id}\n                  active={activeSection === item.id}\n                  onClick={() => setActiveSection(item.id)}\n                >\n                  <item.icon />\n                  {item.label}\n                </NavItem>\n              ))}\n          </NavSection>\n\n          <NavSection>\n            <NavSectionTitle>Account Management</NavSectionTitle>\n            {navigationItems\n              .filter(item => item.section === 'Account Management')\n              .map(item => (\n                <NavItem\n                  key={item.id}\n                  active={activeSection === item.id}\n                  onClick={() => setActiveSection(item.id)}\n                >\n                  <item.icon />\n                  {item.label}\n                </NavItem>\n              ))}\n          </NavSection>\n\n          {/* Save Changes Section - Now part of scrollable content */}\n          <NavSection>\n            <NavSectionTitle>Save Changes</NavSectionTitle>\n            <div style={{ padding: '0 16px' }}>\n              <SaveActionsContainer>\n                {hasUnsavedChanges && (\n                  <ChangesIndicator>\n                    <FaEdit />\n                    Unsaved changes\n                  </ChangesIndicator>\n                )}\n\n                <SaveButton\n                  variant=\"primary\"\n                  onClick={handleSaveChanges}\n                  disabled={!hasUnsavedChanges}\n                  saved={saved && !hasUnsavedChanges}\n                >\n                  {saved && !hasUnsavedChanges ? (\n                    <>\n                      <FaCheckCircle />\n                      Changes Saved\n                    </>\n                  ) : (\n                    <>\n                      <FaSave />\n                      Save Changes\n                    </>\n                  )}\n                </SaveButton>\n\n                <SaveButton\n                  variant=\"success\"\n                  onClick={handleSaveAndGoLive}\n                  disabled={hasUnsavedChanges && !saved}\n                >\n                  <FaCheckCircle />\n                  Save & Go Live\n                </SaveButton>\n\n                <SaveButton\n                  variant=\"secondary\"\n                  onClick={handleDiscardChanges}\n                  disabled={!hasUnsavedChanges}\n                >\n                  <FaUndo />\n                  Discard Changes\n                </SaveButton>\n\n                {changedSections.size > 0 && (\n                  <div\n                    style={{\n                      marginTop: '16px',\n                      padding: '12px',\n                      background: '#fef3c7',\n                      borderRadius: '6px',\n                      fontSize: '0.85rem',\n                    }}\n                  >\n                    <strong>Changed sections:</strong>\n                    <div style={{ marginTop: '4px' }}>\n                      {Array.from(changedSections).map(section => (\n                        <span\n                          key={section}\n                          style={{\n                            display: 'inline-block',\n                            background: '#f59e0b',\n                            color: 'white',\n                            padding: '2px 6px',\n                            borderRadius: '3px',\n                            margin: '2px',\n                            fontSize: '0.8rem',\n                          }}\n                        >\n                          {section.replace(/-/g, ' ')}\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </SaveActionsContainer>\n            </div>\n          </NavSection>\n        </SidebarNav>\n      </Sidebar>\n\n      {/* Main Content */}\n      <MainContent>\n        <ContentHeader>\n          <PageTitle>Business Dashboard</PageTitle>\n          <PageActions>\n            <ActionButton\n              onClick={() => navigate(`/${businessId}`)}\n              aria-label=\"Preview business website\"\n            >\n              <FaEye />\n              Preview Website\n            </ActionButton>\n            <ActionButton\n              variant=\"primary\"\n              onClick={() => window.open(`/${businessId}`, '_blank')}\n              aria-label=\"Open business website in new tab\"\n            >\n              <FaExternalLinkAlt />\n              Open Website\n            </ActionButton>\n          </PageActions>\n        </ContentHeader>\n\n        {renderContent()}\n      </MainContent>\n    </DashboardContainer>\n  );\n};\n\nexport default BuisnessAdminDashboard;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/business/pages/BusinessWebsitePage.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1416,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1416,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[32919,33038],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1429,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1429,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[33391,33504],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1440,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1440,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[33697,33801],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1446,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1446,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[33927,34036],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1453,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1453,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[34170,34272],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1464,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1464,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[34534,34638],"text":""},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport {\n  FaEdit,\n  FaPhone,\n  FaEnvelope,\n  FaMapMarkerAlt,\n  FaStar,\n  FaQuoteLeft,\n  FaFacebook,\n  FaTwitter,\n  FaInstagram,\n  FaLinkedin,\n  FaArrowLeft,\n  FaBars,\n  FaTimes,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport { getBusinessTemplate } from '../../DummyData';\nimport { fetchBusinessData } from '../../utils/businessAPI';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  background: ${theme.colors.white};\n`;\n\n// Navbar Styles\nconst Navbar = styled.nav`\n  background: ${theme.colors.white};\n  box-shadow: ${theme.shadows.sm};\n  position: sticky;\n  top: 0;\n  z-index: 40;\n  transition: top 0.3s ease;\n`;\n\nconst NavContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 70px;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    padding: 0 ${theme.spacing.sm};\n    height: 60px;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-wrap: wrap;\n    height: auto;\n    min-height: 60px;\n    padding: ${theme.spacing.sm};\n  }\n`;\n\nconst Logo = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  font-size: 1.8rem;\n  font-weight: 800;\n  color: ${props => props.primaryColor || theme.colors.primary};\n  flex: 1;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    font-size: 1.5rem;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.3rem;\n    flex: none;\n    width: 100%;\n    text-align: center;\n    margin-bottom: ${theme.spacing.sm};\n  }\n`;\n\nconst NavLinks = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  display: flex;\n  gap: ${theme.spacing.xl};\n  flex: 2;\n  justify-content: center;\n\n  a {\n    text-decoration: none;\n    color: ${theme.colors.gray700};\n    font-weight: 500;\n    padding: ${theme.spacing.sm} 0;\n    position: relative;\n    transition: color 0.2s ease;\n    white-space: nowrap;\n\n    &:hover {\n      color: ${props => props.primaryColor || theme.colors.primary};\n    }\n\n    &:after {\n      content: '';\n      position: absolute;\n      width: 0;\n      height: 2px;\n      bottom: 0;\n      left: 0;\n      background: ${props => props.primaryColor || theme.colors.primary};\n      transition: width 0.3s ease;\n    }\n\n    &:hover:after {\n      width: 100%;\n    }\n  }\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    display: none;\n  }\n`;\n\nconst MobileMenuButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  display: none;\n  background: transparent;\n  border: none;\n  color: ${theme.colors.gray700};\n  font-size: 1.5rem;\n  cursor: pointer;\n  padding: ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    color: ${props => props.primaryColor || theme.colors.primary};\n  }\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    display: block;\n  }\n`;\n\nconst MobileMenu = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen' && prop !== 'primaryColor',\n})`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  background: ${theme.colors.white};\n  z-index: 50;\n  transform: translateX(${props => (props.isOpen ? '0' : '-100%')});\n  transition: transform 0.3s ease;\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: ${theme.breakpoints.desktop}) {\n    display: none;\n  }\n`;\n\nconst MobileMenuHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${theme.spacing.lg};\n  border-bottom: 1px solid ${theme.colors.gray200};\n`;\n\nconst MobileMenuLinks = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  flex: 1;\n  padding: ${theme.spacing.lg};\n\n  a {\n    display: block;\n    padding: ${theme.spacing.lg};\n    text-decoration: none;\n    color: ${theme.colors.gray700};\n    font-weight: 500;\n    font-size: 1.1rem;\n    border-bottom: 1px solid ${theme.colors.gray100};\n    transition: all 0.2s ease;\n\n    &:hover {\n      background: ${theme.colors.gray50};\n      color: ${props => props.primaryColor || theme.colors.primary};\n    }\n  }\n`;\n\nconst OwnerLink = styled.button`\n  background: transparent;\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.sm} ${theme.spacing.lg};\n  border: 2px solid ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  flex: 1;\n  justify-content: flex-end;\n  min-height: 44px;\n\n  &:hover {\n    background: ${theme.colors.gray50};\n    border-color: ${theme.colors.gray400};\n  }\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    padding: ${theme.spacing.sm} ${theme.spacing.md};\n    font-size: 0.9rem;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex: none;\n    width: 100%;\n    justify-content: center;\n    margin-top: ${theme.spacing.sm};\n    min-height: 48px;\n  }\n`;\n\nconst BackToListButton = styled.button`\n  background: transparent;\n  color: ${theme.colors.gray600};\n  padding: ${theme.spacing.sm};\n  border: 1px solid ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  margin-right: ${theme.spacing.md};\n\n  &:hover {\n    background: ${theme.colors.gray50};\n  }\n`;\n\n// Hero Section Styles\nconst HeroSection = styled.section.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor' && prop !== 'businessType',\n})`\n  height: 100vh;\n  background:\n    linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.6)),\n    url(${props =>\n      props.businessType === 'gym'\n        ? 'https://images.unsplash.com/photo-1534438327276-14e5300c3a48?ixlib=rb-4.0.3&w=1200&q=80'\n        : props.businessType === 'restaurant'\n          ? 'https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?ixlib=rb-4.0.3&w=1200&q=80'\n          : props.businessType === 'salon'\n            ? 'https://images.unsplash.com/photo-1560066984-138dadb4c035?ixlib=rb-4.0.3&w=1200&q=80'\n            : 'https://images.unsplash.com/photo-1497366216548-37526070297c?ixlib=rb-4.0.3&w=1200&q=80'});\n  background-size: cover;\n  background-position: center;\n  background-attachment: fixed;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst HeroContent = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n  position: relative;\n  z-index: 1;\n  color: ${theme.colors.white};\n  text-align: center;\n`;\n\nconst HeroTitle = styled.h1`\n  font-size: 4.5rem;\n  font-weight: 900;\n  color: ${theme.colors.white};\n  margin-bottom: ${theme.spacing.xl};\n  line-height: 1.1;\n  letter-spacing: -0.02em;\n  text-align: center;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 3rem;\n  }\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    font-size: 3.8rem;\n  }\n`;\n\nconst HeroSubtitle = styled.p`\n  font-size: 1.4rem;\n  color: ${theme.colors.white};\n  margin-bottom: ${theme.spacing.xxl};\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  line-height: 1.6;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);\n  opacity: 0.95;\n`;\n\nconst HeroCTA = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  background: ${props => props.primaryColor || theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.lg} ${theme.spacing.xxl};\n  border: none;\n  border-radius: ${theme.borderRadius.lg};\n  font-size: 1.2rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: ${theme.shadows.lg};\n  }\n`;\n\n// Section Styles\nconst Section = styled.section`\n  padding: ${theme.spacing.xxl} 0;\n  background: ${props => props.background || theme.colors.white};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    padding: ${theme.spacing.xl} 0;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg} 0;\n  }\n`;\n\nconst SectionContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    padding: 0 ${theme.spacing.sm};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: 0 ${theme.spacing.sm};\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 2.5rem;\n  font-weight: 700;\n  text-align: center;\n  margin-bottom: ${theme.spacing.md};\n  color: ${theme.colors.gray900};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    font-size: 2.2rem;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.8rem;\n    margin-bottom: ${theme.spacing.sm};\n  }\n`;\n\nconst SectionSubtitle = styled.p`\n  font-size: 1.1rem;\n  text-align: center;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.xxl};\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n  line-height: 1.6;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    font-size: 1rem;\n    margin-bottom: ${theme.spacing.xl};\n    max-width: 90%;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 0.95rem;\n    margin-bottom: ${theme.spacing.lg};\n    max-width: 95%;\n  }\n`;\n\n// About Section Styles\nconst AboutGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${theme.spacing.xxl};\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.xl};\n  }\n`;\n\nconst AboutContent = styled.div`\n  h3 {\n    font-size: 1.5rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.lg};\n  }\n\n  p {\n    font-size: 1.1rem;\n    line-height: 1.7;\n    color: ${theme.colors.gray600};\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst AboutImage = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  height: 400px;\n  background: ${props => props.primaryColor + '20'};\n  border-radius: ${theme.borderRadius.xl};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 4rem;\n  color: ${props => props.primaryColor || theme.colors.primary};\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-top: ${theme.spacing.xxl};\n`;\n\nconst StatCard = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  text-align: center;\n  padding: ${theme.spacing.lg};\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n\n  .number {\n    font-size: 2.5rem;\n    font-weight: 800;\n    color: ${props => props.primaryColor || theme.colors.primary};\n    margin-bottom: ${theme.spacing.sm};\n  }\n\n  .label {\n    color: ${theme.colors.gray600};\n    font-weight: 500;\n  }\n`;\n\n// Services Section Styles\nconst ServicesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n    gap: ${theme.spacing.lg};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst ServiceCard = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.xl};\n  box-shadow: ${theme.shadows.md};\n  text-align: center;\n  transition: all 0.3s ease;\n  border: 1px solid ${theme.colors.gray200};\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: ${theme.shadows.lg};\n  }\n\n  .icon {\n    width: 60px;\n    height: 60px;\n    margin: 0 auto ${theme.spacing.lg};\n    background: ${props => props.primaryColor || theme.colors.primary};\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 1.5rem;\n    color: ${theme.colors.white};\n  }\n\n  h3 {\n    font-size: 1.3rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.md};\n  }\n\n  p {\n    color: ${theme.colors.gray600};\n    line-height: 1.6;\n  }\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    padding: ${theme.spacing.lg};\n\n    .icon {\n      width: 50px;\n      height: 50px;\n      font-size: 1.3rem;\n    }\n\n    h3 {\n      font-size: 1.2rem;\n    }\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.md};\n\n    .icon {\n      width: 45px;\n      height: 45px;\n      font-size: 1.2rem;\n      margin-bottom: ${theme.spacing.md};\n    }\n\n    h3 {\n      font-size: 1.1rem;\n    }\n\n    p {\n      font-size: 0.9rem;\n    }\n  }\n`;\n\n// Team Section Styles\nconst TeamGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: repeat(auto-fit, minmax(230px, 1fr));\n    gap: ${theme.spacing.lg};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst TeamCard = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  overflow: hidden;\n  box-shadow: ${theme.shadows.md};\n  text-align: center;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: ${theme.shadows.lg};\n  }\n`;\n\nconst TeamPhoto = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  height: 250px;\n  background: ${props => props.primaryColor + '30'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 3rem;\n  color: ${props => props.primaryColor || theme.colors.primary};\n`;\n\nconst TeamInfo = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  padding: ${theme.spacing.xl};\n\n  h3 {\n    font-size: 1.2rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.sm};\n  }\n\n  .role {\n    color: ${props => props.primaryColor || theme.colors.primary};\n    font-weight: 500;\n    margin-bottom: ${theme.spacing.md};\n  }\n\n  p {\n    color: ${theme.colors.gray600};\n    font-size: 0.9rem;\n    line-height: 1.5;\n  }\n`;\n\n// Testimonials Section Styles\nconst TestimonialsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  gap: ${theme.spacing.xl};\n`;\n\n// Gallery Section Styles\nconst GalleryGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: ${theme.spacing.lg};\n`;\n\nconst GalleryCategory = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  overflow: hidden;\n  box-shadow: ${theme.shadows.md};\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: ${theme.shadows.lg};\n  }\n`;\n\nconst GalleryImage = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  height: 200px;\n  background: linear-gradient(\n    135deg,\n    ${props => props.primaryColor + '20'} 0%,\n    ${props => props.primaryColor + '40'} 100%\n  );\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 3rem;\n  color: ${props => props.primaryColor || theme.colors.primary};\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    inset: 0;\n    background: rgba(0, 0, 0, 0.1);\n    opacity: 0;\n    transition: opacity 0.3s ease;\n  }\n\n  ${GalleryCategory}:hover &::after {\n    opacity: 1;\n  }\n`;\n\nconst GalleryInfo = styled.div`\n  padding: ${theme.spacing.lg};\n  text-align: center;\n\n  h3 {\n    font-size: 1.2rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.sm};\n  }\n\n  p {\n    color: ${theme.colors.gray600};\n    font-size: 0.9rem;\n  }\n`;\n\n// Packages Section Styles\nconst PackagesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n  gap: ${theme.spacing.xl};\n`;\n\nconst PackageCard = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor' && prop !== 'featured',\n})`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.xl};\n  box-shadow: ${theme.shadows.md};\n  text-align: center;\n  position: relative;\n  transition: all 0.3s ease;\n  border: 2px solid\n    ${props =>\n      props.featured\n        ? props.primaryColor || theme.colors.primary\n        : theme.colors.gray200};\n\n  &:hover {\n    transform: translateY(-6px);\n    box-shadow: ${theme.shadows.xl};\n  }\n\n  ${props =>\n    props.featured &&\n    `\n    &::before {\n      content: 'Most Popular';\n      position: absolute;\n      top: -12px;\n      left: 50%;\n      transform: translateX(-50%);\n      background: ${props.primaryColor || theme.colors.primary};\n      color: white;\n      padding: 4px 16px;\n      border-radius: 20px;\n      font-size: 0.8rem;\n      font-weight: 600;\n    }\n  `}\n\n  .package-name {\n    font-size: 1.4rem;\n    font-weight: 700;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.md};\n  }\n\n  .package-price {\n    font-size: 2.5rem;\n    font-weight: 800;\n    color: ${props => props.primaryColor || theme.colors.primary};\n    margin-bottom: ${theme.spacing.sm};\n  }\n\n  .package-duration {\n    color: ${theme.colors.gray600};\n    margin-bottom: ${theme.spacing.lg};\n  }\n\n  .package-description {\n    color: ${theme.colors.gray700};\n    line-height: 1.6;\n    margin-bottom: ${theme.spacing.lg};\n  }\n\n  .package-button {\n    width: 100%;\n    background: ${props => props.primaryColor || theme.colors.primary};\n    color: white;\n    padding: ${theme.spacing.md} ${theme.spacing.lg};\n    border: none;\n    border-radius: ${theme.borderRadius.md};\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.2s ease;\n\n    &:hover {\n      opacity: 0.9;\n      transform: translateY(-1px);\n    }\n  }\n`;\n\n// FAQ Section Styles\nconst FAQContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n`;\n\nconst FAQItem = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  margin-bottom: ${theme.spacing.md};\n  box-shadow: ${theme.shadows.sm};\n  overflow: hidden;\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst FAQQuestion = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  width: 100%;\n  padding: ${theme.spacing.lg};\n  background: none;\n  border: none;\n  text-align: left;\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  &:hover {\n    background: ${theme.colors.gray50};\n    color: ${props => props.primaryColor || theme.colors.primary};\n  }\n`;\n\nconst FAQAnswer = styled.div`\n  padding: 0 ${theme.spacing.lg} ${theme.spacing.lg};\n  color: ${theme.colors.gray700};\n  line-height: 1.6;\n  border-top: 1px solid ${theme.colors.gray200};\n`;\n\n// Reviews Section Styles\nconst ReviewsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: ${theme.spacing.lg};\n`;\n\nconst ReviewCard = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  position: relative;\n\n  .review-header {\n    display: flex;\n    align-items: center;\n    gap: ${theme.spacing.md};\n    margin-bottom: ${theme.spacing.md};\n\n    .avatar {\n      width: 50px;\n      height: 50px;\n      background: ${props => props.primaryColor + '20' || theme.colors.gray200};\n      border-radius: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 1.2rem;\n      color: ${props => props.primaryColor || theme.colors.primary};\n    }\n\n    .review-info h4 {\n      font-weight: 600;\n      color: ${theme.colors.gray900};\n      margin-bottom: 2px;\n    }\n\n    .review-info .date {\n      font-size: 0.8rem;\n      color: ${theme.colors.gray500};\n    }\n  }\n\n  .review-rating {\n    display: flex;\n    gap: 2px;\n    margin-bottom: ${theme.spacing.sm};\n    color: #fbbf24;\n  }\n\n  .review-text {\n    color: ${theme.colors.gray700};\n    line-height: 1.6;\n    font-style: italic;\n  }\n`;\n\n// Hours Section Styles\nconst HoursGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-top: ${theme.spacing.xl};\n`;\n\n// Portfolio Section Styles\nconst PortfolioGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  gap: ${theme.spacing.xl};\n`;\n\nconst PortfolioCard = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  overflow: hidden;\n  box-shadow: ${theme.shadows.md};\n  transition: all 0.3s ease;\n  cursor: pointer;\n\n  &:hover {\n    transform: translateY(-8px);\n    box-shadow: ${theme.shadows.xl};\n  }\n`;\n\nconst PortfolioImage = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  height: 240px;\n  background: linear-gradient(\n    135deg,\n    ${props => props.primaryColor + '30'} 0%,\n    ${props => props.primaryColor + '60'} 100%\n  );\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 4rem;\n  color: ${props => props.primaryColor || theme.colors.primary};\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    inset: 0;\n    background: rgba(0, 0, 0, 0.1);\n    opacity: 0;\n    transition: opacity 0.3s ease;\n  }\n\n  ${PortfolioCard}:hover &::after {\n    opacity: 1;\n  }\n`;\n\nconst PortfolioContent = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  padding: ${theme.spacing.xl};\n\n  .portfolio-category {\n    color: ${props => props.primaryColor || theme.colors.primary};\n    font-size: 0.8rem;\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    margin-bottom: ${theme.spacing.sm};\n  }\n\n  h3 {\n    font-size: 1.3rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.md};\n  }\n\n  p {\n    color: ${theme.colors.gray600};\n    line-height: 1.6;\n    margin-bottom: ${theme.spacing.lg};\n  }\n\n  .tech-stack {\n    display: flex;\n    flex-wrap: wrap;\n    gap: ${theme.spacing.sm};\n\n    .tech-tag {\n      background: ${theme.colors.gray100};\n      color: ${theme.colors.gray700};\n      padding: ${theme.spacing.xs} ${theme.spacing.sm};\n      border-radius: ${theme.borderRadius.sm};\n      font-size: 0.8rem;\n      font-weight: 500;\n    }\n  }\n`;\n\n// Skills Section Styles\nconst SkillsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: ${theme.spacing.lg};\n`;\n\nconst SkillCard = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  border: 1px solid ${theme.colors.gray200};\n\n  .skill-header {\n    display: flex;\n    align-items: center;\n    gap: ${theme.spacing.md};\n    margin-bottom: ${theme.spacing.md};\n\n    .skill-icon {\n      font-size: 1.5rem;\n    }\n\n    .skill-info h4 {\n      font-weight: 600;\n      color: ${theme.colors.gray900};\n      margin-bottom: 2px;\n    }\n\n    .skill-info .percentage {\n      font-size: 0.9rem;\n      color: ${props => props.primaryColor || theme.colors.primary};\n      font-weight: 600;\n    }\n  }\n\n  .skill-bar {\n    height: 8px;\n    background: ${theme.colors.gray200};\n    border-radius: 4px;\n    overflow: hidden;\n    position: relative;\n\n    .skill-progress {\n      height: 100%;\n      background: linear-gradient(\n        90deg,\n        ${props => props.primaryColor || theme.colors.primary},\n        ${props => props.primaryColor + 'cc' || theme.colors.primary + 'cc'}\n      );\n      border-radius: 4px;\n      transition: width 2s ease;\n    }\n  }\n`;\n\n// Experience Section Styles\nconst ExperienceTimeline = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 2px;\n    height: 100%;\n    background: ${theme.colors.gray300};\n\n    @media (max-width: ${theme.breakpoints.tablet}) {\n      left: 20px;\n    }\n  }\n`;\n\nconst ExperienceCard = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor' && prop !== 'isLeft',\n})`\n  position: relative;\n  width: calc(50% - 20px);\n  margin-bottom: ${theme.spacing.xl};\n  ${props => (props.isLeft ? 'margin-right: auto;' : 'margin-left: auto;')}\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    width: calc(100% - 50px);\n    margin-left: 50px;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 20px;\n    ${props => (props.isLeft ? 'right: -15px;' : 'left: -15px;')}\n    width: 12px;\n    height: 12px;\n    background: ${props => props.primaryColor || theme.colors.primary};\n    border-radius: 50%;\n    border: 3px solid ${theme.colors.white};\n    box-shadow: ${theme.shadows.sm};\n\n    @media (max-width: ${theme.breakpoints.tablet}) {\n      left: -35px;\n    }\n  }\n\n  .experience-content {\n    background: ${theme.colors.white};\n    padding: ${theme.spacing.xl};\n    border-radius: ${theme.borderRadius.lg};\n    box-shadow: ${theme.shadows.md};\n    border: 1px solid ${theme.colors.gray200};\n\n    .period {\n      color: ${props => props.primaryColor || theme.colors.primary};\n      font-size: 0.9rem;\n      font-weight: 600;\n      margin-bottom: ${theme.spacing.sm};\n    }\n\n    h4 {\n      font-size: 1.2rem;\n      font-weight: 600;\n      color: ${theme.colors.gray900};\n      margin-bottom: ${theme.spacing.xs};\n    }\n\n    .company {\n      color: ${theme.colors.gray600};\n      font-weight: 500;\n      margin-bottom: ${theme.spacing.md};\n    }\n\n    p {\n      color: ${theme.colors.gray700};\n      line-height: 1.6;\n    }\n  }\n`;\n\nconst HoursCard = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  text-align: center;\n\n  h4 {\n    font-size: 1.2rem;\n    font-weight: 600;\n    color: ${props => props.primaryColor || theme.colors.primary};\n    margin-bottom: ${theme.spacing.md};\n  }\n\n  .hours-list {\n    display: flex;\n    flex-direction: column;\n    gap: ${theme.spacing.sm};\n\n    .hours-item {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: ${theme.spacing.sm};\n      background: ${theme.colors.gray50};\n      border-radius: ${theme.borderRadius.sm};\n\n      .day {\n        font-weight: 500;\n        color: ${theme.colors.gray900};\n      }\n\n      .time {\n        color: ${theme.colors.gray600};\n        font-size: 0.9rem;\n      }\n    }\n  }\n`;\n\nconst TestimonialCard = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.xl};\n  box-shadow: ${theme.shadows.md};\n  position: relative;\n\n  .quote {\n    font-size: 2rem;\n    color: ${props => props.primaryColor || theme.colors.primary};\n    margin-bottom: ${theme.spacing.md};\n  }\n\n  .text {\n    font-size: 1.1rem;\n    line-height: 1.7;\n    color: ${theme.colors.gray700};\n    margin-bottom: ${theme.spacing.lg};\n    font-style: italic;\n  }\n\n  .author {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .info h4 {\n      font-weight: 600;\n      color: ${theme.colors.gray900};\n      margin-bottom: ${theme.spacing.xs};\n    }\n\n    .info p {\n      color: ${theme.colors.gray600};\n      font-size: 0.9rem;\n    }\n\n    .rating {\n      display: flex;\n      gap: 2px;\n      color: #fbbf24;\n    }\n  }\n`;\n\n// Contact Section Styles\nconst ContactGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst ContactForm = styled.form.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.lg};\n\n  input,\n  textarea {\n    padding: ${theme.spacing.md};\n    border: 2px solid ${theme.colors.gray200};\n    border-radius: ${theme.borderRadius.md};\n    font-size: 1rem;\n    transition: border-color 0.2s ease;\n\n    &:focus {\n      outline: none;\n      border-color: ${props => props.primaryColor || theme.colors.primary};\n    }\n  }\n\n  textarea {\n    min-height: 120px;\n    resize: vertical;\n  }\n\n  button {\n    background: ${props => props.primaryColor || theme.colors.primary};\n    color: ${theme.colors.white};\n    padding: ${theme.spacing.lg};\n    border: none;\n    border-radius: ${theme.borderRadius.md};\n    font-size: 1rem;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.2s ease;\n\n    &:hover {\n      opacity: 0.9;\n      transform: translateY(-1px);\n    }\n  }\n`;\n\nconst ContactInfo = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  h3 {\n    font-size: 1.5rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.lg};\n  }\n\n  .contact-item {\n    display: flex;\n    align-items: center;\n    gap: ${theme.spacing.md};\n    margin-bottom: ${theme.spacing.lg};\n    padding: ${theme.spacing.md};\n    background: ${theme.colors.gray50};\n    border-radius: ${theme.borderRadius.md};\n\n    .icon {\n      width: 40px;\n      height: 40px;\n      background: ${props => props.primaryColor || theme.colors.primary};\n      border-radius: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: ${theme.colors.white};\n    }\n\n    .text {\n      color: ${theme.colors.gray700};\n      font-weight: 500;\n    }\n  }\n`;\n\n// Footer Styles\nconst Footer = styled.footer`\n  background: ${theme.colors.gray900};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xxl} 0 ${theme.spacing.xl};\n`;\n\nconst FooterContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n  text-align: center;\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: ${theme.spacing.lg};\n  }\n\n  p {\n    color: ${theme.colors.gray300};\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst SocialLinks = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst SocialLink = styled.a.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  width: 40px;\n  height: 40px;\n  background: ${props => props.primaryColor || theme.colors.primary};\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.white};\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    opacity: 0.9;\n  }\n`;\n\nconst BusinessWebsitePage = () => {\n  const { businessSlug, slug } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [businessData, setBusinessData] = useState(null);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Support both businessSlug (legacy routes) and slug (new optimized routes)\n  const actualSlug = businessSlug || slug;\n\n  // Get business data from Redux store for real-time updates\n  const { businesses, editingBusiness } = useSelector(\n    state => state.businessManagement\n  );\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Extract slug from URL - either from params or from pathname\n        let extractedSlug = actualSlug;\n        if (!extractedSlug) {\n          // For direct slug access like \"/salon\", extract from pathname\n          const pathSegments = location.pathname.split('/').filter(Boolean);\n          extractedSlug = pathSegments[0];\n        }\n\n        let businessTemplate = null;\n\n        // Priority 1: Use editing business data for real-time updates during editing\n        if (editingBusiness && editingBusiness.slug === extractedSlug) {\n          businessTemplate = editingBusiness;\n          console.log(\n            'Using editing business data for real-time updates:',\n            editingBusiness\n          );\n          setBusinessData(businessTemplate);\n          setLoading(false);\n          return;\n        }\n\n        // Priority 2: Use saved business data from Redux businesses array\n        if (businesses && businesses.length > 0) {\n          businessTemplate = businesses.find(b => b.slug === extractedSlug);\n          if (businessTemplate) {\n            console.log(\n              'Using saved business data from Redux:',\n              businessTemplate\n            );\n            setBusinessData(businessTemplate);\n            setLoading(false);\n            return;\n          }\n        }\n\n        // Priority 3: Make fake API call to get business data\n        console.log(\n          `[BusinessWebsitePage] Making API call for business: ${extractedSlug}`\n        );\n        const response = await fetchBusinessData(extractedSlug);\n\n        if (response.success && response.data) {\n          console.log(\n            '[BusinessWebsitePage] API call successful:',\n            response.data\n          );\n          setBusinessData(response.data);\n        } else {\n          // Priority 4: Fallback to template data if API fails\n          console.log(\n            '[BusinessWebsitePage] API call failed, using template fallback'\n          );\n          businessTemplate = getBusinessTemplate(extractedSlug);\n          if (businessTemplate) {\n            setBusinessData(businessTemplate);\n          } else {\n            setError('Business not found');\n          }\n        }\n      } catch (err) {\n        console.error(\n          '[BusinessWebsitePage] Error fetching business data:',\n          err\n        );\n        setError(err.message);\n\n        // Fallback to template data on error\n        const businessTemplate = getBusinessTemplate(actualSlug);\n        if (businessTemplate) {\n          setBusinessData(businessTemplate);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [actualSlug, location.pathname, businesses, editingBusiness]);\n\n  if (loading) {\n    return (\n      <PageContainer>\n        <div style={{ padding: '4rem', textAlign: 'center' }}>\n          <h2>Loading...</h2>\n          <p>Fetching business website data...</p>\n        </div>\n      </PageContainer>\n    );\n  }\n\n  if (error || !businessData) {\n    return (\n      <PageContainer>\n        <div style={{ padding: '4rem', textAlign: 'center' }}>\n          <h2>Business Website Not Found</h2>\n          <p>\n            {error || \"The business website you're looking for doesn't exist.\"}\n          </p>\n        </div>\n      </PageContainer>\n    );\n  }\n\n  const handleBackToList = () => {\n    navigate('/business-websites');\n  };\n\n  const handleOwnerClick = () => {\n    navigate(`/${businessData.slug}/adminpanel`);\n  };\n\n  const toggleMobileMenu = () => {\n    setIsMobileMenuOpen(!isMobileMenuOpen);\n  };\n\n  const closeMobileMenu = () => {\n    setIsMobileMenuOpen(false);\n  };\n\n  // Use business data directly from API (editing business takes priority for real-time updates)\n  const content =\n    editingBusiness && editingBusiness.slug === businessData.slug\n      ? editingBusiness\n      : businessData;\n\n  return (\n    <PageContainer>\n      {/* Navbar */}\n      <Navbar>\n        <NavContainer>\n          <BackToListButton onClick={handleBackToList}>\n            <FaArrowLeft />\n          </BackToListButton>\n          <Logo primaryColor={businessData.primaryColor}>\n            {businessData.navigation?.logo || businessData.name}\n          </Logo>\n          <NavLinks primaryColor={businessData.primaryColor}>\n            {businessData.navigation?.menuItems ? (\n              businessData.navigation.menuItems.map((item, index) => (\n                <a key={index} href={item.href}>\n                  {item.name}\n                </a>\n              ))\n            ) : (\n              <>\n                <a href=\"#home\">Home</a>\n                <a href=\"#about\">About</a>\n                {businessData.slug === 'freelancer' && (\n                  <a href=\"#portfolio\">Portfolio</a>\n                )}\n                {businessData.slug === 'freelancer' && (\n                  <a href=\"#skills\">Skills</a>\n                )}\n                <a href=\"#services\">Services</a>\n                {businessData.slug !== 'freelancer' && <a href=\"#team\">Team</a>}\n                {businessData.slug === 'freelancer' && (\n                  <a href=\"#experience\">Experience</a>\n                )}\n                {businessData.slug !== 'freelancer' && (\n                  <a href=\"#gallery\">Gallery</a>\n                )}\n                {businessData.slug !== 'freelancer' && (\n                  <a href=\"#packages\">Packages</a>\n                )}\n                <a href=\"#contact\">Contact</a>\n              </>\n            )}\n          </NavLinks>\n          <MobileMenuButton\n            primaryColor={businessData.primaryColor}\n            onClick={toggleMobileMenu}\n          >\n            <FaBars />\n          </MobileMenuButton>\n          <OwnerLink onClick={handleOwnerClick}>\n            <FaEdit />\n            {businessData.navigation?.ownerLinkText || 'Owner Dashboard'}\n          </OwnerLink>\n        </NavContainer>\n      </Navbar>\n\n      {/* Mobile Menu */}\n      <MobileMenu\n        isOpen={isMobileMenuOpen}\n        primaryColor={businessData.primaryColor}\n      >\n        <MobileMenuHeader>\n          <Logo primaryColor={businessData.primaryColor}>\n            {businessData.name}\n          </Logo>\n          <MobileMenuButton\n            primaryColor={businessData.primaryColor}\n            onClick={closeMobileMenu}\n          >\n            <FaTimes />\n          </MobileMenuButton>\n        </MobileMenuHeader>\n        <MobileMenuLinks primaryColor={businessData.primaryColor}>\n          <a href=\"#home\" onClick={closeMobileMenu}>\n            Home\n          </a>\n          <a href=\"#about\" onClick={closeMobileMenu}>\n            About\n          </a>\n          {businessData.slug === 'freelancer' && (\n            <a href=\"#portfolio\" onClick={closeMobileMenu}>\n              Portfolio\n            </a>\n          )}\n          {businessData.slug === 'freelancer' && (\n            <a href=\"#skills\" onClick={closeMobileMenu}>\n              Skills\n            </a>\n          )}\n          <a href=\"#services\" onClick={closeMobileMenu}>\n            Services\n          </a>\n          {businessData.slug !== 'freelancer' && (\n            <a href=\"#team\" onClick={closeMobileMenu}>\n              Team\n            </a>\n          )}\n          {businessData.slug === 'freelancer' && (\n            <a href=\"#experience\" onClick={closeMobileMenu}>\n              Experience\n            </a>\n          )}\n          {businessData.slug !== 'freelancer' && (\n            <a href=\"#gallery\" onClick={closeMobileMenu}>\n              Gallery\n            </a>\n          )}\n          {businessData.slug !== 'freelancer' && (\n            <a href=\"#packages\" onClick={closeMobileMenu}>\n              Packages\n            </a>\n          )}\n          <a href=\"#contact\" onClick={closeMobileMenu}>\n            Contact\n          </a>\n          <button\n            onClick={() => {\n              handleOwnerClick();\n              closeMobileMenu();\n            }}\n            style={{\n              cursor: 'pointer',\n              background: 'none',\n              border: 'none',\n              color: 'inherit',\n              font: 'inherit',\n              textDecoration: 'underline',\n            }}\n          >\n            Owner Dashboard\n          </button>\n        </MobileMenuLinks>\n      </MobileMenu>\n\n      {/* Hero Section */}\n      <HeroSection\n        id=\"hero\"\n        primaryColor={businessData.primaryColor}\n        businessType={businessData.slug}\n      >\n        <HeroContent>\n          <HeroTitle>{content.hero?.title || businessData.name}</HeroTitle>\n          <HeroSubtitle>\n            {content.hero?.subtitle || `Welcome to ${businessData.name}`}\n          </HeroSubtitle>\n          <div\n            style={{\n              display: 'flex',\n              gap: '1rem',\n              justifyContent: 'center',\n              flexWrap: 'wrap',\n              marginTop: '2rem',\n            }}\n          >\n            <HeroCTA primaryColor={businessData.primaryColor}>\n              {businessData.slug === 'restaurant'\n                ? 'Reserve Table'\n                : businessData.slug === 'gym'\n                  ? 'Start Free Trial'\n                  : businessData.slug === 'salon'\n                    ? 'Book Appointment'\n                    : 'Get Started'}\n            </HeroCTA>\n            <button\n              style={{\n                padding: '1rem 2rem',\n                fontSize: '1.2rem',\n                fontWeight: '600',\n                background: 'transparent',\n                color: theme.colors.white,\n                border: `2px solid ${theme.colors.white}`,\n                borderRadius: '8px',\n                cursor: 'pointer',\n                transition: 'all 0.3s ease',\n              }}\n            >\n              Learn More\n            </button>\n          </div>\n        </HeroContent>\n      </HeroSection>\n\n      {/* About Section */}\n      <Section id=\"about\" background={theme.colors.gray50}>\n        <SectionContainer>\n          <AboutGrid>\n            <AboutContent>\n              <h3>{content.about?.title || 'About Us'}</h3>\n              <p>\n                {content.about?.description ||\n                  `Learn more about ${businessData.name}`}\n              </p>\n              <p>\n                {content.about?.extendedDescription ||\n                  'We pride ourselves on delivering exceptional service and creating memorable experiences for all our clients.'}\n              </p>\n            </AboutContent>\n            <AboutImage primaryColor={businessData.primaryColor}>\n              {businessData.slug === 'salon' && '💇‍♀️'}\n              {businessData.slug === 'gym' && '��️‍♂��'}\n              {businessData.slug === 'restaurant' && '👨‍🍳'}\n              {!['salon', 'gym', 'restaurant'].includes(businessData.slug) &&\n                '🏢'}\n            </AboutImage>\n          </AboutGrid>\n\n          <StatsGrid>\n            <StatCard primaryColor={businessData.primaryColor}>\n              <div className=\"number\">\n                {content.about?.stats?.[0]?.number || '100+'}\n              </div>\n              <div className=\"label\">\n                {content.about?.stats?.[0]?.label || 'Services'}\n              </div>\n            </StatCard>\n            <StatCard primaryColor={businessData.primaryColor}>\n              <div className=\"number\">\n                {content.about?.stats?.[1]?.number || '5+'}\n              </div>\n              <div className=\"label\">\n                {content.about?.stats?.[1]?.label || 'Years Experience'}\n              </div>\n            </StatCard>\n            <StatCard primaryColor={businessData.primaryColor}>\n              <div className=\"number\">\n                {content.about?.stats?.[2]?.number || '4.9'}\n              </div>\n              <div className=\"label\">\n                {content.about?.stats?.[2]?.label || '★ Average Rating'}\n              </div>\n            </StatCard>\n            <StatCard primaryColor={businessData.primaryColor}>\n              <div className=\"number\">\n                {content.about?.stats?.[3]?.number || '100+'}\n              </div>\n              <div className=\"label\">\n                {content.about?.stats?.[3]?.label || 'Happy Clients'}\n              </div>\n            </StatCard>\n          </StatsGrid>\n        </SectionContainer>\n      </Section>\n\n      {/* Portfolio Section for Freelancers */}\n      {businessData.slug === 'freelancer' && content.portfolio ? (\n        <Section id=\"portfolio\">\n          <SectionContainer>\n            <SectionTitle>\n              {content.sections?.portfolio?.title || 'My Portfolio'}\n            </SectionTitle>\n            <SectionSubtitle>\n              {content.sections?.portfolio?.subtitle ||\n                'A showcase of my recent work and creative projects across various industries and technologies.'}\n            </SectionSubtitle>\n            <PortfolioGrid>\n              {(content.portfolio || []).map((project, index) => (\n                <PortfolioCard\n                  key={index}\n                  primaryColor={businessData.primaryColor}\n                >\n                  <PortfolioImage primaryColor={businessData.primaryColor}>\n                    🖼️\n                  </PortfolioImage>\n                  <PortfolioContent primaryColor={businessData.primaryColor}>\n                    <div className=\"portfolio-category\">{project.category}</div>\n                    <h3>{project.title}</h3>\n                    <p>{project.description}</p>\n                    <div className=\"tech-stack\">\n                      {(project.technologies || []).map((tech, i) => (\n                        <span key={i} className=\"tech-tag\">\n                          {tech}\n                        </span>\n                      ))}\n                    </div>\n                  </PortfolioContent>\n                </PortfolioCard>\n              ))}\n            </PortfolioGrid>\n          </SectionContainer>\n        </Section>\n      ) : null}\n\n      {/* Skills Section for Freelancers */}\n      {businessData.slug === 'freelancer' && content.skills ? (\n        <Section id=\"skills\" background={theme.colors.gray50}>\n          <SectionContainer>\n            <SectionTitle>\n              {content.sections?.skills?.title || 'My Skills'}\n            </SectionTitle>\n            <SectionSubtitle>\n              {content.sections?.skills?.subtitle ||\n                'Technical expertise and creative skills developed through years of professional experience.'}\n            </SectionSubtitle>\n            <SkillsGrid>\n              {(content.skills || []).map((skill, index) => (\n                <SkillCard key={index} primaryColor={businessData.primaryColor}>\n                  <div className=\"skill-header\">\n                    <div className=\"skill-icon\">{skill.icon}</div>\n                    <div className=\"skill-info\">\n                      <h4>{skill.name}</h4>\n                      <div className=\"percentage\">{skill.level}%</div>\n                    </div>\n                  </div>\n                  <div className=\"skill-bar\">\n                    <div\n                      className=\"skill-progress\"\n                      style={{ width: `${skill.level}%` }}\n                    ></div>\n                  </div>\n                </SkillCard>\n              ))}\n            </SkillsGrid>\n          </SectionContainer>\n        </Section>\n      ) : null}\n\n      {/* Services Section */}\n      <Section\n        id=\"services\"\n        background={\n          businessData.slug === 'freelancer'\n            ? theme.colors.white\n            : theme.colors.white\n        }\n      >\n        <SectionContainer>\n          <SectionTitle>\n            {content.sections?.services?.title ||\n              (businessData.slug === 'freelancer'\n                ? 'My Services'\n                : 'Our Services')}\n          </SectionTitle>\n          <SectionSubtitle>\n            {content.sections?.services?.subtitle ||\n              'We offer a comprehensive range of professional services designed to meet your needs and exceed your expectations.'}\n          </SectionSubtitle>\n          <ServicesGrid>\n            {(content.services || []).map((service, index) => (\n              <ServiceCard\n                key={service.id || index}\n                primaryColor={businessData.primaryColor}\n              >\n                <div className=\"icon\">{service.icon}</div>\n                <h3>{service.title}</h3>\n                <p>{service.description}</p>\n                {service.price && (\n                  <div\n                    style={{\n                      marginTop: theme.spacing.md,\n                      fontSize: '1.1rem',\n                      fontWeight: '600',\n                      color: businessData.primaryColor,\n                    }}\n                  >\n                    {service.price}\n                  </div>\n                )}\n              </ServiceCard>\n            ))}\n          </ServicesGrid>\n        </SectionContainer>\n      </Section>\n\n      {/* Team Section */}\n      <Section id=\"team\" background={theme.colors.gray50}>\n        <SectionContainer>\n          <SectionTitle>\n            {content.sections?.team?.title || 'Meet Our Team'}\n          </SectionTitle>\n          <SectionSubtitle>\n            {content.sections?.team?.subtitle ||\n              'Our experienced professionals are passionate about delivering exceptional service and results.'}\n          </SectionSubtitle>\n          <TeamGrid>\n            {(content.team || []).map((member, index) => (\n              <TeamCard key={member.id || index}>\n                <TeamPhoto primaryColor={businessData.primaryColor}>\n                  {member.photo ? (\n                    <img\n                      src={member.photo}\n                      alt={member.name}\n                      style={{\n                        width: '100%',\n                        height: '100%',\n                        objectFit: 'cover',\n                      }}\n                    />\n                  ) : (\n                    '👤'\n                  )}\n                </TeamPhoto>\n                <TeamInfo primaryColor={businessData.primaryColor}>\n                  <h3>{member.name}</h3>\n                  <div className=\"role\">{member.role}</div>\n                  <p>{member.bio}</p>\n                </TeamInfo>\n              </TeamCard>\n            ))}\n          </TeamGrid>\n        </SectionContainer>\n      </Section>\n\n      {/* Experience Section for Freelancers */}\n      {businessData.slug === 'freelancer' && content.experience ? (\n        <Section id=\"experience\">\n          <SectionContainer>\n            <SectionTitle>\n              {content.sections?.experience?.title || 'Professional Experience'}\n            </SectionTitle>\n            <SectionSubtitle>\n              {content.sections?.experience?.subtitle ||\n                'My journey in the creative industry, working with diverse clients and challenging projects.'}\n            </SectionSubtitle>\n            <ExperienceTimeline>\n              {(content.experience || []).map((exp, index) => (\n                <ExperienceCard\n                  key={index}\n                  primaryColor={businessData.primaryColor}\n                  isLeft={index % 2 === 0}\n                >\n                  <div className=\"experience-content\">\n                    <div className=\"period\">{exp.period}</div>\n                    <h4>{exp.role}</h4>\n                    <div className=\"company\">{exp.company}</div>\n                    <p>{exp.description}</p>\n                  </div>\n                </ExperienceCard>\n              ))}\n            </ExperienceTimeline>\n          </SectionContainer>\n        </Section>\n      ) : null}\n\n      {/* Testimonials Section */}\n      <Section id=\"testimonials\">\n        <SectionContainer>\n          <SectionTitle>\n            {content.sections?.testimonials?.title || 'What Our Clients Say'}\n          </SectionTitle>\n          <SectionSubtitle>\n            {content.sections?.testimonials?.subtitle ||\n              \"Don't just take our word for it - hear from our satisfied customers about their experiences.\"}\n          </SectionSubtitle>\n          <TestimonialsGrid>\n            {[1, 2, 3].map((_, index) => (\n              <TestimonialCard\n                key={index}\n                primaryColor={businessData.primaryColor}\n              >\n                <div className=\"quote\">\n                  <FaQuoteLeft />\n                </div>\n                <div className=\"text\">\n                  \"\n                  {content.sections?.testimonials?.sampleTestimonial?.text ||\n                    \"Outstanding service and professional staff. I couldn't be happier with the results!\"}\n                  \"\n                </div>\n                <div className=\"author\">\n                  <div className=\"info\">\n                    <h4>\n                      {content.sections?.testimonials?.sampleTestimonial\n                        ?.author || 'Client Name'}\n                    </h4>\n                    <p>\n                      {content.sections?.testimonials?.sampleTestimonial\n                        ?.role || 'Satisfied Customer'}\n                    </p>\n                  </div>\n                  <div className=\"rating\">\n                    {[...Array(5)].map((_, i) => (\n                      <FaStar key={i} />\n                    ))}\n                  </div>\n                </div>\n              </TestimonialCard>\n            ))}\n          </TestimonialsGrid>\n        </SectionContainer>\n      </Section>\n\n      {/* Gallery Section */}\n      <Section id=\"gallery\">\n        <SectionContainer>\n          <SectionTitle>\n            {content.sections?.gallery?.title || 'Our Gallery'}\n          </SectionTitle>\n          <SectionSubtitle>\n            {content.sections?.gallery?.subtitle ||\n              'Take a look at our work, facilities, and the experiences we create for our clients.'}\n          </SectionSubtitle>\n          <GalleryGrid>\n            {content.gallery?.map((category, index) => (\n              <GalleryCategory key={index}>\n                <GalleryImage primaryColor={businessData.primaryColor}>\n                  📸\n                </GalleryImage>\n                <GalleryInfo>\n                  <h3>{category.category}</h3>\n                  <p>{category.images} photos</p>\n                </GalleryInfo>\n              </GalleryCategory>\n            ))}\n          </GalleryGrid>\n        </SectionContainer>\n      </Section>\n\n      {/* Packages Section */}\n      {content.packages && (\n        <Section id=\"packages\" background={theme.colors.gray50}>\n          <SectionContainer>\n            <SectionTitle>\n              {content.sections?.packages?.title || 'Our Packages'}\n            </SectionTitle>\n            <SectionSubtitle>\n              {content.sections?.packages?.subtitle ||\n                'Choose from our specially curated packages designed to give you the best value and experience.'}\n            </SectionSubtitle>\n            <PackagesGrid>\n              {(content.packages || []).map((pkg, index) => (\n                <PackageCard\n                  key={index}\n                  primaryColor={businessData.primaryColor}\n                  featured={index === 1}\n                >\n                  <div className=\"package-name\">{pkg.name}</div>\n                  <div className=\"package-price\">{pkg.price}</div>\n                  <div className=\"package-duration\">{pkg.duration}</div>\n                  <div className=\"package-description\">{pkg.description}</div>\n                  <button className=\"package-button\">\n                    {content.ui?.buttons?.bookNow || 'Book Now'}\n                  </button>\n                </PackageCard>\n              ))}\n            </PackagesGrid>\n          </SectionContainer>\n        </Section>\n      )}\n\n      {/* FAQ Section */}\n      <Section id=\"faq\">\n        <SectionContainer>\n          <SectionTitle>\n            {content.sections?.faq?.title || 'Frequently Asked Questions'}\n          </SectionTitle>\n          <SectionSubtitle>\n            {content.sections?.faq?.subtitle ||\n              'Find answers to common questions about our services, booking, and policies.'}\n          </SectionSubtitle>\n          <FAQContainer>\n            {(content.faq || []).map((faq, index) => (\n              <FAQItem key={index}>\n                <FAQQuestion primaryColor={businessData.primaryColor}>\n                  {faq.question}\n                  <span>+</span>\n                </FAQQuestion>\n                <FAQAnswer>{faq.answer}</FAQAnswer>\n              </FAQItem>\n            ))}\n          </FAQContainer>\n        </SectionContainer>\n      </Section>\n\n      {/* Reviews Section */}\n      <Section id=\"reviews\" background={theme.colors.gray50}>\n        <SectionContainer>\n          <SectionTitle>\n            {content.sections?.reviews?.title || 'Recent Reviews'}\n          </SectionTitle>\n          <SectionSubtitle>\n            {content.sections?.reviews?.subtitle ||\n              'See what our recent customers are saying about their experiences with us.'}\n          </SectionSubtitle>\n          <ReviewsGrid>\n            {(content.reviews || []).map((review, index) => (\n              <ReviewCard key={index} primaryColor={businessData.primaryColor}>\n                <div className=\"review-header\">\n                  <div className=\"avatar\">\n                    {review.name\n                      .split(' ')\n                      .map(n => n[0])\n                      .join('')}\n                  </div>\n                  <div className=\"review-info\">\n                    <h4>{review.name}</h4>\n                    <div className=\"date\">{review.date}</div>\n                  </div>\n                </div>\n                <div className=\"review-rating\">\n                  {[...Array(review.rating)].map((_, i) => (\n                    <FaStar key={i} />\n                  ))}\n                </div>\n                <div className=\"review-text\">\"{review.review}\"</div>\n              </ReviewCard>\n            ))}\n          </ReviewsGrid>\n        </SectionContainer>\n      </Section>\n\n      {/* Business Hours Section */}\n      <Section id=\"hours\">\n        <SectionContainer>\n          <SectionTitle>\n            {content.ui?.businessHours?.title || 'Business Hours & Location'}\n          </SectionTitle>\n          <SectionSubtitle>\n            Visit us during our business hours or contact us anytime for\n            appointments and inquiries.\n          </SectionSubtitle>\n          <HoursGrid>\n            <HoursCard primaryColor={businessData.primaryColor}>\n              <h4>{content.ui?.businessHours?.title || 'Operating Hours'}</h4>\n              <div className=\"hours-list\">\n                {Object.entries(content.businessHours?.hours || {}).map(\n                  ([day, time]) => (\n                    <div key={day} className=\"hours-item\">\n                      <span className=\"day\">\n                        {day.charAt(0).toUpperCase() + day.slice(1)}\n                      </span>\n                      <span className=\"time\">{time}</span>\n                    </div>\n                  )\n                )}\n              </div>\n            </HoursCard>\n\n            <HoursCard primaryColor={businessData.primaryColor}>\n              <h4>\n                {content.ui?.businessHours?.contactInfoTitle ||\n                  'Contact Information'}\n              </h4>\n              <div className=\"hours-list\">\n                <div className=\"hours-item\">\n                  <span className=\"day\">Phone</span>\n                  <span className=\"time\">\n                    {content.contact?.phone || '+1 (555) 123-4567'}\n                  </span>\n                </div>\n                <div className=\"hours-item\">\n                  <span className=\"day\">Email</span>\n                  <span className=\"time\">\n                    {content.contact?.email || `info@${businessData.slug}.com`}\n                  </span>\n                </div>\n                <div className=\"hours-item\">\n                  <span className=\"day\">Address</span>\n                  <span className=\"time\">\n                    {content.contact?.address ||\n                      '123 Business Street, City, State 12345'}\n                  </span>\n                </div>\n              </div>\n            </HoursCard>\n          </HoursGrid>\n        </SectionContainer>\n      </Section>\n\n      {/* Contact Section */}\n      <Section id=\"contact\" background={theme.colors.gray50}>\n        <SectionContainer>\n          <SectionTitle>\n            {content.contact?.title || 'Get In Touch'}\n          </SectionTitle>\n          <SectionSubtitle>\n            {content.contact?.description ||\n              'Ready to get started? Contact us today to schedule a consultation or learn more about our services.'}\n          </SectionSubtitle>\n          <ContactGrid>\n            <ContactForm primaryColor={businessData.primaryColor}>\n              <input\n                type=\"text\"\n                placeholder={\n                  content.ui?.contactForm?.placeholders?.name || 'Your Name'\n                }\n                required\n              />\n              <input\n                type=\"email\"\n                placeholder={\n                  content.ui?.contactForm?.placeholders?.email || 'Your Email'\n                }\n                required\n              />\n              <input\n                type=\"tel\"\n                placeholder={\n                  content.ui?.contactForm?.placeholders?.phone || 'Your Phone'\n                }\n              />\n              <textarea\n                placeholder={\n                  content.ui?.contactForm?.placeholders?.message ||\n                  'Your Message'\n                }\n                required\n              ></textarea>\n              <button type=\"submit\">\n                {content.ui?.buttons?.sendMessage || 'Send Message'}\n              </button>\n            </ContactForm>\n\n            <ContactInfo primaryColor={businessData.primaryColor}>\n              <h3>{content.contact?.title || 'Send us a Message'}</h3>\n              <p\n                style={{\n                  marginBottom: theme.spacing.lg,\n                  color: theme.colors.gray600,\n                }}\n              >\n                {content.contact?.description ||\n                  \"We'd love to hear from you! Whether you have questions about our services, want to book an appointment, or need a custom quote, don't hesitate to reach out.\"}\n              </p>\n              <div className=\"contact-item\">\n                <div className=\"icon\">\n                  <FaPhone />\n                </div>\n                <div className=\"text\">\n                  {content.contact?.phone || '+1 (555) 123-4567'}\n                </div>\n              </div>\n              <div className=\"contact-item\">\n                <div className=\"icon\">\n                  <FaEnvelope />\n                </div>\n                <div className=\"text\">\n                  {content.contact?.email || `info@${businessData.slug}.com`}\n                </div>\n              </div>\n              <div className=\"contact-item\">\n                <div className=\"icon\">\n                  <FaMapMarkerAlt />\n                </div>\n                <div className=\"text\">\n                  {content.contact?.address ||\n                    '123 Business Street, City, State 12345'}\n                </div>\n              </div>\n            </ContactInfo>\n          </ContactGrid>\n        </SectionContainer>\n      </Section>\n\n      {/* Footer */}\n      <Footer>\n        <FooterContent>\n          <h3>{businessData.name}</h3>\n          <p>\n            Follow us on social media for the latest updates and special offers.\n          </p>\n          <SocialLinks>\n            <SocialLink href=\"#\" primaryColor={businessData.primaryColor}>\n              <FaFacebook />\n            </SocialLink>\n            <SocialLink href=\"#\" primaryColor={businessData.primaryColor}>\n              <FaTwitter />\n            </SocialLink>\n            <SocialLink href=\"#\" primaryColor={businessData.primaryColor}>\n              <FaInstagram />\n            </SocialLink>\n            <SocialLink href=\"#\" primaryColor={businessData.primaryColor}>\n              <FaLinkedin />\n            </SocialLink>\n          </SocialLinks>\n          <p>&copy; 2024 {businessData.name}. All rights reserved.</p>\n        </FooterContent>\n      </Footer>\n    </PageContainer>\n  );\n};\n\nexport default BusinessWebsitePage;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/business/pages/BusinessWebsitesHome.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaArrowLeft, FaSearch, FaEye, FaCheck } from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport Header from '../../components/shared/Header';\nimport { businessTemplates } from '../data/businessTemplates';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n`;\n\nconst BackButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  background: none;\n  border: none;\n  color: ${theme.colors.primary};\n  font-weight: 500;\n  margin-bottom: ${theme.spacing.xl};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    transform: translateX(-4px);\n  }\n`;\n\nconst HeaderSection = styled.div`\n  text-align: center;\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 3rem;\n  font-weight: 800;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2.2rem;\n  }\n`;\n\nconst PageSubtitle = styled.p`\n  font-size: 1.2rem;\n  color: ${theme.colors.gray600};\n  max-width: 600px;\n  margin: 0 auto ${theme.spacing.lg};\n  line-height: 1.6;\n`;\n\nconst FilterSection = styled.div`\n  display: flex;\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xxl};\n  align-items: center;\n  flex-wrap: wrap;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    align-items: stretch;\n  }\n`;\n\nconst SearchBox = styled.div`\n  position: relative;\n  flex: 1;\n  max-width: 400px;\n\n  input {\n    width: 100%;\n    padding: ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.md} 3rem;\n    border: 2px solid ${theme.colors.gray200};\n    border-radius: ${theme.borderRadius.lg};\n    font-size: 1rem;\n    background: ${theme.colors.white};\n    transition: border-color 0.2s ease;\n\n    &:focus {\n      outline: none;\n      border-color: ${theme.colors.primary};\n    }\n  }\n\n  svg {\n    position: absolute;\n    left: ${theme.spacing.md};\n    top: 50%;\n    transform: translateY(-50%);\n    color: ${theme.colors.gray400};\n  }\n`;\n\nconst CategoryFilter = styled.select`\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.lg};\n  font-size: 1rem;\n  background: ${theme.colors.white};\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst TemplatesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst TemplateCard = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  overflow: hidden;\n  box-shadow: ${theme.shadows.md};\n  border: 1px solid ${theme.colors.gray200};\n  transition: all 0.3s ease;\n  cursor: pointer;\n\n  &:hover {\n    transform: translateY(-8px);\n    box-shadow: ${theme.shadows.xl};\n  }\n`;\n\nconst TemplateImage = styled.div`\n  height: 240px;\n  background-image: url(${props => props.image});\n  background-size: cover;\n  background-position: center;\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    inset: 0;\n    background: linear-gradient(\n      45deg,\n      transparent 30%,\n      rgba(255, 255, 255, 0.1) 50%,\n      transparent 70%\n    );\n    opacity: 0;\n    transition: opacity 0.3s ease;\n  }\n\n  ${TemplateCard}:hover &::after {\n    opacity: 1;\n  }\n`;\n\nconst TemplateCategory = styled.div`\n  position: absolute;\n  top: ${theme.spacing.md};\n  left: ${theme.spacing.md};\n  background: ${props => props.color};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 600;\n  text-transform: uppercase;\n`;\n\nconst TemplateContent = styled.div`\n  padding: ${theme.spacing.xl};\n`;\n\nconst TemplateHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst TemplateInfo = styled.div`\n  flex: 1;\n`;\n\nconst TemplateName = styled.h3`\n  font-size: 1.4rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst TemplateDescription = styled.p`\n  color: ${theme.colors.gray600};\n  line-height: 1.6;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst FeaturesList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst FeatureTag = styled.span`\n  background: ${theme.colors.gray100};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n\n  svg {\n    color: ${theme.colors.success};\n  }\n`;\n\nconst ViewWebsiteButton = styled.button`\n  width: 100%;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border: none;\n  border-radius: ${theme.borderRadius.lg};\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    background: linear-gradient(135deg, #5a67d8 0%, #6b46c1 100%);\n    transform: translateY(-2px);\n  }\n`;\n\nconst BusinessWebsitesHome = () => {\n  const navigate = useNavigate();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('all');\n\n  const categories = [\n    { value: 'all', label: 'All Categories' },\n    { value: 'Beauty & Wellness', label: 'Beauty & Wellness' },\n    { value: 'Health & Fitness', label: 'Health & Fitness' },\n    { value: 'Food & Dining', label: 'Food & Dining' },\n    { value: 'Professional Services', label: 'Professional Services' },\n    { value: 'Technology', label: 'Technology' },\n    { value: 'Creative', label: 'Creative' },\n    {\n      value: 'Construction & Real Estate',\n      label: 'Construction & Real Estate',\n    },\n  ];\n\n  const filteredTemplates = businessTemplates.filter(template => {\n    const matchesSearch =\n      template.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      template.description.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory =\n      selectedCategory === 'all' || template.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  });\n\n  const handleBackClick = () => {\n    navigate('/');\n  };\n\n  const handleTemplateClick = template => {\n    navigate(`/business/${template.slug}`);\n  };\n\n  return (\n    <PageContainer>\n      <Header />\n\n      <Container>\n        <BackButton onClick={handleBackClick}>\n          <FaArrowLeft />\n          Back to Home\n        </BackButton>\n\n        <HeaderSection>\n          <PageTitle>Business Presentational Websites</PageTitle>\n          <PageSubtitle>\n            Choose from our collection of professionally designed website\n            templates for various business types. Each template is fully\n            customizable and mobile-responsive.\n          </PageSubtitle>\n        </HeaderSection>\n\n        <FilterSection>\n          <SearchBox>\n            <FaSearch />\n            <input\n              type=\"text\"\n              placeholder=\"Search templates...\"\n              value={searchTerm}\n              onChange={e => setSearchTerm(e.target.value)}\n            />\n          </SearchBox>\n\n          <CategoryFilter\n            value={selectedCategory}\n            onChange={e => setSelectedCategory(e.target.value)}\n          >\n            {categories.map(category => (\n              <option key={category.value} value={category.value}>\n                {category.label}\n              </option>\n            ))}\n          </CategoryFilter>\n        </FilterSection>\n\n        <TemplatesGrid>\n          {filteredTemplates.map(template => (\n            <TemplateCard\n              key={template.id}\n              onClick={() => handleTemplateClick(template)}\n            >\n              <TemplateImage image={template.image}>\n                <TemplateCategory color={template.primaryColor}>\n                  {template.category}\n                </TemplateCategory>\n              </TemplateImage>\n\n              <TemplateContent>\n                <TemplateHeader>\n                  <TemplateInfo>\n                    <TemplateName>{template.name}</TemplateName>\n                  </TemplateInfo>\n                </TemplateHeader>\n\n                <TemplateDescription>\n                  {template.description}\n                </TemplateDescription>\n\n                <FeaturesList>\n                  {template.features.map((feature, index) => (\n                    <FeatureTag key={index}>\n                      <FaCheck />\n                      {feature}\n                    </FeatureTag>\n                  ))}\n                </FeaturesList>\n\n                <ViewWebsiteButton>\n                  <FaEye />\n                  View Website\n                </ViewWebsiteButton>\n              </TemplateContent>\n            </TemplateCard>\n          ))}\n        </TemplatesGrid>\n      </Container>\n    </PageContainer>\n  );\n};\n\nexport default BusinessWebsitesHome;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/ErrorBoundary.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used. Allowed unused args must match /^_/u.","line":112,"column":35,"nodeType":"Identifier","messageId":"unusedVar","endLine":112,"endColumn":40},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":124,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":124,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2212,2278],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":130,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":130,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2485,2535],"text":""},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport styled from 'styled-components';\nimport { FaExclamationTriangle, FaHome, FaRedo } from 'react-icons/fa';\n\nconst ErrorContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #f9fafb;\n  padding: 2rem;\n`;\n\nconst ErrorCard = styled.div`\n  background: white;\n  border-radius: 16px;\n  padding: 3rem;\n  max-width: 500px;\n  width: 100%;\n  text-align: center;\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\n`;\n\nconst ErrorIcon = styled.div`\n  font-size: 4rem;\n  color: #ef4444;\n  margin-bottom: 2rem;\n`;\n\nconst ErrorTitle = styled.h1`\n  font-size: 2rem;\n  font-weight: 700;\n  color: #111827;\n  margin-bottom: 1rem;\n`;\n\nconst ErrorMessage = styled.p`\n  color: #6b7280;\n  margin-bottom: 2rem;\n  line-height: 1.6;\n`;\n\nconst ErrorDetails = styled.details`\n  text-align: left;\n  margin: 2rem 0;\n\n  summary {\n    cursor: pointer;\n    color: #6b7280;\n    font-weight: 600;\n    margin-bottom: 1rem;\n  }\n\n  pre {\n    background: #f3f4f6;\n    padding: 1rem;\n    border-radius: 8px;\n    font-size: 0.875rem;\n    overflow-x: auto;\n    color: #374151;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nconst Button = styled.button`\n  padding: 0.75rem 1.5rem;\n  border-radius: 8px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  border: none;\n`;\n\nconst PrimaryButton = styled(Button)`\n  background: #3b82f6;\n  color: white;\n\n  &:hover {\n    background: #2563eb;\n  }\n`;\n\nconst SecondaryButton = styled(Button)`\n  background: white;\n  color: #374151;\n  border: 2px solid #e5e7eb;\n\n  &:hover {\n    background: #f9fafb;\n  }\n`;\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null,\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error,\n      errorInfo,\n    });\n\n    // Log error to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.error('ErrorBoundary caught an error:', error, errorInfo);\n    }\n\n    // In production, you would send this to an error reporting service\n    if (process.env.NODE_ENV === 'production') {\n      // Example: Sentry.captureException(error, { extra: errorInfo });\n      console.error('Production error:', error.message);\n    }\n  }\n\n  handleRefresh = () => {\n    window.location.reload();\n  };\n\n  handleGoHome = () => {\n    window.location.href = '/';\n  };\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <ErrorContainer>\n          <ErrorCard>\n            <ErrorIcon>\n              <FaExclamationTriangle />\n            </ErrorIcon>\n\n            <ErrorTitle>Oops! Something went wrong</ErrorTitle>\n\n            <ErrorMessage>\n              We're sorry, but something unexpected happened. Our team has been\n              notified and is working to fix this issue.\n            </ErrorMessage>\n\n            {process.env.NODE_ENV === 'development' && this.state.error && (\n              <ErrorDetails>\n                <summary>Error Details (Development Mode)</summary>\n                <pre>\n                  {this.state.error.toString()}\n                  {this.state.errorInfo?.componentStack}\n                </pre>\n              </ErrorDetails>\n            )}\n\n            <ButtonGroup>\n              <PrimaryButton onClick={this.handleRefresh}>\n                <FaRedo />\n                Try Again\n              </PrimaryButton>\n\n              <SecondaryButton onClick={this.handleGoHome}>\n                <FaHome />\n                Go Home\n              </SecondaryButton>\n            </ButtonGroup>\n          </ErrorCard>\n        </ErrorContainer>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/SmartRouter.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'HotelDetail' is defined but never used.","line":15,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":15,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'EcommerceMain' is defined but never used.","line":16,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":16,"endColumn":21},{"ruleId":"no-unused-vars","severity":1,"message":"'path' is assigned a value but never used.","line":21,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":21,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport HotelModule from '../hotel';\nimport EcommerceModule from '../ecommerce';\nimport AutomobileModule from '../automobiles';\nimport WeddingModule from '../weddings';\nimport BusinessModule from '../business';\nimport {\n  getHotelBySlug,\n  getVendorBySlug,\n  getAutomobileVendorBySlug,\n  getVendorById,\n  getBusinessTemplate,\n} from '../DummyData';\nimport HotelDetail from '../hotel/pages/HotelDetail';\nimport EcommerceMain from '../ecommerce/pages/EcommerceMain';\n\nconst SmartRouter = () => {\n  const { slug } = useParams();\n  const location = useLocation();\n  const path = location.pathname;\n\n  // Helper function to determine module type based on slug\n  const getModuleType = slug => {\n    // Check each data source to determine the module type // api call to find type\n    const hotel = getHotelBySlug(slug);\n    if (hotel) return 'hotel';\n\n    const automobileDealer = getAutomobileVendorBySlug(slug);\n    if (automobileDealer) return 'automobile';\n\n    const vendor = getVendorBySlug(slug);\n    if (vendor) return 'ecommerce';\n\n    const weddingVendor = getVendorById(slug);\n    if (weddingVendor) return 'wedding';\n\n    const businessTemplate = getBusinessTemplate(slug);\n    if (businessTemplate) return 'business';\n\n    return null;\n  };\n\n  const moduleType = getModuleType(slug);\n\n  // If no module found, show 404\n  if (!moduleType) {\n    return (\n      <div\n        style={{\n          padding: '4rem',\n          textAlign: 'center',\n          backgroundColor: '#f8fafc',\n          minHeight: '100vh',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <h2\n          style={{ fontSize: '2rem', marginBottom: '1rem', color: '#1f2937' }}\n        >\n          Page not found\n        </h2>\n        <p style={{ color: '#6b7280', marginBottom: '2rem' }}>\n          The page you're looking for doesn't exist.\n        </p>\n        <a\n          href=\"/\"\n          style={{\n            color: '#3b82f6',\n            textDecoration: 'none',\n            padding: '0.5rem 1rem',\n            border: '1px solid #3b82f6',\n            borderRadius: '0.5rem',\n          }}\n        >\n          Go Home\n        </a>\n      </div>\n    );\n  }\n\n  // Route to appropriate module based on detected type\n  switch (moduleType) {\n    case 'hotel':\n      return <HotelModule />;\n    case 'ecommerce':\n      return <EcommerceModule />;\n    case 'automobile':\n      return <AutomobileModule />;\n    case 'wedding':\n      return <WeddingModule />;\n    case 'business':\n      return <BusinessModule />;\n    default:\n      return (\n        <div style={{ padding: '4rem', textAlign: 'center' }}>\n          <h2>Page not found</h2>\n          <p>The page you're looking for doesn't exist.</p>\n        </div>\n      );\n  }\n};\n\nexport default SmartRouter;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/StartBuilding.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/TestDataConsistency.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":86,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":86,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2283,2341],"text":""},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { fetchBusinessData } from '../utils/businessAPI';\nimport { theme } from '../styles/GlobalStyle';\n\nconst TestContainer = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl};\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n`;\n\nconst TestHeader = styled.h2`\n  color: ${theme.colors.primary};\n  margin-bottom: ${theme.spacing.lg};\n  text-align: center;\n`;\n\nconst TestSection = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n  padding: ${theme.spacing.lg};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst TestTitle = styled.h3`\n  color: ${theme.colors.gray800};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst TestResult = styled.div`\n  padding: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.sm};\n  margin-bottom: ${theme.spacing.sm};\n  background: ${props => (props.success ? '#d4edda' : '#f8d7da')};\n  color: ${props => (props.success ? '#155724' : '#721c24')};\n  border: 1px solid ${props => (props.success ? '#c3e6cb' : '#f5c6cb')};\n`;\n\nconst LoadingSpinner = styled.div`\n  text-align: center;\n  color: ${theme.colors.gray600};\n  padding: ${theme.spacing.lg};\n`;\n\nconst DataPreview = styled.pre`\n  background: ${theme.colors.gray100};\n  padding: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.sm};\n  overflow-x: auto;\n  font-size: 0.8rem;\n  max-height: 200px;\n  overflow-y: auto;\n`;\n\nconst TestButton = styled.button`\n  background: ${theme.colors.primary};\n  color: white;\n  border: none;\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  margin-right: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.md};\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n  }\n\n  &:disabled {\n    background: ${theme.colors.gray400};\n    cursor: not-allowed;\n  }\n`;\n\nconst TestDataConsistency = () => {\n  const [testResults, setTestResults] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [businessData, setBusinessData] = useState({});\n\n  const runApiTest = async businessType => {\n    setLoading(true);\n    try {\n      console.log(`🧪 Testing API call for ${businessType}...`);\n      const response = await fetchBusinessData(businessType);\n\n      setTestResults(prev => ({\n        ...prev,\n        [businessType]: {\n          success: response.success,\n          message: response.success ? 'API call successful' : response.message,\n          timestamp: new Date().toLocaleTimeString(),\n        },\n      }));\n\n      if (response.success) {\n        setBusinessData(prev => ({\n          ...prev,\n          [businessType]: response.data,\n        }));\n      }\n    } catch (error) {\n      setTestResults(prev => ({\n        ...prev,\n        [businessType]: {\n          success: false,\n          message: error.message,\n          timestamp: new Date().toLocaleTimeString(),\n        },\n      }));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const runAllTests = async () => {\n    const businessTypes = ['salon', 'gym', 'restaurant', 'freelancer'];\n\n    for (const type of businessTypes) {\n      await runApiTest(type);\n      // Small delay to see each test result\n      await new Promise(resolve => setTimeout(resolve, 300));\n    }\n  };\n\n  useEffect(() => {\n    // Run a basic test on component mount\n    runApiTest('salon');\n  }, []);\n\n  return (\n    <TestContainer>\n      <TestHeader>🧪 Data Consistency Test Dashboard</TestHeader>\n\n      <TestSection>\n        <TestTitle>📋 API Response Tests</TestTitle>\n        <p>\n          Test that both BusinessWebsitePage and AdminDashboard can fetch the\n          same data from our fake API.\n        </p>\n\n        <div style={{ marginBottom: theme.spacing.lg }}>\n          <TestButton onClick={() => runApiTest('salon')} disabled={loading}>\n            Test Salon Data\n          </TestButton>\n          <TestButton onClick={() => runApiTest('gym')} disabled={loading}>\n            Test Gym Data\n          </TestButton>\n          <TestButton\n            onClick={() => runApiTest('restaurant')}\n            disabled={loading}\n          >\n            Test Restaurant Data\n          </TestButton>\n          <TestButton\n            onClick={() => runApiTest('freelancer')}\n            disabled={loading}\n          >\n            Test Freelancer Data\n          </TestButton>\n          <TestButton onClick={runAllTests} disabled={loading}>\n            Run All Tests\n          </TestButton>\n        </div>\n\n        {loading && <LoadingSpinner>🔄 Running test...</LoadingSpinner>}\n\n        {Object.entries(testResults).map(([businessType, result]) => (\n          <TestResult key={businessType} success={result.success}>\n            <strong>{businessType.toUpperCase()}</strong>: {result.message}\n            <small> (at {result.timestamp})</small>\n          </TestResult>\n        ))}\n      </TestSection>\n\n      <TestSection>\n        <TestTitle>📊 Data Structure Verification</TestTitle>\n        <p>\n          Verify that the fetched data contains all required fields for both\n          pages to function correctly.\n        </p>\n\n        {Object.entries(businessData).map(([businessType, data]) => (\n          <div key={businessType} style={{ marginBottom: theme.spacing.lg }}>\n            <h4>\n              {businessType.charAt(0).toUpperCase() + businessType.slice(1)}{' '}\n              Data Structure:\n            </h4>\n            <div>\n              <strong>✅ Required Fields Present:</strong>\n              <ul>\n                <li>ID: {data.id ? '✅' : '❌'}</li>\n                <li>Name: {data.name ? '✅' : '❌'}</li>\n                <li>Hero Section: {data.hero ? '✅' : '❌'}</li>\n                <li>About Section: {data.about ? '✅' : '❌'}</li>\n                <li>\n                  Services:{' '}\n                  {data.services?.length\n                    ? `✅ (${data.services.length} items)`\n                    : '❌'}\n                </li>\n                <li>Contact Info: {data.contact ? '✅' : '❌'}</li>\n                <li>Navigation: {data.navigation ? '✅' : '❌'}</li>\n              </ul>\n            </div>\n\n            <details style={{ marginTop: theme.spacing.md }}>\n              <summary style={{ cursor: 'pointer', fontWeight: 'bold' }}>\n                View Raw Data (Click to expand)\n              </summary>\n              <DataPreview>{JSON.stringify(data, null, 2)}</DataPreview>\n            </details>\n          </div>\n        ))}\n      </TestSection>\n\n      <TestSection>\n        <TestTitle>🔗 Integration Status</TestTitle>\n        <div>\n          <TestResult success={true}>\n            ✅ BusinessWebsitePage: Updated to use fetchBusinessData() API\n          </TestResult>\n          <TestResult success={true}>\n            ✅ BuisnessAdminDashboard: Updated to use fetchBusinessData() API\n          </TestResult>\n          <TestResult success={true}>\n            ✅ Centralized Data: All business data stored in\n            businessWebsiteData.js\n          </TestResult>\n          <TestResult success={true}>\n            ✅ Fake API: Simulates real API calls with businessAPI.js\n          </TestResult>\n          <TestResult success={true}>\n            ✅ Data Consistency: Both pages use identical data source\n          </TestResult>\n        </div>\n\n        <p style={{ marginTop: theme.spacing.lg, color: theme.colors.gray600 }}>\n          <strong>How it works:</strong>\n          <br />\n          1. BusinessWebsitePage calls fetchBusinessData(slug) to get business\n          data\n          <br />\n          2. BuisnessAdminDashboard calls the same fetchBusinessData(slug)\n          function\n          <br />\n          3. Both receive identical data from the centralized\n          businessWebsiteData.js file\n          <br />\n          4. Changes made in admin dashboard can be reflected in real-time via\n          Redux store\n        </p>\n      </TestSection>\n\n      <TestSection>\n        <TestTitle>🎯 Next Steps</TestTitle>\n        <div>\n          <p>\n            ✅ <strong>Completed:</strong>\n          </p>\n          <ul>\n            <li>Created centralized data file (businessWebsiteData.js)</li>\n            <li>Built fake API service (businessAPI.js)</li>\n            <li>Updated both pages to use the API</li>\n            <li>Verified data consistency</li>\n          </ul>\n\n          <p style={{ marginTop: theme.spacing.md }}>\n            🚀 <strong>Ready for:</strong>\n          </p>\n          <ul>\n            <li>Replace fake API with real backend API calls</li>\n            <li>Add data persistence and database integration</li>\n            <li>Implement real-time updates between admin and website</li>\n            <li>Add data validation and error handling</li>\n          </ul>\n        </div>\n      </TestSection>\n    </TestContainer>\n  );\n};\n\nexport default TestDataConsistency;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/TestDynamicContent.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'businessData' is assigned a value but never used.","line":79,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":79,"endColumn":22},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":84,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":84,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2268,2333],"text":""},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { fetchBusinessData } from '../utils/businessAPI';\nimport { theme } from '../styles/GlobalStyle';\n\nconst TestContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl};\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n`;\n\nconst TestHeader = styled.h2`\n  color: ${theme.colors.primary};\n  margin-bottom: ${theme.spacing.lg};\n  text-align: center;\n`;\n\nconst TestSection = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n  padding: ${theme.spacing.lg};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst TestTitle = styled.h3`\n  color: ${theme.colors.gray800};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst TestResult = styled.div`\n  padding: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.sm};\n  margin-bottom: ${theme.spacing.sm};\n  background: ${props => (props.success ? '#d4edda' : '#f8d7da')};\n  color: ${props => (props.success ? '#155724' : '#721c24')};\n  border: 1px solid ${props => (props.success ? '#c3e6cb' : '#f5c6cb')};\n`;\n\nconst LoadingSpinner = styled.div`\n  text-align: center;\n  color: ${theme.colors.gray600};\n  padding: ${theme.spacing.lg};\n`;\n\nconst ContentPreview = styled.div`\n  background: ${theme.colors.gray100};\n  padding: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.sm};\n  margin-top: ${theme.spacing.sm};\n  font-size: 0.9rem;\n`;\n\nconst TestButton = styled.button`\n  background: ${theme.colors.primary};\n  color: white;\n  border: none;\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  margin-right: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.md};\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n  }\n\n  &:disabled {\n    background: ${theme.colors.gray400};\n    cursor: not-allowed;\n  }\n`;\n\nconst TestDynamicContent = () => {\n  const [testResults, setTestResults] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [businessData, setBusinessData] = useState({});\n\n  const testBusinessContent = async businessType => {\n    setLoading(true);\n    try {\n      console.log(`🧪 Testing dynamic content for ${businessType}...`);\n      const response = await fetchBusinessData(businessType);\n\n      if (response.success && response.data) {\n        const data = response.data;\n\n        // Test results object\n        const results = {\n          businessType,\n          timestamp: new Date().toLocaleTimeString(),\n          tests: [],\n        };\n\n        // Test 1: Section Titles and Subtitles\n        const sectionsTest = {\n          name: 'Section Titles & Subtitles',\n          success: true,\n          details: [],\n        };\n\n        if (data.sections?.services?.title) {\n          sectionsTest.details.push(\n            `✅ Services Title: \"${data.sections.services.title}\"`\n          );\n        } else {\n          sectionsTest.success = false;\n          sectionsTest.details.push('❌ Services title missing');\n        }\n\n        if (data.sections?.team?.title) {\n          sectionsTest.details.push(\n            `✅ Team Title: \"${data.sections.team.title}\"`\n          );\n        } else {\n          sectionsTest.success = false;\n          sectionsTest.details.push('❌ Team title missing');\n        }\n\n        if (data.sections?.testimonials?.title) {\n          sectionsTest.details.push(\n            `✅ Testimonials Title: \"${data.sections.testimonials.title}\"`\n          );\n        } else {\n          sectionsTest.success = false;\n          sectionsTest.details.push('❌ Testimonials title missing');\n        }\n\n        results.tests.push(sectionsTest);\n\n        // Test 2: UI Button Labels\n        const buttonsTest = {\n          name: 'Button Labels',\n          success: true,\n          details: [],\n        };\n\n        if (data.ui?.buttons?.bookNow) {\n          buttonsTest.details.push(\n            `✅ Book Now Button: \"${data.ui.buttons.bookNow}\"`\n          );\n        } else {\n          buttonsTest.success = false;\n          buttonsTest.details.push('❌ Book Now button text missing');\n        }\n\n        if (data.ui?.buttons?.sendMessage) {\n          buttonsTest.details.push(\n            `✅ Send Message Button: \"${data.ui.buttons.sendMessage}\"`\n          );\n        } else {\n          buttonsTest.success = false;\n          buttonsTest.details.push('❌ Send Message button text missing');\n        }\n\n        results.tests.push(buttonsTest);\n\n        // Test 3: Statistics Data\n        const statsTest = {\n          name: 'Statistics',\n          success: true,\n          details: [],\n        };\n\n        if (data.about?.stats && Array.isArray(data.about.stats)) {\n          statsTest.details.push(\n            `✅ Statistics Count: ${data.about.stats.length} stats`\n          );\n          data.about.stats.forEach((stat, index) => {\n            if (stat.number && stat.label) {\n              statsTest.details.push(\n                `✅ Stat ${index + 1}: \"${stat.number}\" - \"${stat.label}\"`\n              );\n            } else {\n              statsTest.success = false;\n              statsTest.details.push(`❌ Stat ${index + 1}: incomplete data`);\n            }\n          });\n        } else {\n          statsTest.success = false;\n          statsTest.details.push('❌ Statistics array missing');\n        }\n\n        results.tests.push(statsTest);\n\n        // Test 4: Contact Form Placeholders\n        const formTest = {\n          name: 'Contact Form Placeholders',\n          success: true,\n          details: [],\n        };\n\n        const placeholders = data.ui?.contactForm?.placeholders || {};\n        if (placeholders.name) {\n          formTest.details.push(`✅ Name Placeholder: \"${placeholders.name}\"`);\n        } else {\n          formTest.success = false;\n          formTest.details.push('❌ Name placeholder missing');\n        }\n\n        if (placeholders.email) {\n          formTest.details.push(\n            `✅ Email Placeholder: \"${placeholders.email}\"`\n          );\n        } else {\n          formTest.success = false;\n          formTest.details.push('❌ Email placeholder missing');\n        }\n\n        results.tests.push(formTest);\n\n        // Test 5: Business Hours\n        const hoursTest = {\n          name: 'Business Hours',\n          success: true,\n          details: [],\n        };\n\n        if (data.businessHours?.hours) {\n          const daysCount = Object.keys(data.businessHours.hours).length;\n          hoursTest.details.push(\n            `✅ Business Hours: ${daysCount} days configured`\n          );\n\n          Object.entries(data.businessHours.hours).forEach(([day, time]) => {\n            hoursTest.details.push(\n              `✅ ${day.charAt(0).toUpperCase() + day.slice(1)}: ${time}`\n            );\n          });\n        } else {\n          hoursTest.success = false;\n          hoursTest.details.push('❌ Business hours missing');\n        }\n\n        results.tests.push(hoursTest);\n\n        // Test 6: FAQ Data\n        const faqTest = {\n          name: 'FAQ Content',\n          success: true,\n          details: [],\n        };\n\n        if (data.faq && Array.isArray(data.faq) && data.faq.length > 0) {\n          faqTest.details.push(`✅ FAQ Count: ${data.faq.length} questions`);\n          data.faq.slice(0, 3).forEach((faq, index) => {\n            if (faq.question && faq.answer) {\n              faqTest.details.push(\n                `✅ FAQ ${index + 1}: \"${faq.question.substring(0, 50)}...\"`\n              );\n            } else {\n              faqTest.success = false;\n              faqTest.details.push(`❌ FAQ ${index + 1}: incomplete data`);\n            }\n          });\n        } else {\n          faqTest.success = false;\n          faqTest.details.push('❌ FAQ data missing or empty');\n        }\n\n        results.tests.push(faqTest);\n\n        // Calculate overall success\n        results.overallSuccess = results.tests.every(test => test.success);\n\n        setTestResults(prev => ({\n          ...prev,\n          [businessType]: results,\n        }));\n\n        setBusinessData(prev => ({\n          ...prev,\n          [businessType]: data,\n        }));\n      } else {\n        setTestResults(prev => ({\n          ...prev,\n          [businessType]: {\n            success: false,\n            message: response.message || 'API call failed',\n            timestamp: new Date().toLocaleTimeString(),\n          },\n        }));\n      }\n    } catch (error) {\n      setTestResults(prev => ({\n        ...prev,\n        [businessType]: {\n          success: false,\n          message: error.message,\n          timestamp: new Date().toLocaleTimeString(),\n        },\n      }));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const runAllTests = async () => {\n    const businessTypes = ['salon', 'gym', 'restaurant', 'freelancer'];\n\n    for (const type of businessTypes) {\n      await testBusinessContent(type);\n      // Small delay to see each test result\n      await new Promise(resolve => setTimeout(resolve, 500));\n    }\n  };\n\n  useEffect(() => {\n    // Run initial test\n    testBusinessContent('salon');\n  }, []);\n\n  return (\n    <TestContainer>\n      <TestHeader>🔍 Dynamic Content Verification Test</TestHeader>\n\n      <TestSection>\n        <TestTitle>📋 Hardcoded Content Elimination Test</TestTitle>\n        <p>\n          Verify that all previously hardcoded content is now dynamic and comes\n          from the centralized data source.\n        </p>\n\n        <div style={{ marginBottom: theme.spacing.lg }}>\n          <TestButton\n            onClick={() => testBusinessContent('salon')}\n            disabled={loading}\n          >\n            Test Salon\n          </TestButton>\n          <TestButton\n            onClick={() => testBusinessContent('gym')}\n            disabled={loading}\n          >\n            Test Gym\n          </TestButton>\n          <TestButton\n            onClick={() => testBusinessContent('restaurant')}\n            disabled={loading}\n          >\n            Test Restaurant\n          </TestButton>\n          <TestButton\n            onClick={() => testBusinessContent('freelancer')}\n            disabled={loading}\n          >\n            Test Freelancer\n          </TestButton>\n          <TestButton onClick={runAllTests} disabled={loading}>\n            Run All Tests\n          </TestButton>\n        </div>\n\n        {loading && <LoadingSpinner>🔄 Running tests...</LoadingSpinner>}\n\n        {Object.entries(testResults).map(([businessType, result]) => (\n          <div key={businessType} style={{ marginBottom: theme.spacing.lg }}>\n            <TestResult success={result.overallSuccess || result.success}>\n              <strong>{businessType.toUpperCase()}</strong>:{' '}\n              {result.overallSuccess\n                ? `✅ All dynamic content tests passed (${result.tests?.length || 0} tests)`\n                : result.message || '❌ Some tests failed'}\n              <small> (at {result.timestamp})</small>\n            </TestResult>\n\n            {result.tests && (\n              <div style={{ marginLeft: theme.spacing.md }}>\n                {result.tests.map((test, index) => (\n                  <div key={index} style={{ marginBottom: theme.spacing.md }}>\n                    <TestResult success={test.success}>\n                      <strong>{test.name}</strong>:{' '}\n                      {test.success ? '✅ Passed' : '❌ Failed'}\n                    </TestResult>\n                    <ContentPreview>\n                      {test.details.map((detail, i) => (\n                        <div key={i}>{detail}</div>\n                      ))}\n                    </ContentPreview>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        ))}\n      </TestSection>\n\n      <TestSection>\n        <TestTitle>🎯 Implementation Summary</TestTitle>\n        <div>\n          <TestResult success={true}>\n            ✅ <strong>Removed Hardcoded Content:</strong> All UI text, section\n            titles, button labels, and static content\n          </TestResult>\n          <TestResult success={true}>\n            ✅ <strong>Centralized Data:</strong> All content now stored in\n            businessWebsiteData.js\n          </TestResult>\n          <TestResult success={true}>\n            ✅ <strong>Dynamic API Integration:</strong> Both pages use\n            fetchBusinessData() API\n          </TestResult>\n          <TestResult success={true}>\n            ✅ <strong>Admin Dashboard:</strong> Added UI Text & Labels and\n            Statistics editing sections\n          </TestResult>\n          <TestResult success={true}>\n            ✅ <strong>Real-time Updates:</strong> Changes in admin reflect\n            immediately via Redux\n          </TestResult>\n        </div>\n\n        <p style={{ marginTop: theme.spacing.lg, color: theme.colors.gray600 }}>\n          <strong>What was accomplished:</strong>\n          <br />\n          • Identified and cataloged all hardcoded content in\n          BusinessWebsitePage\n          <br />\n          • Extended businessWebsiteData.js with comprehensive UI content\n          structure\n          <br />\n          • Replaced hardcoded text with dynamic data from centralized source\n          <br />\n          • Added admin editing interfaces for UI content, statistics, and\n          labels\n          <br />\n          • Verified all content is now editable through admin dashboard\n          <br />• Maintained data consistency between website and admin views\n        </p>\n      </TestSection>\n\n      <TestSection>\n        <TestTitle>🏗️ Architecture Improvements</TestTitle>\n        <div>\n          <p>\n            <strong>Before:</strong> Hardcoded strings scattered throughout\n            components\n          </p>\n          <ContentPreview>\n            {`// Old hardcoded approach\n<h2>Our Services</h2>\n<p>We offer comprehensive services...</p>\n<button>Book Now</button>`}\n          </ContentPreview>\n\n          <p style={{ marginTop: theme.spacing.md }}>\n            <strong>After:</strong> Dynamic content from centralized API\n          </p>\n          <ContentPreview>\n            {`// New dynamic approach\n<h2>{content.sections?.services?.title || 'Our Services'}</h2>\n<p>{content.sections?.services?.subtitle || 'Default text...'}</p>\n<button>{content.ui?.buttons?.bookNow || 'Book Now'}</button>`}\n          </ContentPreview>\n        </div>\n      </TestSection>\n    </TestContainer>\n  );\n};\n\nexport default TestDynamicContent;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/auth/AuthModal.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaTimes,\n  FaUser,\n  FaEnvelope,\n  FaLock,\n  FaPhone,\n  FaStore,\n  FaEye,\n  FaEyeSlash,\n  FaGoogle,\n  FaFacebook,\n  FaGithub,\n} from 'react-icons/fa';\nimport { useAuth } from '../../context/AuthContext';\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.6);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 999999;\n  backdrop-filter: blur(4px);\n  padding: 1rem;\n  overflow-y: auto;\n`;\n\nconst ModalContainer = styled.div`\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);\n  max-width: 450px;\n  width: 100%;\n  max-height: calc(100vh - 2rem);\n  overflow-y: auto;\n  position: relative;\n  margin: auto;\n\n  @media (max-width: 768px) {\n    max-width: 95%;\n    border-radius: 12px;\n  }\n`;\n\nconst ModalHeader = styled.div`\n  padding: 2rem 2rem 1rem 2rem;\n  text-align: center;\n  border-bottom: 1px solid #f3f4f6;\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  background: none;\n  border: none;\n  font-size: 1.5rem;\n  color: #6b7280;\n  cursor: pointer;\n  border-radius: 8px;\n  padding: 0.5rem;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: #f3f4f6;\n    color: #374151;\n  }\n`;\n\nconst ModalTitle = styled.h2`\n  font-size: 2rem;\n  font-weight: 700;\n  color: #111827;\n  margin: 0 0 0.5rem 0;\n`;\n\nconst ModalSubtitle = styled.p`\n  color: #6b7280;\n  margin: 0;\n  font-size: 1rem;\n`;\n\nconst TabContainer = styled.div`\n  display: flex;\n  margin: 1.5rem 0 0 0;\n`;\n\nconst Tab = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  flex: 1;\n  padding: 0.75rem;\n  background: none;\n  border: none;\n  border-bottom: 2px solid\n    ${props => (props.active ? '#3b82f6' : 'transparent')};\n  color: ${props => (props.active ? '#3b82f6' : '#6b7280')};\n  font-weight: ${props => (props.active ? '600' : '500')};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    color: #3b82f6;\n  }\n`;\n\nconst ModalBody = styled.div`\n  padding: 2rem;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n\nconst Label = styled.label`\n  font-weight: 600;\n  color: #374151;\n  font-size: 0.875rem;\n`;\n\nconst InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nconst InputIcon = styled.div`\n  position: absolute;\n  left: 1rem;\n  color: #9ca3af;\n  z-index: 1;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 0.75rem 1rem 0.75rem 2.75rem;\n  border: 2px solid #e5e7eb;\n  border-radius: 12px;\n  font-size: 1rem;\n  transition: all 0.2s ease;\n  background: #f9fafb;\n\n  &:focus {\n    outline: none;\n    border-color: #3b82f6;\n    background: white;\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n\n  &::placeholder {\n    color: #9ca3af;\n  }\n\n  ${props =>\n    props.error &&\n    `\n    border-color: #ef4444;\n    &:focus {\n      border-color: #ef4444;\n      box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);\n    }\n  `}\n`;\n\nconst PasswordToggle = styled.button`\n  position: absolute;\n  right: 1rem;\n  background: none;\n  border: none;\n  color: #9ca3af;\n  cursor: pointer;\n  z-index: 2;\n\n  &:hover {\n    color: #6b7280;\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: 0.75rem 1rem 0.75rem 2.75rem;\n  border: 2px solid #e5e7eb;\n  border-radius: 12px;\n  font-size: 1rem;\n  background: #f9fafb;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #3b82f6;\n    background: white;\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: #ef4444;\n  font-size: 0.875rem;\n  margin-top: 0.25rem;\n`;\n\nconst SubmitButton = styled.button`\n  background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);\n  color: white;\n  padding: 0.875rem 1.5rem;\n  border: none;\n  border-radius: 12px;\n  font-weight: 600;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  margin-top: 0.5rem;\n\n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: 0 10px 25px rgba(59, 130, 246, 0.3);\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst Divider = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 1.5rem 0;\n\n  &::before,\n  &::after {\n    content: '';\n    flex: 1;\n    height: 1px;\n    background: #e5e7eb;\n  }\n\n  span {\n    padding: 0 1rem;\n    color: #6b7280;\n    font-size: 0.875rem;\n  }\n`;\n\nconst SocialButtons = styled.div`\n  display: flex;\n  gap: 0.75rem;\n`;\n\nconst SocialButton = styled.button`\n  flex: 1;\n  padding: 0.75rem;\n  border: 2px solid #e5e7eb;\n  border-radius: 12px;\n  background: white;\n  color: #374151;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  font-weight: 500;\n\n  &:hover {\n    border-color: #d1d5db;\n    background: #f9fafb;\n  }\n\n  &.google:hover {\n    border-color: #ea4335;\n    color: #ea4335;\n  }\n\n  &.facebook:hover {\n    border-color: #1877f2;\n    color: #1877f2;\n  }\n\n  &.github:hover {\n    border-color: #333;\n    color: #333;\n  }\n`;\n\nconst RoleSelector = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 1rem;\n  margin-top: 0.5rem;\n`;\n\nconst RoleOption = styled.div`\n  padding: 1rem;\n  border: 2px solid ${props => (props.selected ? '#3b82f6' : '#e5e7eb')};\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  text-align: center;\n  background: ${props => (props.selected ? '#eff6ff' : 'white')};\n\n  &:hover {\n    border-color: #3b82f6;\n  }\n\n  .icon {\n    font-size: 1.5rem;\n    color: ${props => (props.selected ? '#3b82f6' : '#6b7280')};\n    margin-bottom: 0.5rem;\n  }\n\n  .title {\n    font-weight: 600;\n    color: ${props => (props.selected ? '#3b82f6' : '#374151')};\n    margin-bottom: 0.25rem;\n  }\n\n  .desc {\n    font-size: 0.875rem;\n    color: #6b7280;\n  }\n`;\n\nconst AuthModal = ({ isOpen, onClose, onSuccess, defaultTab = 'login' }) => {\n  const { login, register, loading } = useAuth();\n  const [activeTab, setActiveTab] = useState(defaultTab);\n  const [showPassword, setShowPassword] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    password: '',\n    confirmPassword: '',\n    role: 'customer',\n    businessName: '',\n    businessType: 'General',\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Prevent body scroll when modal is open\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n\n    return () => {\n      document.body.style.overflow = 'unset';\n    };\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: '',\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (activeTab === 'register') {\n      if (!formData.name.trim()) {\n        newErrors.name = 'Name is required';\n      }\n\n      if (!formData.phone.trim()) {\n        newErrors.phone = 'Phone number is required';\n      }\n\n      if (formData.password !== formData.confirmPassword) {\n        newErrors.confirmPassword = \"Passwords don't match\";\n      }\n\n      if (formData.role === 'seller' && !formData.businessName.trim()) {\n        newErrors.businessName = 'Business name is required for sellers';\n      }\n    }\n\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    if (!formData.password.trim()) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!validateForm()) return;\n\n    setIsSubmitting(true);\n\n    try {\n      let result;\n      if (activeTab === 'login') {\n        result = await login({\n          email: formData.email,\n          password: formData.password,\n        });\n      } else {\n        result = await register(formData);\n      }\n\n      if (result.success) {\n        // Reset form\n        setFormData({\n          name: '',\n          email: '',\n          phone: '',\n          password: '',\n          confirmPassword: '',\n          role: 'customer',\n          businessName: '',\n          businessType: 'General',\n        });\n\n        if (onSuccess) {\n          onSuccess();\n        } else {\n          onClose();\n        }\n      } else {\n        setErrors({ submit: result.error });\n      }\n    } catch (error) {\n      setErrors({ submit: 'Something went wrong. Please try again.' });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleSocialLogin = provider => {\n    // Simulate social login\n    const email = `demo@${provider}.com`;\n    login({\n      email,\n      name: `Demo ${provider.charAt(0).toUpperCase() + provider.slice(1)} User`,\n      role: 'customer',\n    }).then(result => {\n      if (result.success) {\n        onClose();\n      }\n    });\n  };\n\n  return (\n    <ModalOverlay onClick={onClose}>\n      <ModalContainer onClick={e => e.stopPropagation()}>\n        <CloseButton onClick={onClose}>\n          <FaTimes />\n        </CloseButton>\n\n        <ModalHeader>\n          <ModalTitle>\n            {activeTab === 'login' ? 'Welcome Back!' : 'Join Our Platform'}\n          </ModalTitle>\n          <ModalSubtitle>\n            {activeTab === 'login'\n              ? 'Sign in to continue your journey'\n              : 'Create an account to get started'}\n          </ModalSubtitle>\n\n          <TabContainer>\n            <Tab\n              active={activeTab === 'login'}\n              onClick={() => setActiveTab('login')}\n            >\n              Sign In\n            </Tab>\n            <Tab\n              active={activeTab === 'register'}\n              onClick={() => setActiveTab('register')}\n            >\n              Sign Up\n            </Tab>\n          </TabContainer>\n        </ModalHeader>\n\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            {activeTab === 'register' && (\n              <>\n                <FormGroup>\n                  <Label>I want to:</Label>\n                  <RoleSelector>\n                    <RoleOption\n                      selected={formData.role === 'customer'}\n                      onClick={() =>\n                        setFormData(prev => ({ ...prev, role: 'customer' }))\n                      }\n                    >\n                      <div className=\"icon\">\n                        <FaUser />\n                      </div>\n                      <div className=\"title\">Buy Products</div>\n                      <div className=\"desc\">\n                        Browse and enquire about products\n                      </div>\n                    </RoleOption>\n                    <RoleOption\n                      selected={formData.role === 'seller'}\n                      onClick={() =>\n                        setFormData(prev => ({ ...prev, role: 'seller' }))\n                      }\n                    >\n                      <div className=\"icon\">\n                        <FaStore />\n                      </div>\n                      <div className=\"title\">Sell Products</div>\n                      <div className=\"desc\">Create your own store</div>\n                    </RoleOption>\n                  </RoleSelector>\n                </FormGroup>\n\n                <FormGroup>\n                  <Label>Full Name</Label>\n                  <InputWrapper>\n                    <InputIcon>\n                      <FaUser />\n                    </InputIcon>\n                    <Input\n                      type=\"text\"\n                      name=\"name\"\n                      value={formData.name}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter your full name\"\n                      error={errors.name}\n                    />\n                  </InputWrapper>\n                  {errors.name && <ErrorMessage>{errors.name}</ErrorMessage>}\n                </FormGroup>\n\n                {formData.role === 'seller' && (\n                  <>\n                    <FormGroup>\n                      <Label>Business Name</Label>\n                      <InputWrapper>\n                        <InputIcon>\n                          <FaStore />\n                        </InputIcon>\n                        <Input\n                          type=\"text\"\n                          name=\"businessName\"\n                          value={formData.businessName}\n                          onChange={handleInputChange}\n                          placeholder=\"Enter your business name\"\n                          error={errors.businessName}\n                        />\n                      </InputWrapper>\n                      {errors.businessName && (\n                        <ErrorMessage>{errors.businessName}</ErrorMessage>\n                      )}\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Label>Business Type</Label>\n                      <InputWrapper>\n                        <InputIcon>\n                          <FaStore />\n                        </InputIcon>\n                        <Select\n                          name=\"businessType\"\n                          value={formData.businessType}\n                          onChange={handleInputChange}\n                        >\n                          <option value=\"General\">General Store</option>\n                          <option value=\"Electronics\">Electronics</option>\n                          <option value=\"Fashion\">Fashion & Clothing</option>\n                          <option value=\"Home & Garden\">Home & Garden</option>\n                          <option value=\"Sports\">Sports & Fitness</option>\n                          <option value=\"Books\">Books & Media</option>\n                          <option value=\"Health\">Health & Beauty</option>\n                          <option value=\"Food\">Food & Beverages</option>\n                        </Select>\n                      </InputWrapper>\n                    </FormGroup>\n                  </>\n                )}\n\n                <FormGroup>\n                  <Label>Phone Number</Label>\n                  <InputWrapper>\n                    <InputIcon>\n                      <FaPhone />\n                    </InputIcon>\n                    <Input\n                      type=\"tel\"\n                      name=\"phone\"\n                      value={formData.phone}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter your phone number\"\n                      error={errors.phone}\n                    />\n                  </InputWrapper>\n                  {errors.phone && <ErrorMessage>{errors.phone}</ErrorMessage>}\n                </FormGroup>\n              </>\n            )}\n\n            <FormGroup>\n              <Label>Email Address</Label>\n              <InputWrapper>\n                <InputIcon>\n                  <FaEnvelope />\n                </InputIcon>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter your email address\"\n                  error={errors.email}\n                />\n              </InputWrapper>\n              {errors.email && <ErrorMessage>{errors.email}</ErrorMessage>}\n            </FormGroup>\n\n            <FormGroup>\n              <Label>Password</Label>\n              <InputWrapper>\n                <InputIcon>\n                  <FaLock />\n                </InputIcon>\n                <Input\n                  type={showPassword ? 'text' : 'password'}\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter your password\"\n                  error={errors.password}\n                />\n                <PasswordToggle\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? <FaEyeSlash /> : <FaEye />}\n                </PasswordToggle>\n              </InputWrapper>\n              {errors.password && (\n                <ErrorMessage>{errors.password}</ErrorMessage>\n              )}\n            </FormGroup>\n\n            {activeTab === 'register' && (\n              <FormGroup>\n                <Label>Confirm Password</Label>\n                <InputWrapper>\n                  <InputIcon>\n                    <FaLock />\n                  </InputIcon>\n                  <Input\n                    type={showPassword ? 'text' : 'password'}\n                    name=\"confirmPassword\"\n                    value={formData.confirmPassword}\n                    onChange={handleInputChange}\n                    placeholder=\"Confirm your password\"\n                    error={errors.confirmPassword}\n                  />\n                </InputWrapper>\n                {errors.confirmPassword && (\n                  <ErrorMessage>{errors.confirmPassword}</ErrorMessage>\n                )}\n              </FormGroup>\n            )}\n\n            {errors.submit && <ErrorMessage>{errors.submit}</ErrorMessage>}\n\n            <SubmitButton type=\"submit\" disabled={isSubmitting || loading}>\n              {isSubmitting\n                ? 'Please wait...'\n                : activeTab === 'login'\n                  ? 'Sign In'\n                  : 'Create Account'}\n            </SubmitButton>\n          </Form>\n\n          <Divider>\n            <span>or continue with</span>\n          </Divider>\n\n          <SocialButtons>\n            <SocialButton\n              className=\"google\"\n              onClick={() => handleSocialLogin('google')}\n            >\n              <FaGoogle />\n              Google\n            </SocialButton>\n            <SocialButton\n              className=\"facebook\"\n              onClick={() => handleSocialLogin('facebook')}\n            >\n              <FaFacebook />\n              Facebook\n            </SocialButton>\n            <SocialButton\n              className=\"github\"\n              onClick={() => handleSocialLogin('github')}\n            >\n              <FaGithub />\n              GitHub\n            </SocialButton>\n          </SocialButtons>\n        </ModalBody>\n      </ModalContainer>\n    </ModalOverlay>\n  );\n};\n\nexport default AuthModal;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/auth/LoginPage.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaEnvelope, FaLock, FaEye, FaEyeSlash } from 'react-icons/fa';\nimport { theme, media } from '../../styles/GlobalStyle';\nimport { Button } from '../shared/Button';\nimport { Input } from '../shared/Input';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: ${theme.spacing.lg};\n\n  ${media.mobile} {\n    padding: ${theme.spacing.md};\n    align-items: flex-start;\n    padding-top: ${theme.spacing.xl};\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.lg};\n  }\n`;\n\nconst LoginCard = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  padding: ${theme.spacing.xxl};\n  box-shadow: ${theme.shadows.xl};\n  width: 100%;\n  max-width: 25rem;\n\n  ${media.mobile} {\n    padding: ${theme.spacing.lg};\n    border-radius: ${theme.borderRadius.lg};\n    max-width: 100%;\n    box-shadow: ${theme.shadows.lg};\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.xl};\n    max-width: 22rem;\n  }\n`;\n\nconst Logo = styled.div`\n  text-align: center;\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst LogoText = styled.h1`\n  font-size: 2rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n  margin-bottom: ${theme.spacing.sm};\n\n  ${media.mobile} {\n    font-size: 1.5rem;\n  }\n\n  ${media.tablet} {\n    font-size: 1.75rem;\n  }\n`;\n\nconst LogoSubtext = styled.p`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n\n  ${media.mobile} {\n    font-size: 0.8125rem;\n  }\n`;\n\nconst Title = styled.h2`\n  font-size: 1.75rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  text-align: center;\n  margin-bottom: ${theme.spacing.xl};\n\n  ${media.mobile} {\n    font-size: 1.375rem;\n    margin-bottom: ${theme.spacing.lg};\n  }\n\n  ${media.tablet} {\n    font-size: 1.5rem;\n  }\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.lg};\n\n  ${media.mobile} {\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst FormGroup = styled.div`\n  position: relative;\n`;\n\nconst Label = styled.label`\n  display: block;\n  font-weight: 500;\n  color: ${theme.colors.gray700};\n  margin-bottom: ${theme.spacing.sm};\n  font-size: 0.875rem;\n\n  ${media.mobile} {\n    font-size: 0.8125rem;\n    margin-bottom: ${theme.spacing.xs};\n  }\n`;\n\nconst InputContainer = styled.div`\n  position: relative;\n`;\n\nconst InputIcon = styled.div`\n  position: absolute;\n  left: ${theme.spacing.md};\n  top: 50%;\n  transform: translateY(-50%);\n  color: ${theme.colors.gray400};\n  font-size: 1rem;\n  z-index: 1;\n\n  ${media.mobile} {\n    left: ${theme.spacing.sm};\n    font-size: 0.875rem;\n  }\n`;\n\nconst StyledInput = styled(Input)`\n  width: 100%;\n  padding: ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.md} 3rem;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.lg};\n  font-size: 1rem;\n  transition: all 0.2s ease;\n  min-height: 3rem;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    box-shadow: 0 0 0 3px ${theme.colors.primary}20;\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray400};\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.sm} ${theme.spacing.sm} ${theme.spacing.sm} 2.5rem;\n    font-size: 1rem;\n    min-height: 2.75rem;\n    border-radius: ${theme.borderRadius.md};\n  }\n`;\n\nconst PasswordToggle = styled.button`\n  position: absolute;\n  right: ${theme.spacing.md};\n  top: 50%;\n  transform: translateY(-50%);\n  background: none;\n  border: none;\n  color: ${theme.colors.gray400};\n  cursor: pointer;\n  font-size: 1rem;\n  padding: ${theme.spacing.xs};\n  z-index: 1;\n\n  &:hover {\n    color: ${theme.colors.gray600};\n  }\n\n  ${media.mobile} {\n    right: ${theme.spacing.sm};\n    font-size: 0.875rem;\n    padding: ${theme.spacing.xs};\n  }\n`;\n\nconst ForgotPasswordLink = styled(Link)`\n  color: ${theme.colors.primary};\n  text-decoration: none;\n  font-size: 0.9rem;\n  text-align: right;\n  display: block;\n  margin-top: ${theme.spacing.sm};\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  ${media.mobile} {\n    font-size: 0.8125rem;\n    text-align: center;\n  }\n`;\n\nconst LoginButton = styled(Button)`\n  width: 100%;\n  padding: ${theme.spacing.md};\n  font-size: 1rem;\n  font-weight: 600;\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  border: none;\n  border-radius: ${theme.borderRadius.lg};\n  transition: all 0.2s ease;\n  min-height: 3rem;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-1px);\n    box-shadow: ${theme.shadows.lg};\n  }\n\n  &:disabled {\n    background: ${theme.colors.gray300};\n    cursor: not-allowed;\n    transform: none;\n  }\n\n  ${media.mobile} {\n    min-height: 2.75rem;\n    font-size: 1rem;\n    border-radius: ${theme.borderRadius.md};\n\n    &:hover {\n      transform: none;\n    }\n  }\n`;\n\nconst Divider = styled.div`\n  text-align: center;\n  margin: ${theme.spacing.lg} 0;\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n    right: 0;\n    height: 1px;\n    background: ${theme.colors.gray200};\n  }\n\n  span {\n    background: ${theme.colors.white};\n    color: ${theme.colors.gray500};\n    padding: 0 ${theme.spacing.md};\n    font-size: 0.9rem;\n  }\n\n  ${media.mobile} {\n    margin: ${theme.spacing.md} 0;\n\n    span {\n      font-size: 0.8125rem;\n      padding: 0 ${theme.spacing.sm};\n    }\n  }\n`;\n\nconst RegisterLink = styled.div`\n  text-align: center;\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n\n  a {\n    color: ${theme.colors.primary};\n    text-decoration: none;\n    font-weight: 500;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  ${media.mobile} {\n    font-size: 0.8125rem;\n  }\n`;\n\nconst BackToHome = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.primary};\n  text-decoration: none;\n  font-size: 0.9rem;\n  margin-bottom: ${theme.spacing.lg};\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  ${media.mobile} {\n    font-size: 0.8125rem;\n    margin-bottom: ${theme.spacing.md};\n    gap: ${theme.spacing.xs};\n  }\n`;\n\nconst LoginPage = () => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    // Simulate login process\n    setTimeout(() => {\n      setIsLoading(false);\n      // Navigate to dashboard or home page\n      navigate('/');\n    }, 1500);\n  };\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <PageContainer>\n      <LoginCard>\n        <BackToHome to=\"/\">← Back to Home</BackToHome>\n\n        <Logo>\n          <LogoText>StoreBuilder</LogoText>\n          <LogoSubtext>Launch your online store without coding</LogoSubtext>\n        </Logo>\n\n        <Title>Welcome Back</Title>\n\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Label htmlFor=\"email\">Email Address</Label>\n            <InputContainer>\n              <InputIcon>\n                <FaEnvelope />\n              </InputIcon>\n              <StyledInput\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n                value={formData.email}\n                onChange={handleInputChange}\n                required\n              />\n            </InputContainer>\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"password\">Password</Label>\n            <InputContainer>\n              <InputIcon>\n                <FaLock />\n              </InputIcon>\n              <StyledInput\n                type={showPassword ? 'text' : 'password'}\n                id=\"password\"\n                name=\"password\"\n                placeholder=\"Enter your password\"\n                value={formData.password}\n                onChange={handleInputChange}\n                required\n              />\n              <PasswordToggle type=\"button\" onClick={togglePasswordVisibility}>\n                {showPassword ? <FaEyeSlash /> : <FaEye />}\n              </PasswordToggle>\n            </InputContainer>\n            <ForgotPasswordLink to=\"/forgot-password\">\n              Forgot your password?\n            </ForgotPasswordLink>\n          </FormGroup>\n\n          <LoginButton type=\"submit\" disabled={isLoading}>\n            {isLoading ? 'Signing In...' : 'Sign In'}\n          </LoginButton>\n        </Form>\n\n        <Divider>\n          <span>or</span>\n        </Divider>\n\n        <RegisterLink>\n          Don't have an account? <Link to=\"/register\">Create one here</Link>\n        </RegisterLink>\n      </LoginCard>\n    </PageContainer>\n  );\n};\n\nexport default LoginPage;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/auth/RegisterPage.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":412,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":412,"endColumn":38}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaEnvelope,\n  FaLock,\n  FaEye,\n  FaEyeSlash,\n  FaUser,\n  FaBuilding,\n  FaPhone,\n  FaMapMarkerAlt,\n  FaGlobe,\n  FaShoppingBag,\n} from 'react-icons/fa';\nimport { theme, media } from '../../styles/GlobalStyle';\nimport { Button } from '../shared/Button';\nimport { Input } from '../shared/Input';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: ${theme.spacing.lg};\n\n  ${media.mobile} {\n    padding: ${theme.spacing.sm};\n    align-items: flex-start;\n    padding-top: ${theme.spacing.lg};\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.lg};\n  }\n`;\n\nconst RegisterCard = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  padding: ${theme.spacing.xxl};\n  box-shadow: ${theme.shadows.xl};\n  width: 100%;\n  max-width: 31.25rem;\n  max-height: 90vh;\n  overflow-y: auto;\n\n  ${media.mobile} {\n    padding: ${theme.spacing.lg};\n    border-radius: ${theme.borderRadius.lg};\n    max-width: 100%;\n    max-height: 95vh;\n    box-shadow: ${theme.shadows.lg};\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.xl};\n    max-width: 28rem;\n  }\n\n  /* Custom scrollbar */\n  &::-webkit-scrollbar {\n    width: 0.25rem;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: ${theme.colors.gray100};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: ${theme.colors.gray300};\n    border-radius: ${theme.borderRadius.sm};\n  }\n`;\n\nconst Logo = styled.div`\n  text-align: center;\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst LogoText = styled.h1`\n  font-size: 2rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n  margin-bottom: ${theme.spacing.sm};\n\n  ${media.mobile} {\n    font-size: 1.5rem;\n  }\n\n  ${media.tablet} {\n    font-size: 1.75rem;\n  }\n`;\n\nconst LogoSubtext = styled.p`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n\n  ${media.mobile} {\n    font-size: 0.8125rem;\n  }\n`;\n\nconst Title = styled.h2`\n  font-size: 1.75rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  text-align: center;\n  margin-bottom: ${theme.spacing.lg};\n\n  ${media.mobile} {\n    font-size: 1.375rem;\n    margin-bottom: ${theme.spacing.md};\n  }\n\n  ${media.tablet} {\n    font-size: 1.5rem;\n  }\n`;\n\nconst ToggleContainer = styled.div`\n  display: flex;\n  background: ${theme.colors.gray100};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xs};\n  margin-bottom: ${theme.spacing.xl};\n\n  ${media.mobile} {\n    margin-bottom: ${theme.spacing.lg};\n    border-radius: ${theme.borderRadius.md};\n  }\n`;\n\nconst ToggleButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  flex: 1;\n  padding: ${theme.spacing.md};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  transition: all 0.2s ease;\n  cursor: pointer;\n  font-size: 0.875rem;\n\n  ${media.mobile} {\n    padding: ${theme.spacing.sm};\n    font-size: 0.8125rem;\n  }\n\n  ${props =>\n    props.active\n      ? `\n    background: ${theme.colors.white};\n    color: ${theme.colors.primary};\n    box-shadow: ${theme.shadows.sm};\n  `\n      : `\n    background: transparent;\n    color: ${theme.colors.gray600};\n    \n    &:hover {\n      color: ${theme.colors.gray800};\n    }\n  `}\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.lg};\n\n  ${media.mobile} {\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst FormRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${theme.spacing.md};\n\n  ${media.mobileDown} {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.sm};\n  }\n\n  ${media.tablet} {\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst FormGroup = styled.div`\n  position: relative;\n`;\n\nconst Label = styled.label`\n  display: block;\n  font-weight: 500;\n  color: ${theme.colors.gray700};\n  margin-bottom: ${theme.spacing.sm};\n  font-size: 0.875rem;\n\n  ${media.mobile} {\n    font-size: 0.8125rem;\n    margin-bottom: ${theme.spacing.xs};\n  }\n`;\n\nconst InputContainer = styled.div`\n  position: relative;\n`;\n\nconst InputIcon = styled.div`\n  position: absolute;\n  left: ${theme.spacing.md};\n  top: 50%;\n  transform: translateY(-50%);\n  color: ${theme.colors.gray400};\n  font-size: 1rem;\n  z-index: 1;\n\n  ${media.mobile} {\n    left: ${theme.spacing.sm};\n    font-size: 0.875rem;\n  }\n`;\n\nconst StyledInput = styled(Input)`\n  width: 100%;\n  padding: ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.md} 3rem;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.lg};\n  font-size: 1rem;\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    box-shadow: 0 0 0 3px ${theme.colors.primary}20;\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray400};\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.md} 3rem;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.lg};\n  font-size: 1rem;\n  background: ${theme.colors.white};\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    box-shadow: 0 0 0 3px ${theme.colors.primary}20;\n  }\n`;\n\nconst PasswordToggle = styled.button`\n  position: absolute;\n  right: ${theme.spacing.md};\n  top: 50%;\n  transform: translateY(-50%);\n  background: none;\n  border: none;\n  color: ${theme.colors.gray400};\n  cursor: pointer;\n  font-size: 1rem;\n  padding: ${theme.spacing.xs};\n\n  &:hover {\n    color: ${theme.colors.gray600};\n  }\n`;\n\nconst RegisterButton = styled(Button)`\n  width: 100%;\n  padding: ${theme.spacing.md};\n  font-size: 1rem;\n  font-weight: 600;\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  border: none;\n  border-radius: ${theme.borderRadius.lg};\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.secondary};\n    transform: translateY(-1px);\n    box-shadow: ${theme.shadows.lg};\n  }\n\n  &:disabled {\n    background: ${theme.colors.gray300};\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst Divider = styled.div`\n  text-align: center;\n  margin: ${theme.spacing.lg} 0;\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n    right: 0;\n    height: 1px;\n    background: ${theme.colors.gray200};\n  }\n\n  span {\n    background: ${theme.colors.white};\n    color: ${theme.colors.gray500};\n    padding: 0 ${theme.spacing.md};\n    font-size: 0.9rem;\n  }\n`;\n\nconst LoginLink = styled.div`\n  text-align: center;\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n\n  a {\n    color: ${theme.colors.primary};\n    text-decoration: none;\n    font-weight: 500;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst BackToHome = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.primary};\n  text-decoration: none;\n  font-size: 0.9rem;\n  margin-bottom: ${theme.spacing.lg};\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst RegisterPage = () => {\n  const navigate = useNavigate();\n  const [userType, setUserType] = useState('buyer');\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [buyerData, setBuyerData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n\n  const [sellerData, setSellerData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    businessName: '',\n    businessCategory: '',\n    phone: '',\n    address: '',\n    website: '',\n  });\n\n  const handleBuyerInputChange = e => {\n    const { name, value } = e.target;\n    setBuyerData(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSellerInputChange = e => {\n    const { name, value } = e.target;\n    setSellerData(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    const currentData = userType === 'buyer' ? buyerData : sellerData;\n\n    // Validate passwords match\n    if (currentData.password !== currentData.confirmPassword) {\n      alert(\"Passwords don't match!\");\n      setIsLoading(false);\n      return;\n    }\n\n    // Simulate registration process\n    setTimeout(() => {\n      setIsLoading(false);\n      // Navigate to appropriate page\n      if (userType === 'seller') {\n        navigate('/seller-dashboard');\n      } else {\n        navigate('/');\n      }\n    }, 1500);\n  };\n\n  const categories = [\n    { value: '', label: 'Select Business Category' },\n    { value: 'hotels', label: 'Hotels & Hospitality' },\n    { value: 'ecommerce', label: 'Ecommerce & Retail' },\n    { value: 'weddings', label: 'Weddings & Events' },\n    { value: 'automobiles', label: 'Automobiles & Transport' },\n    { value: 'restaurants', label: 'Restaurants & Food' },\n    { value: 'services', label: 'Professional Services' },\n    { value: 'other', label: 'Other' },\n  ];\n\n  return (\n    <PageContainer>\n      <RegisterCard>\n        <BackToHome to=\"/\">← Back to Home</BackToHome>\n\n        <Logo>\n          <LogoText>StoreBuilder</LogoText>\n          <LogoSubtext>Launch your online store without coding</LogoSubtext>\n        </Logo>\n\n        <Title>Create Your Account</Title>\n\n        <ToggleContainer>\n          <ToggleButton\n            type=\"button\"\n            active={userType === 'buyer'}\n            onClick={() => setUserType('buyer')}\n          >\n            Register as Buyer\n          </ToggleButton>\n          <ToggleButton\n            type=\"button\"\n            active={userType === 'seller'}\n            onClick={() => setUserType('seller')}\n          >\n            Register as Seller\n          </ToggleButton>\n        </ToggleContainer>\n\n        <Form onSubmit={handleSubmit}>\n          {userType === 'buyer' ? (\n            // Buyer Form\n            <>\n              <FormRow>\n                <FormGroup>\n                  <Label htmlFor=\"firstName\">First Name</Label>\n                  <InputContainer>\n                    <InputIcon>\n                      <FaUser />\n                    </InputIcon>\n                    <StyledInput\n                      type=\"text\"\n                      id=\"firstName\"\n                      name=\"firstName\"\n                      placeholder=\"First name\"\n                      value={buyerData.firstName}\n                      onChange={handleBuyerInputChange}\n                      required\n                    />\n                  </InputContainer>\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"lastName\">Last Name</Label>\n                  <InputContainer>\n                    <InputIcon>\n                      <FaUser />\n                    </InputIcon>\n                    <StyledInput\n                      type=\"text\"\n                      id=\"lastName\"\n                      name=\"lastName\"\n                      placeholder=\"Last name\"\n                      value={buyerData.lastName}\n                      onChange={handleBuyerInputChange}\n                      required\n                    />\n                  </InputContainer>\n                </FormGroup>\n              </FormRow>\n\n              <FormGroup>\n                <Label htmlFor=\"email\">Email Address</Label>\n                <InputContainer>\n                  <InputIcon>\n                    <FaEnvelope />\n                  </InputIcon>\n                  <StyledInput\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter your email\"\n                    value={buyerData.email}\n                    onChange={handleBuyerInputChange}\n                    required\n                  />\n                </InputContainer>\n              </FormGroup>\n\n              <FormGroup>\n                <Label htmlFor=\"password\">Password</Label>\n                <InputContainer>\n                  <InputIcon>\n                    <FaLock />\n                  </InputIcon>\n                  <StyledInput\n                    type={showPassword ? 'text' : 'password'}\n                    id=\"password\"\n                    name=\"password\"\n                    placeholder=\"Create a password\"\n                    value={buyerData.password}\n                    onChange={handleBuyerInputChange}\n                    required\n                  />\n                  <PasswordToggle\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    {showPassword ? <FaEyeSlash /> : <FaEye />}\n                  </PasswordToggle>\n                </InputContainer>\n              </FormGroup>\n\n              <FormGroup>\n                <Label htmlFor=\"confirmPassword\">Confirm Password</Label>\n                <InputContainer>\n                  <InputIcon>\n                    <FaLock />\n                  </InputIcon>\n                  <StyledInput\n                    type={showConfirmPassword ? 'text' : 'password'}\n                    id=\"confirmPassword\"\n                    name=\"confirmPassword\"\n                    placeholder=\"Confirm your password\"\n                    value={buyerData.confirmPassword}\n                    onChange={handleBuyerInputChange}\n                    required\n                  />\n                  <PasswordToggle\n                    type=\"button\"\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                  >\n                    {showConfirmPassword ? <FaEyeSlash /> : <FaEye />}\n                  </PasswordToggle>\n                </InputContainer>\n              </FormGroup>\n            </>\n          ) : (\n            // Seller Form\n            <>\n              <FormRow>\n                <FormGroup>\n                  <Label htmlFor=\"firstName\">First Name</Label>\n                  <InputContainer>\n                    <InputIcon>\n                      <FaUser />\n                    </InputIcon>\n                    <StyledInput\n                      type=\"text\"\n                      id=\"firstName\"\n                      name=\"firstName\"\n                      placeholder=\"First name\"\n                      value={sellerData.firstName}\n                      onChange={handleSellerInputChange}\n                      required\n                    />\n                  </InputContainer>\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"lastName\">Last Name</Label>\n                  <InputContainer>\n                    <InputIcon>\n                      <FaUser />\n                    </InputIcon>\n                    <StyledInput\n                      type=\"text\"\n                      id=\"lastName\"\n                      name=\"lastName\"\n                      placeholder=\"Last name\"\n                      value={sellerData.lastName}\n                      onChange={handleSellerInputChange}\n                      required\n                    />\n                  </InputContainer>\n                </FormGroup>\n              </FormRow>\n\n              <FormGroup>\n                <Label htmlFor=\"email\">Email Address</Label>\n                <InputContainer>\n                  <InputIcon>\n                    <FaEnvelope />\n                  </InputIcon>\n                  <StyledInput\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Business email\"\n                    value={sellerData.email}\n                    onChange={handleSellerInputChange}\n                    required\n                  />\n                </InputContainer>\n              </FormGroup>\n\n              <FormGroup>\n                <Label htmlFor=\"businessName\">Business Name</Label>\n                <InputContainer>\n                  <InputIcon>\n                    <FaBuilding />\n                  </InputIcon>\n                  <StyledInput\n                    type=\"text\"\n                    id=\"businessName\"\n                    name=\"businessName\"\n                    placeholder=\"Your business name\"\n                    value={sellerData.businessName}\n                    onChange={handleSellerInputChange}\n                    required\n                  />\n                </InputContainer>\n              </FormGroup>\n\n              <FormGroup>\n                <Label htmlFor=\"businessCategory\">Business Category</Label>\n                <InputContainer>\n                  <InputIcon>\n                    <FaShoppingBag />\n                  </InputIcon>\n                  <Select\n                    id=\"businessCategory\"\n                    name=\"businessCategory\"\n                    value={sellerData.businessCategory}\n                    onChange={handleSellerInputChange}\n                    required\n                  >\n                    {categories.map(category => (\n                      <option key={category.value} value={category.value}>\n                        {category.label}\n                      </option>\n                    ))}\n                  </Select>\n                </InputContainer>\n              </FormGroup>\n\n              <FormRow>\n                <FormGroup>\n                  <Label htmlFor=\"phone\">Phone Number</Label>\n                  <InputContainer>\n                    <InputIcon>\n                      <FaPhone />\n                    </InputIcon>\n                    <StyledInput\n                      type=\"tel\"\n                      id=\"phone\"\n                      name=\"phone\"\n                      placeholder=\"Phone number\"\n                      value={sellerData.phone}\n                      onChange={handleSellerInputChange}\n                      required\n                    />\n                  </InputContainer>\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"website\">Website (Optional)</Label>\n                  <InputContainer>\n                    <InputIcon>\n                      <FaGlobe />\n                    </InputIcon>\n                    <StyledInput\n                      type=\"url\"\n                      id=\"website\"\n                      name=\"website\"\n                      placeholder=\"www.example.com\"\n                      value={sellerData.website}\n                      onChange={handleSellerInputChange}\n                    />\n                  </InputContainer>\n                </FormGroup>\n              </FormRow>\n\n              <FormGroup>\n                <Label htmlFor=\"address\">Business Address</Label>\n                <InputContainer>\n                  <InputIcon>\n                    <FaMapMarkerAlt />\n                  </InputIcon>\n                  <StyledInput\n                    type=\"text\"\n                    id=\"address\"\n                    name=\"address\"\n                    placeholder=\"Business address\"\n                    value={sellerData.address}\n                    onChange={handleSellerInputChange}\n                    required\n                  />\n                </InputContainer>\n              </FormGroup>\n\n              <FormGroup>\n                <Label htmlFor=\"password\">Password</Label>\n                <InputContainer>\n                  <InputIcon>\n                    <FaLock />\n                  </InputIcon>\n                  <StyledInput\n                    type={showPassword ? 'text' : 'password'}\n                    id=\"password\"\n                    name=\"password\"\n                    placeholder=\"Create a password\"\n                    value={sellerData.password}\n                    onChange={handleSellerInputChange}\n                    required\n                  />\n                  <PasswordToggle\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    {showPassword ? <FaEyeSlash /> : <FaEye />}\n                  </PasswordToggle>\n                </InputContainer>\n              </FormGroup>\n\n              <FormGroup>\n                <Label htmlFor=\"confirmPassword\">Confirm Password</Label>\n                <InputContainer>\n                  <InputIcon>\n                    <FaLock />\n                  </InputIcon>\n                  <StyledInput\n                    type={showConfirmPassword ? 'text' : 'password'}\n                    id=\"confirmPassword\"\n                    name=\"confirmPassword\"\n                    placeholder=\"Confirm your password\"\n                    value={sellerData.confirmPassword}\n                    onChange={handleSellerInputChange}\n                    required\n                  />\n                  <PasswordToggle\n                    type=\"button\"\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                  >\n                    {showConfirmPassword ? <FaEyeSlash /> : <FaEye />}\n                  </PasswordToggle>\n                </InputContainer>\n              </FormGroup>\n            </>\n          )}\n\n          <RegisterButton type=\"submit\" disabled={isLoading}>\n            {isLoading\n              ? 'Creating Account...'\n              : `Create ${userType === 'buyer' ? 'Buyer' : 'Seller'} Account`}\n          </RegisterButton>\n        </Form>\n\n        <Divider>\n          <span>or</span>\n        </Divider>\n\n        <LoginLink>\n          Already have an account? <Link to=\"/login\">Sign in here</Link>\n        </LoginLink>\n      </RegisterCard>\n    </PageContainer>\n  );\n};\n\nexport default RegisterPage;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/category/AutomobileCategoryLanding.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport CategoryLanding from './CategoryLanding';\n\nconst AutomobileCategoryLanding = () => {\n  const mockups = [\n    {\n      title: 'Car Dealership',\n      description:\n        'Professional automotive website showcasing vehicle inventory with advanced search and financing options.',\n      image:\n        'https://images.unsplash.com/photo-1560563808-ad6c2aaf7716?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1476&q=80',\n      features: [\n        'Vehicle inventory showcase',\n        'Advanced search filters',\n        'Financing calculator',\n        'Trade-in value estimator',\n      ],\n    },\n    {\n      title: 'Auto Rental Service',\n      description:\n        'Modern rental platform with real-time availability, flexible booking options, and fleet management.',\n      image:\n        'https://images.unsplash.com/photo-1449965408869-eaa3f722e40d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80',\n      features: [\n        'Real-time availability',\n        'Online booking system',\n        'Fleet management tools',\n        'Customer loyalty program',\n      ],\n    },\n    {\n      title: 'Auto Repair Shop',\n      description:\n        'Service-focused website for auto mechanics with appointment booking and service tracking.',\n      image:\n        'https://images.unsplash.com/photo-1486262715619-67b85e0b08d3?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1632&q=80',\n      features: [\n        'Service appointment booking',\n        'Repair estimates online',\n        'Service history tracking',\n        'Parts inventory system',\n      ],\n    },\n  ];\n\n  return (\n    <CategoryLanding\n      category=\"automobile\"\n      title=\"Automobile Websites\"\n      subtitle=\"Drive more business with professional automotive websites designed for dealerships, rental services, and repair shops with industry-specific features.\"\n      gradient=\"linear-gradient(135deg, #f093fb 0%, #f5576c 100%)\"\n      mockups={mockups}\n      demoUrl=\"/luxury-auto-gallery\"\n      demoButtonText=\"See Demo Auto Website\"\n    />\n  );\n};\n\nexport default AutomobileCategoryLanding;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/category/BusinessCategoryLanding.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport CategoryLanding from './CategoryLanding';\n\nconst BusinessCategoryLanding = () => {\n  const mockups = [\n    {\n      title: 'Professional Services',\n      description:\n        'Clean, corporate design perfect for consultants, lawyers, accountants, and professional service providers.',\n      image:\n        'https://images.unsplash.com/photo-1497366216548-37526070297c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1469&q=80',\n      features: [\n        'Service portfolio showcase',\n        'Client testimonials',\n        'Appointment scheduling',\n        'Contact forms & CRM',\n      ],\n    },\n    {\n      title: 'Restaurant & Dining',\n      description:\n        'Appetizing restaurant website with online menus, reservation system, and delivery integration.',\n      image:\n        'https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80',\n      features: [\n        'Digital menu display',\n        'Online reservations',\n        'Delivery integration',\n        'Event booking system',\n      ],\n    },\n    {\n      title: 'Fitness & Wellness',\n      description:\n        'Energetic design for gyms, yoga studios, and wellness centers with class schedules and membership management.',\n      image:\n        'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80',\n      features: [\n        'Class schedule & booking',\n        'Membership management',\n        'Trainer profiles',\n        'Progress tracking tools',\n      ],\n    },\n  ];\n\n  return (\n    <CategoryLanding\n      category=\"business\"\n      title=\"Business Websites\"\n      subtitle=\"Establish your professional online presence with business websites tailored to your industry, from restaurants to consulting firms.\"\n      gradient=\"linear-gradient(135deg, #667eea 0%, #764ba2 100%)\"\n      mockups={mockups}\n      demoUrl=\"/salon\"\n      demoButtonText=\"See Demo Business Website\"\n      secondaryDemoUrl=\"/freelancer\"\n      secondaryDemoButtonText=\"See Freelancer Demo Website\"\n    />\n  );\n};\n\nexport default BusinessCategoryLanding;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/category/CategoryLanding.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaArrowLeft, FaExternalLinkAlt } from 'react-icons/fa';\nimport Header from '../shared/Header';\nimport { Button } from '../shared/Button';\nimport { theme, media } from '../../styles/GlobalStyle';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n`;\n\nconst ContentContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n\n  ${media.mobile} {\n    padding: ${theme.spacing.lg} ${theme.spacing.sm};\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.xl} ${theme.spacing.lg};\n  }\n`;\n\nconst BackButton = styled(Button)`\n  background: transparent;\n  color: ${theme.colors.gray600};\n  border: 1px solid ${theme.colors.gray300};\n  margin-bottom: ${theme.spacing.xl};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.gray900};\n    border-color: ${theme.colors.gray400};\n  }\n`;\n\nconst HeroSection = styled.section`\n  text-align: center;\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst CategoryTitle = styled.h1`\n  font-size: 3rem;\n  font-weight: 800;\n  margin-bottom: ${theme.spacing.md};\n  color: ${theme.colors.gray900};\n  background: ${props => props.gradient || theme.colors.primary};\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n\n  ${media.mobile} {\n    font-size: 2.25rem;\n  }\n\n  ${media.tablet} {\n    font-size: 2.75rem;\n  }\n`;\n\nconst CategorySubtitle = styled.p`\n  font-size: 1.25rem;\n  color: ${theme.colors.gray600};\n  max-width: 600px;\n  margin: 0 auto ${theme.spacing.xl};\n  line-height: 1.6;\n\n  ${media.mobile} {\n    font-size: 1.125rem;\n  }\n`;\n\nconst PreviewSection = styled.section`\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 2rem;\n  font-weight: 700;\n  text-align: center;\n  margin-bottom: ${theme.spacing.xl};\n  color: ${theme.colors.gray900};\n\n  ${media.mobile} {\n    font-size: 1.75rem;\n  }\n`;\n\nconst MockupsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  gap: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xxl};\n\n  ${media.mobile} {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst MockupCard = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  overflow: hidden;\n  box-shadow: ${theme.shadows.lg};\n  border: 1px solid ${theme.colors.gray200};\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-8px);\n    box-shadow: ${theme.shadows.xl};\n  }\n`;\n\nconst MockupImage = styled.div`\n  height: 250px;\n  background: url(${props => props.src}) center/cover;\n  background-color: ${theme.colors.gray100};\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    inset: 0;\n    background: linear-gradient(\n      45deg,\n      transparent 30%,\n      rgba(255, 255, 255, 0.1) 50%,\n      transparent 70%\n    );\n  }\n\n  ${media.mobile} {\n    height: 200px;\n  }\n`;\n\nconst MockupContent = styled.div`\n  padding: ${theme.spacing.xl};\n\n  ${media.mobile} {\n    padding: ${theme.spacing.lg};\n  }\n`;\n\nconst MockupTitle = styled.h3`\n  font-size: 1.25rem;\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.sm};\n  color: ${theme.colors.gray900};\n`;\n\nconst MockupDescription = styled.p`\n  color: ${theme.colors.gray600};\n  line-height: 1.6;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst MockupFeatures = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n\n  li {\n    display: flex;\n    align-items: center;\n    gap: ${theme.spacing.sm};\n    color: ${theme.colors.gray700};\n    font-size: 0.9rem;\n    margin-bottom: ${theme.spacing.xs};\n\n    &::before {\n      content: '✓';\n      color: ${theme.colors.primary};\n      font-weight: bold;\n    }\n  }\n`;\n\nconst CTASection = styled.section`\n  text-align: center;\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  padding: ${theme.spacing.xxl};\n  box-shadow: ${theme.shadows.lg};\n  border: 1px solid ${theme.colors.gray200};\n\n  ${media.mobile} {\n    padding: ${theme.spacing.xl};\n  }\n`;\n\nconst CTATitle = styled.h2`\n  font-size: 2rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.md};\n  color: ${theme.colors.gray900};\n\n  ${media.mobile} {\n    font-size: 1.75rem;\n  }\n`;\n\nconst CTADescription = styled.p`\n  font-size: 1.125rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.xl};\n  max-width: 500px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst DemoButtonsContainer = styled.div`\n  display: flex;\n  gap: ${theme.spacing.lg};\n  justify-content: center;\n  flex-wrap: wrap;\n\n  ${media.mobile} {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst DemoButton = styled(Button)`\n  background: ${props => props.gradient || theme.colors.primary};\n  color: ${theme.colors.white};\n  border: none;\n  padding: ${theme.spacing.lg} ${theme.spacing.xxl};\n  font-size: 1.125rem;\n  font-weight: 600;\n  border-radius: ${theme.borderRadius.lg};\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  transition: all 0.3s ease;\n  min-width: 200px;\n  justify-content: center;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: ${theme.shadows.xl};\n    opacity: 0.9;\n  }\n\n  ${media.mobile} {\n    width: 100%;\n    justify-content: center;\n  }\n`;\n\nconst SecondaryDemoButton = styled(DemoButton)`\n  background: ${theme.colors.white};\n  color: ${props =>\n    props.gradient ? theme.colors.primary : theme.colors.primary};\n  border: 2px solid\n    ${props => (props.gradient ? theme.colors.primary : theme.colors.primary)};\n\n  &:hover {\n    background: ${props =>\n      props.gradient ? theme.colors.primary : theme.colors.primary};\n    color: ${theme.colors.white};\n    transform: translateY(-2px);\n    box-shadow: ${theme.shadows.xl};\n  }\n`;\n\nconst CategoryLanding = ({\n  category,\n  title,\n  subtitle,\n  gradient,\n  mockups = [],\n  demoUrl,\n  demoButtonText = 'See Demo Website',\n  secondaryDemoUrl,\n  secondaryDemoButtonText,\n}) => {\n  const navigate = useNavigate();\n\n  const handleBack = () => {\n    navigate('/');\n  };\n\n  const handleDemoClick = () => {\n    navigate(demoUrl);\n  };\n\n  const handleSecondaryDemoClick = () => {\n    navigate(secondaryDemoUrl);\n  };\n\n  return (\n    <PageContainer>\n      <Header />\n      <ContentContainer>\n        <BackButton onClick={handleBack}>\n          <FaArrowLeft />\n          Back to Home\n        </BackButton>\n\n        <HeroSection>\n          <CategoryTitle gradient={gradient}>{title}</CategoryTitle>\n          <CategorySubtitle>{subtitle}</CategorySubtitle>\n        </HeroSection>\n\n        <PreviewSection>\n          <SectionTitle>Beautiful Website Examples</SectionTitle>\n          <MockupsGrid>\n            {mockups.map((mockup, index) => (\n              <MockupCard key={index}>\n                <MockupImage src={mockup.image} />\n                <MockupContent>\n                  <MockupTitle>{mockup.title}</MockupTitle>\n                  <MockupDescription>{mockup.description}</MockupDescription>\n                  <MockupFeatures>\n                    {mockup.features.map((feature, idx) => (\n                      <li key={idx}>{feature}</li>\n                    ))}\n                  </MockupFeatures>\n                </MockupContent>\n              </MockupCard>\n            ))}\n          </MockupsGrid>\n        </PreviewSection>\n\n        <CTASection>\n          <CTATitle>Experience a Live {title} Website</CTATitle>\n          <CTADescription>\n            See how beautiful and functional your {category} website could be\n            with our professional templates and features.\n          </CTADescription>\n          <DemoButtonsContainer>\n            <DemoButton gradient={gradient} onClick={handleDemoClick}>\n              {demoButtonText}\n              <FaExternalLinkAlt />\n            </DemoButton>\n            {secondaryDemoUrl && secondaryDemoButtonText && (\n              <SecondaryDemoButton\n                gradient={gradient}\n                onClick={handleSecondaryDemoClick}\n              >\n                {secondaryDemoButtonText}\n                <FaExternalLinkAlt />\n              </SecondaryDemoButton>\n            )}\n          </DemoButtonsContainer>\n        </CTASection>\n      </ContentContainer>\n    </PageContainer>\n  );\n};\n\nexport default CategoryLanding;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/category/EcommerceCategoryLanding.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport CategoryLanding from './CategoryLanding';\n\nconst EcommerceCategoryLanding = () => {\n  const mockups = [\n    {\n      title: 'Fashion Store',\n      description:\n        'Modern e-commerce design perfect for fashion brands with clean product showcases and smooth checkout.',\n      image:\n        'https://images.unsplash.com/photo-1441986300917-64674bd600d8?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80',\n      features: [\n        'Product catalog with filters',\n        'Shopping cart & checkout',\n        'Inventory management',\n        'Customer reviews & ratings',\n      ],\n    },\n    {\n      title: 'Electronics Store',\n      description:\n        'Technical product showcase with detailed specifications, comparison tools, and trust signals.',\n      image:\n        'https://images.unsplash.com/photo-1560472354-b33ff0c44a43?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1326&q=80',\n      features: [\n        'Advanced product search',\n        'Specification comparisons',\n        'Warranty information',\n        'Technical support chat',\n      ],\n    },\n    {\n      title: 'Handmade Crafts',\n      description:\n        'Artistic design showcasing unique handmade products with storytelling and artisan profiles.',\n      image:\n        'https://images.unsplash.com/photo-1515562141207-7a88fb7ce338?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80',\n      features: [\n        'Artisan story pages',\n        'Custom product options',\n        'Gift wrapping service',\n        'Social media integration',\n      ],\n    },\n  ];\n\n  return (\n    <CategoryLanding\n      category=\"e-commerce\"\n      title=\"E-commerce Websites\"\n      subtitle=\"Build powerful online stores that convert visitors into customers with our feature-rich e-commerce templates and integrated payment solutions.\"\n      gradient=\"linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)\"\n      mockups={mockups}\n      demoUrl=\"/techmart-downtown\"\n      demoButtonText=\"See Demo Store Website\"\n    />\n  );\n};\n\nexport default EcommerceCategoryLanding;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/category/HotelCategoryLanding.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport CategoryLanding from './CategoryLanding';\n\nconst HotelCategoryLanding = () => {\n  const mockups = [\n    {\n      title: 'Luxury Resort Website',\n      description:\n        'Elegant design showcasing premium accommodations with stunning visuals and seamless booking experience.',\n      image:\n        'https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80',\n      features: [\n        'Real-time room availability',\n        'Integrated payment processing',\n        'Guest review system',\n        'Mobile-responsive design',\n      ],\n    },\n    {\n      title: 'Boutique Hotel Portal',\n      description:\n        'Intimate and personalized website design perfect for boutique hotels and bed & breakfasts.',\n      image:\n        'https://images.unsplash.com/photo-1551882547-ff40c63fe5fa?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80',\n      features: [\n        'Photo gallery showcase',\n        'Online booking calendar',\n        'Guest communication portal',\n        'Local attractions guide',\n      ],\n    },\n    {\n      title: 'Modern Hotel Chain',\n      description:\n        'Professional multi-location website with centralized management and location-specific content.',\n      image:\n        'https://images.unsplash.com/photo-1564501049412-61c2a3083791?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1632&q=80',\n      features: [\n        'Multi-location management',\n        'Loyalty program integration',\n        'Business travel booking',\n        'Group reservation system',\n      ],\n    },\n  ];\n\n  return (\n    <CategoryLanding\n      category=\"hotel\"\n      title=\"Hotel Websites\"\n      subtitle=\"Create stunning hotel websites that drive bookings and showcase your property with professional templates designed for the hospitality industry.\"\n      gradient=\"linear-gradient(135deg, #667eea 0%, #764ba2 100%)\"\n      mockups={mockups}\n      demoUrl=\"/taj-palace\"\n      demoButtonText=\"See Demo Hotel Website\"\n    />\n  );\n};\n\nexport default HotelCategoryLanding;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/category/WeddingCategoryLanding.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport CategoryLanding from './CategoryLanding';\n\nconst WeddingCategoryLanding = () => {\n  const mockups = [\n    {\n      title: 'Wedding Photography Studio',\n      description:\n        'Elegant portfolio showcase for wedding photographers with stunning galleries and booking integration.',\n      image:\n        'https://images.unsplash.com/photo-1511285560929-80b456fea0bc?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1469&q=80',\n      features: [\n        'Portfolio gallery showcase',\n        'Wedding package pricing',\n        'Client testimonials',\n        'Online consultation booking',\n      ],\n    },\n    {\n      title: 'Wedding Planning Service',\n      description:\n        'Comprehensive wedding planning website with service packages, vendor network, and planning tools.',\n      image:\n        'https://images.unsplash.com/photo-1519741497674-611481863552?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80',\n      features: [\n        'Service package details',\n        'Wedding timeline planner',\n        'Vendor recommendations',\n        'Budget planning tools',\n      ],\n    },\n    {\n      title: 'Wedding Venue',\n      description:\n        'Beautiful venue showcase with virtual tours, capacity details, and easy booking system.',\n      image:\n        'https://images.unsplash.com/photo-1469371670807-013ccf25f16a?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80',\n      features: [\n        'Virtual venue tours',\n        'Capacity & pricing info',\n        'Available date calendar',\n        'Catering menu options',\n      ],\n    },\n  ];\n\n  return (\n    <CategoryLanding\n      category=\"wedding\"\n      title=\"Wedding Websites\"\n      subtitle=\"Create breathtaking wedding websites that capture love stories and help couples plan their perfect day with our romantic and elegant templates.\"\n      gradient=\"linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%)\"\n      mockups={mockups}\n      demoUrl=\"/elegant-events\"\n      demoButtonText=\"See Demo Wedding Website\"\n    />\n  );\n};\n\nexport default WeddingCategoryLanding;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/owner/AddHotelPage.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaUpload, FaCheck } from 'react-icons/fa';\nimport Sidebar from './Sidebar';\nimport { Card, CardContent } from '../shared/Card';\nimport { Button } from '../shared/Button';\nimport {\n  Input,\n  FormGroup,\n  Label,\n  TextArea,\n  Select,\n  InputGroup,\n  CheckboxGroup,\n  CheckboxItem,\n} from '../shared/Input';\nimport { theme, media } from '../../styles/GlobalStyle';\nimport { useAppContext } from '../../context/AppContext';\nimport { amenitiesList } from '../../DummyData';\n\nconst PageContainer = styled.div`\n  display: flex;\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n`;\n\nconst MainContent = styled.main`\n  flex: 1;\n  margin-left: 17.5rem;\n  padding: ${theme.spacing.xxl};\n\n  ${media.tabletDown} {\n    margin-left: 0;\n    padding: ${theme.spacing.xl} ${theme.spacing.md};\n    padding-top: 80px;\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.lg} ${theme.spacing.sm};\n    padding-top: 4rem;\n  }\n`;\n\nconst PageHeader = styled.div`\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.sm};\n  color: ${theme.colors.gray900};\n`;\n\nconst PageSubtitle = styled.p`\n  font-size: 1.125rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst FormCard = styled(Card)`\n  max-width: 800px;\n`;\n\nconst HotelForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.xl};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.lg};\n  color: ${theme.colors.gray900};\n  padding-bottom: ${theme.spacing.sm};\n  border-bottom: 2px solid ${theme.colors.gray200};\n`;\n\nconst ImageUploadArea = styled.div`\n  border: 2px dashed ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xxl};\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    background: ${theme.colors.primary}05;\n  }\n`;\n\nconst UploadIcon = styled.div`\n  font-size: 3rem;\n  color: ${theme.colors.gray400};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst UploadText = styled.p`\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst UploadSubtext = styled.p`\n  font-size: 0.875rem;\n  color: ${theme.colors.gray500};\n`;\n\nconst TimeInputGroup = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${theme.spacing.md};\n`;\n\nconst FormActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  justify-content: flex-end;\n  padding-top: ${theme.spacing.lg};\n  border-top: 1px solid ${theme.colors.gray200};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n  }\n`;\n\nconst AddHotelPage = () => {\n  const navigate = useNavigate();\n  const { setHotels, setOwnerHotels } = useAppContext();\n\n  const [formData, setFormData] = useState({\n    name: '',\n    address: '',\n    city: '',\n    pincode: '',\n    description: '',\n    starRating: '3',\n    checkInTime: '14:00',\n    checkOutTime: '11:00',\n    amenities: [],\n    policies: ['ID proof required'],\n    images: [],\n  });\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleAmenityChange = (amenityId, checked) => {\n    setFormData(prev => ({\n      ...prev,\n      amenities: checked\n        ? [...prev.amenities, amenityId]\n        : prev.amenities.filter(id => id !== amenityId),\n    }));\n  };\n\n  const handleImageUpload = e => {\n    const files = Array.from(e.target.files);\n    // In a real app, you would upload these to a server\n    // For demo purposes, we'll use placeholder URLs\n    const imageUrls = files.map(\n      (_, index) =>\n        `https://images.unsplash.com/photo-${1566073771259 + index}?ixlib=rb-4.0.3`\n    );\n\n    setFormData(prev => ({\n      ...prev,\n      images: [...prev.images, ...imageUrls],\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      const newHotel = {\n        id: Date.now(),\n        ownerId: 'owner123',\n        name: formData.name,\n        location: `${formData.city}`,\n        address: formData.address,\n        city: formData.city,\n        pincode: formData.pincode,\n        description: formData.description,\n        rating: 0,\n        starRating: parseInt(formData.starRating),\n        image:\n          formData.images[0] ||\n          'https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-4.0.3',\n        images:\n          formData.images.length > 0\n            ? formData.images\n            : [\n                'https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-4.0.3',\n              ],\n        amenities: formData.amenities,\n        checkInTime: formData.checkInTime,\n        checkOutTime: formData.checkOutTime,\n        policies: formData.policies,\n        startingPrice: 0,\n        rooms: [],\n      };\n\n      const newOwnerHotel = {\n        id: newHotel.id,\n        ownerId: 'owner123',\n        name: formData.name,\n        location: `${formData.city}`,\n        status: 'active',\n        image: newHotel.image,\n        totalRooms: 0,\n        totalBookings: 0,\n      };\n\n      setHotels(prev => [...prev, newHotel]);\n      setOwnerHotels(prev => [...prev, newOwnerHotel]);\n\n      navigate('/owner/my-hotels');\n    } catch (error) {\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <PageContainer>\n      <Sidebar />\n\n      <MainContent>\n        <PageHeader>\n          <PageTitle>Add New Hotel</PageTitle>\n          <PageSubtitle>\n            Create a new hotel listing with details and amenities\n          </PageSubtitle>\n        </PageHeader>\n\n        <FormCard>\n          <CardContent>\n            <HotelForm onSubmit={handleSubmit}>\n              <div>\n                <SectionTitle>Basic Information</SectionTitle>\n\n                <FormGroup>\n                  <Label>Hotel Name *</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleInputChange}\n                    placeholder=\"Enter hotel name\"\n                    required\n                  />\n                </FormGroup>\n\n                <InputGroup>\n                  <FormGroup>\n                    <Label>City *</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"city\"\n                      value={formData.city}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter city\"\n                      required\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label>Pincode *</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"pincode\"\n                      value={formData.pincode}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter pincode\"\n                      required\n                    />\n                  </FormGroup>\n                </InputGroup>\n\n                <FormGroup>\n                  <Label>Address *</Label>\n                  <TextArea\n                    name=\"address\"\n                    value={formData.address}\n                    onChange={handleInputChange}\n                    placeholder=\"Enter complete address\"\n                    required\n                  />\n                </FormGroup>\n\n                <FormGroup>\n                  <Label>Description *</Label>\n                  <TextArea\n                    name=\"description\"\n                    value={formData.description}\n                    onChange={handleInputChange}\n                    placeholder=\"Describe your hotel...\"\n                    required\n                  />\n                </FormGroup>\n\n                <FormGroup>\n                  <Label>Star Rating</Label>\n                  <Select\n                    name=\"starRating\"\n                    value={formData.starRating}\n                    onChange={handleInputChange}\n                  >\n                    <option value=\"1\">1 Star</option>\n                    <option value=\"2\">2 Star</option>\n                    <option value=\"3\">3 Star</option>\n                    <option value=\"4\">4 Star</option>\n                    <option value=\"5\">5 Star</option>\n                  </Select>\n                </FormGroup>\n              </div>\n\n              <div>\n                <SectionTitle>Hotel Images</SectionTitle>\n                <FormGroup>\n                  <Label>Upload Images</Label>\n                  <ImageUploadArea\n                    onClick={() =>\n                      document.getElementById('imageUpload').click()\n                    }\n                  >\n                    <UploadIcon>\n                      <FaUpload />\n                    </UploadIcon>\n                    <UploadText>Click to upload hotel images</UploadText>\n                    <UploadSubtext>\n                      Support: JPG, PNG, GIF up to 10MB\n                    </UploadSubtext>\n                  </ImageUploadArea>\n                  <input\n                    id=\"imageUpload\"\n                    type=\"file\"\n                    multiple\n                    accept=\"image/*\"\n                    style={{ display: 'none' }}\n                    onChange={handleImageUpload}\n                  />\n                  {formData.images.length > 0 && (\n                    <p\n                      style={{\n                        marginTop: theme.spacing.sm,\n                        color: theme.colors.success,\n                      }}\n                    >\n                      <FaCheck /> {formData.images.length} image(s) uploaded\n                    </p>\n                  )}\n                </FormGroup>\n              </div>\n\n              <div>\n                <SectionTitle>Amenities</SectionTitle>\n                <FormGroup>\n                  <Label>Select Available Amenities</Label>\n                  <CheckboxGroup>\n                    {amenitiesList.map(amenity => (\n                      <CheckboxItem key={amenity.id}>\n                        <input\n                          type=\"checkbox\"\n                          checked={formData.amenities.includes(amenity.id)}\n                          onChange={e =>\n                            handleAmenityChange(amenity.id, e.target.checked)\n                          }\n                        />\n                        <span>\n                          {amenity.icon} {amenity.name}\n                        </span>\n                      </CheckboxItem>\n                    ))}\n                  </CheckboxGroup>\n                </FormGroup>\n              </div>\n\n              <div>\n                <SectionTitle>Policies & Timings</SectionTitle>\n\n                <TimeInputGroup>\n                  <FormGroup>\n                    <Label>Check-in Time</Label>\n                    <Input\n                      type=\"time\"\n                      name=\"checkInTime\"\n                      value={formData.checkInTime}\n                      onChange={handleInputChange}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label>Check-out Time</Label>\n                    <Input\n                      type=\"time\"\n                      name=\"checkOutTime\"\n                      value={formData.checkOutTime}\n                      onChange={handleInputChange}\n                    />\n                  </FormGroup>\n                </TimeInputGroup>\n              </div>\n\n              <FormActions>\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={() => navigate('/owner/my-hotels')}\n                >\n                  Cancel\n                </Button>\n                <Button type=\"submit\" disabled={isSubmitting} size=\"large\">\n                  {isSubmitting ? 'Adding Hotel...' : 'Add Hotel'}\n                </Button>\n              </FormActions>\n            </HotelForm>\n          </CardContent>\n        </FormCard>\n      </MainContent>\n    </PageContainer>\n  );\n};\n\nexport default AddHotelPage;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/owner/AddHotelPageContent.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'media' is defined but never used.","line":17,"column":17,"nodeType":"Identifier","messageId":"unusedVar","endLine":17,"endColumn":22},{"ruleId":"no-unused-vars","severity":1,"message":"'navigate' is assigned a value but never used.","line":105,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":105,"endColumn":17},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":206,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":206,"endColumn":41},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":222,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":222,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[5546,5590],"text":""},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaUpload, FaCheck } from 'react-icons/fa';\nimport { Card, CardContent } from '../shared/Card';\nimport { Button } from '../shared/Button';\nimport {\n  Input,\n  FormGroup,\n  Label,\n  TextArea,\n  Select,\n  InputGroup,\n  CheckboxGroup,\n  CheckboxItem,\n} from '../shared/Input';\nimport { theme, media } from '../../styles/GlobalStyle';\nimport { useAppContext } from '../../context/AppContext';\nimport { amenitiesList } from '../../DummyData';\n\nconst PageHeader = styled.div`\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.sm};\n  color: ${theme.colors.gray900};\n`;\n\nconst PageSubtitle = styled.p`\n  font-size: 1.125rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst FormCard = styled(Card)`\n  max-width: 800px;\n`;\n\nconst HotelForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.xl};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.lg};\n  color: ${theme.colors.gray900};\n  padding-bottom: ${theme.spacing.sm};\n  border-bottom: 2px solid ${theme.colors.gray200};\n`;\n\nconst ImageUploadArea = styled.div`\n  border: 2px dashed ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xxl};\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    background: ${theme.colors.primary}05;\n  }\n`;\n\nconst UploadIcon = styled.div`\n  font-size: 3rem;\n  color: ${theme.colors.gray400};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst UploadText = styled.p`\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst UploadSubtext = styled.p`\n  font-size: 0.875rem;\n  color: ${theme.colors.gray500};\n`;\n\nconst TimeInputGroup = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${theme.spacing.md};\n`;\n\nconst FormActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  justify-content: flex-end;\n  padding-top: ${theme.spacing.lg};\n  border-top: 1px solid ${theme.colors.gray200};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n  }\n`;\n\nconst AddHotelPageContent = () => {\n  const navigate = useNavigate();\n  const { setHotels, setOwnerHotels } = useAppContext();\n\n  const [formData, setFormData] = useState({\n    name: '',\n    address: '',\n    city: '',\n    pincode: '',\n    description: '',\n    starRating: '3',\n    checkInTime: '14:00',\n    checkOutTime: '11:00',\n    amenities: [],\n    policies: ['ID proof required'],\n    images: [],\n  });\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleAmenityChange = (amenityId, checked) => {\n    setFormData(prev => ({\n      ...prev,\n      amenities: checked\n        ? [...prev.amenities, amenityId]\n        : prev.amenities.filter(id => id !== amenityId),\n    }));\n  };\n\n  const handleImageUpload = e => {\n    const files = Array.from(e.target.files);\n    // In a real app, you would upload these to a server\n    // For demo purposes, we'll use placeholder URLs\n    const imageUrls = files.map(\n      (_, index) =>\n        `https://images.unsplash.com/photo-${1566073771259 + index}?ixlib=rb-4.0.3`\n    );\n\n    setFormData(prev => ({\n      ...prev,\n      images: [...prev.images, ...imageUrls],\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      const newHotel = {\n        id: Date.now(),\n        ownerId: 'owner123',\n        name: formData.name,\n        location: `${formData.city}`,\n        address: formData.address,\n        city: formData.city,\n        pincode: formData.pincode,\n        description: formData.description,\n        rating: 0,\n        starRating: parseInt(formData.starRating),\n        image:\n          formData.images[0] ||\n          'https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-4.0.3',\n        images:\n          formData.images.length > 0\n            ? formData.images\n            : [\n                'https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-4.0.3',\n              ],\n        amenities: formData.amenities,\n        checkInTime: formData.checkInTime,\n        checkOutTime: formData.checkOutTime,\n        policies: formData.policies,\n        startingPrice: 0,\n        rooms: [],\n      };\n\n      const newOwnerHotel = {\n        id: newHotel.id,\n        ownerId: 'owner123',\n        name: formData.name,\n        location: `${formData.city}`,\n        status: 'active',\n        image: newHotel.image,\n        totalRooms: 0,\n        totalBookings: 0,\n      };\n\n      setHotels(prev => [...prev, newHotel]);\n      setOwnerHotels(prev => [...prev, newOwnerHotel]);\n\n      alert('Hotel added successfully!');\n      // Reset form or navigate back to dashboard\n      setFormData({\n        name: '',\n        address: '',\n        city: '',\n        pincode: '',\n        description: '',\n        starRating: '3',\n        checkInTime: '14:00',\n        checkOutTime: '11:00',\n        amenities: [],\n        policies: ['ID proof required'],\n        images: [],\n      });\n    } catch (error) {\n      console.error('Error adding hotel:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <>\n      <PageHeader>\n        <PageTitle>Add New Hotel</PageTitle>\n        <PageSubtitle>\n          Create a new hotel listing with details and amenities\n        </PageSubtitle>\n      </PageHeader>\n\n      <FormCard>\n        <CardContent>\n          <HotelForm onSubmit={handleSubmit}>\n            <div>\n              <SectionTitle>Basic Information</SectionTitle>\n\n              <FormGroup>\n                <Label>Hotel Name *</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter hotel name\"\n                  required\n                />\n              </FormGroup>\n\n              <InputGroup>\n                <FormGroup>\n                  <Label>City *</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"city\"\n                    value={formData.city}\n                    onChange={handleInputChange}\n                    placeholder=\"Enter city\"\n                    required\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label>Pincode *</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"pincode\"\n                    value={formData.pincode}\n                    onChange={handleInputChange}\n                    placeholder=\"Enter pincode\"\n                    required\n                  />\n                </FormGroup>\n              </InputGroup>\n\n              <FormGroup>\n                <Label>Address *</Label>\n                <TextArea\n                  name=\"address\"\n                  value={formData.address}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter complete address\"\n                  required\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <Label>Description *</Label>\n                <TextArea\n                  name=\"description\"\n                  value={formData.description}\n                  onChange={handleInputChange}\n                  placeholder=\"Describe your hotel...\"\n                  required\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <Label>Star Rating</Label>\n                <Select\n                  name=\"starRating\"\n                  value={formData.starRating}\n                  onChange={handleInputChange}\n                >\n                  <option value=\"1\">1 Star</option>\n                  <option value=\"2\">2 Star</option>\n                  <option value=\"3\">3 Star</option>\n                  <option value=\"4\">4 Star</option>\n                  <option value=\"5\">5 Star</option>\n                </Select>\n              </FormGroup>\n            </div>\n\n            <div>\n              <SectionTitle>Hotel Images</SectionTitle>\n              <FormGroup>\n                <Label>Upload Images</Label>\n                <ImageUploadArea\n                  onClick={() => document.getElementById('imageUpload').click()}\n                >\n                  <UploadIcon>\n                    <FaUpload />\n                  </UploadIcon>\n                  <UploadText>Click to upload hotel images</UploadText>\n                  <UploadSubtext>\n                    Support: JPG, PNG, GIF up to 10MB\n                  </UploadSubtext>\n                </ImageUploadArea>\n                <input\n                  id=\"imageUpload\"\n                  type=\"file\"\n                  multiple\n                  accept=\"image/*\"\n                  style={{ display: 'none' }}\n                  onChange={handleImageUpload}\n                />\n                {formData.images.length > 0 && (\n                  <p\n                    style={{\n                      marginTop: theme.spacing.sm,\n                      color: theme.colors.success,\n                    }}\n                  >\n                    <FaCheck /> {formData.images.length} image(s) uploaded\n                  </p>\n                )}\n              </FormGroup>\n            </div>\n\n            <div>\n              <SectionTitle>Amenities</SectionTitle>\n              <FormGroup>\n                <Label>Select Available Amenities</Label>\n                <CheckboxGroup>\n                  {amenitiesList.map(amenity => (\n                    <CheckboxItem key={amenity.id}>\n                      <input\n                        type=\"checkbox\"\n                        checked={formData.amenities.includes(amenity.id)}\n                        onChange={e =>\n                          handleAmenityChange(amenity.id, e.target.checked)\n                        }\n                      />\n                      <span>\n                        {amenity.icon} {amenity.name}\n                      </span>\n                    </CheckboxItem>\n                  ))}\n                </CheckboxGroup>\n              </FormGroup>\n            </div>\n\n            <div>\n              <SectionTitle>Policies & Timings</SectionTitle>\n\n              <TimeInputGroup>\n                <FormGroup>\n                  <Label>Check-in Time</Label>\n                  <Input\n                    type=\"time\"\n                    name=\"checkInTime\"\n                    value={formData.checkInTime}\n                    onChange={handleInputChange}\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label>Check-out Time</Label>\n                  <Input\n                    type=\"time\"\n                    name=\"checkOutTime\"\n                    value={formData.checkOutTime}\n                    onChange={handleInputChange}\n                  />\n                </FormGroup>\n              </TimeInputGroup>\n            </div>\n\n            <FormActions>\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={() => window.history.back()}\n              >\n                Cancel\n              </Button>\n              <Button type=\"submit\" disabled={isSubmitting} size=\"large\">\n                {isSubmitting ? 'Adding Hotel...' : 'Add Hotel'}\n              </Button>\n            </FormActions>\n          </HotelForm>\n        </CardContent>\n      </FormCard>\n    </>\n  );\n};\n\nexport default AddHotelPageContent;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/owner/AddRoomManager.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":195,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":195,"endColumn":3,"fix":{"range":[4452,4454],"text":""}},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":250,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":250,"endColumn":70},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":268,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":268,"endColumn":5,"fix":{"range":[6303,6307],"text":""}},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":282,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":282,"endColumn":38}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaBed,\n  FaUsers,\n  FaImage,\n  FaPlus,\n  FaTrash,\n  FaSave,\n  FaUndo,\n  FaGift,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport { addRoom, setEditingHotel } from '../../store/slices/hotelManagementSlice';\nimport { getHotelByIdOrSlug } from '../../DummyData/hotels';\nimport { Button } from '../shared/Button';\nimport { Input } from '../shared/Input';\n\nconst Container = styled.div`\n  padding: ${theme.spacing.xl};\n  background: ${theme.colors.gray50};\n  min-height: 100vh;\n`;\n\nconst Header = styled.div`\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst Title = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst Subtitle = styled.p`\n  color: ${theme.colors.gray600};\n  font-size: 1.1rem;\n`;\n\nconst FormCard = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xxl};\n  box-shadow: ${theme.shadows.lg};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.lg};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst FormGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst FormField = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n`;\n\nconst Label = styled.label`\n  font-weight: 500;\n  color: ${theme.colors.gray700};\n`;\n\nconst TextArea = styled.textarea`\n  padding: ${theme.spacing.md};\n  border: 1px solid ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  line-height: 1.5;\n  resize: vertical;\n  min-height: 100px;\n  \n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    box-shadow: 0 0 0 3px ${theme.colors.primary}20;\n  }\n`;\n\nconst ImageList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.md};\n`;\n\nconst ImageItem = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  align-items: center;\n  padding: ${theme.spacing.md};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.gray50};\n`;\n\nconst ImagePreview = styled.div`\n  width: 80px;\n  height: 60px;\n  border-radius: ${theme.borderRadius.md};\n  overflow: hidden;\n  \n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nconst AmenitiesList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n`;\n\nconst AmenityItem = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  align-items: center;\n  padding: ${theme.spacing.sm};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.gray50};\n`;\n\nconst RemoveButton = styled.button`\n  background: ${theme.colors.error};\n  color: white;\n  border: none;\n  border-radius: ${theme.borderRadius.sm};\n  padding: ${theme.spacing.xs};\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  &:hover {\n    background: ${theme.colors.errorDark};\n  }\n`;\n\nconst AddButton = styled.button`\n  background: ${theme.colors.primary};\n  color: white;\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  padding: ${theme.spacing.md};\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  font-weight: 500;\n  \n  &:hover {\n    background: ${theme.colors.primaryDark};\n  }\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  justify-content: flex-end;\n  padding-top: ${theme.spacing.lg};\n  border-top: 1px solid ${theme.colors.gray200};\n`;\n\nconst AddRoomManager = () => {\n  const dispatch = useDispatch();\n  const { slug } = useParams();\n  const { editingHotel } = useSelector(state => state.hotelManagement);\n\n  // Auto-select hotel based on URL slug\n  useEffect(() => {\n    if (slug && !editingHotel) {\n      const hotelData = getHotelByIdOrSlug(slug);\n      if (hotelData) {\n        dispatch(setEditingHotel(hotelData.id));\n      }\n    }\n  }, [slug, editingHotel, dispatch]);\n  \n  const [roomData, setRoomData] = useState({\n    name: '',\n    type: '',\n    price: '',\n    maxGuests: '',\n    bedType: '',\n    description: '',\n    images: [''],\n    amenities: [''],\n    offer: ''\n  });\n\n  const updateField = (field, value) => {\n    setRoomData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const addImage = () => {\n    setRoomData(prev => ({ ...prev, images: [...prev.images, ''] }));\n  };\n\n  const removeImage = (index) => {\n    setRoomData(prev => ({\n      ...prev,\n      images: prev.images.filter((_, i) => i !== index)\n    }));\n  };\n\n  const updateImage = (index, value) => {\n    setRoomData(prev => ({\n      ...prev,\n      images: prev.images.map((img, i) => i === index ? value : img)\n    }));\n  };\n\n  const addAmenity = () => {\n    setRoomData(prev => ({ ...prev, amenities: [...prev.amenities, ''] }));\n  };\n\n  const removeAmenity = (index) => {\n    setRoomData(prev => ({\n      ...prev,\n      amenities: prev.amenities.filter((_, i) => i !== index)\n    }));\n  };\n\n  const updateAmenity = (index, value) => {\n    setRoomData(prev => ({\n      ...prev,\n      amenities: prev.amenities.map((amenity, i) => i === index ? value : amenity)\n    }));\n  };\n\n  const handleSaveRoom = () => {\n    if (!roomData.name || !roomData.type || !roomData.price) {\n      alert('Please fill in all required fields (Name, Type, Price)');\n      return;\n    }\n\n    const newRoom = {\n      id: Date.now(), // Generate unique ID\n      name: roomData.name,\n      type: roomData.type,\n      price: parseInt(roomData.price),\n      maxGuests: parseInt(roomData.maxGuests) || 2,\n      bedType: roomData.bedType,\n      description: roomData.description,\n      images: roomData.images.filter(img => img.trim()),\n      amenities: roomData.amenities.filter(amenity => amenity.trim()),\n      offer: roomData.offer\n    };\n\n    dispatch(addRoom(newRoom));\n    \n    // Reset form\n    setRoomData({\n      name: '',\n      type: '',\n      price: '',\n      maxGuests: '',\n      bedType: '',\n      description: '',\n      images: [''],\n      amenities: [''],\n      offer: ''\n    });\n\n    alert('Room added successfully!');\n  };\n\n  const handleReset = () => {\n    setRoomData({\n      name: '',\n      type: '',\n      price: '',\n      maxGuests: '',\n      bedType: '',\n      description: '',\n      images: [''],\n      amenities: [''],\n      offer: ''\n    });\n  };\n\n  if (!editingHotel) {\n    return (\n      <Container>\n        <Header>\n          <Title>Add Room</Title>\n          <Subtitle>Please select a hotel first to add rooms</Subtitle>\n        </Header>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <Header>\n        <Title>Add New Room</Title>\n        <Subtitle>Add a new room to {editingHotel.name}</Subtitle>\n      </Header>\n\n      <FormCard>\n        <SectionTitle>\n          <FaBed />\n          Basic Room Information\n        </SectionTitle>\n        <FormGrid>\n          <FormField>\n            <Label>Room Name *</Label>\n            <Input\n              value={roomData.name}\n              onChange={(e) => updateField('name', e.target.value)}\n              placeholder=\"e.g., Deluxe Ocean View\"\n            />\n          </FormField>\n          <FormField>\n            <Label>Room Type *</Label>\n            <Input\n              value={roomData.type}\n              onChange={(e) => updateField('type', e.target.value)}\n              placeholder=\"e.g., Deluxe, Suite, Standard\"\n            />\n          </FormField>\n          <FormField>\n            <Label>Price per Night (₹) *</Label>\n            <Input\n              type=\"number\"\n              value={roomData.price}\n              onChange={(e) => updateField('price', e.target.value)}\n              placeholder=\"e.g., 8500\"\n            />\n          </FormField>\n          <FormField>\n            <Label>Maximum Guests</Label>\n            <Input\n              type=\"number\"\n              value={roomData.maxGuests}\n              onChange={(e) => updateField('maxGuests', e.target.value)}\n              placeholder=\"e.g., 2\"\n            />\n          </FormField>\n          <FormField>\n            <Label>Bed Type</Label>\n            <Input\n              value={roomData.bedType}\n              onChange={(e) => updateField('bedType', e.target.value)}\n              placeholder=\"e.g., King Size, Double Bed\"\n            />\n          </FormField>\n        </FormGrid>\n\n        <FormField>\n          <Label>Room Description</Label>\n          <TextArea\n            value={roomData.description}\n            onChange={(e) => updateField('description', e.target.value)}\n            placeholder=\"Enter detailed room description...\"\n          />\n        </FormField>\n      </FormCard>\n\n      <FormCard>\n        <SectionTitle>\n          <FaGift />\n          Special Offers & Rewards\n        </SectionTitle>\n        <FormField>\n          <Label>Room Offers</Label>\n          <TextArea\n            value={roomData.offer}\n            onChange={(e) => updateField('offer', e.target.value)}\n            placeholder=\"Enter special offers, rewards, or perks for this room...\"\n            rows={4}\n          />\n        </FormField>\n      </FormCard>\n\n      <FormCard>\n        <SectionTitle>\n          <FaImage />\n          Room Images\n        </SectionTitle>\n        <ImageList>\n          {roomData.images.map((image, index) => (\n            <ImageItem key={index}>\n              {image && (\n                <ImagePreview>\n                  <img src={image} alt={`Room ${index + 1}`} />\n                </ImagePreview>\n              )}\n              <Input\n                value={image}\n                onChange={(e) => updateImage(index, e.target.value)}\n                placeholder=\"Enter image URL\"\n                style={{ flex: 1 }}\n              />\n              <RemoveButton onClick={() => removeImage(index)}>\n                <FaTrash />\n              </RemoveButton>\n            </ImageItem>\n          ))}\n        </ImageList>\n        <AddButton onClick={addImage}>\n          <FaPlus /> Add Image\n        </AddButton>\n      </FormCard>\n\n      <FormCard>\n        <SectionTitle>\n          <FaUsers />\n          Room Amenities\n        </SectionTitle>\n        <AmenitiesList>\n          {roomData.amenities.map((amenity, index) => (\n            <AmenityItem key={index}>\n              <Input\n                value={amenity}\n                onChange={(e) => updateAmenity(index, e.target.value)}\n                placeholder=\"Enter amenity (e.g., WiFi, AC, TV)\"\n                style={{ flex: 1 }}\n              />\n              <RemoveButton onClick={() => removeAmenity(index)}>\n                <FaTrash />\n              </RemoveButton>\n            </AmenityItem>\n          ))}\n        </AmenitiesList>\n        <AddButton onClick={addAmenity}>\n          <FaPlus /> Add Amenity\n        </AddButton>\n      </FormCard>\n\n      <ActionButtons>\n        <Button variant=\"outline\" onClick={handleReset}>\n          <FaUndo /> Reset Form\n        </Button>\n        <Button onClick={handleSaveRoom}>\n          <FaSave /> Save Room\n        </Button>\n      </ActionButtons>\n    </Container>\n  );\n};\n\nexport default AddRoomManager;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/owner/AddRoomPage.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport Sidebar from './Sidebar';\nimport { Card, CardContent } from '../shared/Card';\nimport { Button } from '../shared/Button';\nimport {\n  Input,\n  FormGroup,\n  Label,\n  TextArea,\n  Select,\n  InputGroup,\n  CheckboxGroup,\n  CheckboxItem,\n} from '../shared/Input';\nimport { theme } from '../../styles/GlobalStyle';\nimport { useAppContext } from '../../context/AppContext';\nimport { amenitiesList } from '../../DummyData';\n\nconst PageContainer = styled.div`\n  display: flex;\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n`;\n\nconst MainContent = styled.main`\n  flex: 1;\n  margin-left: 280px;\n  padding: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    margin-left: 0;\n    padding: ${theme.spacing.xl} ${theme.spacing.md};\n    padding-top: 80px;\n  }\n`;\n\nconst BackButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.primary};\n  background: none;\n  border: none;\n  margin-bottom: ${theme.spacing.xl};\n  font-weight: 500;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.sm};\n  color: ${theme.colors.gray900};\n`;\n\nconst PageSubtitle = styled.p`\n  font-size: 1.125rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst FormCard = styled(Card)`\n  max-width: 800px;\n`;\n\nconst RoomForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.xl};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.lg};\n  color: ${theme.colors.gray900};\n  padding-bottom: ${theme.spacing.sm};\n  border-bottom: 2px solid ${theme.colors.gray200};\n`;\n\nconst FormActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  justify-content: flex-end;\n  padding-top: ${theme.spacing.lg};\n  border-top: 1px solid ${theme.colors.gray200};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n  }\n`;\n\nconst AddRoomPage = () => {\n  const { hotelId } = useParams();\n  const navigate = useNavigate();\n  const { hotels, setHotels, setOwnerHotels } = useAppContext();\n\n  const [formData, setFormData] = useState({\n    name: '',\n    type: 'Standard',\n    price: '',\n    maxGuests: '2',\n    bedType: 'Double Bed',\n    description: '',\n    amenities: [],\n    images: [],\n  });\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const hotel = hotels.find(h => h.id === parseInt(hotelId));\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleAmenityChange = (amenityId, checked) => {\n    setFormData(prev => ({\n      ...prev,\n      amenities: checked\n        ? [...prev.amenities, amenityId]\n        : prev.amenities.filter(id => id !== amenityId),\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      const newRoom = {\n        id: Date.now(),\n        name: formData.name,\n        type: formData.type,\n        price: parseInt(formData.price),\n        maxGuests: parseInt(formData.maxGuests),\n        bedType: formData.bedType,\n        description: formData.description,\n        images:\n          formData.images.length > 0\n            ? formData.images\n            : [\n                'https://images.unsplash.com/photo-1631049307264-da0ec9d70304?ixlib=rb-4.0.3',\n              ],\n        amenities: formData.amenities,\n      };\n\n      // Update hotels data\n      setHotels(prev =>\n        prev.map(h =>\n          h.id === parseInt(hotelId)\n            ? { ...h, rooms: [...h.rooms, newRoom] }\n            : h\n        )\n      );\n\n      // Update owner hotels data\n      setOwnerHotels(prev =>\n        prev.map(h =>\n          h.id === parseInt(hotelId)\n            ? { ...h, totalRooms: h.totalRooms + 1 }\n            : h\n        )\n      );\n\n      navigate('/owner/my-hotels');\n    } catch (error) {\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (!hotel) {\n    return <div>Hotel not found</div>;\n  }\n\n  return (\n    <PageContainer>\n      <Sidebar />\n\n      <MainContent>\n        <BackButton onClick={() => navigate('/owner/my-hotels')}>\n          <FaArrowLeft />\n          Back to My Hotels\n        </BackButton>\n\n        <PageTitle>Add Room</PageTitle>\n        <PageSubtitle>Add a new room to {hotel.name}</PageSubtitle>\n\n        <FormCard>\n          <CardContent>\n            <RoomForm onSubmit={handleSubmit}>\n              <div>\n                <SectionTitle>Room Details</SectionTitle>\n\n                <FormGroup>\n                  <Label>Room Name *</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleInputChange}\n                    placeholder=\"e.g. Deluxe AC Room\"\n                    required\n                  />\n                </FormGroup>\n\n                <InputGroup>\n                  <FormGroup>\n                    <Label>Room Type</Label>\n                    <Select\n                      name=\"type\"\n                      value={formData.type}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"Standard\">Standard</option>\n                      <option value=\"Deluxe\">Deluxe</option>\n                      <option value=\"Suite\">Suite</option>\n                      <option value=\"Premium\">Premium</option>\n                    </Select>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label>Price per Night (₹) *</Label>\n                    <Input\n                      type=\"number\"\n                      name=\"price\"\n                      value={formData.price}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter price\"\n                      required\n                    />\n                  </FormGroup>\n                </InputGroup>\n\n                <InputGroup>\n                  <FormGroup>\n                    <Label>Max Guests</Label>\n                    <Select\n                      name=\"maxGuests\"\n                      value={formData.maxGuests}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"1\">1 Guest</option>\n                      <option value=\"2\">2 Guests</option>\n                      <option value=\"3\">3 Guests</option>\n                      <option value=\"4\">4 Guests</option>\n                      <option value=\"5\">5 Guests</option>\n                    </Select>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label>Bed Type</Label>\n                    <Select\n                      name=\"bedType\"\n                      value={formData.bedType}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"Single Bed\">Single Bed</option>\n                      <option value=\"Double Bed\">Double Bed</option>\n                      <option value=\"King Size\">King Size</option>\n                      <option value=\"Queen Size\">Queen Size</option>\n                      <option value=\"Twin Beds\">Twin Beds</option>\n                    </Select>\n                  </FormGroup>\n                </InputGroup>\n\n                <FormGroup>\n                  <Label>Room Description *</Label>\n                  <TextArea\n                    name=\"description\"\n                    value={formData.description}\n                    onChange={handleInputChange}\n                    placeholder=\"Describe the room features and amenities...\"\n                    required\n                  />\n                </FormGroup>\n              </div>\n\n              <div>\n                <SectionTitle>Room Amenities</SectionTitle>\n                <FormGroup>\n                  <Label>Select Room Amenities</Label>\n                  <CheckboxGroup>\n                    {amenitiesList.slice(0, 10).map(amenity => (\n                      <CheckboxItem key={amenity.id}>\n                        <input\n                          type=\"checkbox\"\n                          checked={formData.amenities.includes(amenity.id)}\n                          onChange={e =>\n                            handleAmenityChange(amenity.id, e.target.checked)\n                          }\n                        />\n                        <span>\n                          {amenity.icon} {amenity.name}\n                        </span>\n                      </CheckboxItem>\n                    ))}\n                  </CheckboxGroup>\n                </FormGroup>\n              </div>\n\n              <FormActions>\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={() => navigate('/owner/my-hotels')}\n                >\n                  Cancel\n                </Button>\n                <Button type=\"submit\" disabled={isSubmitting} size=\"large\">\n                  {isSubmitting ? 'Adding Room...' : 'Add Room'}\n                </Button>\n              </FormActions>\n            </RoomForm>\n          </CardContent>\n        </FormCard>\n      </MainContent>\n    </PageContainer>\n  );\n};\n\nexport default AddRoomPage;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/owner/AddRoomPageContent.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":122,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":122,"endColumn":43},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":166,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":166,"endColumn":40},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":178,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":178,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[4241,4284],"text":""},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport { Card, CardContent } from '../shared/Card';\nimport { Button } from '../shared/Button';\nimport {\n  Input,\n  FormGroup,\n  Label,\n  TextArea,\n  Select,\n  InputGroup,\n  CheckboxGroup,\n  CheckboxItem,\n} from '../shared/Input';\nimport { theme } from '../../styles/GlobalStyle';\nimport { useAppContext } from '../../context/AppContext';\nimport { amenitiesList } from '../../DummyData';\n\nconst BackButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.primary};\n  background: none;\n  border: none;\n  margin-bottom: ${theme.spacing.xl};\n  font-weight: 500;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.sm};\n  color: ${theme.colors.gray900};\n`;\n\nconst PageSubtitle = styled.p`\n  font-size: 1.125rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst FormCard = styled(Card)`\n  max-width: 800px;\n`;\n\nconst RoomForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.xl};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.lg};\n  color: ${theme.colors.gray900};\n  padding-bottom: ${theme.spacing.sm};\n  border-bottom: 2px solid ${theme.colors.gray200};\n`;\n\nconst FormActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  justify-content: flex-end;\n  padding-top: ${theme.spacing.lg};\n  border-top: 1px solid ${theme.colors.gray200};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n  }\n`;\n\nconst AddRoomPageContent = ({ setActiveSection }) => {\n  const { hotels, setHotels, setOwnerHotels, ownerHotels } = useAppContext();\n\n  const [selectedHotelId, setSelectedHotelId] = useState(\n    ownerHotels[0]?.id || ''\n  );\n  const [formData, setFormData] = useState({\n    name: '',\n    type: 'Standard',\n    price: '',\n    maxGuests: '2',\n    bedType: 'Double Bed',\n    description: '',\n    amenities: [],\n    images: [],\n  });\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const selectedHotel = hotels.find(h => h.id === parseInt(selectedHotelId));\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleAmenityChange = (amenityId, checked) => {\n    setFormData(prev => ({\n      ...prev,\n      amenities: checked\n        ? [...prev.amenities, amenityId]\n        : prev.amenities.filter(id => id !== amenityId),\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!selectedHotelId) {\n      alert('Please select a hotel first');\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      const newRoom = {\n        id: Date.now(),\n        name: formData.name,\n        type: formData.type,\n        price: parseInt(formData.price),\n        maxGuests: parseInt(formData.maxGuests),\n        bedType: formData.bedType,\n        description: formData.description,\n        images:\n          formData.images.length > 0\n            ? formData.images\n            : [\n                'https://images.unsplash.com/photo-1631049307264-da0ec9d70304?ixlib=rb-4.0.3',\n              ],\n        amenities: formData.amenities,\n      };\n\n      // Update hotels data\n      setHotels(prev =>\n        prev.map(h =>\n          h.id === parseInt(selectedHotelId)\n            ? { ...h, rooms: [...h.rooms, newRoom] }\n            : h\n        )\n      );\n\n      // Update owner hotels data\n      setOwnerHotels(prev =>\n        prev.map(h =>\n          h.id === parseInt(selectedHotelId)\n            ? { ...h, totalRooms: h.totalRooms + 1 }\n            : h\n        )\n      );\n\n      alert('Room added successfully!');\n      setFormData({\n        name: '',\n        type: 'Standard',\n        price: '',\n        maxGuests: '2',\n        bedType: 'Double Bed',\n        description: '',\n        amenities: [],\n        images: [],\n      });\n    } catch (error) {\n      console.error('Error adding room:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <>\n      <BackButton onClick={() => setActiveSection('my-hotels')}>\n        <FaArrowLeft />\n        Back to My Hotels\n      </BackButton>\n\n      <PageTitle>Add Room</PageTitle>\n      <PageSubtitle>\n        Add a new room to {selectedHotel?.name || 'your hotel'}\n      </PageSubtitle>\n\n      <FormCard>\n        <CardContent>\n          <RoomForm onSubmit={handleSubmit}>\n            <div>\n              <SectionTitle>Hotel Selection</SectionTitle>\n              <FormGroup>\n                <Label>Select Hotel *</Label>\n                <Select\n                  value={selectedHotelId}\n                  onChange={e => setSelectedHotelId(e.target.value)}\n                  required\n                >\n                  <option value=\"\">Choose a hotel</option>\n                  {ownerHotels.map(hotel => (\n                    <option key={hotel.id} value={hotel.id}>\n                      {hotel.name}\n                    </option>\n                  ))}\n                </Select>\n              </FormGroup>\n            </div>\n\n            <div>\n              <SectionTitle>Room Details</SectionTitle>\n\n              <FormGroup>\n                <Label>Room Name *</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  placeholder=\"e.g. Deluxe AC Room\"\n                  required\n                />\n              </FormGroup>\n\n              <InputGroup>\n                <FormGroup>\n                  <Label>Room Type</Label>\n                  <Select\n                    name=\"type\"\n                    value={formData.type}\n                    onChange={handleInputChange}\n                  >\n                    <option value=\"Standard\">Standard</option>\n                    <option value=\"Deluxe\">Deluxe</option>\n                    <option value=\"Suite\">Suite</option>\n                    <option value=\"Premium\">Premium</option>\n                  </Select>\n                </FormGroup>\n                <FormGroup>\n                  <Label>Price per Night (₹) *</Label>\n                  <Input\n                    type=\"number\"\n                    name=\"price\"\n                    value={formData.price}\n                    onChange={handleInputChange}\n                    placeholder=\"Enter price\"\n                    required\n                  />\n                </FormGroup>\n              </InputGroup>\n\n              <InputGroup>\n                <FormGroup>\n                  <Label>Max Guests</Label>\n                  <Select\n                    name=\"maxGuests\"\n                    value={formData.maxGuests}\n                    onChange={handleInputChange}\n                  >\n                    <option value=\"1\">1 Guest</option>\n                    <option value=\"2\">2 Guests</option>\n                    <option value=\"3\">3 Guests</option>\n                    <option value=\"4\">4 Guests</option>\n                    <option value=\"5\">5 Guests</option>\n                  </Select>\n                </FormGroup>\n                <FormGroup>\n                  <Label>Bed Type</Label>\n                  <Select\n                    name=\"bedType\"\n                    value={formData.bedType}\n                    onChange={handleInputChange}\n                  >\n                    <option value=\"Single Bed\">Single Bed</option>\n                    <option value=\"Double Bed\">Double Bed</option>\n                    <option value=\"King Size\">King Size</option>\n                    <option value=\"Queen Size\">Queen Size</option>\n                    <option value=\"Twin Beds\">Twin Beds</option>\n                  </Select>\n                </FormGroup>\n              </InputGroup>\n\n              <FormGroup>\n                <Label>Room Description *</Label>\n                <TextArea\n                  name=\"description\"\n                  value={formData.description}\n                  onChange={handleInputChange}\n                  placeholder=\"Describe the room features and amenities...\"\n                  required\n                />\n              </FormGroup>\n            </div>\n\n            <div>\n              <SectionTitle>Room Amenities</SectionTitle>\n              <FormGroup>\n                <Label>Select Room Amenities</Label>\n                <CheckboxGroup>\n                  {amenitiesList.slice(0, 10).map(amenity => (\n                    <CheckboxItem key={amenity.id}>\n                      <input\n                        type=\"checkbox\"\n                        checked={formData.amenities.includes(amenity.id)}\n                        onChange={e =>\n                          handleAmenityChange(amenity.id, e.target.checked)\n                        }\n                      />\n                      <span>\n                        {amenity.icon} {amenity.name}\n                      </span>\n                    </CheckboxItem>\n                  ))}\n                </CheckboxGroup>\n              </FormGroup>\n            </div>\n\n            <FormActions>\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={() => setActiveSection('my-hotels')}\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                disabled={isSubmitting || !selectedHotelId}\n                size=\"large\"\n              >\n                {isSubmitting ? 'Adding Room...' : 'Add Room'}\n              </Button>\n            </FormActions>\n          </RoomForm>\n        </CardContent>\n      </FormCard>\n    </>\n  );\n};\n\nexport default AddRoomPageContent;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/owner/AllRoomsManager.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'FaImage' is defined but never used.","line":13,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":10},{"ruleId":"no-unused-vars","severity":1,"message":"'FaGift' is defined but never used.","line":14,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":9},{"ruleId":"no-unused-vars","severity":1,"message":"'FaEye' is defined but never used.","line":15,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":15,"endColumn":8},{"ruleId":"no-unused-vars","severity":1,"message":"'CardContent' is defined but never used.","line":22,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":22,"endColumn":27},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":251,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":251,"endColumn":3,"fix":{"range":[5619,5621],"text":""}},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":264,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":264,"endColumn":40},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":268,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":268,"endColumn":99},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":270,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":270,"endColumn":42},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":376,"column":26,"nodeType":"Program","messageId":"trailingSpace","endLine":376,"endColumn":27,"fix":{"range":[9458,9459],"text":""}},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":377,"column":33,"nodeType":"Program","messageId":"trailingSpace","endLine":377,"endColumn":34,"fix":{"range":[9492,9493],"text":""}},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":378,"column":37,"nodeType":"Program","messageId":"trailingSpace","endLine":378,"endColumn":38,"fix":{"range":[9530,9531],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":4,"source":"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaBed,\n  FaUsers,\n  FaEdit,\n  FaTrash,\n  FaSave,\n  FaTimes,\n  FaPlus,\n  FaImage,\n  FaGift,\n  FaEye,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport { updateRoom, removeRoom, setEditingHotel } from '../../store/slices/hotelManagementSlice';\nimport { getHotelByIdOrSlug } from '../../DummyData/hotels';\nimport { Button } from '../shared/Button';\nimport { Input } from '../shared/Input';\nimport { Card, CardContent } from '../shared/Card';\n\nconst Container = styled.div`\n  padding: ${theme.spacing.xl};\n  background: ${theme.colors.gray50};\n  min-height: 100vh;\n`;\n\nconst Header = styled.div`\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst Title = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst Subtitle = styled.p`\n  color: ${theme.colors.gray600};\n  font-size: 1.1rem;\n`;\n\nconst RoomsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n  gap: ${theme.spacing.xl};\n`;\n\nconst RoomCard = styled(Card)`\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: ${theme.shadows.xl};\n  }\n`;\n\nconst RoomImage = styled.div`\n  width: 100%;\n  height: 200px;\n  background-image: url(${props => props.src});\n  background-size: cover;\n  background-position: center;\n  border-radius: ${theme.borderRadius.lg} ${theme.borderRadius.lg} 0 0;\n  position: relative;\n`;\n\nconst RoomInfo = styled.div`\n  padding: ${theme.spacing.lg};\n`;\n\nconst RoomHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst RoomName = styled.h3`\n  font-size: 1.3rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst RoomType = styled.span`\n  color: ${theme.colors.primary};\n  font-weight: 500;\n  font-size: 0.9rem;\n`;\n\nconst RoomPrice = styled.div`\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n`;\n\nconst RoomDetails = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.md};\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst RoomDescription = styled.p`\n  color: ${theme.colors.gray700};\n  line-height: 1.6;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst RoomOffer = styled.div`\n  background: ${theme.colors.warning}20;\n  padding: ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  border-left: 3px solid ${theme.colors.warning};\n  margin-bottom: ${theme.spacing.md};\n  font-size: 0.9rem;\n  color: ${theme.colors.gray700};\n`;\n\nconst AmenitiesList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.xs};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst AmenityTag = styled.span`\n  background: ${theme.colors.gray100};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  color: ${theme.colors.gray700};\n`;\n\nconst RoomActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n  justify-content: flex-end;\n`;\n\nconst EditModal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  padding: ${theme.spacing.lg};\n`;\n\nconst EditContent = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  width: 100%;\n  max-width: 800px;\n  max-height: 90vh;\n  overflow-y: auto;\n  padding: ${theme.spacing.xl};\n`;\n\nconst EditHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst EditTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  font-size: 1.2rem;\n  color: ${theme.colors.gray500};\n  cursor: pointer;\n  padding: ${theme.spacing.sm};\n  \n  &:hover {\n    color: ${theme.colors.gray700};\n  }\n`;\n\nconst FormGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst FormField = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n`;\n\nconst Label = styled.label`\n  font-weight: 500;\n  color: ${theme.colors.gray700};\n`;\n\nconst TextArea = styled.textarea`\n  padding: ${theme.spacing.md};\n  border: 1px solid ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  line-height: 1.5;\n  resize: vertical;\n  min-height: 80px;\n  \n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    box-shadow: 0 0 0 3px ${theme.colors.primary}20;\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n`;\n\nconst AllRoomsManager = () => {\n  const dispatch = useDispatch();\n  const { slug } = useParams();\n  const { editingHotel } = useSelector(state => state.hotelManagement);\n\n  // Auto-select hotel based on URL slug\n  useEffect(() => {\n    if (slug && !editingHotel) {\n      const hotelData = getHotelByIdOrSlug(slug);\n      if (hotelData) {\n        dispatch(setEditingHotel(hotelData.id));\n      }\n    }\n  }, [slug, editingHotel, dispatch]);\n  \n  const [editingRoom, setEditingRoom] = useState(null);\n  const [editData, setEditData] = useState({});\n\n  const handleEditRoom = (room) => {\n    setEditingRoom(room.id);\n    setEditData({ ...room });\n  };\n\n  const handleSaveEdit = () => {\n    dispatch(updateRoom({ roomId: editingRoom, updates: editData }));\n    setEditingRoom(null);\n    setEditData({});\n    alert('Room updated successfully!');\n  };\n\n  const handleDeleteRoom = (roomId) => {\n    if (window.confirm('Are you sure you want to delete this room? This action cannot be undone.')) {\n      dispatch(removeRoom(roomId));\n      alert('Room deleted successfully!');\n    }\n  };\n\n  const handleCloseEdit = () => {\n    setEditingRoom(null);\n    setEditData({});\n  };\n\n  const updateEditField = (field, value) => {\n    setEditData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const updateEditImage = (index, value) => {\n    const newImages = [...editData.images];\n    newImages[index] = value;\n    updateEditField('images', newImages);\n  };\n\n  const addEditImage = () => {\n    updateEditField('images', [...editData.images, '']);\n  };\n\n  const removeEditImage = (index) => {\n    const newImages = editData.images.filter((_, i) => i !== index);\n    updateEditField('images', newImages);\n  };\n\n  const updateEditAmenity = (index, value) => {\n    const newAmenities = [...editData.amenities];\n    newAmenities[index] = value;\n    updateEditField('amenities', newAmenities);\n  };\n\n  const addEditAmenity = () => {\n    updateEditField('amenities', [...editData.amenities, '']);\n  };\n\n  const removeEditAmenity = (index) => {\n    const newAmenities = editData.amenities.filter((_, i) => i !== index);\n    updateEditField('amenities', newAmenities);\n  };\n\n  if (!editingHotel) {\n    return (\n      <Container>\n        <Header>\n          <Title>All Rooms</Title>\n          <Subtitle>Please select a hotel first to view rooms</Subtitle>\n        </Header>\n      </Container>\n    );\n  }\n\n  const rooms = editingHotel.rooms || [];\n\n  return (\n    <Container>\n      <Header>\n        <Title>All Rooms</Title>\n        <Subtitle>Manage rooms for {editingHotel.name} ({rooms.length} rooms)</Subtitle>\n      </Header>\n\n      {rooms.length === 0 ? (\n        <EmptyState>\n          <FaBed style={{ fontSize: '4rem', marginBottom: theme.spacing.lg, opacity: 0.5 }} />\n          <h3>No rooms added yet</h3>\n          <p>Start by adding your first room to this hotel.</p>\n        </EmptyState>\n      ) : (\n        <RoomsGrid>\n          {rooms.map(room => (\n            <RoomCard key={room.id}>\n              <RoomImage src={room.images?.[0] || 'https://images.unsplash.com/photo-1631049307264-da0ec9d70304?ixlib=rb-4.0.3'} />\n              <RoomInfo>\n                <RoomHeader>\n                  <div>\n                    <RoomName>{room.name}</RoomName>\n                    <RoomType>{room.type}</RoomType>\n                  </div>\n                  <RoomPrice>₹{room.price?.toLocaleString()}</RoomPrice>\n                </RoomHeader>\n\n                <RoomDetails>\n                  <div><FaUsers /> {room.maxGuests} guests</div>\n                  <div><FaBed /> {room.bedType}</div>\n                </RoomDetails>\n\n                <RoomDescription>{room.description}</RoomDescription>\n\n                {room.offer && (\n                  <RoomOffer>\n                    <strong>Special Offer:</strong> {room.offer}\n                  </RoomOffer>\n                )}\n\n                <AmenitiesList>\n                  {room.amenities?.map((amenity, index) => (\n                    <AmenityTag key={index}>{amenity}</AmenityTag>\n                  ))}\n                </AmenitiesList>\n\n                <RoomActions>\n                  <Button size=\"small\" variant=\"outline\" onClick={() => handleEditRoom(room)}>\n                    <FaEdit /> Edit\n                  </Button>\n                  <Button \n                    size=\"small\" \n                    variant=\"danger\" \n                    onClick={() => handleDeleteRoom(room.id)}\n                  >\n                    <FaTrash /> Delete\n                  </Button>\n                </RoomActions>\n              </RoomInfo>\n            </RoomCard>\n          ))}\n        </RoomsGrid>\n      )}\n\n      {/* Edit Modal */}\n      {editingRoom && (\n        <EditModal onClick={handleCloseEdit}>\n          <EditContent onClick={(e) => e.stopPropagation()}>\n            <EditHeader>\n              <EditTitle>Edit Room: {editData.name}</EditTitle>\n              <CloseButton onClick={handleCloseEdit}>\n                <FaTimes />\n              </CloseButton>\n            </EditHeader>\n\n            <FormGrid>\n              <FormField>\n                <Label>Room Name</Label>\n                <Input\n                  value={editData.name || ''}\n                  onChange={(e) => updateEditField('name', e.target.value)}\n                />\n              </FormField>\n              <FormField>\n                <Label>Room Type</Label>\n                <Input\n                  value={editData.type || ''}\n                  onChange={(e) => updateEditField('type', e.target.value)}\n                />\n              </FormField>\n              <FormField>\n                <Label>Price (₹)</Label>\n                <Input\n                  type=\"number\"\n                  value={editData.price || ''}\n                  onChange={(e) => updateEditField('price', parseInt(e.target.value))}\n                />\n              </FormField>\n              <FormField>\n                <Label>Max Guests</Label>\n                <Input\n                  type=\"number\"\n                  value={editData.maxGuests || ''}\n                  onChange={(e) => updateEditField('maxGuests', parseInt(e.target.value))}\n                />\n              </FormField>\n              <FormField>\n                <Label>Bed Type</Label>\n                <Input\n                  value={editData.bedType || ''}\n                  onChange={(e) => updateEditField('bedType', e.target.value)}\n                />\n              </FormField>\n            </FormGrid>\n\n            <FormField style={{ marginBottom: theme.spacing.lg }}>\n              <Label>Description</Label>\n              <TextArea\n                value={editData.description || ''}\n                onChange={(e) => updateEditField('description', e.target.value)}\n              />\n            </FormField>\n\n            <FormField style={{ marginBottom: theme.spacing.lg }}>\n              <Label>Special Offers</Label>\n              <TextArea\n                value={editData.offer || ''}\n                onChange={(e) => updateEditField('offer', e.target.value)}\n                placeholder=\"Enter special offers or rewards for this room...\"\n              />\n            </FormField>\n\n            <FormField style={{ marginBottom: theme.spacing.lg }}>\n              <Label>Images</Label>\n              {editData.images?.map((image, index) => (\n                <div key={index} style={{ display: 'flex', gap: theme.spacing.sm, marginBottom: theme.spacing.sm }}>\n                  <Input\n                    value={image}\n                    onChange={(e) => updateEditImage(index, e.target.value)}\n                    placeholder=\"Image URL\"\n                    style={{ flex: 1 }}\n                  />\n                  <Button size=\"small\" variant=\"danger\" onClick={() => removeEditImage(index)}>\n                    <FaTrash />\n                  </Button>\n                </div>\n              ))}\n              <Button size=\"small\" onClick={addEditImage}>\n                <FaPlus /> Add Image\n              </Button>\n            </FormField>\n\n            <FormField style={{ marginBottom: theme.spacing.lg }}>\n              <Label>Amenities</Label>\n              {editData.amenities?.map((amenity, index) => (\n                <div key={index} style={{ display: 'flex', gap: theme.spacing.sm, marginBottom: theme.spacing.sm }}>\n                  <Input\n                    value={amenity}\n                    onChange={(e) => updateEditAmenity(index, e.target.value)}\n                    placeholder=\"Amenity\"\n                    style={{ flex: 1 }}\n                  />\n                  <Button size=\"small\" variant=\"danger\" onClick={() => removeEditAmenity(index)}>\n                    <FaTrash />\n                  </Button>\n                </div>\n              ))}\n              <Button size=\"small\" onClick={addEditAmenity}>\n                <FaPlus /> Add Amenity\n              </Button>\n            </FormField>\n\n            <div style={{ display: 'flex', gap: theme.spacing.md, justifyContent: 'flex-end' }}>\n              <Button variant=\"outline\" onClick={handleCloseEdit}>\n                Cancel\n              </Button>\n              <Button onClick={handleSaveEdit}>\n                <FaSave /> Save Changes\n              </Button>\n            </div>\n          </EditContent>\n        </EditModal>\n      )}\n    </Container>\n  );\n};\n\nexport default AllRoomsManager;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/owner/BookingsReceivedPage.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport styled from 'styled-components';\nimport {\n  FaCheck,\n  FaTimes,\n  FaEye,\n  FaCalendarAlt,\n  FaUsers,\n} from 'react-icons/fa';\nimport Sidebar from './Sidebar';\nimport { Card, CardContent, Badge } from '../shared/Card';\nimport { Button } from '../shared/Button';\nimport { theme } from '../../styles/GlobalStyle';\nimport { useAppContext } from '../../context/AppContext';\n\nconst PageContainer = styled.div`\n  display: flex;\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n`;\n\nconst MainContent = styled.main`\n  flex: 1;\n  margin-left: 280px;\n  padding: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    margin-left: 0;\n    padding: ${theme.spacing.xl} ${theme.spacing.md};\n    padding-top: 80px;\n  }\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.xxl};\n  color: ${theme.colors.gray900};\n`;\n\nconst BookingsTable = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  overflow: hidden;\n  box-shadow: ${theme.shadows.md};\n`;\n\nconst TableHeader = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr 1fr 1fr 1fr auto;\n  padding: ${theme.spacing.lg};\n  background: ${theme.colors.gray50};\n  font-weight: 600;\n  color: ${theme.colors.gray700};\n  border-bottom: 1px solid ${theme.colors.gray200};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    display: none;\n  }\n`;\n\nconst TableRow = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr 1fr 1fr 1fr auto;\n  padding: ${theme.spacing.lg};\n  border-bottom: 1px solid ${theme.colors.gray100};\n  align-items: center;\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst BookingInfo = styled.div``;\n\nconst GuestName = styled.div`\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.xs};\n  color: ${theme.colors.gray900};\n`;\n\nconst ContactInfo = styled.div`\n  font-size: 0.875rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst HotelRoom = styled.div`\n  font-size: 0.875rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst BookingActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    justify-content: space-between;\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n`;\n\nconst BookingCard = styled(Card)`\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (min-width: ${theme.breakpoints.tablet}) {\n    display: none;\n  }\n`;\n\nconst BookingsReceivedPage = () => {\n  const { bookings, setBookings, ownerHotels } = useAppContext();\n\n  const ownerBookings = bookings.filter(booking =>\n    ownerHotels.some(hotel => hotel.id === booking.hotelId)\n  );\n\n  const handleBookingAction = (bookingId, action) => {\n    setBookings(prev =>\n      prev.map(booking =>\n        booking.id === bookingId ? { ...booking, status: action } : booking\n      )\n    );\n  };\n\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-IN', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric',\n    });\n  };\n\n  const getStatusVariant = status => {\n    switch (status) {\n      case 'confirmed':\n        return 'success';\n      case 'pending':\n        return 'warning';\n      case 'rejected':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n\n  if (ownerBookings.length === 0) {\n    return (\n      <PageContainer>\n        <Sidebar />\n        <MainContent>\n          <PageTitle>Bookings Received</PageTitle>\n          <Card>\n            <EmptyState>\n              <div\n                style={{\n                  fontSize: '4rem',\n                  marginBottom: theme.spacing.lg,\n                  opacity: 0.5,\n                }}\n              >\n                📅\n              </div>\n              <h3\n                style={{\n                  fontSize: '1.5rem',\n                  fontWeight: 600,\n                  marginBottom: theme.spacing.md,\n                  color: theme.colors.gray700,\n                }}\n              >\n                No Bookings Yet\n              </h3>\n              <p style={{ fontSize: '1.125rem', lineHeight: 1.6 }}>\n                You haven't received any booking requests yet. Once customers\n                book your rooms, they'll appear here.\n              </p>\n            </EmptyState>\n          </Card>\n        </MainContent>\n      </PageContainer>\n    );\n  }\n\n  return (\n    <PageContainer>\n      <Sidebar />\n\n      <MainContent>\n        <PageTitle>Bookings Received</PageTitle>\n\n        {/* Desktop Table View */}\n        <BookingsTable>\n          <TableHeader>\n            <div>Guest & Contact</div>\n            <div>Hotel & Room</div>\n            <div>Check-in</div>\n            <div>Check-out</div>\n            <div>Status</div>\n            <div>Actions</div>\n          </TableHeader>\n\n          {ownerBookings.map(booking => (\n            <TableRow key={booking.id}>\n              <BookingInfo>\n                <GuestName>{booking.guestName}</GuestName>\n                <ContactInfo>{booking.guestEmail}</ContactInfo>\n                <ContactInfo>{booking.guestPhone}</ContactInfo>\n              </BookingInfo>\n              <div>\n                <HotelRoom>\n                  <strong>{booking.hotelName}</strong>\n                  <br />\n                  {booking.roomName}\n                </HotelRoom>\n              </div>\n              <div>{formatDate(booking.checkIn)}</div>\n              <div>{formatDate(booking.checkOut)}</div>\n              <div>\n                <Badge variant={getStatusVariant(booking.status)}>\n                  {booking.status.charAt(0).toUpperCase() +\n                    booking.status.slice(1)}\n                </Badge>\n              </div>\n              <BookingActions>\n                {booking.status === 'pending' && (\n                  <>\n                    <Button\n                      variant=\"success\"\n                      size=\"small\"\n                      onClick={() =>\n                        handleBookingAction(booking.id, 'confirmed')\n                      }\n                    >\n                      <FaCheck />\n                    </Button>\n                    <Button\n                      variant=\"danger\"\n                      size=\"small\"\n                      onClick={() =>\n                        handleBookingAction(booking.id, 'rejected')\n                      }\n                    >\n                      <FaTimes />\n                    </Button>\n                  </>\n                )}\n                <Button variant=\"outline\" size=\"small\">\n                  <FaEye />\n                </Button>\n              </BookingActions>\n            </TableRow>\n          ))}\n        </BookingsTable>\n\n        {/* Mobile Card View */}\n        <div style={{ display: 'none' }}>\n          {ownerBookings.map(booking => (\n            <BookingCard key={booking.id}>\n              <CardContent>\n                <div\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'flex-start',\n                    marginBottom: theme.spacing.md,\n                  }}\n                >\n                  <div>\n                    <GuestName>{booking.guestName}</GuestName>\n                    <ContactInfo>{booking.guestEmail}</ContactInfo>\n                    <ContactInfo>{booking.guestPhone}</ContactInfo>\n                  </div>\n                  <Badge variant={getStatusVariant(booking.status)}>\n                    {booking.status.charAt(0).toUpperCase() +\n                      booking.status.slice(1)}\n                  </Badge>\n                </div>\n\n                <HotelRoom style={{ marginBottom: theme.spacing.md }}>\n                  <strong>{booking.hotelName}</strong> - {booking.roomName}\n                </HotelRoom>\n\n                <div\n                  style={{\n                    display: 'flex',\n                    gap: theme.spacing.lg,\n                    marginBottom: theme.spacing.md,\n                    fontSize: '0.875rem',\n                    color: theme.colors.gray600,\n                  }}\n                >\n                  <div>\n                    <FaCalendarAlt style={{ marginRight: theme.spacing.xs }} />\n                    {formatDate(booking.checkIn)} -{' '}\n                    {formatDate(booking.checkOut)}\n                  </div>\n                  <div>\n                    <FaUsers style={{ marginRight: theme.spacing.xs }} />\n                    {booking.guests} guests\n                  </div>\n                </div>\n\n                {booking.specialRequests && (\n                  <div\n                    style={{\n                      marginBottom: theme.spacing.md,\n                      padding: theme.spacing.sm,\n                      background: theme.colors.gray50,\n                      borderRadius: theme.borderRadius.md,\n                      fontSize: '0.875rem',\n                    }}\n                  >\n                    <strong>Special Requests:</strong> {booking.specialRequests}\n                  </div>\n                )}\n\n                <BookingActions>\n                  {booking.status === 'pending' && (\n                    <>\n                      <Button\n                        variant=\"success\"\n                        size=\"small\"\n                        onClick={() =>\n                          handleBookingAction(booking.id, 'confirmed')\n                        }\n                        style={{ flex: 1 }}\n                      >\n                        <FaCheck />\n                        Confirm\n                      </Button>\n                      <Button\n                        variant=\"danger\"\n                        size=\"small\"\n                        onClick={() =>\n                          handleBookingAction(booking.id, 'rejected')\n                        }\n                        style={{ flex: 1 }}\n                      >\n                        <FaTimes />\n                        Reject\n                      </Button>\n                    </>\n                  )}\n                  <Button variant=\"outline\" size=\"small\">\n                    <FaEye />\n                    View Details\n                  </Button>\n                </BookingActions>\n              </CardContent>\n            </BookingCard>\n          ))}\n        </div>\n      </MainContent>\n    </PageContainer>\n  );\n};\n\nexport default BookingsReceivedPage;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/owner/BookingsReceivedPageContent.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'FaCalendarAlt' is defined but never used.","line":7,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":16},{"ruleId":"no-unused-vars","severity":1,"message":"'FaUsers' is defined but never used.","line":8,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":10},{"ruleId":"no-unused-vars","severity":1,"message":"'CardContent' is defined but never used.","line":10,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":27}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport styled from 'styled-components';\nimport {\n  FaCheck,\n  FaTimes,\n  FaEye,\n  FaCalendarAlt,\n  FaUsers,\n} from 'react-icons/fa';\nimport { Card, CardContent, Badge } from '../shared/Card';\nimport { Button } from '../shared/Button';\nimport { theme } from '../../styles/GlobalStyle';\nimport { useAppContext } from '../../context/AppContext';\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.xxl};\n  color: ${theme.colors.gray900};\n`;\n\nconst BookingsTable = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  overflow: hidden;\n  box-shadow: ${theme.shadows.md};\n`;\n\nconst TableHeader = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr 1fr 1fr 1fr auto;\n  padding: ${theme.spacing.lg};\n  background: ${theme.colors.gray50};\n  font-weight: 600;\n  color: ${theme.colors.gray700};\n  border-bottom: 1px solid ${theme.colors.gray200};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    display: none;\n  }\n`;\n\nconst TableRow = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr 1fr 1fr 1fr auto;\n  padding: ${theme.spacing.lg};\n  border-bottom: 1px solid ${theme.colors.gray100};\n  align-items: center;\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst BookingInfo = styled.div``;\n\nconst GuestName = styled.div`\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.xs};\n  color: ${theme.colors.gray900};\n`;\n\nconst ContactInfo = styled.div`\n  font-size: 0.875rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst HotelRoom = styled.div`\n  font-size: 0.875rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst BookingActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    justify-content: space-between;\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n`;\n\nconst BookingsReceivedPageContent = () => {\n  const { bookings, setBookings, ownerHotels } = useAppContext();\n\n  const ownerBookings = bookings.filter(booking =>\n    ownerHotels.some(hotel => hotel.id === booking.hotelId)\n  );\n\n  const handleBookingAction = (bookingId, action) => {\n    setBookings(prev =>\n      prev.map(booking =>\n        booking.id === bookingId ? { ...booking, status: action } : booking\n      )\n    );\n  };\n\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-IN', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric',\n    });\n  };\n\n  const getStatusVariant = status => {\n    switch (status) {\n      case 'confirmed':\n        return 'success';\n      case 'pending':\n        return 'warning';\n      case 'rejected':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n\n  if (ownerBookings.length === 0) {\n    return (\n      <>\n        <PageTitle>Bookings Received</PageTitle>\n        <Card>\n          <EmptyState>\n            <div\n              style={{\n                fontSize: '4rem',\n                marginBottom: theme.spacing.lg,\n                opacity: 0.5,\n              }}\n            >\n              📅\n            </div>\n            <h3\n              style={{\n                fontSize: '1.5rem',\n                fontWeight: 600,\n                marginBottom: theme.spacing.md,\n                color: theme.colors.gray700,\n              }}\n            >\n              No Bookings Yet\n            </h3>\n            <p style={{ fontSize: '1.125rem', lineHeight: 1.6 }}>\n              You haven't received any booking requests yet. Once customers book\n              your rooms, they'll appear here.\n            </p>\n          </EmptyState>\n        </Card>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <PageTitle>Bookings Received</PageTitle>\n\n      <BookingsTable>\n        <TableHeader>\n          <div>Guest & Contact</div>\n          <div>Hotel & Room</div>\n          <div>Check-in</div>\n          <div>Check-out</div>\n          <div>Status</div>\n          <div>Actions</div>\n        </TableHeader>\n\n        {ownerBookings.map(booking => (\n          <TableRow key={booking.id}>\n            <BookingInfo>\n              <GuestName>{booking.guestName}</GuestName>\n              <ContactInfo>{booking.guestEmail}</ContactInfo>\n              <ContactInfo>{booking.guestPhone}</ContactInfo>\n            </BookingInfo>\n            <div>\n              <HotelRoom>\n                <strong>{booking.hotelName}</strong>\n                <br />\n                {booking.roomName}\n              </HotelRoom>\n            </div>\n            <div>{formatDate(booking.checkIn)}</div>\n            <div>{formatDate(booking.checkOut)}</div>\n            <div>\n              <Badge variant={getStatusVariant(booking.status)}>\n                {booking.status.charAt(0).toUpperCase() +\n                  booking.status.slice(1)}\n              </Badge>\n            </div>\n            <BookingActions>\n              {booking.status === 'pending' && (\n                <>\n                  <Button\n                    variant=\"success\"\n                    size=\"small\"\n                    onClick={() => handleBookingAction(booking.id, 'confirmed')}\n                  >\n                    <FaCheck />\n                  </Button>\n                  <Button\n                    variant=\"danger\"\n                    size=\"small\"\n                    onClick={() => handleBookingAction(booking.id, 'rejected')}\n                  >\n                    <FaTimes />\n                  </Button>\n                </>\n              )}\n              <Button variant=\"outline\" size=\"small\">\n                <FaEye />\n              </Button>\n            </BookingActions>\n          </TableRow>\n        ))}\n      </BookingsTable>\n    </>\n  );\n};\n\nexport default BookingsReceivedPageContent;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/owner/ContentManagerSelector.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport styled from 'styled-components';\nimport { FaEdit, FaEye, FaArrowLeft } from 'react-icons/fa';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Sidebar from './Sidebar';\nimport { Card } from '../shared/Card';\nimport { Button } from '../shared/Button';\nimport { theme } from '../../styles/GlobalStyle';\nimport { useAppContext } from '../../context/AppContext';\n\nconst DashboardContainer = styled.div`\n  display: flex;\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n`;\n\nconst MainContent = styled.main`\n  flex: 1;\n  margin-left: 17.5rem;\n  padding: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    margin-left: 0;\n    padding: ${theme.spacing.xl} ${theme.spacing.md};\n    padding-top: 5rem;\n  }\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.lg};\n    align-items: stretch;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin: 0;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2rem;\n  }\n`;\n\nconst Subtitle = styled.p`\n  font-size: 1.1rem;\n  color: ${theme.colors.gray600};\n  margin-top: ${theme.spacing.sm};\n`;\n\nconst BackButton = styled.button`\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst HotelsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst HotelCard = styled(Card)`\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: ${theme.shadows.xl};\n  }\n`;\n\nconst HotelImage = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'image',\n})`\n  width: 100%;\n  height: 200px;\n  background-image: url(${props => props.image});\n  background-size: cover;\n  background-position: center;\n  border-radius: ${theme.borderRadius.lg} ${theme.borderRadius.lg} 0 0;\n  position: relative;\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(\n      to bottom,\n      transparent 0%,\n      rgba(0, 0, 0, 0.3) 100%\n    );\n  }\n`;\n\nconst HotelInfo = styled.div`\n  padding: ${theme.spacing.lg};\n`;\n\nconst HotelName = styled.h3`\n  font-size: 1.4rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst HotelLocation = styled.p`\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst HotelStats = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${theme.spacing.md} 0;\n  border-top: 1px solid ${theme.colors.gray200};\n  margin-top: ${theme.spacing.lg};\n`;\n\nconst Stat = styled.div`\n  text-align: center;\n\n  .value {\n    font-size: 1.2rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    display: block;\n  }\n\n  .label {\n    font-size: 0.8rem;\n    color: ${theme.colors.gray600};\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n  }\n`;\n\nconst HotelActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  margin-top: ${theme.spacing.lg};\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl} ${theme.spacing.lg};\n  color: ${theme.colors.gray600};\n\n  h3 {\n    font-size: 1.5rem;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.md};\n  }\n\n  p {\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst ContentManagerSelector = () => {\n  const navigate = useNavigate();\n  const { ownerHotels } = useAppContext();\n\n  if (ownerHotels.length === 0) {\n    return (\n      <DashboardContainer>\n        <Sidebar />\n        <MainContent>\n          <Header>\n            <div>\n              <Title>Manage Hotel Content</Title>\n              <Subtitle>\n                Select a hotel to manage its content and settings\n              </Subtitle>\n            </div>\n            <BackButton onClick={() => navigate(-1)}>\n              <FaArrowLeft />\n              Back to Dashboard\n            </BackButton>\n          </Header>\n\n          <EmptyState>\n            <h3>No Hotels Found</h3>\n            <p>\n              You don't have any hotels registered yet. Add your first hotel to\n              start managing content.\n            </p>\n            <Button as={Link} to=\"/owner/add-hotel\">\n              Add Your First Hotel\n            </Button>\n          </EmptyState>\n        </MainContent>\n      </DashboardContainer>\n    );\n  }\n\n  return (\n    <DashboardContainer>\n      <Sidebar />\n\n      <MainContent>\n        <Header>\n          <div>\n            <Title>Manage Hotel Content</Title>\n            <Subtitle>\n              Select a hotel to manage its content and settings\n            </Subtitle>\n          </div>\n          <BackButton onClick={() => navigate(-1)}>\n            <FaArrowLeft />\n            Back to Dashboard\n          </BackButton>\n        </Header>\n\n        <HotelsGrid>\n          {ownerHotels.map(hotel => (\n            <HotelCard key={hotel.id}>\n              <HotelImage image={hotel.image} />\n              <HotelInfo>\n                <HotelName>{hotel.name}</HotelName>\n                <HotelLocation>{hotel.location}</HotelLocation>\n\n                <HotelStats>\n                  <Stat>\n                    <span className=\"value\">{hotel.totalRooms}</span>\n                    <span className=\"label\">Rooms</span>\n                  </Stat>\n                  <Stat>\n                    <span className=\"value\">{hotel.totalBookings}</span>\n                    <span className=\"label\">Bookings</span>\n                  </Stat>\n                  <Stat>\n                    <span className=\"value\">{hotel.status}</span>\n                    <span className=\"label\">Status</span>\n                  </Stat>\n                </HotelStats>\n\n                <HotelActions>\n                  <Button\n                    variant=\"primary\"\n                    size=\"small\"\n                    as={Link}\n                    to={`/owner/content-manager/${hotel.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                    style={{ flex: 1 }}\n                  >\n                    <FaEdit />\n                    Manage Content\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"small\"\n                    onClick={() =>\n                      window.open(\n                        `/${hotel.name.toLowerCase().replace(/\\s+/g, '-')}`,\n                        '_blank'\n                      )\n                    }\n                  >\n                    <FaEye />\n                  </Button>\n                </HotelActions>\n              </HotelInfo>\n            </HotelCard>\n          ))}\n        </HotelsGrid>\n      </MainContent>\n    </DashboardContainer>\n  );\n};\n\nexport default ContentManagerSelector;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/owner/EditableHotelDetail.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'FaMapMarkerAlt' is defined but never used.","line":5,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":17},{"ruleId":"no-unused-vars","severity":1,"message":"'FaStar' is defined but never used.","line":6,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":9},{"ruleId":"no-unused-vars","severity":1,"message":"'FaClock' is defined but never used.","line":9,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":10},{"ruleId":"no-unused-vars","severity":1,"message":"'FaPhone' is defined but never used.","line":11,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":10},{"ruleId":"no-unused-vars","severity":1,"message":"'FaEnvelope' is defined but never used.","line":12,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":12,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'FaUmbrellaBeach' is defined but never used.","line":14,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":18},{"ruleId":"no-unused-vars","severity":1,"message":"'FaTaxi' is defined but never used.","line":16,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":16,"endColumn":9},{"ruleId":"no-unused-vars","severity":1,"message":"'addHotelImage' is defined but never used.","line":26,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":26,"endColumn":16},{"ruleId":"no-unused-vars","severity":1,"message":"'removeHotelImage' is defined but never used.","line":27,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":27,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'amenitiesList' is defined but never used.","line":33,"column":30,"nodeType":"Identifier","messageId":"unusedVar","endLine":33,"endColumn":43},{"ruleId":"no-unused-vars","severity":1,"message":"'setActiveSection' is defined but never used. Allowed unused args must match /^_/u.","line":537,"column":32,"nodeType":"Identifier","messageId":"unusedVar","endLine":537,"endColumn":48},{"ruleId":"no-unused-vars","severity":1,"message":"'activeHotelId' is assigned a value but never used.","line":544,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":544,"endColumn":18},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":548,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":548,"endColumn":3,"fix":{"range":[12425,12427],"text":""}},{"ruleId":"no-alert","severity":1,"message":"Unexpected prompt.","line":571,"column":20,"nodeType":"CallExpression","messageId":"unexpected","endLine":571,"endColumn":62},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":583,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":583,"endColumn":5,"fix":{"range":[13587,13591],"text":""}},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":588,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":588,"endColumn":5,"fix":{"range":[13815,13819],"text":""}},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":594,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":594,"endColumn":77},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":598,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":598,"endColumn":72},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":1,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":610,"column":15,"nodeType":"JSXOpeningElement","endLine":620,"endColumn":16},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":610,"column":19,"nodeType":"Program","messageId":"trailingSpace","endLine":610,"endColumn":20,"fix":{"range":[14544,14545],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":4,"source":"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport {\n  FaMapMarkerAlt,\n  FaStar,\n  FaSwimmingPool,\n  FaUtensils,\n  FaClock,\n  FaCheckCircle,\n  FaPhone,\n  FaEnvelope,\n  FaConciergeBell,\n  FaUmbrellaBeach,\n  FaBusinessTime,\n  FaTaxi,\n  FaEdit,\n  FaSave,\n  FaUndo,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport {\n  setEditingHotel,\n  updateHotelField,\n  updateHotelImage,\n  addHotelImage,\n  removeHotelImage,\n  updateAmenities,\n  saveChanges,\n  discardChanges,\n} from '../../store/slices/hotelManagementSlice';\nimport { useAppContext } from '../../context/AppContext';\nimport { getHotelByIdOrSlug, amenitiesList } from '../../DummyData/hotels';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n  position: relative;\n`;\n\nconst EditingIndicator = styled.div`\n  position: fixed;\n  top: 0;\n  left: 17.5rem;\n  right: 0;\n  background: ${theme.colors.warning};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.sm};\n  text-align: center;\n  font-weight: 600;\n  z-index: 100;\n  box-shadow: ${theme.shadows.md};\n`;\n\nconst EditableHeroBanner = styled.section.withConfig({\n  shouldForwardProp: prop => prop !== 'image',\n})`\n  position: relative;\n  height: 100vh;\n  background-image: url(${props => props.image});\n  background-size: cover;\n  background-position: center;\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n  margin-top: 40px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(135deg, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.6));\n  }\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    height: 80vh;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    height: 100vh;\n    padding-top: 60px;\n    background-attachment: scroll;\n    background-position: center center;\n\n    &::before {\n      background: linear-gradient(\n        135deg,\n        rgba(0, 0, 0, 0.3),\n        rgba(0, 0, 0, 0.5)\n      );\n    }\n  }\n`;\n\nconst ImageEditOverlay = styled.div`\n  position: absolute;\n  top: ${theme.spacing.lg};\n  right: ${theme.spacing.lg};\n  z-index: 3;\n`;\n\nconst EditButton = styled.button`\n  background: rgba(255, 255, 255, 0.9);\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  padding: ${theme.spacing.sm};\n  color: ${theme.colors.primary};\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  font-size: 0.875rem;\n  font-weight: 600;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: ${theme.colors.white};\n    transform: translateY(-2px);\n    box-shadow: ${theme.shadows.md};\n  }\n`;\n\nconst HeroContent = styled.div`\n  position: relative;\n  z-index: 2;\n  color: ${theme.colors.white};\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.xl};\n  width: 100%;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: 0 ${theme.spacing.md};\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    min-height: calc(100vh - 120px);\n  }\n`;\n\nconst EditableTitle = styled.input`\n  font-size: 4.5rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.lg};\n  background: transparent;\n  border: 2px dashed transparent;\n  color: ${theme.colors.white};\n  width: 100%;\n  text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.7);\n  \n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.white};\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: ${theme.borderRadius.md};\n    padding: ${theme.spacing.sm};\n  }\n\n  &::placeholder {\n    color: rgba(255, 255, 255, 0.7);\n  }\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    font-size: 3rem;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2.8rem;\n    margin-bottom: ${theme.spacing.lg};\n    line-height: 1.2;\n    letter-spacing: -0.02em;\n  }\n`;\n\nconst EditableSubtitle = styled.textarea`\n  font-size: 1.5rem;\n  margin-bottom: ${theme.spacing.xl};\n  background: transparent;\n  border: 2px dashed transparent;\n  color: ${theme.colors.white};\n  width: 100%;\n  resize: none;\n  text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.5);\n  opacity: 0.95;\n  max-width: 600px;\n  min-height: 60px;\n  \n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.white};\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: ${theme.borderRadius.md};\n    padding: ${theme.spacing.sm};\n  }\n\n  &::placeholder {\n    color: rgba(255, 255, 255, 0.7);\n  }\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    font-size: 1.3rem;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.1rem;\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst ContentSection = styled.section`\n  padding: ${theme.spacing.xxl} 0;\n  background: ${theme.colors.white};\n\n  &.alt {\n    background: ${theme.colors.gray50};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.xl} 0;\n\n    &:first-of-type {\n      padding-top: ${theme.spacing.xxl};\n    }\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: 0 ${theme.spacing.lg};\n  }\n`;\n\nconst SectionHeader = styled.div`\n  text-align: center;\n  margin-bottom: ${theme.spacing.xxl};\n  position: relative;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    margin-bottom: ${theme.spacing.xl};\n  }\n`;\n\nconst EditableSectionTitle = styled.input`\n  font-size: 2.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n  background: transparent;\n  border: 2px dashed transparent;\n  text-align: center;\n  width: 100%;\n  \n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    background: ${theme.colors.gray50};\n    border-radius: ${theme.borderRadius.md};\n    padding: ${theme.spacing.sm};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2.2rem;\n    font-weight: 700;\n    line-height: 1.3;\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst EditableDescription = styled.textarea`\n  font-size: 1.1rem;\n  line-height: 1.8;\n  color: ${theme.colors.gray700};\n  background: transparent;\n  border: 2px dashed transparent;\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n  text-align: center;\n  resize: none;\n  min-height: 120px;\n  \n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    background: ${theme.colors.gray50};\n    border-radius: ${theme.borderRadius.md};\n    padding: ${theme.spacing.sm};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.15rem;\n    line-height: 1.8;\n    text-align: left;\n    padding: 0 ${theme.spacing.sm};\n  }\n`;\n\nconst GallerySection = styled.div`\n  margin: ${theme.spacing.xxl} 0;\n`;\n\nconst GalleryGrid = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr 1fr;\n  grid-template-rows: 300px 300px;\n  gap: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.xl};\n  overflow: hidden;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    grid-template-rows: repeat(5, 200px);\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    grid-template-rows: repeat(5, 250px);\n    gap: ${theme.spacing.sm};\n    border-radius: ${theme.borderRadius.lg};\n  }\n`;\n\nconst EditableGalleryItem = styled.div.withConfig({\n  shouldForwardProp: prop => !['image', 'span'].includes(prop),\n})`\n  background-image: url(${props => props.image});\n  background-size: cover;\n  background-position: center;\n  position: relative;\n  cursor: pointer;\n  transition: transform 0.3s ease;\n  ${props => props.span && `grid-row: span ${props.span};`}\n\n  &:hover {\n    transform: scale(1.02);\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.1);\n    transition: background 0.3s ease;\n  }\n\n  &:hover::before {\n    background: rgba(0, 0, 0, 0.3);\n  }\n\n  &:first-child {\n    grid-row: span 2;\n  }\n`;\n\nconst ImageEditButton = styled.button`\n  position: absolute;\n  top: ${theme.spacing.sm};\n  right: ${theme.spacing.sm};\n  background: rgba(255, 255, 255, 0.9);\n  border: none;\n  border-radius: ${theme.borderRadius.sm};\n  padding: ${theme.spacing.xs};\n  color: ${theme.colors.primary};\n  cursor: pointer;\n  opacity: 0;\n  transition: all 0.3s ease;\n  z-index: 2;\n\n  ${EditableGalleryItem}:hover & {\n    opacity: 1;\n  }\n\n  &:hover {\n    background: ${theme.colors.white};\n    transform: scale(1.1);\n  }\n`;\n\nconst AmenitiesSection = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  padding: ${theme.spacing.xxl};\n  box-shadow: ${theme.shadows.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.xl};\n    border-radius: ${theme.borderRadius.lg};\n    margin: 0 -${theme.spacing.sm};\n  }\n`;\n\nconst AmenitiesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.xl};\n  }\n`;\n\nconst AmenityCategory = styled.div`\n  h4 {\n    font-size: 1.2rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.md};\n    display: flex;\n    align-items: center;\n    gap: ${theme.spacing.sm};\n\n    @media (max-width: ${theme.breakpoints.mobile}) {\n      font-size: 1.3rem;\n      font-weight: 700;\n      padding: ${theme.spacing.md} 0;\n      border-bottom: 2px solid ${theme.colors.gray100};\n      margin-bottom: ${theme.spacing.lg};\n    }\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    background: ${theme.colors.gray50};\n    padding: ${theme.spacing.lg};\n    border-radius: ${theme.borderRadius.lg};\n    border: 1px solid ${theme.colors.gray200};\n  }\n`;\n\nconst EditableAmenityList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: ${theme.spacing.sm};\n`;\n\nconst AmenityToggle = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.sm};\n  border: 1px solid ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  transition: all 0.3s ease;\n  background: ${props => props.selected ? theme.colors.primary : theme.colors.white};\n  color: ${props => props.selected ? theme.colors.white : theme.colors.gray700};\n  font-size: 0.9rem;\n  \n  &:hover {\n    border-color: ${theme.colors.primary};\n    transform: translateY(-1px);\n  }\n\n  .icon {\n    font-size: 0.8rem;\n  }\n`;\n\nconst ActionBar = styled.div`\n  position: fixed;\n  bottom: ${theme.spacing.xl};\n  left: 17.5rem;\n  right: ${theme.spacing.xl};\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.xl};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 50;\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst ChangesCount = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.warning};\n  font-weight: 600;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n`;\n\nconst ActionButton = styled.button`\n  padding: ${theme.spacing.sm} ${theme.spacing.lg};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  transition: all 0.3s ease;\n\n  &.save {\n    background: ${theme.colors.primary};\n    color: ${theme.colors.white};\n\n    &:hover {\n      background: ${theme.colors.primaryDark};\n      transform: translateY(-2px);\n    }\n  }\n\n  &.discard {\n    background: ${theme.colors.gray200};\n    color: ${theme.colors.gray700};\n\n    &:hover {\n      background: ${theme.colors.gray300};\n    }\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst EditableHotelDetail = ({ setActiveSection }) => {\n  const dispatch = useDispatch();\n  const { ownerHotels } = useAppContext();\n  const {\n    editingHotel,\n    hasUnsavedChanges,\n    changes,\n    activeHotelId\n  } = useSelector(state => state.hotelManagement);\n\n  const [selectedHotelId, setSelectedHotelId] = useState(null);\n  \n  // If no hotel is being edited, show hotel selection\n  useEffect(() => {\n    if (!editingHotel && ownerHotels.length > 0) {\n      // Auto-select first hotel if none selected\n      if (!selectedHotelId) {\n        setSelectedHotelId(ownerHotels[0].id);\n      }\n      if (selectedHotelId) {\n        const hotelData = getHotelByIdOrSlug(selectedHotelId);\n        if (hotelData) {\n          dispatch(setEditingHotel(selectedHotelId));\n        }\n      }\n    }\n  }, [selectedHotelId, editingHotel, ownerHotels, dispatch]);\n\n  const handleFieldChange = (field, value) => {\n    dispatch(updateHotelField({ field, value }));\n  };\n\n  const handleImageEdit = (index, isMainImage = false) => {\n    const currentUrl = isMainImage ? editingHotel?.image : editingHotel?.images?.[index];\n    const newUrl = prompt('Enter new image URL:', currentUrl);\n    if (newUrl && newUrl !== currentUrl) {\n      if (isMainImage) {\n        dispatch(updateHotelField({ field: 'image', value: newUrl }));\n      } else {\n        dispatch(updateHotelImage({ index, url: newUrl }));\n      }\n    }\n  };\n\n  const toggleAmenity = (categoryItems, amenityName) => {\n    if (!editingHotel) return;\n    \n    const currentAmenities = editingHotel.amenities || [];\n    const newAmenities = currentAmenities.includes(amenityName)\n      ? currentAmenities.filter(a => a !== amenityName)\n      : [...currentAmenities, amenityName];\n    \n    dispatch(updateAmenities(newAmenities));\n  };\n\n  const handleSave = () => {\n    dispatch(saveChanges());\n    alert('Changes saved successfully! Hotel detail page has been updated.');\n  };\n\n  const handleDiscard = () => {\n    if (window.confirm('Are you sure you want to discard all changes?')) {\n      dispatch(discardChanges());\n    }\n  };\n\n  if (!editingHotel) {\n    return (\n      <PageContainer>\n        <Container style={{ paddingTop: theme.spacing.xxl }}>\n          <h2>Select a hotel to edit:</h2>\n          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: theme.spacing.lg, marginTop: theme.spacing.xl }}>\n            {ownerHotels.map(hotel => (\n              <div \n                key={hotel.id}\n                onClick={() => setSelectedHotelId(hotel.id)}\n                style={{\n                  cursor: 'pointer',\n                  border: `2px solid ${selectedHotelId === hotel.id ? theme.colors.primary : theme.colors.gray300}`,\n                  borderRadius: theme.borderRadius.lg,\n                  overflow: 'hidden',\n                  transition: 'all 0.3s ease'\n                }}\n              >\n                <img src={hotel.image} alt={hotel.name} style={{ width: '100%', height: '200px', objectFit: 'cover' }} />\n                <div style={{ padding: theme.spacing.lg }}>\n                  <h3>{hotel.name}</h3>\n                  <p style={{ color: theme.colors.gray600 }}>{hotel.location}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </Container>\n      </PageContainer>\n    );\n  }\n\n  const amenityCategories = [\n    {\n      title: 'Recreation',\n      icon: FaSwimmingPool,\n      items: ['Swimming Pool', 'Fitness Center', 'Spa & Wellness', 'Game Room', 'Tennis Court'],\n    },\n    {\n      title: 'Dining',\n      icon: FaUtensils,\n      items: ['Fine Dining Restaurant', 'Rooftop Bar', 'Room Service', 'Breakfast Buffet', 'Coffee Shop'],\n    },\n    {\n      title: 'Business',\n      icon: FaBusinessTime,\n      items: ['Business Center', 'Meeting Rooms', 'Conference Hall', 'Free WiFi', 'Printing Services'],\n    },\n    {\n      title: 'Services',\n      icon: FaConciergeBell,\n      items: ['24/7 Concierge', 'Valet Parking', 'Laundry Service', 'Airport Transfer', 'Tour Desk'],\n    },\n  ];\n\n  return (\n    <PageContainer>\n      <EditingIndicator>\n        🎨 EDITING MODE - Make changes to your hotel page content\n      </EditingIndicator>\n\n      <EditableHeroBanner image={editingHotel.image}>\n        <ImageEditOverlay>\n          <EditButton onClick={() => handleImageEdit(0, true)}>\n            <FaEdit /> Change Background\n          </EditButton>\n        </ImageEditOverlay>\n        <HeroContent>\n          <EditableTitle\n            value={editingHotel.name || ''}\n            onChange={(e) => handleFieldChange('name', e.target.value)}\n            placeholder=\"Enter hotel name\"\n          />\n          <EditableSubtitle\n            value={`Experience luxury hospitality in the heart of ${editingHotel.city || 'your city'}`}\n            onChange={(e) => handleFieldChange('heroSubtitle', e.target.value)}\n            placeholder=\"Enter hero subtitle\"\n          />\n        </HeroContent>\n      </EditableHeroBanner>\n\n      <ContentSection>\n        <Container>\n          <SectionHeader>\n            <EditableSectionTitle\n              value={`About ${editingHotel.name}`}\n              onChange={(e) => handleFieldChange('aboutTitle', e.target.value)}\n              placeholder=\"About section title\"\n            />\n          </SectionHeader>\n          <EditableDescription\n            value={editingHotel.description || ''}\n            onChange={(e) => handleFieldChange('description', e.target.value)}\n            placeholder=\"Enter hotel description...\"\n          />\n        </Container>\n      </ContentSection>\n\n      <ContentSection>\n        <Container>\n          <SectionHeader>\n            <EditableSectionTitle\n              value=\"Hotel Gallery\"\n              readOnly\n              style={{ border: 'none', cursor: 'default' }}\n            />\n          </SectionHeader>\n          <GallerySection>\n            <GalleryGrid>\n              {editingHotel.images?.map((image, index) => (\n                <EditableGalleryItem key={index} image={image}>\n                  <ImageEditButton onClick={() => handleImageEdit(index)}>\n                    <FaEdit />\n                  </ImageEditButton>\n                </EditableGalleryItem>\n              ))}\n            </GalleryGrid>\n          </GallerySection>\n        </Container>\n      </ContentSection>\n\n      <ContentSection className=\"alt\">\n        <Container>\n          <SectionHeader>\n            <EditableSectionTitle\n              value=\"World-Class Amenities\"\n              readOnly\n              style={{ border: 'none', cursor: 'default' }}\n            />\n          </SectionHeader>\n          <AmenitiesSection>\n            <AmenitiesGrid>\n              {amenityCategories.map((category, index) => (\n                <AmenityCategory key={index}>\n                  <h4>\n                    <category.icon />\n                    {category.title}\n                  </h4>\n                  <EditableAmenityList>\n                    {category.items.map((item, itemIndex) => (\n                      <AmenityToggle\n                        key={itemIndex}\n                        selected={editingHotel.amenities?.includes(item)}\n                        onClick={() => toggleAmenity(category.items, item)}\n                      >\n                        <FaCheckCircle className=\"icon\" />\n                        {item}\n                      </AmenityToggle>\n                    ))}\n                  </EditableAmenityList>\n                </AmenityCategory>\n              ))}\n            </AmenitiesGrid>\n          </AmenitiesSection>\n        </Container>\n      </ContentSection>\n\n      {hasUnsavedChanges && (\n        <ActionBar>\n          <ChangesCount>\n            <FaEdit />\n            {Object.keys(changes).length} changes made\n          </ChangesCount>\n          <ActionButtons>\n            <ActionButton className=\"discard\" onClick={handleDiscard}>\n              <FaUndo /> Discard Changes\n            </ActionButton>\n            <ActionButton className=\"save\" onClick={handleSave}>\n              <FaSave /> Save & Update Live Page\n            </ActionButton>\n          </ActionButtons>\n        </ActionBar>\n      )}\n    </PageContainer>\n  );\n};\n\nexport default EditableHotelDetail;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/owner/EnhancedSidebar.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'FaPlus' is defined but never used.","line":7,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":9},{"ruleId":"no-unused-vars","severity":1,"message":"'FaEye' is defined but never used.","line":16,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":16,"endColumn":8},{"ruleId":"no-unused-vars","severity":1,"message":"'clearEditingHotel' is defined but never used.","line":21,"column":39,"nodeType":"Identifier","messageId":"unusedVar","endLine":21,"endColumn":56},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":438,"column":11,"nodeType":"CallExpression","messageId":"unexpected","endLine":438,"endColumn":68},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":452,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":452,"endColumn":43},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":462,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":462,"endColumn":41},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":466,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":466,"endColumn":72},{"ruleId":"no-unused-vars","severity":1,"message":"'handlePreviewChanges' is assigned a value but never used.","line":471,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":471,"endColumn":29},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":542,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":542,"endColumn":13,"fix":{"range":[12437,12449],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import React, { useState, useMemo } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport {\n  FaHome,\n  FaPlus,\n  FaHotel,\n  FaBed,\n  FaCalendarCheck,\n  FaUser,\n  FaSignOutAlt,\n  FaBars,\n  FaTimes,\n  FaSave,\n  FaEye,\n  FaUndo,\n  FaExclamationTriangle,\n  FaCheckCircle,\n} from 'react-icons/fa';\nimport { saveChanges, discardChanges, clearEditingHotel } from '../../store/slices/hotelManagementSlice';\nimport { theme, media } from '../../styles/GlobalStyle';\nimport { Button } from '../shared/Button';\n\nconst SidebarContainer = styled.aside.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 17.5rem;\n  height: 100vh;\n  background: ${theme.colors.white};\n  border-right: 1px solid ${theme.colors.gray200};\n  overflow-y: auto;\n  overflow-x: hidden;\n  transition: transform 0.3s ease;\n  z-index: 20;\n  display: flex;\n  flex-direction: column;\n\n  ${media.tabletDown} {\n    width: 16rem;\n    transform: translateX(${props => (props.isOpen ? '0' : '-100%')});\n  }\n\n  ${media.mobile} {\n    width: 15rem;\n  }\n\n  /* Custom scrollbar */\n  &::-webkit-scrollbar {\n    width: 0.25rem;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: ${theme.colors.gray100};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: ${theme.colors.gray300};\n    border-radius: ${theme.borderRadius.sm};\n  }\n\n  &::-webkit-scrollbar-thumb:hover {\n    background: ${theme.colors.gray400};\n  }\n`;\n\nconst SidebarHeader = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n\n  ${media.mobile} {\n    padding: ${theme.spacing.lg};\n  }\n`;\n\nconst Logo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n\n  ${media.mobile} {\n    font-size: 1.25rem;\n    gap: ${theme.spacing.xs};\n  }\n\n  svg {\n    font-size: 1.25rem;\n\n    ${media.mobile} {\n      font-size: 1rem;\n    }\n  }\n`;\n\nconst SidebarNav = styled.nav`\n  padding: ${theme.spacing.lg} 0;\n  flex: 1;\n\n  ${media.mobile} {\n    padding: ${theme.spacing.md} 0;\n  }\n`;\n\nconst NavSection = styled.div`\n  margin-bottom: ${theme.spacing.lg};\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  ${media.mobile} {\n    margin-bottom: ${theme.spacing.md};\n  }\n`;\n\nconst SectionTitle = styled.h3`\n  padding: 0 ${theme.spacing.xl} ${theme.spacing.sm};\n  font-size: 0.875rem;\n  font-weight: 600;\n  color: ${theme.colors.gray500};\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n\n  ${media.mobile} {\n    padding: 0 ${theme.spacing.lg} ${theme.spacing.xs};\n    font-size: 0.75rem;\n  }\n`;\n\nconst NavItem = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  color: ${props =>\n    props.active ? theme.colors.primary : theme.colors.gray700};\n  text-decoration: none;\n  font-weight: 500;\n  transition: all 0.2s ease;\n  position: relative;\n  font-size: 0.875rem;\n  cursor: pointer;\n\n  &:hover {\n    color: ${theme.colors.primary};\n    background: ${theme.colors.gray50};\n  }\n\n  ${props =>\n    props.active &&\n    `\n    background: ${theme.colors.primary}10;\n    border-right: 3px solid ${theme.colors.primary};\n  `}\n\n  ${media.mobile} {\n    padding: ${theme.spacing.sm} ${theme.spacing.lg};\n    gap: ${theme.spacing.sm};\n    font-size: 0.8125rem;\n  }\n`;\n\nconst NavLink = styled(Link).withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  color: ${props =>\n    props.active ? theme.colors.primary : theme.colors.gray700};\n  text-decoration: none;\n  font-weight: 500;\n  transition: all 0.2s ease;\n  position: relative;\n  font-size: 0.875rem;\n\n  &:hover {\n    color: ${theme.colors.primary};\n    background: ${theme.colors.gray50};\n  }\n\n  ${props =>\n    props.active &&\n    `\n    background: ${theme.colors.primary}10;\n    border-right: 3px solid ${theme.colors.primary};\n  `}\n\n  ${media.mobile} {\n    padding: ${theme.spacing.sm} ${theme.spacing.lg};\n    gap: ${theme.spacing.sm};\n    font-size: 0.8125rem;\n  }\n`;\n\nconst NavIcon = styled.div`\n  width: 1.25rem;\n  height: 1.25rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  ${media.mobile} {\n    width: 1rem;\n    height: 1rem;\n  }\n\n  svg {\n    font-size: 1rem;\n\n    ${media.mobile} {\n      font-size: 0.875rem;\n    }\n  }\n`;\n\nconst ChangesPanel = styled.div`\n  border-top: 1px solid ${theme.colors.gray200};\n  padding: ${theme.spacing.lg};\n  background: ${theme.colors.gray50};\n  margin-top: auto;\n`;\n\nconst ChangesPanelHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.md};\n  font-weight: 600;\n  font-size: 0.875rem;\n  color: ${theme.colors.gray900};\n`;\n\nconst ChangesStatus = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'hasChanges',\n})`\n  font-size: 0.8rem;\n  color: ${props => props.hasChanges ? theme.colors.warning : theme.colors.success};\n  margin-bottom: ${theme.spacing.md};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst ChangesList = styled.div`\n  max-height: 120px;\n  overflow-y: auto;\n  margin-bottom: ${theme.spacing.md};\n  font-size: 0.75rem;\n`;\n\nconst ChangeItem = styled.div`\n  padding: ${theme.spacing.xs} 0;\n  color: ${theme.colors.gray600};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  \n  &:last-child {\n    border-bottom: none;\n  }\n\n  .field {\n    font-weight: 600;\n    color: ${theme.colors.gray700};\n  }\n`;\n\nconst ActionsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n`;\n\nconst MobileToggle = styled.button`\n  position: fixed;\n  top: ${theme.spacing.lg};\n  left: ${theme.spacing.lg};\n  z-index: 30;\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.md};\n  padding: ${theme.spacing.sm};\n  color: ${theme.colors.gray700};\n  cursor: pointer;\n  box-shadow: ${theme.shadows.md};\n  display: none;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray50};\n    color: ${theme.colors.primary};\n  }\n\n  &:active {\n    background: ${theme.colors.gray100};\n  }\n\n  ${media.tabletDown} {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  ${media.mobile} {\n    top: ${theme.spacing.md};\n    left: ${theme.spacing.md};\n    padding: ${theme.spacing.xs};\n  }\n\n  svg {\n    font-size: 1rem;\n\n    ${media.mobile} {\n      font-size: 0.875rem;\n    }\n  }\n`;\n\nconst Overlay = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 15;\n  display: none;\n  opacity: ${props => (props.isOpen ? '1' : '0')};\n  visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n  transition: all 0.3s ease;\n\n  ${media.tabletDown} {\n    display: block;\n  }\n`;\n\nconst EnhancedSidebar = ({ activeSection, setActiveSection }) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const { editingHotel, hasUnsavedChanges, changes } = useSelector(\n    state => state.hotelManagement\n  );\n\n  // Extract hotel slug from URL path like \"/taj-palace/owner\"\n  const hotelSlug = useMemo(() => {\n    const pathSegments = location.pathname.split('/').filter(Boolean);\n    return pathSegments.length > 0 ? pathSegments[0] : '';\n  }, [location.pathname]);\n\n  const isActive = sectionKey => activeSection === sectionKey;\n\n  const navigationItems = useMemo(\n    () => [\n      {\n        section: 'Dashboard',\n        items: [\n          {\n            key: 'dashboard',\n            icon: FaHome,\n            label: 'Dashboard Home',\n            action: () => setActiveSection('dashboard'),\n          },\n        ],\n      },\n      {\n        section: 'Hotel Management',\n        items: [\n          {\n            key: 'my-hotels',\n            icon: FaHotel,\n            label: 'Manage Hotel Content',\n            action: () => setActiveSection('my-hotels'),\n          },\n        ],\n      },\n      {\n        section: 'Room Management',\n        items: [\n          {\n            key: 'add-room',\n            icon: FaBed,\n            label: 'Add Room',\n            action: () => setActiveSection('add-room'),\n          },\n          {\n            key: 'all-rooms',\n            icon: FaHotel,\n            label: 'All Rooms',\n            action: () => setActiveSection('all-rooms'),\n          },\n        ],\n      },\n      {\n        section: 'Bookings',\n        items: [\n          {\n            key: 'bookings',\n            icon: FaCalendarCheck,\n            label: 'Bookings Received',\n            action: () => setActiveSection('bookings'),\n          },\n        ],\n      },\n      {\n        section: 'Account',\n        items: [\n          {\n            key: 'profile',\n            icon: FaUser,\n            label: 'Profile Settings',\n            action: () => setActiveSection('profile'),\n          },\n        ],\n      },\n    ],\n    [setActiveSection]\n  );\n\n  const toggleSidebar = () => setIsOpen(!isOpen);\n  const closeSidebar = () => setIsOpen(false);\n\n  const handleNavClick = action => {\n    if (hasUnsavedChanges) {\n      if (window.confirm('You have unsaved changes. Discard them?')) {\n        dispatch(discardChanges());\n        action();\n        closeSidebar();\n      }\n    } else {\n      action();\n      closeSidebar();\n    }\n  };\n\n  const handleSaveAndExit = () => {\n    if (hasUnsavedChanges) {\n      dispatch(saveChanges());\n      alert('Changes saved successfully!');\n    }\n    if (editingHotel && hotelSlug) {\n      // Navigate to the hotel detail page with updated data\n      navigate(`/${editingHotel.slug || hotelSlug}`);\n    }\n  };\n\n  const handleSaveChanges = () => {\n    dispatch(saveChanges());\n    alert('Changes saved successfully!');\n  };\n\n  const handleDiscardChanges = () => {\n    if (window.confirm('Are you sure you want to discard all changes?')) {\n      dispatch(discardChanges());\n    }\n  };\n\n  const handlePreviewChanges = () => {\n    if (editingHotel) {\n      // Open hotel detail page in new tab to preview changes\n      window.open(`/${editingHotel.slug || hotelSlug}`, '_blank');\n    }\n  };\n\n  const renderChangesList = () => {\n    return Object.entries(changes).map(([field, change]) => (\n      <ChangeItem key={field}>\n        <span className=\"field\">{field}:</span>\n        <div style={{ fontSize: '0.7rem', color: theme.colors.gray500, marginTop: '2px' }}>\n          {typeof change.new === 'string' && change.new.length > 30\n            ? `${change.new.substring(0, 30)}...`\n            : String(change.new)}\n        </div>\n      </ChangeItem>\n    ));\n  };\n\n  return (\n    <>\n      <MobileToggle onClick={toggleSidebar}>\n        {isOpen ? <FaTimes /> : <FaBars />}\n      </MobileToggle>\n\n      <Overlay isOpen={isOpen} onClick={closeSidebar} />\n\n      <SidebarContainer isOpen={isOpen}>\n        <SidebarHeader>\n          <Logo>\n            <FaHotel />\n            StayEase Admin\n          </Logo>\n        </SidebarHeader>\n\n        <SidebarNav>\n          {navigationItems.map(section => (\n            <NavSection key={section.section}>\n              <SectionTitle>{section.section}</SectionTitle>\n              {section.items.map(item => (\n                <NavItem\n                  key={item.key}\n                  active={isActive(item.key)}\n                  onClick={() => handleNavClick(item.action)}\n                >\n                  <NavIcon>\n                    <item.icon />\n                  </NavIcon>\n                  {item.label}\n                </NavItem>\n              ))}\n            </NavSection>\n          ))}\n\n          <NavSection>\n            <NavLink to={`/${hotelSlug}`} onClick={closeSidebar}>\n              <NavIcon>\n                <FaSignOutAlt />\n              </NavIcon>\n              Back to Customer View\n            </NavLink>\n          </NavSection>\n        </SidebarNav>\n\n        {(editingHotel || hasUnsavedChanges) && (\n          <ChangesPanel>\n            <ChangesPanelHeader>\n              <FaSave />\n              Changes Tracker\n            </ChangesPanelHeader>\n            \n            <ChangesStatus hasChanges={hasUnsavedChanges}>\n              {hasUnsavedChanges ? (\n                <>\n                  <FaExclamationTriangle />\n                  {Object.keys(changes).length} unsaved changes\n                </>\n              ) : (\n                <>\n                  <FaCheckCircle />\n                  All changes saved\n                </>\n              )}\n            </ChangesStatus>\n\n            {hasUnsavedChanges && Object.keys(changes).length > 0 && (\n              <ChangesList>\n                {renderChangesList()}\n              </ChangesList>\n            )}\n\n            <ActionsContainer>\n              {hasUnsavedChanges && (\n                <>\n                  <Button\n                    size=\"small\"\n                    onClick={handleSaveChanges}\n                    style={{ width: '100%' }}\n                  >\n                    <FaSave /> Save Changes\n                  </Button>\n                  <Button\n                    variant=\"secondary\"\n                    size=\"small\"\n                    onClick={handleDiscardChanges}\n                    style={{ width: '100%' }}\n                  >\n                    <FaUndo /> Discard Changes\n                  </Button>\n                </>\n              )}\n\n              {editingHotel && (\n                <Button\n                  variant=\"primary\"\n                  size=\"small\"\n                  onClick={handleSaveAndExit}\n                  style={{ width: '100%' }}\n                  disabled={hasUnsavedChanges}\n                >\n                  <FaCheckCircle /> Save & Go Live\n                </Button>\n              )}\n            </ActionsContainer>\n          </ChangesPanel>\n        )}\n      </SidebarContainer>\n    </>\n  );\n};\n\nexport default EnhancedSidebar;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/owner/MyHotelsPage.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":118,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":118,"endColumn":70}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaPlus, FaEdit, FaTrash, FaBed, FaEye } from 'react-icons/fa';\nimport Sidebar from './Sidebar';\nimport {\n  Card,\n  CardImage,\n  CardContent,\n  CardTitle,\n  CardSubtitle,\n  Badge,\n  CardActions,\n} from '../shared/Card';\nimport { Button } from '../shared/Button';\nimport { theme } from '../../styles/GlobalStyle';\nimport { useAppContext } from '../../context/AppContext';\n\nconst PageContainer = styled.div`\n  display: flex;\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n`;\n\nconst MainContent = styled.main`\n  flex: 1;\n  margin-left: 280px;\n  padding: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    margin-left: 0;\n    padding: ${theme.spacing.xl} ${theme.spacing.md};\n    padding-top: 80px;\n  }\n`;\n\nconst PageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.lg};\n    align-items: stretch;\n  }\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n`;\n\nconst HotelsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  gap: ${theme.spacing.xl};\n`;\n\nconst HotelCard = styled(Card)``;\n\nconst HotelInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst HotelDetails = styled.div`\n  flex: 1;\n`;\n\nconst HotelStats = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.lg};\n  font-size: 0.875rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst StatItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n`;\n\nconst EmptyIcon = styled.div`\n  font-size: 4rem;\n  margin-bottom: ${theme.spacing.lg};\n  opacity: 0.5;\n`;\n\nconst EmptyTitle = styled.h3`\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.md};\n  color: ${theme.colors.gray700};\n`;\n\nconst EmptyMessage = styled.p`\n  font-size: 1.125rem;\n  line-height: 1.6;\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst MyHotelsPage = () => {\n  const { ownerHotels, setOwnerHotels } = useAppContext();\n\n  const handleDeleteHotel = hotelId => {\n    if (window.confirm('Are you sure you want to delete this hotel?')) {\n      setOwnerHotels(prev => prev.filter(hotel => hotel.id !== hotelId));\n    }\n  };\n\n  if (ownerHotels.length === 0) {\n    return (\n      <PageContainer>\n        <Sidebar />\n        <MainContent>\n          <PageHeader>\n            <PageTitle>My Hotels</PageTitle>\n            <Button as={Link} to=\"/owner/add-hotel\" size=\"large\">\n              <FaPlus />\n              Add New Hotel\n            </Button>\n          </PageHeader>\n\n          <Card>\n            <EmptyState>\n              <EmptyIcon>🏨</EmptyIcon>\n              <EmptyTitle>No Hotels Added Yet</EmptyTitle>\n              <EmptyMessage>\n                Start by adding your first hotel property. You can add rooms and\n                manage bookings once your hotel is created.\n              </EmptyMessage>\n              <Button as={Link} to=\"/owner/add-hotel\" size=\"large\">\n                <FaPlus />\n                Add Your First Hotel\n              </Button>\n            </EmptyState>\n          </Card>\n        </MainContent>\n      </PageContainer>\n    );\n  }\n\n  return (\n    <PageContainer>\n      <Sidebar />\n\n      <MainContent>\n        <PageHeader>\n          <PageTitle>My Hotels</PageTitle>\n          <Button as={Link} to=\"/owner/add-hotel\" size=\"large\">\n            <FaPlus />\n            Add New Hotel\n          </Button>\n        </PageHeader>\n\n        <HotelsGrid>\n          {ownerHotels.map(hotel => (\n            <HotelCard key={hotel.id}>\n              <CardImage src={hotel.image} height=\"200px\" />\n              <CardContent>\n                <HotelInfo>\n                  <HotelDetails>\n                    <CardTitle>{hotel.name}</CardTitle>\n                    <CardSubtitle>{hotel.location}</CardSubtitle>\n                  </HotelDetails>\n                  <Badge\n                    variant={hotel.status === 'active' ? 'success' : 'warning'}\n                  >\n                    {hotel.status}\n                  </Badge>\n                </HotelInfo>\n\n                <HotelStats>\n                  <StatItem>\n                    <FaBed />\n                    {hotel.totalRooms} rooms\n                  </StatItem>\n                  <StatItem>\n                    <FaEye />\n                    {hotel.totalBookings} bookings\n                  </StatItem>\n                </HotelStats>\n\n                <CardActions>\n                  <Button\n                    as={Link}\n                    to={`/owner/add-room/${hotel.id}`}\n                    variant=\"secondary\"\n                    size=\"small\"\n                  >\n                    <FaBed />\n                    Manage Rooms\n                  </Button>\n                  <Button variant=\"outline\" size=\"small\">\n                    <FaEdit />\n                    Edit\n                  </Button>\n                  <Button\n                    variant=\"danger\"\n                    size=\"small\"\n                    onClick={() => handleDeleteHotel(hotel.id)}\n                  >\n                    <FaTrash />\n                  </Button>\n                </CardActions>\n              </CardContent>\n            </HotelCard>\n          ))}\n        </HotelsGrid>\n      </MainContent>\n    </PageContainer>\n  );\n};\n\nexport default MyHotelsPage;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/owner/MyHotelsPageContent.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Link' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":99,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":99,"endColumn":70}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaPlus, FaEdit, FaTrash, FaBed, FaEye } from 'react-icons/fa';\nimport {\n  Card,\n  CardImage,\n  CardContent,\n  CardTitle,\n  CardSubtitle,\n  Badge,\n  CardActions,\n} from '../shared/Card';\nimport { Button } from '../shared/Button';\nimport { theme } from '../../styles/GlobalStyle';\nimport { useAppContext } from '../../context/AppContext';\n\nconst PageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.lg};\n    align-items: stretch;\n  }\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n`;\n\nconst HotelsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  gap: ${theme.spacing.xl};\n`;\n\nconst HotelCard = styled(Card)``;\n\nconst HotelInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst HotelDetails = styled.div`\n  flex: 1;\n`;\n\nconst HotelStats = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.lg};\n  font-size: 0.875rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst StatItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n`;\n\nconst EmptyIcon = styled.div`\n  font-size: 4rem;\n  margin-bottom: ${theme.spacing.lg};\n  opacity: 0.5;\n`;\n\nconst EmptyTitle = styled.h3`\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.md};\n  color: ${theme.colors.gray700};\n`;\n\nconst EmptyMessage = styled.p`\n  font-size: 1.125rem;\n  line-height: 1.6;\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst MyHotelsPageContent = ({ setActiveSection }) => {\n  const { ownerHotels, setOwnerHotels } = useAppContext();\n\n  const handleDeleteHotel = hotelId => {\n    if (window.confirm('Are you sure you want to delete this hotel?')) {\n      setOwnerHotels(prev => prev.filter(hotel => hotel.id !== hotelId));\n    }\n  };\n\n  if (ownerHotels.length === 0) {\n    return (\n      <>\n        <PageHeader>\n          <PageTitle>My Hotels</PageTitle>\n          <Button onClick={() => setActiveSection('add-hotel')} size=\"large\">\n            <FaPlus />\n            Add New Hotel\n          </Button>\n        </PageHeader>\n\n        <Card>\n          <EmptyState>\n            <EmptyIcon>🏨</EmptyIcon>\n            <EmptyTitle>No Hotels Added Yet</EmptyTitle>\n            <EmptyMessage>\n              Start by adding your first hotel property. You can add rooms and\n              manage bookings once your hotel is created.\n            </EmptyMessage>\n            <Button onClick={() => setActiveSection('add-hotel')} size=\"large\">\n              <FaPlus />\n              Add Your First Hotel\n            </Button>\n          </EmptyState>\n        </Card>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <PageHeader>\n        <PageTitle>My Hotels</PageTitle>\n        <Button onClick={() => setActiveSection('add-hotel')} size=\"large\">\n          <FaPlus />\n          Add New Hotel\n        </Button>\n      </PageHeader>\n\n      <HotelsGrid>\n        {ownerHotels.map(hotel => (\n          <HotelCard key={hotel.id}>\n            <CardImage src={hotel.image} height=\"200px\" />\n            <CardContent>\n              <HotelInfo>\n                <HotelDetails>\n                  <CardTitle>{hotel.name}</CardTitle>\n                  <CardSubtitle>{hotel.location}</CardSubtitle>\n                </HotelDetails>\n                <Badge\n                  variant={hotel.status === 'active' ? 'success' : 'warning'}\n                >\n                  {hotel.status}\n                </Badge>\n              </HotelInfo>\n\n              <HotelStats>\n                <StatItem>\n                  <FaBed />\n                  {hotel.totalRooms} rooms\n                </StatItem>\n                <StatItem>\n                  <FaEye />\n                  {hotel.totalBookings} bookings\n                </StatItem>\n              </HotelStats>\n\n              <CardActions>\n                <Button\n                  onClick={() => setActiveSection('add-room')}\n                  variant=\"secondary\"\n                  size=\"small\"\n                >\n                  <FaBed />\n                  Manage Rooms\n                </Button>\n                <Button variant=\"outline\" size=\"small\">\n                  <FaEdit />\n                  Edit\n                </Button>\n                <Button\n                  variant=\"danger\"\n                  size=\"small\"\n                  onClick={() => handleDeleteHotel(hotel.id)}\n                >\n                  <FaTrash />\n                </Button>\n              </CardActions>\n            </CardContent>\n          </HotelCard>\n        ))}\n      </HotelsGrid>\n    </>\n  );\n};\n\nexport default MyHotelsPageContent;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/owner/OwnerDashboard.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Link' is defined but never used.","line":11,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'AddRoomPageContent' is defined but never used.","line":15,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":15,"endColumn":26}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaHotel,\n  FaBed,\n  FaCalendarCheck,\n  FaEye,\n  FaPlus,\n  FaEdit,\n} from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport EnhancedSidebar from './EnhancedSidebar';\nimport AddHotelPageContent from './AddHotelPageContent';\nimport SectionBasedHotelEditor from './SectionBasedHotelEditor';\nimport AddRoomPageContent from './AddRoomPageContent';\nimport AddRoomManager from './AddRoomManager';\nimport AllRoomsManager from './AllRoomsManager';\nimport BookingsReceivedPageContent from './BookingsReceivedPageContent';\nimport ProfileSettingsPageContent from './ProfileSettingsPageContent';\nimport { Card, CardContent, Badge } from '../shared/Card';\nimport { Button } from '../shared/Button';\nimport { theme, media } from '../../styles/GlobalStyle';\nimport { useAppContext } from '../../context/AppContext';\n\nconst DashboardContainer = styled.div`\n  display: flex;\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n`;\n\nconst MainContent = styled.main`\n  flex: 1;\n  margin-left: 17.5rem;\n  padding: ${theme.spacing.xxl};\n\n  ${media.tabletDown} {\n    margin-left: 0;\n    padding: ${theme.spacing.xl} ${theme.spacing.md};\n    padding-top: 5rem;\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.lg} ${theme.spacing.sm};\n    padding-top: 4rem;\n    background: ${theme.colors.gray50};\n  }\n\n  ${media.desktop} {\n    padding: ${theme.spacing.xxl} ${theme.spacing.xl};\n  }\n`;\n\nconst DashboardHeader = styled.div`\n  margin-bottom: ${theme.spacing.xxl};\n\n  ${media.mobile} {\n    margin-bottom: ${theme.spacing.xl};\n    text-align: center;\n  }\n\n  ${media.tablet} {\n    margin-bottom: ${theme.spacing.xxl};\n  }\n`;\n\nconst WelcomeTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.sm};\n  color: ${theme.colors.gray900};\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary},\n    ${theme.colors.primaryDark}\n  );\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  line-height: 1.2;\n\n  ${media.mobile} {\n    font-size: 2rem;\n    text-align: center;\n    color: ${theme.colors.gray900};\n    background: none;\n    -webkit-text-fill-color: unset;\n  }\n\n  ${media.tablet} {\n    font-size: 2.125rem;\n  }\n`;\n\nconst WelcomeSubtitle = styled.p`\n  font-size: 1.125rem;\n  color: ${theme.colors.gray600};\n  line-height: 1.6;\n\n  ${media.mobile} {\n    font-size: 1.1rem;\n    text-align: center;\n    padding: 0 ${theme.spacing.sm};\n  }\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(15.625rem, 1fr));\n  gap: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xxl};\n\n  ${media.mobile} {\n    grid-template-columns: repeat(2, 1fr);\n    gap: ${theme.spacing.md};\n    margin-bottom: ${theme.spacing.xl};\n  }\n\n  ${media.tablet} {\n    grid-template-columns: repeat(2, 1fr);\n    gap: ${theme.spacing.lg};\n  }\n\n  ${media.desktop} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`;\n\nconst StatCard = styled(Card)`\n  background: ${props => props.color || theme.colors.white};\n  color: ${props => props.textColor || theme.colors.gray900};\n  border: 2px solid transparent;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: ${theme.shadows.xl};\n    border-color: ${theme.colors.primary};\n  }\n\n  ${media.mobile} {\n    &:hover {\n      transform: translateY(-2px);\n    }\n  }\n`;\n\nconst StatIcon = styled.div.withConfig({\n  shouldForwardProp: prop => !['iconBg', 'iconColor'].includes(prop),\n})`\n  width: 3.75rem;\n  height: 3.75rem;\n  border-radius: ${theme.borderRadius.lg};\n  background: ${props => props.iconBg || theme.colors.primary}20;\n  color: ${props => props.iconColor || theme.colors.primary};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  margin-bottom: ${theme.spacing.md};\n  flex-shrink: 0;\n  transition: all 0.3s ease;\n\n  ${media.mobile} {\n    width: 2.5rem;\n    height: 2.5rem;\n    font-size: 1rem;\n    margin: 0 auto ${theme.spacing.sm};\n    border-radius: ${theme.borderRadius.md};\n  }\n\n  ${media.tablet} {\n    width: 3.5rem;\n    height: 3.5rem;\n    font-size: 1.375rem;\n  }\n`;\n\nconst StatValue = styled.div`\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.xs};\n  line-height: 1;\n\n  ${media.mobile} {\n    font-size: 1.75rem;\n    text-align: center;\n    color: ${theme.colors.primary};\n  }\n\n  ${media.tablet} {\n    font-size: 2.25rem;\n  }\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.875rem;\n  opacity: 0.8;\n  line-height: 1.3;\n  font-weight: 500;\n\n  ${media.mobile} {\n    font-size: 0.85rem;\n    text-align: center;\n    font-weight: 600;\n    opacity: 0.9;\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.75rem;\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.xl};\n  color: ${theme.colors.gray900};\n\n  ${media.mobile} {\n    font-size: 1.5rem;\n    font-weight: 700;\n    text-align: center;\n    margin-bottom: ${theme.spacing.lg};\n    padding: 0 ${theme.spacing.sm};\n  }\n`;\n\nconst QuickActionsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xxl};\n\n  ${media.mobile} {\n    grid-template-columns: repeat(2, 1fr);\n    gap: ${theme.spacing.md};\n    margin-bottom: ${theme.spacing.xl};\n  }\n\n  ${media.tablet} {\n    grid-template-columns: repeat(2, 1fr);\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst ActionCard = styled(Card)`\n  text-align: center;\n  cursor: pointer;\n  border: 2px solid transparent;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: ${theme.shadows.xl};\n    border-color: ${theme.colors.primary};\n  }\n\n  ${media.mobile} {\n    &:hover {\n      transform: translateY(-2px);\n    }\n  }\n`;\n\nconst ActionIcon = styled.div`\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  background: ${theme.colors.primary}20;\n  color: ${theme.colors.primary};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 2rem;\n  margin: 0 auto ${theme.spacing.lg};\n  transition: all 0.3s ease;\n\n  ${media.mobile} {\n    width: 50px;\n    height: 50px;\n    font-size: 1.3rem;\n    margin: 0 auto ${theme.spacing.md};\n  }\n`;\n\nconst ActionTitle = styled.h3`\n  font-size: 1.25rem;\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.sm};\n  color: ${theme.colors.gray900};\n  line-height: 1.3;\n\n  ${media.mobile} {\n    font-size: 1rem;\n    font-weight: 700;\n    margin-bottom: ${theme.spacing.xs};\n  }\n`;\n\nconst ActionDescription = styled.p`\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.lg};\n  line-height: 1.5;\n\n  ${media.mobile} {\n    font-size: 0.85rem;\n    margin-bottom: ${theme.spacing.md};\n    display: none;\n  }\n`;\n\nconst RecentBookingsSection = styled.section`\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst BookingsTable = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  overflow: hidden;\n  box-shadow: ${theme.shadows.md};\n\n  ${media.mobile} {\n    margin: 0 -${theme.spacing.xs};\n    border-radius: ${theme.borderRadius.md};\n  }\n`;\n\nconst TableHeader = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr 1fr 1fr auto;\n  padding: ${theme.spacing.lg};\n  background: ${theme.colors.gray50};\n  font-weight: 600;\n  color: ${theme.colors.gray700};\n  border-bottom: 1px solid ${theme.colors.gray200};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    display: none;\n  }\n`;\n\nconst TableRow = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr 1fr 1fr auto;\n  padding: ${theme.spacing.lg};\n  border-bottom: 1px solid ${theme.colors.gray100};\n  align-items: center;\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.sm};\n    padding: ${theme.spacing.lg};\n    background: ${theme.colors.white};\n    border-radius: ${theme.borderRadius.md};\n    margin-bottom: ${theme.spacing.sm};\n    box-shadow: ${theme.shadows.sm};\n  }\n`;\n\nconst BookingInfo = styled.div`\n  ${media.mobile} {\n    text-align: center;\n    margin-bottom: ${theme.spacing.sm};\n  }\n`;\n\nconst GuestName = styled.div`\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.xs};\n  color: ${theme.colors.gray900};\n\n  ${media.mobile} {\n    font-size: 1.1rem;\n    margin-bottom: ${theme.spacing.sm};\n  }\n`;\n\nconst HotelRoom = styled.div`\n  font-size: 0.875rem;\n  color: ${theme.colors.gray600};\n\n  ${media.mobile} {\n    font-size: 1rem;\n  }\n`;\n\nconst MobileBookingDetails = styled.div`\n  display: none;\n\n  ${media.mobile} {\n    display: flex;\n    justify-content: space-around;\n    padding: ${theme.spacing.sm} 0;\n    border-top: 1px solid ${theme.colors.gray100};\n    margin-top: ${theme.spacing.sm};\n    font-size: 0.9rem;\n\n    .detail {\n      text-align: center;\n\n      .label {\n        color: ${theme.colors.gray500};\n        font-size: 0.8rem;\n        margin-bottom: 2px;\n      }\n\n      .value {\n        font-weight: 600;\n        color: ${theme.colors.gray900};\n      }\n    }\n  }\n`;\n\nconst PageContent = styled.div`\n  width: 100%;\n`;\n\nconst OwnerDashboard = () => {\n  const { ownerHotels, bookings } = useAppContext();\n  const [activeSection, setActiveSection] = useState('dashboard');\n\n  const ownerBookings = bookings.filter(booking =>\n    ownerHotels.some(hotel => hotel.id === booking.hotelId)\n  );\n\n  const stats = {\n    totalHotels: ownerHotels.length,\n    totalRooms: ownerHotels.reduce((sum, hotel) => sum + hotel.totalRooms, 0),\n    totalBookings: ownerBookings.length,\n    pendingBookings: ownerBookings.filter(b => b.status === 'pending').length,\n  };\n\n  const recentBookings = ownerBookings.slice(0, 5);\n\n  const quickActions = [\n    {\n      title: 'Add New Hotel',\n      description: 'Register a new hotel property with rooms and amenities',\n      icon: FaHotel,\n      action: () => setActiveSection('add-hotel'),\n    },\n    {\n      title: 'Edit Hotel Details',\n      description:\n        'Edit your hotel page content exactly as it appears to customers',\n      icon: FaEdit,\n      action: () => setActiveSection('my-hotels'),\n    },\n    {\n      title: 'Add Rooms',\n      description: 'Add new rooms to your existing hotel properties',\n      icon: FaBed,\n      action: () => setActiveSection('my-hotels'),\n    },\n    {\n      title: 'Manage Bookings',\n      description: 'Review and manage all incoming booking requests',\n      icon: FaCalendarCheck,\n      action: () => setActiveSection('bookings'),\n    },\n  ];\n\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-IN', {\n      month: 'short',\n      day: 'numeric',\n    });\n  };\n\n  const getStatusVariant = status => {\n    switch (status) {\n      case 'confirmed':\n        return 'success';\n      case 'pending':\n        return 'warning';\n      case 'cancelled':\n        return 'error';\n      case 'rejected':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n\n  const renderContent = () => {\n    switch (activeSection) {\n      case 'add-hotel':\n        return (\n          <PageContent>\n            <AddHotelPageContent />\n          </PageContent>\n        );\n      case 'my-hotels':\n        return (\n          <SectionBasedHotelEditor setActiveSection={setActiveSection} />\n        );\n      case 'add-room':\n        return (\n          <AddRoomManager setActiveSection={setActiveSection} />\n        );\n      case 'all-rooms':\n        return (\n          <AllRoomsManager setActiveSection={setActiveSection} />\n        );\n      case 'bookings':\n        return (\n          <PageContent>\n            <BookingsReceivedPageContent />\n          </PageContent>\n        );\n      case 'profile':\n        return (\n          <PageContent>\n            <ProfileSettingsPageContent />\n          </PageContent>\n        );\n      default:\n        return (\n          <>\n            <DashboardHeader>\n              <WelcomeTitle>Welcome Back!</WelcomeTitle>\n              <WelcomeSubtitle>\n                Here's what's happening with your hotels today\n              </WelcomeSubtitle>\n            </DashboardHeader>\n\n            <StatsGrid>\n              <StatCard>\n                <CardContent>\n                  <StatIcon\n                    iconBg={`${theme.colors.primary}20`}\n                    iconColor={theme.colors.primary}\n                  >\n                    <FaHotel />\n                  </StatIcon>\n                  <StatValue>{stats.totalHotels}</StatValue>\n                  <StatLabel>Total Hotels</StatLabel>\n                </CardContent>\n              </StatCard>\n\n              <StatCard>\n                <CardContent>\n                  <StatIcon\n                    iconBg={`${theme.colors.success}20`}\n                    iconColor={theme.colors.success}\n                  >\n                    <FaBed />\n                  </StatIcon>\n                  <StatValue>{stats.totalRooms}</StatValue>\n                  <StatLabel>Total Rooms</StatLabel>\n                </CardContent>\n              </StatCard>\n\n              <StatCard>\n                <CardContent>\n                  <StatIcon\n                    iconBg={`${theme.colors.accent}20`}\n                    iconColor={theme.colors.accent}\n                  >\n                    <FaCalendarCheck />\n                  </StatIcon>\n                  <StatValue>{stats.totalBookings}</StatValue>\n                  <StatLabel>Total Bookings</StatLabel>\n                </CardContent>\n              </StatCard>\n\n              <StatCard>\n                <CardContent>\n                  <StatIcon\n                    iconBg={`${theme.colors.warning}20`}\n                    iconColor={theme.colors.warning}\n                  >\n                    <FaEye />\n                  </StatIcon>\n                  <StatValue>{stats.pendingBookings}</StatValue>\n                  <StatLabel>Pending Bookings</StatLabel>\n                </CardContent>\n              </StatCard>\n            </StatsGrid>\n\n            <SectionTitle>Quick Actions</SectionTitle>\n            <QuickActionsGrid>\n              {quickActions.map(action => (\n                <ActionCard key={action.title} onClick={action.action}>\n                  <CardContent>\n                    <ActionIcon>\n                      <action.icon />\n                    </ActionIcon>\n                    <ActionTitle>{action.title}</ActionTitle>\n                    <ActionDescription>{action.description}</ActionDescription>\n                    <Button variant=\"secondary\">\n                      <FaPlus />\n                      Get Started\n                    </Button>\n                  </CardContent>\n                </ActionCard>\n              ))}\n            </QuickActionsGrid>\n\n            <RecentBookingsSection>\n              <SectionTitle>Recent Bookings</SectionTitle>\n              <BookingsTable>\n                <TableHeader>\n                  <div>Guest & Hotel</div>\n                  <div>Check-in</div>\n                  <div>Check-out</div>\n                  <div>Status</div>\n                  <div>Actions</div>\n                </TableHeader>\n\n                {recentBookings.length > 0 ? (\n                  recentBookings.map(booking => (\n                    <TableRow key={booking.id}>\n                      <BookingInfo>\n                        <GuestName>{booking.guestName}</GuestName>\n                        <HotelRoom>\n                          {booking.hotelName} - {booking.roomName}\n                        </HotelRoom>\n                      </BookingInfo>\n                      <div className=\"desktop-only\">\n                        {formatDate(booking.checkIn)}\n                      </div>\n                      <div className=\"desktop-only\">\n                        {formatDate(booking.checkOut)}\n                      </div>\n                      <div className=\"desktop-only\">\n                        <Badge variant={getStatusVariant(booking.status)}>\n                          {booking.status.charAt(0).toUpperCase() +\n                            booking.status.slice(1)}\n                        </Badge>\n                      </div>\n                      <div className=\"desktop-only\">\n                        <Button variant=\"outline\" size=\"small\">\n                          <FaEye />\n                          View\n                        </Button>\n                      </div>\n\n                      <MobileBookingDetails>\n                        <div className=\"detail\">\n                          <div className=\"label\">Check-in</div>\n                          <div className=\"value\">\n                            {formatDate(booking.checkIn)}\n                          </div>\n                        </div>\n                        <div className=\"detail\">\n                          <div className=\"label\">Check-out</div>\n                          <div className=\"value\">\n                            {formatDate(booking.checkOut)}\n                          </div>\n                        </div>\n                        <div className=\"detail\">\n                          <div className=\"label\">Status</div>\n                          <div className=\"value\">\n                            <Badge variant={getStatusVariant(booking.status)}>\n                              {booking.status.charAt(0).toUpperCase() +\n                                booking.status.slice(1)}\n                            </Badge>\n                          </div>\n                        </div>\n                      </MobileBookingDetails>\n                    </TableRow>\n                  ))\n                ) : (\n                  <TableRow>\n                    <div\n                      style={{\n                        gridColumn: '1 / -1',\n                        textAlign: 'center',\n                        color: theme.colors.gray600,\n                        padding: theme.spacing.xxl,\n                      }}\n                    >\n                      No bookings yet. Start by adding your first hotel!\n                    </div>\n                  </TableRow>\n                )}\n              </BookingsTable>\n            </RecentBookingsSection>\n          </>\n        );\n    }\n  };\n\n  return (\n    <DashboardContainer>\n      <EnhancedSidebar\n        activeSection={activeSection}\n        setActiveSection={setActiveSection}\n      />\n      <MainContent>{renderContent()}</MainContent>\n    </DashboardContainer>\n  );\n};\n\nexport default OwnerDashboard;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/owner/ProfileSettingsPage.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":130,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":130,"endColumn":45},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":132,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":132,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[3188,3236],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":133,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":133,"endColumn":57},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":143,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":143,"endColumn":43},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":153,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":153,"endColumn":46},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":160,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":160,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[3873,3922],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":161,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":161,"endColumn":58},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":168,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":168,"endColumn":59}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaUser, FaLock, FaSave, FaSignOutAlt } from 'react-icons/fa';\nimport Sidebar from './Sidebar';\nimport { Card, CardContent } from '../shared/Card';\nimport { Button } from '../shared/Button';\nimport { Input, FormGroup, Label, InputGroup } from '../shared/Input';\nimport { theme } from '../../styles/GlobalStyle';\nimport { useAppContext } from '../../context/AppContext';\n\nconst PageContainer = styled.div`\n  display: flex;\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n`;\n\nconst MainContent = styled.main`\n  flex: 1;\n  margin-left: 280px;\n  padding: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    margin-left: 0;\n    padding: ${theme.spacing.xl} ${theme.spacing.md};\n    padding-top: 80px;\n  }\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.xxl};\n  color: ${theme.colors.gray900};\n`;\n\nconst SettingsGrid = styled.div`\n  display: grid;\n  gap: ${theme.spacing.xl};\n  max-width: 800px;\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.lg};\n  color: ${theme.colors.gray900};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst ProfileForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.lg};\n`;\n\nconst FormActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  justify-content: flex-end;\n  padding-top: ${theme.spacing.lg};\n  border-top: 1px solid ${theme.colors.gray200};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n  }\n`;\n\nconst LogoutSection = styled.div`\n  padding: ${theme.spacing.lg};\n  text-align: center;\n  border-top: 1px solid ${theme.colors.gray200};\n`;\n\nconst LogoutText = styled.p`\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst ProfileSettingsPage = () => {\n  const navigate = useNavigate();\n  const { user, setUser, setUserType } = useAppContext();\n\n  const [profileData, setProfileData] = useState({\n    name: user?.name || 'Hotel Owner',\n    email: user?.email || 'owner@example.com',\n    phone: '+91 9876543210',\n    licenseNumber: 'HL123456789',\n  });\n\n  const [passwordData, setPasswordData] = useState({\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: '',\n  });\n\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  const handleProfileChange = e => {\n    setProfileData({\n      ...profileData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handlePasswordChange = e => {\n    setPasswordData({\n      ...passwordData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleProfileSubmit = async e => {\n    e.preventDefault();\n    setIsUpdating(true);\n\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Update user context\n      setUser(prev => ({\n        ...prev,\n        name: profileData.name,\n        email: profileData.email,\n      }));\n\n      alert('Profile updated successfully!');\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      alert('Error updating profile. Please try again.');\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n  const handlePasswordSubmit = async e => {\n    e.preventDefault();\n\n    if (passwordData.newPassword !== passwordData.confirmPassword) {\n      alert('New passwords do not match!');\n      return;\n    }\n\n    setIsUpdating(true);\n\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      alert('Password updated successfully!');\n      setPasswordData({\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: '',\n      });\n    } catch (error) {\n      console.error('Error updating password:', error);\n      alert('Error updating password. Please try again.');\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n  const handleLogout = () => {\n    if (window.confirm('Are you sure you want to logout?')) {\n      setUser(null);\n      setUserType('customer');\n      navigate('/');\n    }\n  };\n\n  return (\n    <PageContainer>\n      <Sidebar />\n\n      <MainContent>\n        <PageTitle>Profile Settings</PageTitle>\n\n        <SettingsGrid>\n          <Card>\n            <CardContent>\n              <SectionTitle>\n                <FaUser />\n                Personal Information\n              </SectionTitle>\n\n              <ProfileForm onSubmit={handleProfileSubmit}>\n                <InputGroup>\n                  <FormGroup>\n                    <Label>Full Name *</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"name\"\n                      value={profileData.name}\n                      onChange={handleProfileChange}\n                      required\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label>Email Address *</Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      value={profileData.email}\n                      onChange={handleProfileChange}\n                      required\n                    />\n                  </FormGroup>\n                </InputGroup>\n\n                <InputGroup>\n                  <FormGroup>\n                    <Label>Phone Number</Label>\n                    <Input\n                      type=\"tel\"\n                      name=\"phone\"\n                      value={profileData.phone}\n                      onChange={handleProfileChange}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label>Hotel License Number</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"licenseNumber\"\n                      value={profileData.licenseNumber}\n                      onChange={handleProfileChange}\n                      placeholder=\"Optional\"\n                    />\n                  </FormGroup>\n                </InputGroup>\n\n                <FormActions>\n                  <Button type=\"submit\" disabled={isUpdating} size=\"large\">\n                    <FaSave />\n                    {isUpdating ? 'Updating...' : 'Save Changes'}\n                  </Button>\n                </FormActions>\n              </ProfileForm>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent>\n              <SectionTitle>\n                <FaLock />\n                Change Password\n              </SectionTitle>\n\n              <ProfileForm onSubmit={handlePasswordSubmit}>\n                <FormGroup>\n                  <Label>Current Password *</Label>\n                  <Input\n                    type=\"password\"\n                    name=\"currentPassword\"\n                    value={passwordData.currentPassword}\n                    onChange={handlePasswordChange}\n                    required\n                  />\n                </FormGroup>\n\n                <InputGroup>\n                  <FormGroup>\n                    <Label>New Password *</Label>\n                    <Input\n                      type=\"password\"\n                      name=\"newPassword\"\n                      value={passwordData.newPassword}\n                      onChange={handlePasswordChange}\n                      required\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label>Confirm New Password *</Label>\n                    <Input\n                      type=\"password\"\n                      name=\"confirmPassword\"\n                      value={passwordData.confirmPassword}\n                      onChange={handlePasswordChange}\n                      required\n                    />\n                  </FormGroup>\n                </InputGroup>\n\n                <FormActions>\n                  <Button type=\"submit\" disabled={isUpdating} size=\"large\">\n                    <FaLock />\n                    {isUpdating ? 'Updating...' : 'Update Password'}\n                  </Button>\n                </FormActions>\n              </ProfileForm>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent>\n              <SectionTitle>\n                <FaSignOutAlt />\n                Account Actions\n              </SectionTitle>\n\n              <LogoutSection>\n                <LogoutText>\n                  Ready to sign out? Click the button below to logout from your\n                  account.\n                </LogoutText>\n                <Button variant=\"danger\" onClick={handleLogout} size=\"large\">\n                  <FaSignOutAlt />\n                  Logout\n                </Button>\n              </LogoutSection>\n            </CardContent>\n          </Card>\n        </SettingsGrid>\n      </MainContent>\n    </PageContainer>\n  );\n};\n\nexport default ProfileSettingsPage;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/owner/ProfileSettingsPageContent.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":177,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":177,"endColumn":45},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":179,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":179,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[4218,4266],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":180,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":180,"endColumn":57},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":190,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":190,"endColumn":43},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":200,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":200,"endColumn":46},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":207,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":207,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[4903,4952],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":208,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":208,"endColumn":58},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":222,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":222,"endColumn":85},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":227,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":227,"endColumn":73},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":237,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":237,"endColumn":59}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaUser, FaLock, FaSave, FaSignOutAlt, FaTrashAlt, FaExclamationTriangle } from 'react-icons/fa';\nimport { Card, CardContent } from '../shared/Card';\nimport { Button } from '../shared/Button';\nimport { Input, FormGroup, Label, InputGroup } from '../shared/Input';\nimport { theme } from '../../styles/GlobalStyle';\nimport { useAppContext } from '../../context/AppContext';\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.xxl};\n  color: ${theme.colors.gray900};\n`;\n\nconst SettingsGrid = styled.div`\n  display: grid;\n  gap: ${theme.spacing.xl};\n  max-width: 800px;\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.lg};\n  color: ${theme.colors.gray900};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst ProfileForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.lg};\n`;\n\nconst FormActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  justify-content: flex-end;\n  padding-top: ${theme.spacing.lg};\n  border-top: 1px solid ${theme.colors.gray200};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n  }\n`;\n\nconst LogoutSection = styled.div`\n  padding: ${theme.spacing.lg};\n  text-align: center;\n  border-top: 1px solid ${theme.colors.gray200};\n`;\n\nconst LogoutText = styled.p`\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst DeleteModal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst ModalContent = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xl};\n  max-width: 500px;\n  width: 90%;\n  text-align: center;\n`;\n\nconst ModalIcon = styled.div`\n  color: ${theme.colors.error};\n  font-size: 3rem;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst ModalTitle = styled.h2`\n  color: ${theme.colors.error};\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst ModalText = styled.p`\n  color: ${theme.colors.gray700};\n  line-height: 1.6;\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst ModalActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  justify-content: center;\n`;\n\nconst ConfirmationInput = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.error};\n  border-radius: ${theme.borderRadius.md};\n  margin: ${theme.spacing.lg} 0;\n  font-size: 1rem;\n  text-align: center;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.errorDark};\n  }\n`;\n\n\n\nconst ProfileSettingsPageContent = () => {\n  const navigate = useNavigate();\n  const { user, setUser, setUserType } = useAppContext();\n\n  const [profileData, setProfileData] = useState({\n    name: user?.name || 'Hotel Owner',\n    email: user?.email || 'owner@example.com',\n    phone: '+91 9876543210',\n    licenseNumber: 'HL123456789',\n  });\n\n  const [passwordData, setPasswordData] = useState({\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: '',\n  });\n\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [deleteConfirmation, setDeleteConfirmation] = useState('');\n\n  const handleProfileChange = e => {\n    setProfileData({\n      ...profileData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handlePasswordChange = e => {\n    setPasswordData({\n      ...passwordData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleProfileSubmit = async e => {\n    e.preventDefault();\n    setIsUpdating(true);\n\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Update user context\n      setUser(prev => ({\n        ...prev,\n        name: profileData.name,\n        email: profileData.email,\n      }));\n\n      alert('Profile updated successfully!');\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      alert('Error updating profile. Please try again.');\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n  const handlePasswordSubmit = async e => {\n    e.preventDefault();\n\n    if (passwordData.newPassword !== passwordData.confirmPassword) {\n      alert('New passwords do not match!');\n      return;\n    }\n\n    setIsUpdating(true);\n\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      alert('Password updated successfully!');\n      setPasswordData({\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: '',\n      });\n    } catch (error) {\n      console.error('Error updating password:', error);\n      alert('Error updating password. Please try again.');\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n\n\n  const handleDeleteAccount = () => {\n    setShowDeleteModal(true);\n  };\n\n  const confirmDeleteAccount = () => {\n    if (deleteConfirmation.toLowerCase() === 'delete account') {\n      alert('Account deleted successfully. You will be redirected to the homepage.');\n      setUser(null);\n      setUserType(null);\n      navigate('/');\n    } else {\n      alert('Please type \"DELETE ACCOUNT\" exactly to confirm deletion.');\n    }\n  };\n\n  const cancelDeleteAccount = () => {\n    setShowDeleteModal(false);\n    setDeleteConfirmation('');\n  };\n\n  const handleLogout = () => {\n    if (window.confirm('Are you sure you want to logout?')) {\n      setUser(null);\n      setUserType('customer');\n      navigate('/');\n    }\n  };\n\n  return (\n    <>\n      <PageTitle>Profile Settings</PageTitle>\n\n      <SettingsGrid>\n        <Card>\n          <CardContent>\n            <SectionTitle>\n              <FaUser />\n              Personal Information\n            </SectionTitle>\n\n            <ProfileForm onSubmit={handleProfileSubmit}>\n              <InputGroup>\n                <FormGroup>\n                  <Label>Full Name *</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    value={profileData.name}\n                    onChange={handleProfileChange}\n                    required\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label>Email Address *</Label>\n                  <Input\n                    type=\"email\"\n                    name=\"email\"\n                    value={profileData.email}\n                    onChange={handleProfileChange}\n                    required\n                  />\n                </FormGroup>\n              </InputGroup>\n\n              <InputGroup>\n                <FormGroup>\n                  <Label>Phone Number</Label>\n                  <Input\n                    type=\"tel\"\n                    name=\"phone\"\n                    value={profileData.phone}\n                    onChange={handleProfileChange}\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label>Hotel License Number</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"licenseNumber\"\n                    value={profileData.licenseNumber}\n                    onChange={handleProfileChange}\n                    placeholder=\"Optional\"\n                  />\n                </FormGroup>\n              </InputGroup>\n\n              <FormActions>\n                <Button type=\"submit\" disabled={isUpdating} size=\"large\">\n                  <FaSave />\n                  {isUpdating ? 'Updating...' : 'Save Changes'}\n                </Button>\n              </FormActions>\n            </ProfileForm>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent>\n            <SectionTitle>\n              <FaLock />\n              Change Password\n            </SectionTitle>\n\n            <ProfileForm onSubmit={handlePasswordSubmit}>\n              <FormGroup>\n                <Label>Current Password *</Label>\n                <Input\n                  type=\"password\"\n                  name=\"currentPassword\"\n                  value={passwordData.currentPassword}\n                  onChange={handlePasswordChange}\n                  required\n                />\n              </FormGroup>\n\n              <InputGroup>\n                <FormGroup>\n                  <Label>New Password *</Label>\n                  <Input\n                    type=\"password\"\n                    name=\"newPassword\"\n                    value={passwordData.newPassword}\n                    onChange={handlePasswordChange}\n                    required\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label>Confirm New Password *</Label>\n                  <Input\n                    type=\"password\"\n                    name=\"confirmPassword\"\n                    value={passwordData.confirmPassword}\n                    onChange={handlePasswordChange}\n                    required\n                  />\n                </FormGroup>\n              </InputGroup>\n\n              <FormActions>\n                <Button type=\"submit\" disabled={isUpdating} size=\"large\">\n                  <FaLock />\n                  {isUpdating ? 'Updating...' : 'Update Password'}\n                </Button>\n              </FormActions>\n            </ProfileForm>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent>\n            <SectionTitle>\n              <FaSignOutAlt />\n              Account Actions\n            </SectionTitle>\n\n            <LogoutSection>\n              <LogoutText>\n                Ready to sign out? Click the button below to logout from your\n                account.\n              </LogoutText>\n              <div style={{ display: 'flex', gap: theme.spacing.md, justifyContent: 'center' }}>\n                <Button variant=\"danger\" onClick={handleLogout} size=\"large\">\n                  <FaSignOutAlt />\n                  Logout\n                </Button>\n                <Button variant=\"error\" onClick={handleDeleteAccount} size=\"large\">\n                  <FaTrashAlt />\n                  Delete Account\n                </Button>\n              </div>\n            </LogoutSection>\n          </CardContent>\n        </Card>\n      </SettingsGrid>\n\n      {/* Delete Account Confirmation Modal */}\n      {showDeleteModal && (\n        <DeleteModal onClick={cancelDeleteAccount}>\n          <ModalContent onClick={(e) => e.stopPropagation()}>\n            <ModalIcon>\n              <FaExclamationTriangle />\n            </ModalIcon>\n            <ModalTitle>Delete Account</ModalTitle>\n            <ModalText>\n              <strong>This action cannot be undone!</strong>\n              <br /><br />\n              Deleting your account will permanently remove:\n              <br />\n              • All your hotel data and information\n              <br />\n              • All room listings and details\n              <br />\n              • All booking history\n              <br />\n              • Your personal profile and settings\n              <br /><br />\n              To confirm deletion, please type <strong>\"DELETE ACCOUNT\"</strong> below:\n            </ModalText>\n            <ConfirmationInput\n              type=\"text\"\n              value={deleteConfirmation}\n              onChange={(e) => setDeleteConfirmation(e.target.value)}\n              placeholder=\"Type DELETE ACCOUNT to confirm\"\n            />\n            <ModalActions>\n              <Button variant=\"outline\" onClick={cancelDeleteAccount} size=\"large\">\n                Cancel\n              </Button>\n              <Button\n                variant=\"error\"\n                onClick={confirmDeleteAccount}\n                size=\"large\"\n                disabled={deleteConfirmation.toLowerCase() !== 'delete account'}\n              >\n                <FaTrashAlt />\n                Delete Account\n              </Button>\n            </ModalActions>\n          </ModalContent>\n        </DeleteModal>\n      )}\n    </>\n  );\n};\n\nexport default ProfileSettingsPageContent;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/owner/SectionBasedHotelEditor.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'updateHotelImage' is defined but never used.","line":28,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":28,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'addHotelImage' is defined but never used.","line":29,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":29,"endColumn":16},{"ruleId":"no-unused-vars","severity":1,"message":"'removeHotelImage' is defined but never used.","line":30,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":30,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'updateAmenities' is defined but never used.","line":31,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":31,"endColumn":18},{"ruleId":"no-unused-vars","severity":1,"message":"'addFeature' is defined but never used.","line":35,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":35,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'removeFeature' is defined but never used.","line":36,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":36,"endColumn":16},{"ruleId":"no-unused-vars","severity":1,"message":"'addAmenityCategory' is defined but never used.","line":38,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":38,"endColumn":21},{"ruleId":"no-unused-vars","severity":1,"message":"'addAmenityToCategory' is defined but never used.","line":39,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":39,"endColumn":23},{"ruleId":"no-unused-vars","severity":1,"message":"'removeAmenityFromCategory' is defined but never used.","line":40,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":40,"endColumn":28},{"ruleId":"no-unused-vars","severity":1,"message":"'amenitiesList' is defined but never used.","line":43,"column":30,"nodeType":"Identifier","messageId":"unusedVar","endLine":43,"endColumn":43},{"ruleId":"no-unused-vars","severity":1,"message":"'SectionOrderControls' is assigned a value but never used.","line":212,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":212,"endColumn":27},{"ruleId":"no-unused-vars","severity":1,"message":"'ImageGrid' is assigned a value but never used.","line":412,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":412,"endColumn":16},{"ruleId":"no-unused-vars","severity":1,"message":"'ImageItem' is assigned a value but never used.","line":419,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":419,"endColumn":16},{"ruleId":"no-unused-vars","severity":1,"message":"'ImageDisplay' is assigned a value but never used.","line":431,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":431,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'ImageActions' is assigned a value but never used.","line":440,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":440,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'ImageButton' is assigned a value but never used.","line":448,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":448,"endColumn":18},{"ruleId":"no-unused-vars","severity":1,"message":"'ImagePlaceholder' is assigned a value but never used.","line":461,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":461,"endColumn":23},{"ruleId":"no-unused-vars","severity":1,"message":"'AmenitiesGrid' is assigned a value but never used.","line":473,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":473,"endColumn":20},{"ruleId":"no-unused-vars","severity":1,"message":"'AmenityItem' is assigned a value but never used.","line":480,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":480,"endColumn":18},{"ruleId":"no-unused-vars","severity":1,"message":"'setActiveSection' is defined but never used. Allowed unused args must match /^_/u.","line":704,"column":36,"nodeType":"Identifier","messageId":"unusedVar","endLine":704,"endColumn":52},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":912,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":914,"endColumn":6},{"ruleId":"no-unused-vars","severity":1,"message":"'handleImageEdit' is assigned a value but never used.","line":921,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":921,"endColumn":24},{"ruleId":"no-alert","severity":1,"message":"Unexpected prompt.","line":923,"column":20,"nodeType":"CallExpression","messageId":"unexpected","endLine":923,"endColumn":62},{"ruleId":"no-unused-vars","severity":1,"message":"'addImage' is assigned a value but never used.","line":935,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":935,"endColumn":17},{"ruleId":"no-alert","severity":1,"message":"Unexpected prompt.","line":936,"column":20,"nodeType":"CallExpression","messageId":"unexpected","endLine":936,"endColumn":46},{"ruleId":"no-unused-vars","severity":1,"message":"'removeImage' is assigned a value but never used.","line":943,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":943,"endColumn":20},{"ruleId":"no-unused-vars","severity":1,"message":"'toggleAmenity' is assigned a value but never used.","line":948,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":948,"endColumn":22},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1088,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":1088,"endColumn":65},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1126,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":1128,"endColumn":6},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1154,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":1156,"endColumn":6},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1273,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":1273,"endColumn":68},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1312,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":1312,"endColumn":49}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaImage,\n  FaInfo,\n  FaStar,\n  FaCamera,\n  FaConciergeBell,\n  FaMapMarkerAlt,\n  FaTimes,\n  FaSave,\n  FaEdit,\n  FaPlus,\n  FaTrash,\n  FaList,\n  FaTextHeight,\n  FaGripHorizontal,\n  FaQuoteLeft,\n  FaVideo,\n  FaTable,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport {\n  setEditingHotel,\n  updateHotelField,\n  updateHotelImage,\n  addHotelImage,\n  removeHotelImage,\n  updateAmenities,\n  saveChanges,\n  toggleSectionVisibility,\n  updateFeatures,\n  addFeature,\n  removeFeature,\n  updateAmenityCategories,\n  addAmenityCategory,\n  addAmenityToCategory,\n  removeAmenityFromCategory,\n} from '../../store/slices/hotelManagementSlice';\nimport { useAppContext } from '../../context/AppContext';\nimport { getHotelByIdOrSlug, amenitiesList } from '../../DummyData/hotels';\nimport { Button } from '../shared/Button';\nimport { Input } from '../shared/Input';\n\nconst EditorContainer = styled.div`\n  padding: ${theme.spacing.xl};\n  background: ${theme.colors.gray50};\n  min-height: 100vh;\n`;\n\nconst Header = styled.div`\n  text-align: center;\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst Title = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst Subtitle = styled.p`\n  color: ${theme.colors.gray600};\n  font-size: 1.1rem;\n`;\n\nconst HotelSelector = styled.div`\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst HotelGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst HotelSelectCard = styled.div`\n  cursor: pointer;\n  transition: all 0.3s ease;\n  border: 2px solid\n    ${props => (props.selected ? theme.colors.primary : theme.colors.gray300)};\n  border-radius: ${theme.borderRadius.lg};\n  overflow: hidden;\n  background: ${theme.colors.white};\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: ${theme.shadows.xl};\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst SectionsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  gap: ${theme.spacing.xl};\n`;\n\nconst SectionCard = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isVisible',\n})`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xl};\n  box-shadow: ${theme.shadows.md};\n  cursor: pointer;\n  transition: all 0.3s ease;\n  border: 2px solid transparent;\n  opacity: ${props => (props.isVisible ? 1 : 0.6)};\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: ${theme.shadows.xl};\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst ToggleSwitch = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  position: relative;\n  width: 44px;\n  height: 24px;\n  background: ${props =>\n    props.active ? theme.colors.primary : theme.colors.gray300};\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &::after {\n    content: '';\n    position: absolute;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: white;\n    top: 2px;\n    left: ${props => (props.active ? '22px' : '2px')};\n    transition: all 0.3s ease;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst SectionInfo = styled.div`\n  flex: 1;\n`;\n\nconst SaveGoLiveBar = styled.div`\n  position: fixed;\n  bottom: ${theme.spacing.xl};\n  right: ${theme.spacing.xl};\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.xl};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  z-index: 100;\n  border: 1px solid ${theme.colors.gray200};\n  min-width: 300px;\n`;\n\nconst SaveGoLiveButton = styled.button`\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.success},\n    ${theme.colors.successDark}\n  );\n  color: white;\n  border: none;\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  transition: all 0.3s ease;\n  font-size: 1rem;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: ${theme.shadows.lg};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst ChangesIndicator = styled.div`\n  color: ${theme.colors.warning};\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst SectionOrderControls = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst OrderButton = styled.button`\n  background: ${theme.colors.primary};\n  color: white;\n  border: none;\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  font-size: 0.9rem;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n  }\n\n  &:disabled {\n    background: ${theme.colors.gray300};\n    cursor: not-allowed;\n  }\n`;\n\nconst ImageUploadContainer = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  align-items: center;\n  margin-top: ${theme.spacing.sm};\n`;\n\nconst ImageUploadButton = styled.label`\n  background: ${theme.colors.secondary};\n  color: white;\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  font-size: 0.9rem;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: ${theme.colors.secondaryDark};\n  }\n\n  input {\n    display: none;\n  }\n`;\n\nconst SectionReorderContainer = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst SectionOrderItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${theme.spacing.md};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  margin-bottom: ${theme.spacing.sm};\n  background: ${theme.colors.gray50};\n`;\n\nconst SectionOrderButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.xs};\n`;\n\nconst SectionIcon = styled.div`\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background: ${theme.colors.primary}20;\n  color: ${theme.colors.primary};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 1.3rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst SectionDescription = styled.p`\n  color: ${theme.colors.gray600};\n  line-height: 1.6;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst SectionPreview = styled.div`\n  background: ${theme.colors.gray50};\n  padding: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n  color: ${theme.colors.gray700};\n  border-left: 3px solid ${theme.colors.primary};\n`;\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  padding: ${theme.spacing.lg};\n`;\n\nconst Modal = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  width: 100%;\n  max-width: 600px;\n  max-height: 90vh;\n  overflow-y: auto;\n  box-shadow: ${theme.shadows.xl};\n`;\n\nconst ModalHeader = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  display: flex;\n  justify-content: between;\n  align-items: center;\n`;\n\nconst ModalTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  flex: 1;\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  font-size: 1.2rem;\n  color: ${theme.colors.gray500};\n  cursor: pointer;\n  padding: ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.gray700};\n  }\n`;\n\nconst ModalContent = styled.div`\n  padding: ${theme.spacing.xl};\n`;\n\nconst FormField = styled.div`\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst Label = styled.label`\n  display: block;\n  font-weight: 500;\n  color: ${theme.colors.gray700};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  padding: ${theme.spacing.md};\n  border: 1px solid ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  line-height: 1.5;\n  resize: vertical;\n  min-height: 100px;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    box-shadow: 0 0 0 3px ${theme.colors.primary}20;\n  }\n`;\n\nconst ImageGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: ${theme.spacing.md};\n  margin-top: ${theme.spacing.md};\n`;\n\nconst ImageItem = styled.div`\n  position: relative;\n  aspect-ratio: 16/9;\n  border: 2px dashed ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.md};\n  overflow: hidden;\n\n  &.has-image {\n    border: none;\n  }\n`;\n\nconst ImageDisplay = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.src});\n  background-size: cover;\n  background-position: center;\n  position: relative;\n`;\n\nconst ImageActions = styled.div`\n  position: absolute;\n  top: ${theme.spacing.xs};\n  right: ${theme.spacing.xs};\n  display: flex;\n  gap: ${theme.spacing.xs};\n`;\n\nconst ImageButton = styled.button`\n  background: rgba(255, 255, 255, 0.9);\n  border: none;\n  border-radius: ${theme.borderRadius.sm};\n  padding: ${theme.spacing.xs};\n  cursor: pointer;\n  font-size: 0.8rem;\n\n  &:hover {\n    background: ${theme.colors.white};\n  }\n`;\n\nconst ImagePlaceholder = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: ${theme.colors.gray500};\n  font-size: 0.9rem;\n  text-align: center;\n  padding: ${theme.spacing.sm};\n`;\n\nconst AmenitiesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.sm};\n  margin-top: ${theme.spacing.md};\n`;\n\nconst AmenityItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.sm};\n  border: 1px solid ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  transition: all 0.3s ease;\n  background: ${props =>\n    props.selected ? theme.colors.primary : theme.colors.white};\n  color: ${props =>\n    props.selected ? theme.colors.white : theme.colors.gray700};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst ModalFooter = styled.div`\n  padding: ${theme.spacing.xl};\n  border-top: 1px solid ${theme.colors.gray200};\n  display: flex;\n  justify-content: flex-end;\n  gap: ${theme.spacing.md};\n`;\n\nconst FeaturesList = styled.div`\n  margin-top: ${theme.spacing.md};\n`;\n\nconst FeatureItem = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.md};\n  padding: ${theme.spacing.md};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  align-items: flex-start;\n`;\n\nconst RemoveButton = styled.button`\n  background: ${theme.colors.error};\n  color: white;\n  border: none;\n  border-radius: ${theme.borderRadius.sm};\n  padding: ${theme.spacing.xs};\n  cursor: pointer;\n  font-size: 0.8rem;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: ${theme.colors.errorDark};\n  }\n`;\n\nconst AddButton = styled.button`\n  background: ${theme.colors.primary};\n  color: white;\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  cursor: pointer;\n  font-size: 0.9rem;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  margin-top: ${theme.spacing.md};\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n  }\n`;\n\nconst AddSectionCard = styled(SectionCard)`\n  border: 2px dashed ${theme.colors.primary};\n  background: ${theme.colors.primary}05;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 200px;\n  text-align: center;\n\n  &:hover {\n    border-color: ${theme.colors.primaryDark};\n    background: ${theme.colors.primary}10;\n    transform: translateY(-2px);\n  }\n`;\n\nconst AddSectionIcon = styled.div`\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  background: ${theme.colors.primary}20;\n  color: ${theme.colors.primary};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 2rem;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst AddSectionText = styled.div`\n  h3 {\n    font-size: 1.3rem;\n    font-weight: 600;\n    color: ${theme.colors.primary};\n    margin-bottom: ${theme.spacing.sm};\n  }\n\n  p {\n    color: ${theme.colors.gray600};\n    font-size: 0.9rem;\n  }\n`;\n\nconst SectionTypeGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: ${theme.spacing.md};\n  margin: ${theme.spacing.lg} 0;\n`;\n\nconst SectionTypeCard = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'selected',\n})`\n  padding: ${theme.spacing.lg};\n  border: 2px solid\n    ${props => (props.selected ? theme.colors.primary : theme.colors.gray300)};\n  border-radius: ${theme.borderRadius.md};\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  background: ${props =>\n    props.selected ? theme.colors.primary + '10' : theme.colors.white};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst SectionTypeIcon = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'selected',\n})`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background: ${props =>\n    props.selected ? theme.colors.primary : theme.colors.gray400};\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.2rem;\n  margin: 0 auto ${theme.spacing.sm};\n`;\n\nconst ContentForm = styled.div`\n  margin-top: ${theme.spacing.lg};\n`;\n\nconst ContentItem = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.md};\n  padding: ${theme.spacing.md};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  align-items: flex-start;\n`;\n\nconst CardContentForm = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst AmenityCategoryItem = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n  padding: ${theme.spacing.lg};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.gray50};\n`;\n\nconst AmenityCategoryHeader = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  align-items: center;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst AmenityItemsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst AmenityTag = styled.div`\n  background: ${theme.colors.primary};\n  color: white;\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.85rem;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst AddAmenityForm = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n  align-items: center;\n`;\n\nconst SectionBasedHotelEditor = ({ setActiveSection }) => {\n  const dispatch = useDispatch();\n  const { ownerHotels } = useAppContext();\n  const { editingHotel, hasUnsavedChanges, changes, sectionVisibility } =\n    useSelector(state => state.hotelManagement);\n\n  const { slug } = useParams(); // Get slug from URL\n  const [selectedHotelId, setSelectedHotelId] = useState(null);\n  const [activeModal, setActiveModal] = useState(null);\n  const [tempData, setTempData] = useState({});\n  const [newAmenityInputs, setNewAmenityInputs] = useState({});\n  const [sectionOrder, setSectionOrder] = useState([\n    'about',\n    'features',\n    'gallery',\n    'amenities',\n    'contact',\n  ]);\n  const [customSections, setCustomSections] = useState([]);\n  const [newSectionData, setNewSectionData] = useState({\n    title: '',\n    type: '',\n    content: [],\n  });\n\n  // Auto-select hotel based on URL slug and initialize section order\n  useEffect(() => {\n    if (slug && !editingHotel) {\n      // Find hotel by slug from URL\n      const hotelData = getHotelByIdOrSlug(slug);\n      if (hotelData) {\n        dispatch(setEditingHotel(hotelData.id));\n        setSelectedHotelId(hotelData.id);\n        // Initialize section order from hotel data\n        if (hotelData.sectionOrder) {\n          setSectionOrder(hotelData.sectionOrder);\n        }\n      }\n    } else if (!editingHotel && ownerHotels.length > 0 && !slug) {\n      // Fallback to first hotel if no slug\n      setSelectedHotelId(ownerHotels[0].id);\n      const hotelData = getHotelByIdOrSlug(ownerHotels[0].id);\n      if (hotelData) {\n        dispatch(setEditingHotel(ownerHotels[0].id));\n        // Initialize section order from hotel data\n        if (hotelData.sectionOrder) {\n          setSectionOrder(hotelData.sectionOrder);\n        }\n      }\n    }\n  }, [slug, editingHotel, ownerHotels, dispatch]);\n\n  // Update section order when editingHotel changes\n  useEffect(() => {\n    if (editingHotel && editingHotel.sectionOrder) {\n      setSectionOrder(editingHotel.sectionOrder);\n    }\n    // Initialize custom sections from hotel data\n    if (editingHotel && editingHotel.customSections) {\n      setCustomSections(editingHotel.customSections);\n    }\n  }, [editingHotel]);\n\n  const openModal = sectionType => {\n    setActiveModal(sectionType);\n\n    // Reset new section data when opening add-section modal\n    if (sectionType === 'add-section') {\n      setNewSectionData({\n        title: '',\n        type: '',\n        content: [],\n      });\n      return;\n    }\n\n    // Check if this is a custom section being edited\n    const customSection = customSections.find(cs => cs.id === sectionType);\n    if (customSection) {\n      setNewSectionData({\n        title: customSection.title,\n        type: customSection.type,\n        content: customSection.content || [],\n      });\n      return;\n    }\n\n    // Initialize temp data with current hotel data - exactly as it appears on hotel detail page\n    if (editingHotel) {\n      setTempData({\n        name: editingHotel.name || '',\n        heroSubtitle:\n          editingHotel.heroSubtitle ||\n          `Experience luxury hospitality in the heart of ${editingHotel.city || 'your city'}`,\n        description: editingHotel.description || '',\n        image: editingHotel.image || '',\n        gallery: editingHotel.gallery || [\n          { title: 'Hotel Exterior', image: editingHotel.images?.[0] || '' },\n          { title: 'Luxury Rooms', image: editingHotel.images?.[1] || '' },\n          { title: 'Dining Experience', image: editingHotel.images?.[2] || '' },\n          {\n            title: 'Swimming Pool',\n            image:\n              'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3',\n          },\n          {\n            title: 'Spa & Wellness',\n            image:\n              'https://images.unsplash.com/photo-1578645510447-e20b4311e3ce?ixlib=rb-4.0.3',\n          },\n        ],\n        amenities: editingHotel.amenities || [],\n        address: editingHotel.address || '',\n        phone: editingHotel.phone || '+91 22 6601 1825',\n        email:\n          editingHotel.email ||\n          `reservations@${editingHotel.slug || 'hotel'}.com`,\n        checkInTime: editingHotel.checkInTime || '3:00 PM',\n        checkOutTime: editingHotel.checkOutTime || '11:00 AM',\n        features: editingHotel.features || [\n          {\n            title: '24/7 Concierge',\n            description:\n              'Our dedicated concierge team is available round-the-clock to assist with all your needs.',\n          },\n          {\n            title: 'Luxury Amenities',\n            description:\n              'Enjoy world-class facilities including spa, pool, and fine dining restaurants.',\n          },\n          {\n            title: 'Business Center',\n            description:\n              'Fully equipped business facilities for meetings and corporate events.',\n          },\n          {\n            title: 'Airport Transfer',\n            description:\n              'Complimentary airport shuttle service for all our guests.',\n          },\n        ],\n        amenityCategories: editingHotel.amenityCategories || [\n          {\n            title: 'Recreation',\n            items: ['Swimming Pool', 'Fitness Center', 'Spa & Wellness'],\n          },\n          {\n            title: 'Dining',\n            items: ['Fine Dining Restaurant', 'Rooftop Bar', 'Room Service'],\n          },\n          {\n            title: 'Business',\n            items: ['Business Center', 'Meeting Rooms', 'Free WiFi'],\n          },\n          {\n            title: 'Services',\n            items: ['24/7 Concierge', 'Valet Parking', 'Airport Transfer'],\n          },\n        ],\n        contactFields: editingHotel.contactFields || [\n          { label: 'Address', value: editingHotel.address || '' },\n          { label: 'Phone', value: editingHotel.phone || '+91 22 6601 1825' },\n          {\n            label: 'Email',\n            value:\n              editingHotel.email ||\n              `reservations@${editingHotel.slug || 'hotel'}.com`,\n          },\n          {\n            label: 'Check-in / Check-out',\n            value: `${editingHotel.checkInTime || '3:00 PM'} / ${editingHotel.checkOutTime || '11:00 AM'}`,\n          },\n        ],\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setActiveModal(null);\n    setTempData({});\n  };\n\n  const saveSection = () => {\n    if (!editingHotel) return;\n\n    // Only update the local editing hotel state, NOT the global live data\n    Object.keys(tempData).forEach(key => {\n      if (tempData[key] !== undefined) {\n        if (key === 'features') {\n          dispatch(updateFeatures(tempData[key]));\n        } else if (key === 'amenityCategories') {\n          dispatch(updateAmenityCategories(tempData[key]));\n        } else if (key === 'gallery') {\n          dispatch(\n            updateHotelField({ field: 'gallery', value: tempData[key] })\n          );\n        } else if (key === 'contactFields') {\n          dispatch(\n            updateHotelField({ field: 'contactFields', value: tempData[key] })\n          );\n        } else {\n          dispatch(updateHotelField({ field: key, value: tempData[key] }));\n        }\n      }\n    });\n\n    // DON'T save to global state here - only save to editing state\n    closeModal();\n    alert(\n      'Section updated! Click \"Save & Go Live\" to publish changes to the live hotel page.'\n    );\n  };\n\n  const updateTempData = (field, value) => {\n    setTempData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const handleImageEdit = (index, isMainImage = false) => {\n    const currentUrl = isMainImage ? tempData.image : tempData.images?.[index];\n    const newUrl = prompt('Enter new image URL:', currentUrl);\n    if (newUrl && newUrl !== currentUrl) {\n      if (isMainImage) {\n        updateTempData('image', newUrl);\n      } else {\n        const newImages = [...(tempData.images || [])];\n        newImages[index] = newUrl;\n        updateTempData('images', newImages);\n      }\n    }\n  };\n\n  const addImage = () => {\n    const newUrl = prompt('Enter image URL:');\n    if (newUrl) {\n      const newImages = [...(tempData.images || []), newUrl];\n      updateTempData('images', newImages);\n    }\n  };\n\n  const removeImage = index => {\n    const newImages = tempData.images.filter((_, i) => i !== index);\n    updateTempData('images', newImages);\n  };\n\n  const toggleAmenity = amenityId => {\n    const currentAmenities = tempData.amenities || [];\n    const newAmenities = currentAmenities.includes(amenityId)\n      ? currentAmenities.filter(id => id !== amenityId)\n      : [...currentAmenities, amenityId];\n    updateTempData('amenities', newAmenities);\n  };\n\n  const addFeatureItem = () => {\n    const newFeature = {\n      title: '',\n      description: '',\n    };\n    const newFeatures = [...(tempData.features || []), newFeature];\n    updateTempData('features', newFeatures);\n  };\n\n  const removeFeatureItem = index => {\n    const newFeatures = tempData.features.filter((_, i) => i !== index);\n    updateTempData('features', newFeatures);\n  };\n\n  const updateFeatureItem = (index, field, value) => {\n    const newFeatures = tempData.features.map((feature, i) => {\n      if (i === index) {\n        return { ...feature, [field]: value };\n      }\n      return feature;\n    });\n    updateTempData('features', newFeatures);\n  };\n\n  const addAmenityItem = categoryIndex => {\n    const input = newAmenityInputs[categoryIndex];\n    if (input && input.trim()) {\n      const newCategories = tempData.amenityCategories.map(\n        (category, index) => {\n          if (index === categoryIndex) {\n            return {\n              ...category,\n              items: [...category.items, input.trim()],\n            };\n          }\n          return category;\n        }\n      );\n      updateTempData('amenityCategories', newCategories);\n      setNewAmenityInputs(prev => ({ ...prev, [categoryIndex]: '' }));\n    }\n  };\n\n  const removeAmenityItem = (categoryIndex, itemIndex) => {\n    const newCategories = tempData.amenityCategories.map((category, index) => {\n      if (index === categoryIndex) {\n        return {\n          ...category,\n          items: category.items.filter((_, i) => i !== itemIndex),\n        };\n      }\n      return category;\n    });\n    updateTempData('amenityCategories', newCategories);\n  };\n\n  const updateCategoryTitle = (categoryIndex, title) => {\n    const newCategories = tempData.amenityCategories.map((category, index) => {\n      if (index === categoryIndex) {\n        return {\n          ...category,\n          title: title,\n        };\n      }\n      return category;\n    });\n    updateTempData('amenityCategories', newCategories);\n  };\n\n  const addAmenityCategory = () => {\n    const newCategory = {\n      title: '',\n      items: [],\n    };\n    const newCategories = [...tempData.amenityCategories, newCategory];\n    updateTempData('amenityCategories', newCategories);\n  };\n\n  const handleSectionToggle = sectionId => {\n    dispatch(toggleSectionVisibility({ section: sectionId }));\n  };\n\n  // Gallery management functions\n  const addGalleryItem = () => {\n    const newGallery = [...(tempData.gallery || []), { title: '', image: '' }];\n    updateTempData('gallery', newGallery);\n  };\n\n  const removeGalleryItem = index => {\n    const newGallery = tempData.gallery.filter((_, i) => i !== index);\n    updateTempData('gallery', newGallery);\n  };\n\n  const updateGalleryItem = (index, field, value) => {\n    const newGallery = tempData.gallery.map((item, i) => {\n      if (i === index) {\n        return { ...item, [field]: value };\n      }\n      return item;\n    });\n    updateTempData('gallery', newGallery);\n  };\n\n  // Contact fields management\n  const addContactField = () => {\n    const newContactFields = [\n      ...(tempData.contactFields || []),\n      { label: '', value: '' },\n    ];\n    updateTempData('contactFields', newContactFields);\n  };\n\n  const removeContactField = index => {\n    const newContactFields = tempData.contactFields.filter(\n      (_, i) => i !== index\n    );\n    updateTempData('contactFields', newContactFields);\n  };\n\n  const updateContactField = (index, field, value) => {\n    const newContactFields = tempData.contactFields.map((item, i) => {\n      if (i === index) {\n        return { ...item, [field]: value };\n      }\n      return item;\n    });\n    updateTempData('contactFields', newContactFields);\n  };\n\n  // Custom section management functions\n  const addCustomSection = () => {\n    if (!newSectionData.title || !newSectionData.type) {\n      alert('Please provide a section title and select a type.');\n      return;\n    }\n\n    const sectionId = `custom-${Date.now()}`;\n    const newSection = {\n      id: sectionId,\n      title: newSectionData.title,\n      type: newSectionData.type,\n      content: newSectionData.content,\n      isVisible: true,\n      isCustom: true,\n    };\n\n    // Add to custom sections\n    setCustomSections(prev => [...prev, newSection]);\n\n    // Add to section order\n    setSectionOrder(prev => [...prev, sectionId]);\n\n    // Update hotel data\n    dispatch(\n      updateHotelField({\n        field: 'customSections',\n        value: [...customSections, newSection],\n      })\n    );\n\n    // Update section order in Redux store\n    dispatch(\n      updateHotelField({\n        field: 'sectionOrder',\n        value: [...sectionOrder, sectionId],\n      })\n    );\n\n    // Close modal\n    closeModal();\n    alert(\n      'Custom section added! Remember to \"Save & Go Live\" to publish changes.'\n    );\n  };\n\n  const updateNewSectionData = (field, value) => {\n    setNewSectionData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const updateCustomSection = () => {\n    const customSectionId = activeModal;\n    const updatedSections = customSections.map(section =>\n      section.id === customSectionId\n        ? { ...section, ...newSectionData }\n        : section\n    );\n\n    setCustomSections(updatedSections);\n\n    // Update in Redux store\n    dispatch(\n      updateHotelField({\n        field: 'customSections',\n        value: updatedSections,\n      })\n    );\n\n    closeModal();\n    alert(\n      'Custom section updated! Remember to \"Save & Go Live\" to publish changes.'\n    );\n  };\n\n  const addContentItem = () => {\n    const { type } = newSectionData;\n    let newItem = {};\n\n    switch (type) {\n      case 'gallery':\n        newItem = { image: '', title: '', description: '' };\n        break;\n      case 'cards':\n        newItem = { title: '', description: '', image: '', link: '' };\n        break;\n      case 'text':\n        newItem = { content: '' };\n        break;\n      case 'list':\n        newItem = { text: '' };\n        break;\n      case 'testimonials':\n        newItem = { quote: '', author: '', designation: '', image: '' };\n        break;\n      case 'video':\n        newItem = { url: '', title: '', description: '' };\n        break;\n      case 'table':\n        newItem = {\n          headers: ['Header 1', 'Header 2'],\n          rows: [['Data 1', 'Data 2']],\n        };\n        break;\n      default:\n        newItem = { content: '' };\n    }\n\n    setNewSectionData(prev => ({\n      ...prev,\n      content: [...prev.content, newItem],\n    }));\n  };\n\n  const removeContentItem = index => {\n    setNewSectionData(prev => ({\n      ...prev,\n      content: prev.content.filter((_, i) => i !== index),\n    }));\n  };\n\n  const updateContentItem = (index, field, value) => {\n    setNewSectionData(prev => ({\n      ...prev,\n      content: prev.content.map((item, i) =>\n        i === index ? { ...item, [field]: value } : item\n      ),\n    }));\n  };\n\n  // Section type options\n  const sectionTypes = [\n    {\n      id: 'text',\n      name: 'Text Content',\n      icon: FaTextHeight,\n      description: 'Rich text content',\n    },\n    {\n      id: 'gallery',\n      name: 'Image Gallery',\n      icon: FaCamera,\n      description: 'Collection of images',\n    },\n    {\n      id: 'cards',\n      name: 'Info Cards',\n      icon: FaGripHorizontal,\n      description: 'Card-based content',\n    },\n    {\n      id: 'list',\n      name: 'List Items',\n      icon: FaList,\n      description: 'Bulleted or numbered lists',\n    },\n    {\n      id: 'testimonials',\n      name: 'Testimonials',\n      icon: FaQuoteLeft,\n      description: 'Customer reviews',\n    },\n    {\n      id: 'video',\n      name: 'Video Content',\n      icon: FaVideo,\n      description: 'Video embeds',\n    },\n    {\n      id: 'table',\n      name: 'Data Table',\n      icon: FaTable,\n      description: 'Tabular data',\n    },\n  ];\n\n  const handleSaveAndGoLive = () => {\n    if (!editingHotel) return;\n\n    // Save section order along with other changes\n    dispatch(updateHotelField({ field: 'sectionOrder', value: sectionOrder }));\n\n    // Save custom sections\n    dispatch(\n      updateHotelField({ field: 'customSections', value: customSections })\n    );\n\n    // Save all changes to global state (this will update the live hotel page)\n    dispatch(saveChanges());\n    alert('All changes published to live hotel page successfully!');\n  };\n\n  // Section reordering functions\n  const moveSectionUp = index => {\n    if (index > 0) {\n      const newOrder = [...sectionOrder];\n      [newOrder[index], newOrder[index - 1]] = [\n        newOrder[index - 1],\n        newOrder[index],\n      ];\n      setSectionOrder(newOrder);\n      // Mark as unsaved change\n      dispatch(updateHotelField({ field: 'sectionOrder', value: newOrder }));\n    }\n  };\n\n  const moveSectionDown = index => {\n    if (index < sectionOrder.length - 1) {\n      const newOrder = [...sectionOrder];\n      [newOrder[index], newOrder[index + 1]] = [\n        newOrder[index + 1],\n        newOrder[index],\n      ];\n      setSectionOrder(newOrder);\n      // Mark as unsaved change\n      dispatch(updateHotelField({ field: 'sectionOrder', value: newOrder }));\n    }\n  };\n\n  // Image upload function\n  const handleImageUpload = (file, callback) => {\n    if (file && file.type.startsWith('image/')) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        callback(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      alert('Please select a valid image file.');\n    }\n  };\n\n  if (!editingHotel) {\n    return (\n      <EditorContainer>\n        <Header>\n          <Title>Hotel Content Editor</Title>\n          <Subtitle>Select a hotel to edit its content</Subtitle>\n        </Header>\n\n        <HotelSelector>\n          <HotelGrid>\n            {ownerHotels.map(hotel => (\n              <HotelSelectCard\n                key={hotel.id}\n                onClick={() => setSelectedHotelId(hotel.id)}\n                selected={selectedHotelId === hotel.id}\n              >\n                <img\n                  src={hotel.image}\n                  alt={hotel.name}\n                  style={{\n                    width: '100%',\n                    height: '200px',\n                    objectFit: 'cover',\n                  }}\n                />\n                <div style={{ padding: theme.spacing.lg }}>\n                  <h3 style={{ marginBottom: theme.spacing.sm }}>\n                    {hotel.name}\n                  </h3>\n                  <p style={{ color: theme.colors.gray600 }}>\n                    {hotel.location}\n                  </p>\n                </div>\n              </HotelSelectCard>\n            ))}\n          </HotelGrid>\n        </HotelSelector>\n      </EditorContainer>\n    );\n  }\n\n  const allSections = {\n    hero: {\n      id: 'hero',\n      title: 'Hero Section',\n      description: 'Update background image and hotel title',\n      icon: FaImage,\n      preview: `${editingHotel.name} - ${editingHotel.city}`,\n      isVisible: sectionVisibility.hero,\n    },\n    about: {\n      id: 'about',\n      title: 'About Section',\n      description: 'Edit hotel description and story',\n      icon: FaInfo,\n      preview:\n        editingHotel.description?.substring(0, 100) + '...' ||\n        'No description set',\n      isVisible: sectionVisibility.about,\n    },\n    features: {\n      id: 'features',\n      title: 'Why Choose Us',\n      description: 'Manage hotel features and benefits',\n      icon: FaStar,\n      preview: `${editingHotel.features?.length || 4} features configured`,\n      isVisible: sectionVisibility.features,\n    },\n    gallery: {\n      id: 'gallery',\n      title: 'Hotel Gallery',\n      description: 'Manage hotel images and gallery',\n      icon: FaCamera,\n      preview: `${editingHotel.gallery?.length || 5} gallery items`,\n      isVisible: sectionVisibility.gallery,\n    },\n    amenities: {\n      id: 'amenities',\n      title: 'World-Class Amenities',\n      description: 'Update hotel amenities and services',\n      icon: FaConciergeBell,\n      preview: `${editingHotel.amenityCategories?.length || 4} categories`,\n      isVisible: sectionVisibility.amenities,\n    },\n    contact: {\n      id: 'contact',\n      title: 'Location & Contact',\n      description: 'Update contact information and address',\n      icon: FaMapMarkerAlt,\n      preview: `${editingHotel.contactFields?.length || 4} contact fields`,\n      isVisible: sectionVisibility.contact,\n    },\n  };\n\n  // Create ordered sections array based on sectionOrder\n  const sections = sectionOrder\n    .map(sectionId => allSections[sectionId])\n    .filter(Boolean);\n\n  return (\n    <EditorContainer>\n      <Header>\n        <Title>Editing: {editingHotel.name}</Title>\n        <Subtitle>Click on any section below to edit its content</Subtitle>\n      </Header>\n\n      <SectionReorderContainer>\n        <h3\n          style={{\n            marginBottom: theme.spacing.lg,\n            color: theme.colors.gray900,\n          }}\n        >\n          Section Order Management\n        </h3>\n        <p\n          style={{\n            color: theme.colors.gray600,\n            marginBottom: theme.spacing.lg,\n          }}\n        >\n          Drag sections up or down to change their order on the hotel detail\n          page.\n        </p>\n        {sectionOrder.map((sectionId, index) => {\n          const section = allSections[sectionId];\n          return (\n            <SectionOrderItem key={sectionId}>\n              <div>\n                <strong>{section?.title}</strong> - {section?.description}\n              </div>\n              <SectionOrderButtons>\n                <OrderButton\n                  onClick={() => moveSectionUp(index)}\n                  disabled={index === 0}\n                >\n                  ↑\n                </OrderButton>\n                <OrderButton\n                  onClick={() => moveSectionDown(index)}\n                  disabled={index === sectionOrder.length - 1}\n                >\n                  ↓\n                </OrderButton>\n              </SectionOrderButtons>\n            </SectionOrderItem>\n          );\n        })}\n      </SectionReorderContainer>\n\n      <SectionsGrid>\n        {/* Always show Hero section first */}\n        <SectionCard\n          key=\"hero\"\n          isVisible={allSections.hero.isVisible}\n          onClick={e => {\n            if (e.target.closest('.toggle-switch')) return;\n            openModal('hero');\n          }}\n        >\n          <SectionHeader>\n            <SectionInfo>\n              <SectionIcon>\n                <allSections.hero.icon />\n              </SectionIcon>\n              <SectionTitle>{allSections.hero.title}</SectionTitle>\n              <SectionDescription>\n                {allSections.hero.description}\n              </SectionDescription>\n            </SectionInfo>\n            <ToggleSwitch\n              className=\"toggle-switch\"\n              active={allSections.hero.isVisible}\n              onClick={e => {\n                e.stopPropagation();\n                handleSectionToggle('hero');\n              }}\n            />\n          </SectionHeader>\n          <SectionPreview>{allSections.hero.preview}</SectionPreview>\n        </SectionCard>\n\n        {/* Show other sections in custom order */}\n        {sections.map(section => (\n          <SectionCard\n            key={section.id}\n            isVisible={section.isVisible}\n            onClick={e => {\n              if (e.target.closest('.toggle-switch')) return;\n              openModal(section.id);\n            }}\n          >\n            <SectionHeader>\n              <SectionInfo>\n                <SectionIcon>\n                  <section.icon />\n                </SectionIcon>\n                <SectionTitle>{section.title}</SectionTitle>\n                <SectionDescription>{section.description}</SectionDescription>\n              </SectionInfo>\n              <ToggleSwitch\n                className=\"toggle-switch\"\n                active={section.isVisible}\n                onClick={e => {\n                  e.stopPropagation();\n                  handleSectionToggle(section.id);\n                }}\n              />\n            </SectionHeader>\n            <SectionPreview>{section.preview}</SectionPreview>\n          </SectionCard>\n        ))}\n\n        {/* Show custom sections */}\n        {customSections.map(section => (\n          <SectionCard\n            key={section.id}\n            isVisible={section.isVisible}\n            onClick={e => {\n              if (e.target.closest('.toggle-switch')) return;\n              openModal(section.id);\n            }}\n          >\n            <SectionHeader>\n              <SectionInfo>\n                <SectionIcon>\n                  {section.type === 'gallery' && <FaCamera />}\n                  {section.type === 'cards' && <FaGripHorizontal />}\n                  {section.type === 'text' && <FaTextHeight />}\n                  {section.type === 'list' && <FaList />}\n                  {section.type === 'testimonials' && <FaQuoteLeft />}\n                  {section.type === 'video' && <FaVideo />}\n                  {section.type === 'table' && <FaTable />}\n                </SectionIcon>\n                <SectionTitle>{section.title}</SectionTitle>\n                <SectionDescription>\n                  Custom {section.type} section\n                </SectionDescription>\n              </SectionInfo>\n              <ToggleSwitch\n                className=\"toggle-switch\"\n                active={section.isVisible}\n                onClick={e => {\n                  e.stopPropagation();\n                  handleSectionToggle(section.id);\n                }}\n              />\n            </SectionHeader>\n            <SectionPreview>\n              {section.content.length} {section.type} items\n            </SectionPreview>\n          </SectionCard>\n        ))}\n\n        {/* Add Section Card */}\n        <AddSectionCard onClick={() => openModal('add-section')}>\n          <AddSectionIcon>\n            <FaPlus />\n          </AddSectionIcon>\n          <AddSectionText>\n            <h3>Add Custom Section</h3>\n            <p>Create a new section with custom content</p>\n          </AddSectionText>\n        </AddSectionCard>\n      </SectionsGrid>\n\n      {/* Modal Overlays */}\n      {activeModal && (\n        <Overlay onClick={closeModal}>\n          <Modal onClick={e => e.stopPropagation()}>\n            <ModalHeader>\n              <ModalTitle>\n                {activeModal === 'add-section'\n                  ? 'Add Custom Section'\n                  : `Edit ${sections.find(s => s.id === activeModal)?.title || customSections.find(s => s.id === activeModal)?.title || activeModal}`}\n              </ModalTitle>\n              <CloseButton onClick={closeModal}>\n                <FaTimes />\n              </CloseButton>\n            </ModalHeader>\n\n            <ModalContent>\n              {activeModal === 'hero' && (\n                <>\n                  <FormField>\n                    <Label>Hotel Name</Label>\n                    <Input\n                      value={tempData.name || ''}\n                      onChange={e => updateTempData('name', e.target.value)}\n                      placeholder=\"Enter hotel name\"\n                    />\n                  </FormField>\n                  <FormField>\n                    <Label>Hero Subtitle</Label>\n                    <TextArea\n                      value={tempData.heroSubtitle || ''}\n                      onChange={e =>\n                        updateTempData('heroSubtitle', e.target.value)\n                      }\n                      placeholder=\"Enter hero subtitle\"\n                      rows={3}\n                    />\n                  </FormField>\n                  <FormField>\n                    <Label>Background Image</Label>\n                    <Input\n                      value={tempData.image || ''}\n                      onChange={e => updateTempData('image', e.target.value)}\n                      placeholder=\"Enter image URL\"\n                    />\n                    <ImageUploadContainer>\n                      <span>OR</span>\n                      <ImageUploadButton>\n                        <FaPlus />\n                        Upload Image\n                        <input\n                          type=\"file\"\n                          accept=\"image/*\"\n                          onChange={e => {\n                            const file = e.target.files[0];\n                            if (file) {\n                              handleImageUpload(file, dataUrl => {\n                                updateTempData('image', dataUrl);\n                              });\n                            }\n                          }}\n                        />\n                      </ImageUploadButton>\n                    </ImageUploadContainer>\n                    {tempData.image && (\n                      <div style={{ marginTop: theme.spacing.md }}>\n                        <img\n                          src={tempData.image}\n                          alt=\"Preview\"\n                          style={{\n                            width: '100%',\n                            height: '200px',\n                            objectFit: 'cover',\n                            borderRadius: theme.borderRadius.md,\n                          }}\n                        />\n                      </div>\n                    )}\n                  </FormField>\n                </>\n              )}\n\n              {activeModal === 'about' && (\n                <FormField>\n                  <Label>Hotel Description</Label>\n                  <TextArea\n                    value={tempData.description || ''}\n                    onChange={e =>\n                      updateTempData('description', e.target.value)\n                    }\n                    placeholder=\"Enter hotel description\"\n                    rows={8}\n                  />\n                </FormField>\n              )}\n\n              {activeModal === 'gallery' && (\n                <FormField>\n                  <Label>Hotel Gallery</Label>\n                  <p\n                    style={{\n                      color: theme.colors.gray600,\n                      marginBottom: theme.spacing.md,\n                    }}\n                  >\n                    Manage gallery images with titles for better organization.\n                  </p>\n                  {tempData.gallery?.map((item, index) => (\n                    <div\n                      key={index}\n                      style={{\n                        marginBottom: theme.spacing.lg,\n                        padding: theme.spacing.md,\n                        border: `1px solid ${theme.colors.gray200}`,\n                        borderRadius: theme.borderRadius.md,\n                      }}\n                    >\n                      <div\n                        style={{\n                          display: 'flex',\n                          gap: theme.spacing.md,\n                          alignItems: 'flex-start',\n                        }}\n                      >\n                        <div style={{ flex: 1 }}>\n                          <FormField>\n                            <Label>Image Title</Label>\n                            <Input\n                              value={item.title}\n                              onChange={e =>\n                                updateGalleryItem(\n                                  index,\n                                  'title',\n                                  e.target.value\n                                )\n                              }\n                              placeholder=\"e.g., Hotel Exterior, Luxury Rooms\"\n                            />\n                          </FormField>\n                          <FormField>\n                            <Label>Image URL</Label>\n                            <Input\n                              value={item.image}\n                              onChange={e =>\n                                updateGalleryItem(\n                                  index,\n                                  'image',\n                                  e.target.value\n                                )\n                              }\n                              placeholder=\"Enter image URL\"\n                            />\n                            <ImageUploadContainer>\n                              <span>OR</span>\n                              <ImageUploadButton>\n                                <FaPlus />\n                                Upload Image\n                                <input\n                                  type=\"file\"\n                                  accept=\"image/*\"\n                                  onChange={e => {\n                                    const file = e.target.files[0];\n                                    if (file) {\n                                      handleImageUpload(file, dataUrl => {\n                                        updateGalleryItem(\n                                          index,\n                                          'image',\n                                          dataUrl\n                                        );\n                                      });\n                                    }\n                                  }}\n                                />\n                              </ImageUploadButton>\n                            </ImageUploadContainer>\n                          </FormField>\n                        </div>\n                        {item.image && (\n                          <div style={{ width: '120px', height: '80px' }}>\n                            <img\n                              src={item.image}\n                              alt={item.title}\n                              style={{\n                                width: '100%',\n                                height: '100%',\n                                objectFit: 'cover',\n                                borderRadius: theme.borderRadius.md,\n                              }}\n                            />\n                          </div>\n                        )}\n                        <RemoveButton onClick={() => removeGalleryItem(index)}>\n                          <FaTrash />\n                        </RemoveButton>\n                      </div>\n                    </div>\n                  ))}\n                  <AddButton onClick={addGalleryItem}>\n                    <FaPlus /> Add Gallery Item\n                  </AddButton>\n                </FormField>\n              )}\n\n              {activeModal === 'amenities' && (\n                <FormField>\n                  <Label>Hotel Amenity Categories</Label>\n                  <p\n                    style={{\n                      color: theme.colors.gray600,\n                      marginBottom: theme.spacing.md,\n                    }}\n                  >\n                    Organize your amenities into categories with custom headers\n                    and items.\n                  </p>\n                  {tempData.amenityCategories?.map(\n                    (category, categoryIndex) => (\n                      <AmenityCategoryItem key={categoryIndex}>\n                        <AmenityCategoryHeader>\n                          <Input\n                            value={category.title}\n                            onChange={e =>\n                              updateCategoryTitle(categoryIndex, e.target.value)\n                            }\n                            placeholder=\"Category title (e.g., Recreation)\"\n                            style={{ flex: 1 }}\n                          />\n                        </AmenityCategoryHeader>\n\n                        <AmenityItemsContainer>\n                          {category.items.map((item, itemIndex) => (\n                            <AmenityTag key={itemIndex}>\n                              {item}\n                              <button\n                                onClick={() =>\n                                  removeAmenityItem(categoryIndex, itemIndex)\n                                }\n                                style={{\n                                  background: 'none',\n                                  border: 'none',\n                                  color: 'white',\n                                  marginLeft: theme.spacing.xs,\n                                  cursor: 'pointer',\n                                }}\n                              >\n                                <FaTimes />\n                              </button>\n                            </AmenityTag>\n                          ))}\n                        </AmenityItemsContainer>\n\n                        <AddAmenityForm>\n                          <Input\n                            value={newAmenityInputs[categoryIndex] || ''}\n                            onChange={e =>\n                              setNewAmenityInputs(prev => ({\n                                ...prev,\n                                [categoryIndex]: e.target.value,\n                              }))\n                            }\n                            placeholder=\"Add new amenity\"\n                            style={{ flex: 1 }}\n                            onKeyPress={e => {\n                              if (e.key === 'Enter') {\n                                e.preventDefault();\n                                addAmenityItem(categoryIndex);\n                              }\n                            }}\n                          />\n                          <Button\n                            size=\"small\"\n                            onClick={() => addAmenityItem(categoryIndex)}\n                          >\n                            <FaPlus />\n                          </Button>\n                        </AddAmenityForm>\n                      </AmenityCategoryItem>\n                    )\n                  )}\n                  <AddButton onClick={addAmenityCategory}>\n                    <FaPlus /> Add New Category\n                  </AddButton>\n                </FormField>\n              )}\n\n              {activeModal === 'contact' && (\n                <FormField>\n                  <Label>Contact Information Fields</Label>\n                  <p\n                    style={{\n                      color: theme.colors.gray600,\n                      marginBottom: theme.spacing.md,\n                    }}\n                  >\n                    Manage contact information displayed on the hotel page.\n                  </p>\n                  {tempData.contactFields?.map((field, index) => (\n                    <div\n                      key={index}\n                      style={{\n                        display: 'flex',\n                        gap: theme.spacing.md,\n                        marginBottom: theme.spacing.md,\n                        padding: theme.spacing.md,\n                        border: `1px solid ${theme.colors.gray200}`,\n                        borderRadius: theme.borderRadius.md,\n                        alignItems: 'flex-start',\n                      }}\n                    >\n                      <div style={{ flex: 1 }}>\n                        <Input\n                          value={field.label}\n                          onChange={e =>\n                            updateContactField(index, 'label', e.target.value)\n                          }\n                          placeholder=\"Label (e.g., Address, Phone)\"\n                          style={{ marginBottom: theme.spacing.sm }}\n                        />\n                        <Input\n                          value={field.value}\n                          onChange={e =>\n                            updateContactField(index, 'value', e.target.value)\n                          }\n                          placeholder=\"Value\"\n                        />\n                      </div>\n                      <RemoveButton onClick={() => removeContactField(index)}>\n                        <FaTrash />\n                      </RemoveButton>\n                    </div>\n                  ))}\n                  <AddButton onClick={addContactField}>\n                    <FaPlus /> Add More Contact Field\n                  </AddButton>\n                </FormField>\n              )}\n\n              {activeModal === 'features' && (\n                <FormField>\n                  <Label>Hotel Features</Label>\n                  <p\n                    style={{\n                      color: theme.colors.gray600,\n                      marginBottom: theme.spacing.md,\n                    }}\n                  >\n                    These are the key features shown in the \"Why Choose Us\"\n                    section.\n                  </p>\n                  <FeaturesList>\n                    {tempData.features?.map((feature, index) => (\n                      <FeatureItem key={index}>\n                        <div style={{ flex: 1 }}>\n                          <Input\n                            value={feature.title}\n                            onChange={e =>\n                              updateFeatureItem(index, 'title', e.target.value)\n                            }\n                            placeholder=\"Feature title\"\n                            style={{ marginBottom: theme.spacing.sm }}\n                          />\n                          <TextArea\n                            value={feature.description}\n                            onChange={e =>\n                              updateFeatureItem(\n                                index,\n                                'description',\n                                e.target.value\n                              )\n                            }\n                            placeholder=\"Feature description\"\n                            rows={3}\n                          />\n                        </div>\n                        <RemoveButton onClick={() => removeFeatureItem(index)}>\n                          <FaTrash />\n                        </RemoveButton>\n                      </FeatureItem>\n                    ))}\n                  </FeaturesList>\n                  <AddButton onClick={addFeatureItem}>\n                    <FaPlus /> Add More Feature\n                  </AddButton>\n                </FormField>\n              )}\n\n              {activeModal === 'add-section' && (\n                <>\n                  <FormField>\n                    <Label>Section Title</Label>\n                    <Input\n                      value={newSectionData.title}\n                      onChange={e =>\n                        updateNewSectionData('title', e.target.value)\n                      }\n                      placeholder=\"Enter section title (e.g., Our Awards, Special Offers)\"\n                    />\n                  </FormField>\n\n                  <FormField>\n                    <Label>Section Type</Label>\n                    <p\n                      style={{\n                        color: theme.colors.gray600,\n                        marginBottom: theme.spacing.md,\n                      }}\n                    >\n                      Choose the type of content for this section.\n                    </p>\n                    <SectionTypeGrid>\n                      {sectionTypes.map(type => (\n                        <SectionTypeCard\n                          key={type.id}\n                          selected={newSectionData.type === type.id}\n                          onClick={() => updateNewSectionData('type', type.id)}\n                        >\n                          <SectionTypeIcon\n                            selected={newSectionData.type === type.id}\n                          >\n                            <type.icon />\n                          </SectionTypeIcon>\n                          <h4\n                            style={{\n                              margin: 0,\n                              marginBottom: theme.spacing.xs,\n                              fontSize: '0.9rem',\n                            }}\n                          >\n                            {type.name}\n                          </h4>\n                          <p\n                            style={{\n                              margin: 0,\n                              fontSize: '0.8rem',\n                              color: theme.colors.gray600,\n                            }}\n                          >\n                            {type.description}\n                          </p>\n                        </SectionTypeCard>\n                      ))}\n                    </SectionTypeGrid>\n                  </FormField>\n\n                  {newSectionData.type && (\n                    <FormField>\n                      <Label>Content Items</Label>\n                      <p\n                        style={{\n                          color: theme.colors.gray600,\n                          marginBottom: theme.spacing.md,\n                        }}\n                      >\n                        Add content items for your {newSectionData.type}{' '}\n                        section.\n                      </p>\n\n                      <ContentForm>\n                        {newSectionData.content.map((item, index) => (\n                          <ContentItem key={index}>\n                            <div style={{ flex: 1 }}>\n                              {newSectionData.type === 'text' && (\n                                <TextArea\n                                  value={item.content || ''}\n                                  onChange={e =>\n                                    updateContentItem(\n                                      index,\n                                      'content',\n                                      e.target.value\n                                    )\n                                  }\n                                  placeholder=\"Enter your text content here...\"\n                                  rows={4}\n                                />\n                              )}\n\n                              {newSectionData.type === 'gallery' && (\n                                <>\n                                  <Input\n                                    value={item.title || ''}\n                                    onChange={e =>\n                                      updateContentItem(\n                                        index,\n                                        'title',\n                                        e.target.value\n                                      )\n                                    }\n                                    placeholder=\"Image title\"\n                                    style={{ marginBottom: theme.spacing.sm }}\n                                  />\n                                  <Input\n                                    value={item.image || ''}\n                                    onChange={e =>\n                                      updateContentItem(\n                                        index,\n                                        'image',\n                                        e.target.value\n                                      )\n                                    }\n                                    placeholder=\"Image URL\"\n                                    style={{ marginBottom: theme.spacing.sm }}\n                                  />\n                                  <TextArea\n                                    value={item.description || ''}\n                                    onChange={e =>\n                                      updateContentItem(\n                                        index,\n                                        'description',\n                                        e.target.value\n                                      )\n                                    }\n                                    placeholder=\"Image description (optional)\"\n                                    rows={2}\n                                  />\n                                </>\n                              )}\n\n                              {newSectionData.type === 'cards' && (\n                                <CardContentForm>\n                                  <div>\n                                    <Input\n                                      value={item.title || ''}\n                                      onChange={e =>\n                                        updateContentItem(\n                                          index,\n                                          'title',\n                                          e.target.value\n                                        )\n                                      }\n                                      placeholder=\"Card title\"\n                                      style={{ marginBottom: theme.spacing.sm }}\n                                    />\n                                    <TextArea\n                                      value={item.description || ''}\n                                      onChange={e =>\n                                        updateContentItem(\n                                          index,\n                                          'description',\n                                          e.target.value\n                                        )\n                                      }\n                                      placeholder=\"Card description\"\n                                      rows={3}\n                                    />\n                                  </div>\n                                  <div>\n                                    <Input\n                                      value={item.image || ''}\n                                      onChange={e =>\n                                        updateContentItem(\n                                          index,\n                                          'image',\n                                          e.target.value\n                                        )\n                                      }\n                                      placeholder=\"Card image URL (optional)\"\n                                      style={{ marginBottom: theme.spacing.sm }}\n                                    />\n                                    <Input\n                                      value={item.link || ''}\n                                      onChange={e =>\n                                        updateContentItem(\n                                          index,\n                                          'link',\n                                          e.target.value\n                                        )\n                                      }\n                                      placeholder=\"Card link URL (optional)\"\n                                    />\n                                  </div>\n                                </CardContentForm>\n                              )}\n\n                              {newSectionData.type === 'list' && (\n                                <Input\n                                  value={item.text || ''}\n                                  onChange={e =>\n                                    updateContentItem(\n                                      index,\n                                      'text',\n                                      e.target.value\n                                    )\n                                  }\n                                  placeholder=\"List item text\"\n                                />\n                              )}\n\n                              {newSectionData.type === 'testimonials' && (\n                                <>\n                                  <TextArea\n                                    value={item.quote || ''}\n                                    onChange={e =>\n                                      updateContentItem(\n                                        index,\n                                        'quote',\n                                        e.target.value\n                                      )\n                                    }\n                                    placeholder=\"Customer testimonial quote\"\n                                    rows={3}\n                                    style={{ marginBottom: theme.spacing.sm }}\n                                  />\n                                  <CardContentForm>\n                                    <Input\n                                      value={item.author || ''}\n                                      onChange={e =>\n                                        updateContentItem(\n                                          index,\n                                          'author',\n                                          e.target.value\n                                        )\n                                      }\n                                      placeholder=\"Author name\"\n                                    />\n                                    <Input\n                                      value={item.designation || ''}\n                                      onChange={e =>\n                                        updateContentItem(\n                                          index,\n                                          'designation',\n                                          e.target.value\n                                        )\n                                      }\n                                      placeholder=\"Author designation\"\n                                    />\n                                  </CardContentForm>\n                                  <Input\n                                    value={item.image || ''}\n                                    onChange={e =>\n                                      updateContentItem(\n                                        index,\n                                        'image',\n                                        e.target.value\n                                      )\n                                    }\n                                    placeholder=\"Author image URL (optional)\"\n                                  />\n                                </>\n                              )}\n\n                              {newSectionData.type === 'video' && (\n                                <>\n                                  <Input\n                                    value={item.title || ''}\n                                    onChange={e =>\n                                      updateContentItem(\n                                        index,\n                                        'title',\n                                        e.target.value\n                                      )\n                                    }\n                                    placeholder=\"Video title\"\n                                    style={{ marginBottom: theme.spacing.sm }}\n                                  />\n                                  <Input\n                                    value={item.url || ''}\n                                    onChange={e =>\n                                      updateContentItem(\n                                        index,\n                                        'url',\n                                        e.target.value\n                                      )\n                                    }\n                                    placeholder=\"Video URL (YouTube, Vimeo, etc.)\"\n                                    style={{ marginBottom: theme.spacing.sm }}\n                                  />\n                                  <TextArea\n                                    value={item.description || ''}\n                                    onChange={e =>\n                                      updateContentItem(\n                                        index,\n                                        'description',\n                                        e.target.value\n                                      )\n                                    }\n                                    placeholder=\"Video description (optional)\"\n                                    rows={2}\n                                  />\n                                </>\n                              )}\n                            </div>\n                            <RemoveButton\n                              onClick={() => removeContentItem(index)}\n                            >\n                              <FaTrash />\n                            </RemoveButton>\n                          </ContentItem>\n                        ))}\n\n                        <AddButton onClick={addContentItem}>\n                          <FaPlus /> Add {newSectionData.type} Item\n                        </AddButton>\n                      </ContentForm>\n                    </FormField>\n                  )}\n                </>\n              )}\n\n              {/* Custom section editing - reuse add-section content */}\n              {customSections.find(cs => cs.id === activeModal) && (\n                <>\n                  <FormField>\n                    <Label>Section Title</Label>\n                    <Input\n                      value={newSectionData.title}\n                      onChange={e =>\n                        updateNewSectionData('title', e.target.value)\n                      }\n                      placeholder=\"Enter section title (e.g., Our Awards, Special Offers)\"\n                    />\n                  </FormField>\n\n                  <FormField>\n                    <Label>Section Type</Label>\n                    <p\n                      style={{\n                        color: theme.colors.gray600,\n                        marginBottom: theme.spacing.md,\n                      }}\n                    >\n                      Choose the type of content for this section.\n                    </p>\n                    <SectionTypeGrid>\n                      {sectionTypes.map(type => (\n                        <SectionTypeCard\n                          key={type.id}\n                          selected={newSectionData.type === type.id}\n                          onClick={() => updateNewSectionData('type', type.id)}\n                        >\n                          <SectionTypeIcon\n                            selected={newSectionData.type === type.id}\n                          >\n                            <type.icon />\n                          </SectionTypeIcon>\n                          <h4\n                            style={{\n                              margin: 0,\n                              marginBottom: theme.spacing.xs,\n                              fontSize: '0.9rem',\n                            }}\n                          >\n                            {type.name}\n                          </h4>\n                          <p\n                            style={{\n                              margin: 0,\n                              fontSize: '0.8rem',\n                              color: theme.colors.gray600,\n                            }}\n                          >\n                            {type.description}\n                          </p>\n                        </SectionTypeCard>\n                      ))}\n                    </SectionTypeGrid>\n                  </FormField>\n\n                  {newSectionData.type && (\n                    <FormField>\n                      <Label>Content Items</Label>\n                      <p\n                        style={{\n                          color: theme.colors.gray600,\n                          marginBottom: theme.spacing.md,\n                        }}\n                      >\n                        Add content items for your {newSectionData.type}{' '}\n                        section.\n                      </p>\n\n                      <ContentForm>\n                        {newSectionData.content.map((item, index) => (\n                          <ContentItem key={index}>\n                            <div style={{ flex: 1 }}>\n                              {newSectionData.type === 'text' && (\n                                <TextArea\n                                  value={item.content || ''}\n                                  onChange={e =>\n                                    updateContentItem(\n                                      index,\n                                      'content',\n                                      e.target.value\n                                    )\n                                  }\n                                  placeholder=\"Enter your text content here...\"\n                                  rows={4}\n                                />\n                              )}\n\n                              {newSectionData.type === 'gallery' && (\n                                <>\n                                  <Input\n                                    value={item.title || ''}\n                                    onChange={e =>\n                                      updateContentItem(\n                                        index,\n                                        'title',\n                                        e.target.value\n                                      )\n                                    }\n                                    placeholder=\"Image title\"\n                                    style={{ marginBottom: theme.spacing.sm }}\n                                  />\n                                  <Input\n                                    value={item.image || ''}\n                                    onChange={e =>\n                                      updateContentItem(\n                                        index,\n                                        'image',\n                                        e.target.value\n                                      )\n                                    }\n                                    placeholder=\"Image URL\"\n                                    style={{ marginBottom: theme.spacing.sm }}\n                                  />\n                                  <TextArea\n                                    value={item.description || ''}\n                                    onChange={e =>\n                                      updateContentItem(\n                                        index,\n                                        'description',\n                                        e.target.value\n                                      )\n                                    }\n                                    placeholder=\"Image description (optional)\"\n                                    rows={2}\n                                  />\n                                </>\n                              )}\n\n                              {newSectionData.type === 'cards' && (\n                                <CardContentForm>\n                                  <div>\n                                    <Input\n                                      value={item.title || ''}\n                                      onChange={e =>\n                                        updateContentItem(\n                                          index,\n                                          'title',\n                                          e.target.value\n                                        )\n                                      }\n                                      placeholder=\"Card title\"\n                                      style={{ marginBottom: theme.spacing.sm }}\n                                    />\n                                    <TextArea\n                                      value={item.description || ''}\n                                      onChange={e =>\n                                        updateContentItem(\n                                          index,\n                                          'description',\n                                          e.target.value\n                                        )\n                                      }\n                                      placeholder=\"Card description\"\n                                      rows={3}\n                                    />\n                                  </div>\n                                  <div>\n                                    <Input\n                                      value={item.image || ''}\n                                      onChange={e =>\n                                        updateContentItem(\n                                          index,\n                                          'image',\n                                          e.target.value\n                                        )\n                                      }\n                                      placeholder=\"Card image URL (optional)\"\n                                      style={{ marginBottom: theme.spacing.sm }}\n                                    />\n                                    <Input\n                                      value={item.link || ''}\n                                      onChange={e =>\n                                        updateContentItem(\n                                          index,\n                                          'link',\n                                          e.target.value\n                                        )\n                                      }\n                                      placeholder=\"Card link URL (optional)\"\n                                    />\n                                  </div>\n                                </CardContentForm>\n                              )}\n\n                              {newSectionData.type === 'list' && (\n                                <Input\n                                  value={item.text || ''}\n                                  onChange={e =>\n                                    updateContentItem(\n                                      index,\n                                      'text',\n                                      e.target.value\n                                    )\n                                  }\n                                  placeholder=\"List item text\"\n                                />\n                              )}\n                            </div>\n                            <RemoveButton\n                              onClick={() => removeContentItem(index)}\n                            >\n                              <FaTrash />\n                            </RemoveButton>\n                          </ContentItem>\n                        ))}\n\n                        <AddButton onClick={addContentItem}>\n                          <FaPlus /> Add {newSectionData.type} Item\n                        </AddButton>\n                      </ContentForm>\n                    </FormField>\n                  )}\n                </>\n              )}\n            </ModalContent>\n\n            <ModalFooter>\n              <Button variant=\"outline\" onClick={closeModal}>\n                Cancel\n              </Button>\n              {activeModal === 'add-section' ? (\n                <Button onClick={addCustomSection}>\n                  <FaPlus /> Add Section\n                </Button>\n              ) : customSections.find(cs => cs.id === activeModal) ? (\n                <Button onClick={updateCustomSection}>\n                  <FaSave /> Update Section\n                </Button>\n              ) : (\n                <Button onClick={saveSection}>\n                  <FaSave /> Save Changes\n                </Button>\n              )}\n            </ModalFooter>\n          </Modal>\n        </Overlay>\n      )}\n\n      {/* Save & Go Live Bar - appears when there are unsaved changes */}\n      {hasUnsavedChanges && (\n        <SaveGoLiveBar>\n          <ChangesIndicator>\n            <FaEdit />\n            {Object.keys(hasUnsavedChanges ? changes : {}).length} unsaved\n            changes\n          </ChangesIndicator>\n          <SaveGoLiveButton\n            onClick={handleSaveAndGoLive}\n            disabled={!hasUnsavedChanges}\n          >\n            <FaSave />\n            Save & Go Live\n          </SaveGoLiveButton>\n        </SaveGoLiveBar>\n      )}\n    </EditorContainer>\n  );\n};\n\nexport default SectionBasedHotelEditor;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/owner/Sidebar.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useMemo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaHome,\n  FaPlus,\n  FaHotel,\n  FaBed,\n  FaCalendarCheck,\n  FaUser,\n  FaSignOutAlt,\n  FaBars,\n  FaTimes,\n} from 'react-icons/fa';\nimport { theme, media } from '../../styles/GlobalStyle';\n\nconst SidebarContainer = styled.aside.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 17.5rem;\n  height: 100vh;\n  background: ${theme.colors.white};\n  border-right: 1px solid ${theme.colors.gray200};\n  overflow-y: auto;\n  overflow-x: hidden;\n  transition: transform 0.3s ease;\n  z-index: 20;\n\n  ${media.tabletDown} {\n    width: 16rem;\n    transform: translateX(${props => (props.isOpen ? '0' : '-100%')});\n  }\n\n  ${media.mobile} {\n    width: 15rem;\n  }\n\n  /* Custom scrollbar */\n  &::-webkit-scrollbar {\n    width: 0.25rem;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: ${theme.colors.gray100};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: ${theme.colors.gray300};\n    border-radius: ${theme.borderRadius.sm};\n  }\n\n  &::-webkit-scrollbar-thumb:hover {\n    background: ${theme.colors.gray400};\n  }\n`;\n\nconst SidebarHeader = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n\n  ${media.mobile} {\n    padding: ${theme.spacing.lg};\n  }\n`;\n\nconst Logo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n\n  ${media.mobile} {\n    font-size: 1.25rem;\n    gap: ${theme.spacing.xs};\n  }\n\n  svg {\n    font-size: 1.25rem;\n\n    ${media.mobile} {\n      font-size: 1rem;\n    }\n  }\n`;\n\nconst SidebarNav = styled.nav`\n  padding: ${theme.spacing.lg} 0;\n\n  ${media.mobile} {\n    padding: ${theme.spacing.md} 0;\n  }\n`;\n\nconst NavSection = styled.div`\n  margin-bottom: ${theme.spacing.lg};\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  ${media.mobile} {\n    margin-bottom: ${theme.spacing.md};\n  }\n`;\n\nconst SectionTitle = styled.h3`\n  padding: 0 ${theme.spacing.xl} ${theme.spacing.sm};\n  font-size: 0.875rem;\n  font-weight: 600;\n  color: ${theme.colors.gray500};\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n\n  ${media.mobile} {\n    padding: 0 ${theme.spacing.lg} ${theme.spacing.xs};\n    font-size: 0.75rem;\n  }\n`;\n\nconst NavItem = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  color: ${props =>\n    props.active ? theme.colors.primary : theme.colors.gray700};\n  text-decoration: none;\n  font-weight: 500;\n  transition: all 0.2s ease;\n  position: relative;\n  font-size: 0.875rem;\n  cursor: pointer;\n\n  &:hover {\n    color: ${theme.colors.primary};\n    background: ${theme.colors.gray50};\n  }\n\n  ${props =>\n    props.active &&\n    `\n    background: ${theme.colors.primary}10;\n    border-right: 3px solid ${theme.colors.primary};\n  `}\n\n  ${media.mobile} {\n    padding: ${theme.spacing.sm} ${theme.spacing.lg};\n    gap: ${theme.spacing.sm};\n    font-size: 0.8125rem;\n  }\n`;\n\nconst NavLink = styled(Link).withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  color: ${props =>\n    props.active ? theme.colors.primary : theme.colors.gray700};\n  text-decoration: none;\n  font-weight: 500;\n  transition: all 0.2s ease;\n  position: relative;\n  font-size: 0.875rem;\n\n  &:hover {\n    color: ${theme.colors.primary};\n    background: ${theme.colors.gray50};\n  }\n\n  ${props =>\n    props.active &&\n    `\n    background: ${theme.colors.primary}10;\n    border-right: 3px solid ${theme.colors.primary};\n  `}\n\n  ${media.mobile} {\n    padding: ${theme.spacing.sm} ${theme.spacing.lg};\n    gap: ${theme.spacing.sm};\n    font-size: 0.8125rem;\n  }\n`;\n\nconst NavIcon = styled.div`\n  width: 1.25rem;\n  height: 1.25rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n\n  ${media.mobile} {\n    width: 1rem;\n    height: 1rem;\n  }\n\n  svg {\n    font-size: 1rem;\n\n    ${media.mobile} {\n      font-size: 0.875rem;\n    }\n  }\n`;\n\nconst MobileToggle = styled.button`\n  position: fixed;\n  top: ${theme.spacing.lg};\n  left: ${theme.spacing.lg};\n  z-index: 30;\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.md};\n  padding: ${theme.spacing.sm};\n  color: ${theme.colors.gray700};\n  cursor: pointer;\n  box-shadow: ${theme.shadows.md};\n  display: none;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray50};\n    color: ${theme.colors.primary};\n  }\n\n  &:active {\n    background: ${theme.colors.gray100};\n  }\n\n  ${media.tabletDown} {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  ${media.mobile} {\n    top: ${theme.spacing.md};\n    left: ${theme.spacing.md};\n    padding: ${theme.spacing.xs};\n  }\n\n  svg {\n    font-size: 1rem;\n\n    ${media.mobile} {\n      font-size: 0.875rem;\n    }\n  }\n`;\n\nconst Overlay = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 15;\n  display: none;\n  opacity: ${props => (props.isOpen ? '1' : '0')};\n  visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n  transition: all 0.3s ease;\n\n  ${media.tabletDown} {\n    display: block;\n  }\n`;\n\nconst Sidebar = ({ activeSection, setActiveSection }) => {\n  const location = useLocation();\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Extract hotel slug from URL path like \"/taj-palace/owner\"\n  const hotelSlug = useMemo(() => {\n    const pathSegments = location.pathname.split('/').filter(Boolean);\n    return pathSegments.length > 0 ? pathSegments[0] : '';\n  }, [location.pathname]);\n\n  const isActive = sectionKey => activeSection === sectionKey;\n\n  const navigationItems = useMemo(\n    () => [\n      {\n        section: 'Dashboard',\n        items: [\n          {\n            key: 'dashboard',\n            icon: FaHome,\n            label: 'Dashboard Home',\n            action: () => setActiveSection('dashboard'),\n          },\n        ],\n      },\n      {\n        section: 'Hotel Management',\n        items: [\n          {\n            key: 'add-hotel',\n            icon: FaPlus,\n            label: 'Add Hotel',\n            action: () => setActiveSection('add-hotel'),\n          },\n          {\n            key: 'my-hotels',\n            icon: FaHotel,\n            label: 'My Hotels',\n            action: () => setActiveSection('my-hotels'),\n          },\n        ],\n      },\n      {\n        section: 'Room Management',\n        items: [\n          {\n            key: 'add-room',\n            icon: FaBed,\n            label: 'Add Rooms',\n            action: () => setActiveSection('add-room'),\n          },\n        ],\n      },\n      {\n        section: 'Bookings',\n        items: [\n          {\n            key: 'bookings',\n            icon: FaCalendarCheck,\n            label: 'Bookings Received',\n            action: () => setActiveSection('bookings'),\n          },\n        ],\n      },\n      {\n        section: 'Account',\n        items: [\n          {\n            key: 'profile',\n            icon: FaUser,\n            label: 'Profile Settings',\n            action: () => setActiveSection('profile'),\n          },\n        ],\n      },\n    ],\n    [setActiveSection]\n  );\n\n  const toggleSidebar = () => setIsOpen(!isOpen);\n  const closeSidebar = () => setIsOpen(false);\n\n  const handleNavClick = action => {\n    action();\n    closeSidebar();\n  };\n\n  return (\n    <>\n      <MobileToggle onClick={toggleSidebar}>\n        {isOpen ? <FaTimes /> : <FaBars />}\n      </MobileToggle>\n\n      <Overlay isOpen={isOpen} onClick={closeSidebar} />\n\n      <SidebarContainer isOpen={isOpen}>\n        <SidebarHeader>\n          <Logo>\n            <FaHotel />\n            StayEase\n          </Logo>\n        </SidebarHeader>\n\n        <SidebarNav>\n          {navigationItems.map(section => (\n            <NavSection key={section.section}>\n              <SectionTitle>{section.section}</SectionTitle>\n              {section.items.map(item => (\n                <NavItem\n                  key={item.key}\n                  active={isActive(item.key)}\n                  onClick={() => handleNavClick(item.action)}\n                >\n                  <NavIcon>\n                    <item.icon />\n                  </NavIcon>\n                  {item.label}\n                </NavItem>\n              ))}\n            </NavSection>\n          ))}\n\n          <NavSection>\n            <NavLink to={`/${hotelSlug}`} onClick={closeSidebar}>\n              <NavIcon>\n                <FaSignOutAlt />\n              </NavIcon>\n              Back to Customer View\n            </NavLink>\n          </NavSection>\n        </SidebarNav>\n      </SidebarContainer>\n    </>\n  );\n};\n\nexport default Sidebar;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/shared/Button.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/shared/Card.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/shared/Header.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaHotel, FaBars, FaTimes, FaChevronDown } from 'react-icons/fa';\nimport { theme, media } from '../../styles/GlobalStyle';\nimport { Button } from './Button';\n\nconst HeaderContainer = styled.header.withConfig({\n  shouldForwardProp: prop => prop !== 'isScrolled' && prop !== 'isInHero',\n})`\n  background: ${props => {\n    if (props.isScrolled) return theme.colors.white;\n    if (props.isInHero) {\n      return 'linear-gradient(135deg, rgba(15, 23, 42, 0.95) 0%, rgba(30, 41, 59, 0.95) 35%, rgba(51, 65, 85, 0.9) 100%)';\n    }\n    return 'transparent';\n  }};\n  box-shadow: ${props => {\n    if (props.isScrolled) return theme.shadows.sm;\n    if (props.isInHero) return '0 4px 20px rgba(0, 0, 0, 0.3)';\n    return 'none';\n  }};\n  position: fixed;\n  top: 0;\n  z-index: 100;\n  width: 100%;\n  transition: all 0.3s ease;\n  backdrop-filter: ${props => {\n    if (props.isScrolled) return 'none';\n    if (props.isInHero) return 'blur(20px)';\n    return 'blur(10px)';\n  }};\n  border-bottom: ${props => {\n    if (props.isInHero) return '1px solid rgba(255, 255, 255, 0.1)';\n    return 'none';\n  }};\n\n  ${media.mobile} {\n    backdrop-filter: ${props => {\n      if (props.isScrolled) return 'none';\n      if (props.isInHero) return 'blur(15px)';\n      return 'blur(8px)';\n    }};\n  }\n`;\n\nconst HeaderContent = styled.div`\n  width: 100%;\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  min-height: 3.75rem;\n  position: relative;\n\n  ${media.mobile} {\n    padding: 0 ${theme.spacing.md};\n    min-height: 3.75rem;\n    gap: ${theme.spacing.sm};\n  }\n\n  ${media.tablet} {\n    padding: 0 ${theme.spacing.md};\n    min-height: 3.625rem;\n  }\n\n  ${media.desktop} {\n    padding: 0 ${theme.spacing.lg};\n    min-height: 3.75rem;\n  }\n\n  @media (min-width: 1400px) {\n    padding: 0 ${theme.spacing.lg};\n  }\n`;\n\nconst Logo = styled(Link).withConfig({\n  shouldForwardProp: prop => prop !== 'isScrolled' && prop !== 'isInHero',\n})`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: ${props => {\n    if (props.isScrolled) return theme.colors.primary;\n    return theme.colors.white;\n  }};\n  text-decoration: none;\n  flex-shrink: 0;\n  transition: all 0.3s ease;\n  min-width: 0;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-shadow: ${props =>\n    props.isInHero ? '0 2px 4px rgba(0, 0, 0, 0.3)' : 'none'};\n\n  ${media.mobile} {\n    font-size: 1.125rem;\n    gap: ${theme.spacing.xs};\n    max-width: calc(100vw - 140px);\n  }\n\n  ${media.tablet} {\n    font-size: 1.1875rem;\n  }\n\n  svg {\n    font-size: 1.125rem;\n    flex-shrink: 0;\n\n    ${media.mobile} {\n      font-size: 1rem;\n    }\n  }\n`;\n\nconst DesktopNav = styled.nav`\n  display: none;\n  align-items: center;\n  gap: ${theme.spacing.lg};\n\n  ${media.tabletUp} {\n    display: flex;\n  }\n\n  @media (min-width: 769px) and (max-width: 1024px) {\n    gap: ${theme.spacing.md};\n  }\n\n  @media (min-width: 1201px) {\n    gap: ${theme.spacing.xl};\n  }\n`;\n\nconst MobileNav = styled.nav.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  position: fixed;\n  top: 3.75rem;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: ${theme.colors.white};\n  flex-direction: column;\n  padding: ${theme.spacing.lg} ${theme.spacing.md};\n  box-shadow: ${theme.shadows.xl};\n  transform: translateY(${props => (props.isOpen ? '0' : '-100%')});\n  opacity: ${props => (props.isOpen ? '1' : '0')};\n  visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  z-index: 999;\n  overflow-y: auto;\n  gap: ${theme.spacing.sm};\n  align-items: stretch;\n  border-top: 1px solid ${theme.colors.gray200};\n  -webkit-overflow-scrolling: touch;\n  padding-bottom: calc(${theme.spacing.xl} + env(safe-area-inset-bottom));\n  display: flex;\n\n  ${media.tabletUp} {\n    display: none;\n  }\n`;\n\nconst NavLink = styled(Link).withConfig({\n  shouldForwardProp: prop => prop !== 'isScrolled' && prop !== 'isMobile',\n})`\n  color: ${props =>\n    props.isMobile\n      ? theme.colors.gray700\n      : props.isScrolled\n        ? theme.colors.gray700\n        : 'rgba(255, 255, 255, 0.9)'};\n  font-weight: ${props => (props.isMobile ? '600' : '500')};\n  text-decoration: none;\n  padding: ${props =>\n    props.isMobile\n      ? `${theme.spacing.lg} ${theme.spacing.xl}`\n      : `${theme.spacing.xs} ${theme.spacing.sm}`};\n  border-radius: ${props =>\n    props.isMobile ? theme.borderRadius.lg : theme.borderRadius.md};\n  transition: all 0.3s ease;\n  white-space: nowrap;\n  display: flex;\n  align-items: center;\n  position: relative;\n  font-size: ${props => (props.isMobile ? '1.125rem' : '0.875rem')};\n  width: ${props => (props.isMobile ? '100%' : 'auto')};\n  text-align: ${props => (props.isMobile ? 'center' : 'left')};\n  justify-content: ${props => (props.isMobile ? 'center' : 'flex-start')};\n  min-height: ${props => (props.isMobile ? '48px' : 'auto')};\n\n  &:hover {\n    color: ${props =>\n      props.isMobile\n        ? theme.colors.primary\n        : props.isScrolled\n          ? theme.colors.primary\n          : theme.colors.white};\n    background: ${props =>\n      props.isMobile\n        ? theme.colors.gray50\n        : props.isScrolled\n          ? theme.colors.gray50\n          : 'rgba(255, 255, 255, 0.1)'};\n    transform: ${props => (props.isMobile ? 'none' : 'translateY(-1px)')};\n  }\n\n  &.active {\n    color: ${theme.colors.primary};\n    background: ${theme.colors.primaryLight};\n    color: ${theme.colors.white};\n  }\n\n  @media (min-width: 769px) and (max-width: 1024px) {\n    padding: ${theme.spacing.xs} ${theme.spacing.sm};\n    font-size: 0.8125rem;\n  }\n\n  @media (min-width: 1201px) {\n    font-size: 0.875rem;\n  }\n`;\n\nconst DropdownContainer = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isMobile',\n})`\n  position: relative;\n  display: inline-block;\n  width: ${props => (props.isMobile ? '100%' : 'auto')};\n`;\n\nconst DropdownButton = styled.button.withConfig({\n  shouldForwardProp: prop =>\n    prop !== 'isOpen' && prop !== 'isScrolled' && prop !== 'isMobile',\n})`\n  display: flex;\n  align-items: center;\n  justify-content: ${props => (props.isMobile ? 'center' : 'flex-start')};\n  gap: ${theme.spacing.xs};\n  color: ${props =>\n    props.isMobile\n      ? theme.colors.gray700\n      : props.isScrolled\n        ? theme.colors.gray700\n        : 'rgba(255, 255, 255, 0.9)'};\n  font-weight: ${props => (props.isMobile ? '600' : '500')};\n  background: none;\n  border: none;\n  padding: ${props =>\n    props.isMobile\n      ? `${theme.spacing.lg} ${theme.spacing.xl}`\n      : `${theme.spacing.xs} ${theme.spacing.sm}`};\n  border-radius: ${props =>\n    props.isMobile ? theme.borderRadius.lg : theme.borderRadius.md};\n  transition: all 0.3s ease;\n  cursor: pointer;\n  white-space: nowrap;\n  font-size: ${props => (props.isMobile ? '1.125rem' : '0.875rem')};\n  width: ${props => (props.isMobile ? '100%' : 'auto')};\n  min-height: ${props => (props.isMobile ? '48px' : 'auto')};\n\n  &:hover {\n    color: ${props =>\n      props.isMobile\n        ? theme.colors.primary\n        : props.isScrolled\n          ? theme.colors.primary\n          : theme.colors.white};\n    background: ${props =>\n      props.isMobile\n        ? theme.colors.gray50\n        : props.isScrolled\n          ? theme.colors.gray50\n          : 'rgba(255, 255, 255, 0.1)'};\n    transform: ${props => (props.isMobile ? 'none' : 'translateY(-1px)')};\n  }\n\n  &:focus {\n    outline: 2px solid ${theme.colors.primary};\n    outline-offset: 2px;\n  }\n\n  svg {\n    transition: transform 0.2s ease;\n    transform: ${props => (props.isOpen ? 'rotate(180deg)' : 'rotate(0deg)')};\n    font-size: 0.875rem;\n  }\n\n  @media (min-width: 769px) and (max-width: 1024px) {\n    padding: ${theme.spacing.sm};\n    font-size: 0.875rem;\n  }\n\n  @media (min-width: 1025px) and (max-width: 1200px) {\n    padding: ${theme.spacing.sm} ${theme.spacing.md};\n    font-size: 0.9rem;\n  }\n\n  @media (min-width: 1201px) {\n    padding: ${theme.spacing.sm} ${theme.spacing.md};\n    font-size: 1rem;\n  }\n`;\n\nconst DropdownMenu = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen' && prop !== 'isMobile',\n})`\n  position: ${props => (props.isMobile ? 'static' : 'absolute')};\n  top: ${props => (props.isMobile ? 'auto' : '100%')};\n  left: 0;\n  background: ${props =>\n    props.isMobile ? theme.colors.gray50 : theme.colors.white};\n  border-radius: ${props =>\n    props.isMobile ? theme.borderRadius.md : theme.borderRadius.lg};\n  box-shadow: ${props => (props.isMobile ? 'none' : theme.shadows.xl)};\n  border: ${props =>\n    props.isMobile ? 'none' : `1px solid ${theme.colors.gray200}`};\n  min-width: ${props => (props.isMobile ? 'auto' : '12.5rem')};\n  z-index: 1000;\n  opacity: ${props => (props.isOpen ? '1' : '0')};\n  visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n  transform: ${props =>\n    props.isMobile\n      ? 'none'\n      : `translateY(${props.isOpen ? '0' : '-0.625rem'})`};\n  transition: all 0.2s ease;\n  margin-top: ${props => (props.isMobile ? theme.spacing.sm : '0')};\n  width: ${props => (props.isMobile ? '100%' : 'auto')};\n\n  ${media.tablet} {\n    min-width: 10rem;\n  }\n`;\n\nconst DropdownItem = styled(Link)`\n  display: block;\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  color: ${theme.colors.gray700};\n  text-decoration: none;\n  transition: all 0.2s ease;\n  border-bottom: 1px solid ${theme.colors.gray100};\n  font-size: 0.875rem;\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  &:hover {\n    background: ${theme.colors.gray50};\n    color: ${theme.colors.primary};\n  }\n\n  &:first-child {\n    border-top-left-radius: ${theme.borderRadius.lg};\n    border-top-right-radius: ${theme.borderRadius.lg};\n  }\n\n  &:last-child {\n    border-bottom-left-radius: ${theme.borderRadius.lg};\n    border-bottom-right-radius: ${theme.borderRadius.lg};\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.lg} ${theme.spacing.md};\n    text-align: center;\n    font-size: 1rem;\n    border-bottom: 1px solid ${theme.colors.gray200};\n    min-height: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &:first-child,\n    &:last-child {\n      border-radius: 0;\n    }\n\n    &:hover,\n    &:focus {\n      background: ${theme.colors.gray50};\n      color: ${theme.colors.primary};\n    }\n\n    &:active {\n      background: ${theme.colors.gray100};\n    }\n  }\n`;\n\nconst UserSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  flex-shrink: 0;\n  min-width: 0;\n\n  ${media.mobile} {\n    gap: ${theme.spacing.xs};\n  }\n\n  @media (min-width: 769px) and (max-width: 1024px) {\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst LoginButton = styled(Link).withConfig({\n  shouldForwardProp: prop => prop !== 'isScrolled',\n})`\n  color: ${props =>\n    props.isScrolled ? theme.colors.gray700 : 'rgba(255, 255, 255, 0.9)'};\n  font-weight: 500;\n  text-decoration: none;\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  transition: all 0.3s ease;\n  white-space: nowrap;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    color: ${props =>\n      props.isScrolled ? theme.colors.primary : theme.colors.white};\n    background: ${props =>\n      props.isScrolled ? theme.colors.gray50 : 'rgba(255, 255, 255, 0.1)'};\n    transform: translateY(-1px);\n  }\n\n  &:focus {\n    outline: 2px solid ${theme.colors.primary};\n    outline-offset: 2px;\n  }\n\n  ${media.mobile} {\n    display: none;\n  }\n\n  @media (min-width: 769px) and (max-width: 1024px) {\n    padding: ${theme.spacing.sm};\n    font-size: 0.875rem;\n  }\n\n  @media (min-width: 1025px) and (max-width: 1200px) {\n    padding: ${theme.spacing.sm} ${theme.spacing.md};\n    font-size: 0.9rem;\n  }\n\n  @media (min-width: 1201px) {\n    padding: ${theme.spacing.sm} ${theme.spacing.md};\n    font-size: 1rem;\n  }\n`;\n\nconst RegisterButton = styled(Button).withConfig({\n  shouldForwardProp: prop => prop !== 'isScrolled',\n})`\n  background: ${props =>\n    props.isScrolled ? theme.colors.primary : 'rgba(255, 255, 255, 0.2)'};\n  color: ${theme.colors.white};\n  border: ${props =>\n    props.isScrolled ? 'none' : '1px solid rgba(255, 255, 255, 0.3)'};\n  padding: ${theme.spacing.sm} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  transition: all 0.3s ease;\n  white-space: nowrap;\n  box-shadow: ${props => (props.isScrolled ? theme.shadows.sm : 'none')};\n  backdrop-filter: ${props => (props.isScrolled ? 'none' : 'blur(10px)')};\n\n  &:hover {\n    background: ${props =>\n      props.isScrolled ? theme.colors.primaryDark : 'rgba(255, 255, 255, 0.3)'};\n    transform: translateY(-1px);\n    box-shadow: ${theme.shadows.md};\n  }\n\n  &:focus {\n    outline: 2px solid ${theme.colors.primary};\n    outline-offset: 2px;\n  }\n\n  &:active {\n    transform: translateY(0);\n    box-shadow: ${theme.shadows.sm};\n  }\n\n  ${media.mobile} {\n    display: none;\n  }\n\n  @media (min-width: 769px) and (max-width: 1024px) {\n    padding: ${theme.spacing.sm} ${theme.spacing.md};\n    font-size: 0.875rem;\n  }\n\n  @media (min-width: 1025px) and (max-width: 1200px) {\n    padding: ${theme.spacing.sm} ${theme.spacing.lg};\n    font-size: 0.9rem;\n  }\n\n  @media (min-width: 1201px) {\n    padding: ${theme.spacing.sm} ${theme.spacing.lg};\n    font-size: 1rem;\n  }\n`;\n\nconst MobileMenuButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'isScrolled' && prop !== 'isInHero',\n})`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${props => {\n    if (props.isScrolled) return 'none';\n    if (props.isInHero) return 'rgba(255, 255, 255, 0.1)';\n    return 'none';\n  }};\n  border: ${props => {\n    if (props.isScrolled) return 'none';\n    if (props.isInHero) return '1px solid rgba(255, 255, 255, 0.2)';\n    return 'none';\n  }};\n  color: ${props =>\n    props.isScrolled ? theme.colors.gray700 : theme.colors.white};\n  font-size: 1.25rem;\n  padding: ${theme.spacing.sm};\n  cursor: pointer;\n  border-radius: ${theme.borderRadius.md};\n  transition: all 0.3s ease;\n  position: relative;\n  z-index: 1000;\n  flex-shrink: 0;\n  width: 2.75rem;\n  height: 2.75rem;\n  min-width: 44px;\n  min-height: 44px;\n  touch-action: manipulation;\n  backdrop-filter: ${props => {\n    if (props.isScrolled) return 'none';\n    if (props.isInHero) return 'blur(10px)';\n    return 'none';\n  }};\n  text-shadow: ${props => {\n    if (props.isScrolled) return 'none';\n    if (props.isInHero) return '0 2px 4px rgba(0, 0, 0, 0.3)';\n    return 'none';\n  }};\n\n  &:hover {\n    background: ${props =>\n      props.isScrolled ? theme.colors.gray50 : 'rgba(255, 255, 255, 0.1)'};\n    color: ${props =>\n      props.isScrolled ? theme.colors.primary : theme.colors.white};\n    transform: scale(1.05);\n  }\n\n  &:focus {\n    outline: 2px solid ${theme.colors.primary};\n    outline-offset: 2px;\n  }\n\n  &:active {\n    background: ${props =>\n      props.isScrolled ? theme.colors.gray100 : 'rgba(255, 255, 255, 0.2)'};\n    transform: scale(0.95);\n  }\n\n  ${media.tabletUp} {\n    display: none;\n  }\n`;\n\nconst MobileAuthButtons = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.md};\n  padding: ${theme.spacing.xl} 0;\n  border-top: 1px solid ${theme.colors.gray200};\n  margin-top: auto;\n  width: 100%;\n  padding-bottom: calc(${theme.spacing.xl} + env(safe-area-inset-bottom));\n`;\n\nconst MobileAuthButton = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: ${theme.spacing.lg} ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  font-weight: 600;\n  text-decoration: none;\n  transition: all 0.2s ease;\n  font-size: 1.125rem;\n  min-height: 48px;\n  touch-action: manipulation;\n\n  &.login {\n    color: ${theme.colors.gray700};\n    background: ${theme.colors.gray100};\n\n    &:hover,\n    &:focus {\n      background: ${theme.colors.gray200};\n      color: ${theme.colors.primary};\n    }\n\n    &:active {\n      background: ${theme.colors.gray300};\n    }\n  }\n\n  &.register {\n    color: ${theme.colors.white};\n    background: ${theme.colors.primary};\n\n    &:hover,\n    &:focus {\n      background: ${theme.colors.primaryDark};\n    }\n\n    &:active {\n      background: ${theme.colors.primaryDark};\n      transform: scale(0.98);\n    }\n  }\n`;\n\nconst MobileMenuOverlay = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  display: block;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 998;\n  opacity: ${props => (props.isOpen ? '1' : '0')};\n  visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n  transition: all 0.3s ease;\n  backdrop-filter: blur(4px);\n\n  ${media.tabletUp} {\n    display: none;\n  }\n`;\n\nconst Header = ({ isOwnerView = false }) => {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [isInHero, setIsInHero] = useState(false);\n  const dropdownRef = useRef(null);\n\n  const closeMobileMenu = () => setMobileMenuOpen(false);\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\n  const closeDropdown = () => setDropdownOpen(false);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        closeDropdown();\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Handle escape key to close mobile menu and dropdown\n  useEffect(() => {\n    const handleEscapeKey = event => {\n      if (event.key === 'Escape') {\n        if (mobileMenuOpen) {\n          closeMobileMenu();\n        }\n        if (dropdownOpen) {\n          closeDropdown();\n        }\n      }\n    };\n\n    document.addEventListener('keydown', handleEscapeKey);\n    return () => {\n      document.removeEventListener('keydown', handleEscapeKey);\n    };\n  }, [mobileMenuOpen, dropdownOpen]);\n\n  // Prevent body scroll when mobile menu is open\n  useEffect(() => {\n    if (mobileMenuOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n\n    return () => {\n      document.body.style.overflow = 'unset';\n    };\n  }, [mobileMenuOpen]);\n\n  // Handle scroll detection for navbar transparency and hero detection\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY;\n      const windowHeight = window.innerHeight;\n\n      // Check if scrolled\n      setIsScrolled(scrollPosition > 50);\n\n      // Check if in hero section (approximately first 75% of viewport height)\n      const heroHeight = windowHeight * 0.75;\n      setIsInHero(scrollPosition < heroHeight);\n    };\n\n    handleScroll(); // Call once on mount\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const handleDropdownItemClick = () => {\n    closeDropdown();\n    closeMobileMenu();\n  };\n\n  return (\n    <>\n      <MobileMenuOverlay isOpen={mobileMenuOpen} onClick={closeMobileMenu} />\n      <HeaderContainer isScrolled={isScrolled} isInHero={isInHero}>\n        <HeaderContent>\n          <Logo\n            to={isOwnerView ? '/' : '/'}\n            onClick={closeMobileMenu}\n            isScrolled={isScrolled}\n            isInHero={isInHero}\n          >\n            <FaHotel />\n            StoreBuilder\n          </Logo>\n\n          {/* Desktop Navigation */}\n          <DesktopNav>\n            {isOwnerView ? (\n              <>\n                <NavLink to=\"/\" isScrolled={isScrolled}>\n                  Dashboard\n                </NavLink>\n                <NavLink to=\"/owner/my-hotels\" isScrolled={isScrolled}>\n                  My Hotels\n                </NavLink>\n                <NavLink to=\"/owner/bookings\" isScrolled={isScrolled}>\n                  Bookings\n                </NavLink>\n                <NavLink to=\"/owner/profile\" isScrolled={isScrolled}>\n                  Profile\n                </NavLink>\n              </>\n            ) : (\n              <>\n                <NavLink to=\"/\" isScrolled={isScrolled}>\n                  Home\n                </NavLink>\n                <NavLink to=\"/pricing\" isScrolled={isScrolled}>\n                  Pricing\n                </NavLink>\n                <DropdownContainer ref={dropdownRef}>\n                  <DropdownButton\n                    onClick={toggleDropdown}\n                    isOpen={dropdownOpen}\n                    isScrolled={isScrolled}\n                    aria-expanded={dropdownOpen}\n                    aria-haspopup=\"true\"\n                    aria-label=\"Explore Stores menu\"\n                  >\n                    Explore Stores\n                    <FaChevronDown />\n                  </DropdownButton>\n                  <DropdownMenu isOpen={dropdownOpen} role=\"menu\">\n                    <DropdownItem\n                      to=\"/hotels\"\n                      onClick={handleDropdownItemClick}\n                      role=\"menuitem\"\n                    >\n                      🏨 Hotels\n                    </DropdownItem>\n                    <DropdownItem\n                      to=\"/ecommerce\"\n                      onClick={handleDropdownItemClick}\n                      role=\"menuitem\"\n                    >\n                      🛍 Ecommerce\n                    </DropdownItem>\n                    <DropdownItem\n                      to=\"/weddings\"\n                      onClick={handleDropdownItemClick}\n                      role=\"menuitem\"\n                    >\n                      💍 Weddings\n                    </DropdownItem>\n                    <DropdownItem\n                      to=\"/automobiles\"\n                      onClick={handleDropdownItemClick}\n                      role=\"menuitem\"\n                    >\n                      🚗 Automobiles\n                    </DropdownItem>\n                  </DropdownMenu>\n                </DropdownContainer>\n              </>\n            )}\n          </DesktopNav>\n\n          {/* Mobile Navigation */}\n          <MobileNav isOpen={mobileMenuOpen}>\n            {isOwnerView ? (\n              <>\n                <NavLink to=\"/\" onClick={closeMobileMenu} isMobile={true}>\n                  Dashboard\n                </NavLink>\n                <NavLink\n                  to=\"/owner/my-hotels\"\n                  onClick={closeMobileMenu}\n                  isMobile={true}\n                >\n                  My Hotels\n                </NavLink>\n                <NavLink\n                  to=\"/owner/bookings\"\n                  onClick={closeMobileMenu}\n                  isMobile={true}\n                >\n                  Bookings\n                </NavLink>\n                <NavLink\n                  to=\"/owner/profile\"\n                  onClick={closeMobileMenu}\n                  isMobile={true}\n                >\n                  Profile\n                </NavLink>\n              </>\n            ) : (\n              <>\n                <NavLink to=\"/\" onClick={closeMobileMenu} isMobile={true}>\n                  Home\n                </NavLink>\n                <NavLink\n                  to=\"/pricing\"\n                  onClick={closeMobileMenu}\n                  isMobile={true}\n                >\n                  Pricing\n                </NavLink>\n                <DropdownContainer isMobile={true}>\n                  <DropdownButton\n                    onClick={toggleDropdown}\n                    isOpen={dropdownOpen}\n                    isMobile={true}\n                    aria-expanded={dropdownOpen}\n                    aria-haspopup=\"true\"\n                    aria-label=\"Explore Stores menu\"\n                  >\n                    Explore Stores\n                    <FaChevronDown />\n                  </DropdownButton>\n                  <DropdownMenu\n                    isOpen={dropdownOpen}\n                    isMobile={true}\n                    role=\"menu\"\n                  >\n                    <DropdownItem\n                      to=\"/hotels\"\n                      onClick={handleDropdownItemClick}\n                      role=\"menuitem\"\n                    >\n                      🏨 Hotels\n                    </DropdownItem>\n                    <DropdownItem\n                      to=\"/ecommerce\"\n                      onClick={handleDropdownItemClick}\n                      role=\"menuitem\"\n                    >\n                      🛍 Ecommerce\n                    </DropdownItem>\n                    <DropdownItem\n                      to=\"/weddings\"\n                      onClick={handleDropdownItemClick}\n                      role=\"menuitem\"\n                    >\n                      💍 Weddings\n                    </DropdownItem>\n                    <DropdownItem\n                      to=\"/automobiles\"\n                      onClick={handleDropdownItemClick}\n                      role=\"menuitem\"\n                    >\n                      🚗 Automobiles\n                    </DropdownItem>\n                  </DropdownMenu>\n                </DropdownContainer>\n              </>\n            )}\n\n            <MobileAuthButtons>\n              <MobileAuthButton\n                to=\"/login\"\n                className=\"login\"\n                onClick={closeMobileMenu}\n              >\n                Login\n              </MobileAuthButton>\n              <MobileAuthButton\n                to=\"/register\"\n                className=\"register\"\n                onClick={closeMobileMenu}\n              >\n                Register\n              </MobileAuthButton>\n            </MobileAuthButtons>\n          </MobileNav>\n\n          <UserSection>\n            <LoginButton\n              to=\"/login\"\n              onClick={closeMobileMenu}\n              isScrolled={isScrolled}\n            >\n              Login\n            </LoginButton>\n            <RegisterButton\n              as={Link}\n              to=\"/register\"\n              onClick={closeMobileMenu}\n              isScrolled={isScrolled}\n              style={{ textDecoration: 'none' }}\n            >\n              Register\n            </RegisterButton>\n\n            <MobileMenuButton\n              onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n              aria-label={mobileMenuOpen ? 'Close menu' : 'Open menu'}\n              aria-expanded={mobileMenuOpen}\n              isScrolled={isScrolled}\n              isInHero={isInHero}\n            >\n              {mobileMenuOpen ? <FaTimes /> : <FaBars />}\n            </MobileMenuButton>\n          </UserSection>\n        </HeaderContent>\n      </HeaderContainer>\n    </>\n  );\n};\n\nexport default Header;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/shared/Input.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/shared/ScrollToTop.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/shared/StoreCard.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaStar,\n  FaMapMarkerAlt,\n  FaClock,\n  FaPhone,\n  FaDirections,\n} from 'react-icons/fa';\nimport { theme, media } from '../../styles/GlobalStyle';\n\nconst Card = styled(Link)`\n  display: block;\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  overflow: hidden;\n  box-shadow: ${theme.shadows.md};\n  transition: all 0.3s ease;\n  text-decoration: none;\n  color: inherit;\n  border: 1px solid ${theme.colors.gray200};\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: ${theme.shadows.xl};\n    border-color: ${theme.colors.primary};\n  }\n\n  ${media.mobile} {\n    border-radius: ${theme.borderRadius.md};\n\n    &:hover {\n      transform: translateY(-2px);\n      box-shadow: ${theme.shadows.lg};\n    }\n  }\n\n  ${media.tablet} {\n    &:hover {\n      transform: translateY(-3px);\n    }\n  }\n`;\n\nconst CardImage = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'image',\n})`\n  position: relative;\n  height: 200px;\n  background-image: url(${props => props.image});\n  background-size: cover;\n  background-position: center;\n  overflow: hidden;\n\n  ${media.mobile} {\n    height: 160px;\n  }\n\n  ${media.tablet} {\n    height: 180px;\n  }\n`;\n\nconst ImageOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    to bottom,\n    transparent 0%,\n    rgba(0, 0, 0, 0.1) 50%,\n    rgba(0, 0, 0, 0.4) 100%\n  );\n`;\n\nconst FeaturedBadge = styled.div`\n  position: absolute;\n  top: ${theme.spacing.md};\n  left: ${theme.spacing.md};\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.8rem;\n  font-weight: 600;\n  text-transform: uppercase;\n\n  ${media.mobile} {\n    top: ${theme.spacing.sm};\n    left: ${theme.spacing.sm};\n    padding: ${theme.spacing.xs} ${theme.spacing.xs};\n    font-size: 0.7rem;\n  }\n`;\n\nconst DistanceBadge = styled.div`\n  position: absolute;\n  top: ${theme.spacing.md};\n  right: ${theme.spacing.md};\n  background: rgba(255, 255, 255, 0.9);\n  color: ${theme.colors.gray900};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.8rem;\n  font-weight: 600;\n  backdrop-filter: blur(10px);\n\n  ${media.mobile} {\n    top: ${theme.spacing.sm};\n    right: ${theme.spacing.sm};\n    padding: ${theme.spacing.xs} ${theme.spacing.xs};\n    font-size: 0.7rem;\n  }\n`;\n\nconst LogoContainer = styled.div`\n  position: absolute;\n  bottom: ${theme.spacing.md};\n  left: ${theme.spacing.md};\n  width: 60px;\n  height: 60px;\n  border-radius: ${theme.borderRadius.lg};\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.white};\n  box-shadow: ${theme.shadows.md};\n  overflow: hidden;\n\n  ${media.mobile} {\n    bottom: ${theme.spacing.sm};\n    left: ${theme.spacing.sm};\n    width: 50px;\n    height: 50px;\n    border-radius: ${theme.borderRadius.md};\n  }\n\n  ${media.tablet} {\n    width: 55px;\n    height: 55px;\n  }\n`;\n\nconst Logo = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst CardContent = styled.div`\n  padding: ${theme.spacing.lg};\n\n  ${media.mobile} {\n    padding: ${theme.spacing.md};\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.lg};\n  }\n`;\n\nconst StoreHeader = styled.div`\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst StoreName = styled.h3`\n  font-size: 1.3rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n  line-height: 1.3;\n\n  ${media.mobile} {\n    font-size: 1.125rem;\n    margin-bottom: ${theme.spacing.xs};\n  }\n\n  ${media.tablet} {\n    font-size: 1.2rem;\n  }\n`;\n\nconst StoreRating = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst StarContainer = styled.div`\n  display: flex;\n  gap: 2px;\n`;\n\nconst Star = styled(FaStar)`\n  color: #fbbf24;\n  font-size: 0.9rem;\n\n  ${media.mobile} {\n    font-size: 0.8rem;\n  }\n`;\n\nconst RatingText = styled.span`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n\n  ${media.mobile} {\n    font-size: 0.8rem;\n  }\n`;\n\nconst StoreAddress = styled.div`\n  display: flex;\n  align-items: flex-start;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n  margin-bottom: ${theme.spacing.md};\n  line-height: 1.4;\n\n  ${media.mobile} {\n    font-size: 0.8rem;\n    gap: ${theme.spacing.xs};\n    margin-bottom: ${theme.spacing.sm};\n  }\n`;\n\nconst Description = styled.p`\n  color: ${theme.colors.gray700};\n  font-size: 0.9rem;\n  line-height: 1.5;\n  margin-bottom: ${theme.spacing.md};\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n\n  ${media.mobile} {\n    font-size: 0.8rem;\n    margin-bottom: ${theme.spacing.sm};\n    -webkit-line-clamp: 3;\n  }\n`;\n\nconst Specialties = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.xs};\n  margin-bottom: ${theme.spacing.md};\n\n  ${media.mobile} {\n    gap: ${theme.spacing.xs};\n    margin-bottom: ${theme.spacing.sm};\n  }\n`;\n\nconst SpecialtyTag = styled.span`\n  background: ${theme.colors.gray100};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.8rem;\n  font-weight: 500;\n\n  ${media.mobile} {\n    padding: ${theme.spacing.xs} ${theme.spacing.xs};\n    font-size: 0.7rem;\n  }\n`;\n\nconst StoreInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: ${theme.spacing.md};\n  border-top: 1px solid ${theme.colors.gray200};\n\n  ${media.mobile} {\n    flex-direction: column;\n    align-items: stretch;\n    gap: ${theme.spacing.sm};\n    padding-top: ${theme.spacing.sm};\n  }\n\n  ${media.tablet} {\n    flex-direction: row;\n    align-items: center;\n    gap: 0;\n  }\n`;\n\nconst Hours = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  color: ${theme.colors.gray600};\n  font-size: 0.8rem;\n\n  ${media.mobile} {\n    font-size: 0.75rem;\n    justify-content: center;\n  }\n\n  ${media.tablet} {\n    justify-content: flex-start;\n  }\n`;\n\nconst ActionButton = styled.button`\n  background: none;\n  border: none;\n  color: ${theme.colors.primary};\n  font-size: 0.9rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    transform: translateX(2px);\n  }\n\n  ${media.mobile} {\n    font-size: 0.8rem;\n    padding: ${theme.spacing.xs};\n    gap: ${theme.spacing.xs};\n\n    &:hover {\n      transform: none;\n    }\n  }\n`;\n\nconst StoreCard = ({ store, category }) => {\n  const navigate = useNavigate();\n\n  const handleStoreClick = e => {\n    e.preventDefault();\n    if (\n      category === 'ecommerce' ||\n      category === 'automobiles' ||\n      category === 'weddings'\n    ) {\n      // Navigate to /{store.id} for ecommerce stores, automobile dealers, and wedding vendors\n      navigate(`/${store.id}`);\n    } else {\n      // For other categories, navigate normally\n      navigate(`/${category}/${store.id}`);\n    }\n  };\n\n  const renderStars = rating => {\n    const stars = [];\n    const fullStars = Math.floor(rating);\n    for (let i = 0; i < fullStars; i++) {\n      stars.push(<Star key={i} />);\n    }\n    return stars;\n  };\n\n  const getCurrentStatus = () => {\n    const now = new Date();\n    const currentDay = now.toLocaleDateString('en-US', { weekday: 'long' });\n\n    const todayHours = store.hours[currentDay];\n\n    if (todayHours === 'Closed' || todayHours === 'By Appointment') {\n      return { status: 'Closed', text: todayHours };\n    }\n\n    // Simple open/closed logic (can be enhanced)\n    return {\n      status: 'Open',\n      text: `Open until ${todayHours?.split(' - ')[1] || '9:00 PM'}`,\n    };\n  };\n\n  const handleDirections = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const address = encodeURIComponent(\n      `${store.address}, ${store.city}, ${store.state} ${store.zipCode}`\n    );\n    window.open(`https://maps.google.com/maps?q=${address}`, '_blank');\n  };\n\n  const handleCall = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    window.open(`tel:${store.phone}`, '_self');\n  };\n\n  const currentStatus = getCurrentStatus();\n\n  const cardContent = (\n    <>\n      <CardImage image={store.image}>\n        <ImageOverlay />\n        {store.featured && <FeaturedBadge>Featured</FeaturedBadge>}\n        <DistanceBadge>{store.distance} mi</DistanceBadge>\n        <LogoContainer>\n          <Logo src={store.logo} alt={`${store.name} logo`} />\n        </LogoContainer>\n      </CardImage>\n\n      <CardContent>\n        <StoreHeader>\n          <StoreName>{store.name}</StoreName>\n          <StoreRating>\n            <StarContainer>{renderStars(store.rating)}</StarContainer>\n            <RatingText>\n              {store.rating} ({store.reviewCount} reviews)\n            </RatingText>\n          </StoreRating>\n        </StoreHeader>\n\n        <StoreAddress>\n          <FaMapMarkerAlt style={{ marginTop: '2px', flexShrink: 0 }} />\n          <span>\n            {store.address}, {store.city}, {store.state}\n          </span>\n        </StoreAddress>\n\n        <Description>{store.description}</Description>\n\n        <Specialties>\n          {store.specialties.slice(0, 3).map((specialty, index) => (\n            <SpecialtyTag key={index}>{specialty}</SpecialtyTag>\n          ))}\n          {store.specialties.length > 3 && (\n            <SpecialtyTag>+{store.specialties.length - 3} more</SpecialtyTag>\n          )}\n        </Specialties>\n\n        <StoreInfo>\n          <Hours>\n            <FaClock />\n            <span\n              style={{\n                color:\n                  currentStatus.status === 'Open'\n                    ? theme.colors.success\n                    : theme.colors.error,\n              }}\n            >\n              {currentStatus.text}\n            </span>\n          </Hours>\n\n          <div\n            style={{\n              display: 'flex',\n              gap: theme.spacing.sm,\n              justifyContent: 'center',\n            }}\n          >\n            <ActionButton onClick={handleCall} title=\"Call Store\">\n              <FaPhone />\n              Call\n            </ActionButton>\n            <ActionButton onClick={handleDirections} title=\"Get Directions\">\n              <FaDirections />\n              Directions\n            </ActionButton>\n          </div>\n        </StoreInfo>\n      </CardContent>\n    </>\n  );\n\n  if (category === 'ecommerce' || category === 'automobiles') {\n    return (\n      <Card as=\"div\" onClick={handleStoreClick} style={{ cursor: 'pointer' }}>\n        {cardContent}\n      </Card>\n    );\n  }\n\n  return <Card to={`/${category}/${store.id}`}>{cardContent}</Card>;\n};\n\nexport default StoreCard;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/user/PlatformHomePage.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'useEffect' is defined but never used.","line":1,"column":27,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":36}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaArrowRight,\n  FaFacebook,\n  FaTwitter,\n  FaInstagram,\n  FaLinkedin,\n  FaPhone,\n  FaEnvelope,\n  FaMapMarkerAlt,\n  FaRocket,\n  FaCheck,\n  FaStar,\n  FaQuoteLeft,\n} from 'react-icons/fa';\nimport Header from '../shared/Header';\nimport { Button } from '../shared/Button';\nimport { theme, media } from '../../styles/GlobalStyle';\nimport { useAuth } from '../../context/AuthContext';\nimport AuthModal from '../auth/AuthModal';\nimport {\n  storeCategories,\n  platformStats,\n  platformBenefits,\n  platformTestimonials,\n} from '../../DummyData/platform';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  background: ${theme.colors.white};\n  padding-top: 0;\n`;\n\n// Hero Section Styles\nconst HeroSection = styled.section`\n  background: linear-gradient(135deg, #0f172a 0%, #1e293b 35%, #334155 100%);\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xl} 0;\n  text-align: center;\n  position: relative;\n  overflow: hidden;\n  min-height: 75vh;\n  display: flex;\n  align-items: center;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background:\n      radial-gradient(\n        circle at 30% 40%,\n        rgba(59, 130, 246, 0.1) 0%,\n        transparent 50%\n      ),\n      radial-gradient(\n        circle at 70% 80%,\n        rgba(168, 85, 247, 0.1) 0%,\n        transparent 50%\n      );\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 1000\"><defs><pattern id=\"grid\" width=\"50\" height=\"50\" patternUnits=\"userSpaceOnUse\"><path d=\"M 50 0 L 0 0 0 50\" fill=\"none\" stroke=\"%23ffffff05\" stroke-width=\"1\"/></pattern></defs><rect width=\"100%\" height=\"100%\" fill=\"url(%23grid)\"/></svg>');\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.lg} 0;\n    min-height: 65vh;\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.xl} 0;\n    min-height: 70vh;\n  }\n`;\n\nconst HeroContent = styled.div`\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n  position: relative;\n  z-index: 1;\n\n  ${media.mobile} {\n    padding: 0 ${theme.spacing.sm};\n  }\n\n  ${media.tablet} {\n    padding: 0 ${theme.spacing.lg};\n  }\n\n  ${media.desktop} {\n    padding: 0 ${theme.spacing.xl};\n  }\n`;\n\nconst HeroTitle = styled.h1`\n  font-size: 3rem;\n  font-weight: 800;\n  margin-bottom: ${theme.spacing.sm};\n  background: linear-gradient(135deg, #ffffff 0%, #e0e7ff 50%, #c7d2fe 100%);\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  line-height: 1.1;\n  letter-spacing: -0.02em;\n\n  ${media.mobile} {\n    font-size: 2.25rem;\n    margin-bottom: ${theme.spacing.xs};\n  }\n\n  ${media.tablet} {\n    font-size: 2.75rem;\n  }\n\n  ${media.desktop} {\n    font-size: 3.25rem;\n  }\n`;\n\nconst HeroSubtitle = styled.p`\n  font-size: 1.125rem;\n  margin-bottom: ${theme.spacing.md};\n  opacity: 0.95;\n  max-width: 750px;\n  margin-left: auto;\n  margin-right: auto;\n  line-height: 1.6;\n  font-weight: 400;\n  color: #e2e8f0;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1rem;\n  }\n`;\n\nconst TrustIndicators = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.lg};\n  flex-wrap: wrap;\n  opacity: 0.8;\n\n  ${media.mobile} {\n    gap: ${theme.spacing.sm};\n    justify-content: space-around;\n    padding: 0 ${theme.spacing.sm};\n  }\n`;\n\nconst TrustItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  font-size: 0.95rem;\n  color: #cbd5e1;\n\n  svg {\n    color: #10b981;\n  }\n\n  ${media.mobile} {\n    font-size: 0.85rem;\n    gap: ${theme.spacing.xs};\n  }\n`;\n\nconst HeroCTAContainer = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  margin-top: ${theme.spacing.lg};\n\n  ${media.mobile} {\n    flex-direction: column;\n    gap: ${theme.spacing.sm};\n    width: 100%;\n\n    & > * {\n      width: 100%;\n      max-width: 280px;\n    }\n  }\n`;\n\nconst CreateStoreCTA = styled(Button)`\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  font-size: 1rem;\n  font-weight: 600;\n  background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n  color: ${theme.colors.white};\n  border: none;\n  border-radius: ${theme.borderRadius.lg};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      90deg,\n      transparent,\n      rgba(255, 255, 255, 0.2),\n      transparent\n    );\n    transition: left 0.5s;\n  }\n\n  &:hover::before {\n    left: 100%;\n  }\n\n  &:hover {\n    background: linear-gradient(135deg, #059669 0%, #047857 100%);\n    transform: translateY(-2px);\n    box-shadow: 0 20px 40px rgba(16, 185, 129, 0.4);\n  }\n`;\n\nconst ExploreStoreCTA = styled(Button)`\n  padding: ${theme.spacing.lg} ${theme.spacing.xxl};\n  font-size: 1.15rem;\n  font-weight: 600;\n  background: transparent;\n  color: ${theme.colors.white};\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  border-radius: ${theme.borderRadius.lg};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  transition: all 0.3s ease;\n  backdrop-filter: blur(10px);\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    border-color: rgba(255, 255, 255, 0.5);\n    transform: translateY(-2px);\n    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);\n  }\n`;\n\n// Stats Section Styles\nconst StatsSection = styled.section`\n  padding: ${theme.spacing.xxl} 0;\n  background: ${theme.colors.white};\n  border-bottom: 1px solid ${theme.colors.gray200};\n`;\n\nconst StatsContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.xl};\n  text-align: center;\n\n  ${media.mobile} {\n    grid-template-columns: repeat(2, 1fr);\n    gap: ${theme.spacing.lg};\n    padding: 0 ${theme.spacing.sm};\n  }\n`;\n\nconst StatCard = styled.div`\n  padding: ${theme.spacing.lg};\n`;\n\nconst StatNumber = styled.div`\n  font-size: 3rem;\n  font-weight: 800;\n  color: ${theme.colors.primary};\n  margin-bottom: ${theme.spacing.sm};\n  line-height: 1;\n\n  ${media.mobile} {\n    font-size: 2.5rem;\n  }\n`;\n\nconst StatLabel = styled.div`\n  font-size: 1rem;\n  color: ${theme.colors.gray600};\n  font-weight: 500;\n`;\n\n// Explore Stores Section Styles\nconst ExploreStoresSection = styled.section`\n  padding: ${theme.spacing.xxl} 0;\n  background: ${theme.colors.gray50};\n`;\n\nconst ExploreStoresContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 2.8rem;\n  font-weight: 800;\n  text-align: center;\n  margin-bottom: ${theme.spacing.md};\n  color: ${theme.colors.gray900};\n  letter-spacing: -0.02em;\n\n  ${media.mobile} {\n    font-size: 2.2rem;\n  }\n`;\n\nconst SectionSubtitle = styled.p`\n  font-size: 1.2rem;\n  text-align: center;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.xxl};\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  line-height: 1.6;\n`;\n\nconst StoreCardsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: ${theme.spacing.xl};\n\n  ${media.mobile} {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n    padding: 0 ${theme.spacing.sm};\n  }\n\n  ${media.tablet} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nconst StoreCard = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  overflow: hidden;\n  box-shadow: ${theme.shadows.lg};\n  border: 1px solid ${theme.colors.gray200};\n  transition: all 0.3s ease;\n  cursor: pointer;\n  position: relative;\n\n  &:hover {\n    transform: translateY(-8px);\n    box-shadow: ${theme.shadows.xl};\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 4px;\n    background: ${props => props.gradient};\n    transform: scaleX(0);\n    transition: transform 0.3s ease;\n  }\n\n  &:hover::before {\n    transform: scaleX(1);\n  }\n`;\n\nconst StoreCardImage = styled.div`\n  height: 200px;\n  background: ${props => props.gradient};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.white};\n  font-size: 3rem;\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    inset: 0;\n    background: linear-gradient(\n      45deg,\n      transparent 30%,\n      rgba(255, 255, 255, 0.1) 50%,\n      transparent 70%\n    );\n  }\n`;\n\nconst StoreCardContent = styled.div`\n  padding: ${theme.spacing.xl};\n`;\n\nconst StoreCardTitle = styled.h3`\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.md};\n  color: ${theme.colors.gray900};\n`;\n\nconst StoreCardDescription = styled.p`\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.lg};\n  line-height: 1.6;\n`;\n\nconst ViewStoresButton = styled(Button)`\n  width: 100%;\n  background: ${props => props.gradient};\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n  transition: all 0.3s ease;\n\n  &:hover {\n    opacity: 0.9;\n    transform: none;\n  }\n`;\n\n// Why Choose Us Section Styles\nconst WhyChooseUsSection = styled.section`\n  padding: ${theme.spacing.xxl} 0;\n  background: ${theme.colors.white};\n`;\n\nconst WhyChooseUsContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n`;\n\nconst BenefitsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: ${theme.spacing.xl};\n\n  ${media.mobile} {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n    padding: 0 ${theme.spacing.sm};\n  }\n\n  ${media.tablet} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nconst BenefitCard = styled.div`\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.xl};\n  padding: ${theme.spacing.xl};\n  text-align: center;\n  transition: all 0.3s ease;\n  border: 2px solid transparent;\n\n  &:hover {\n    transform: translateY(-4px);\n    border-color: ${theme.colors.primary};\n    background: ${theme.colors.white};\n    box-shadow: ${theme.shadows.lg};\n  }\n`;\n\nconst BenefitIcon = styled.div`\n  width: 60px;\n  height: 60px;\n  margin: 0 auto ${theme.spacing.lg};\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  color: ${theme.colors.white};\n  background: ${theme.colors.primary};\n`;\n\nconst BenefitTitle = styled.h3`\n  font-size: 1.25rem;\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.md};\n  color: ${theme.colors.gray900};\n`;\n\nconst BenefitDescription = styled.p`\n  color: ${theme.colors.gray600};\n  line-height: 1.7;\n  font-size: 1rem;\n`;\n\n// Testimonials Section Styles\nconst TestimonialsSection = styled.section`\n  padding: ${theme.spacing.xxl} 0;\n  background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);\n`;\n\nconst TestimonialsContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n`;\n\nconst TestimonialsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  gap: ${theme.spacing.xl};\n\n  ${media.mobile} {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n    padding: 0 ${theme.spacing.sm};\n  }\n\n  ${media.tablet} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nconst TestimonialCard = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  padding: ${theme.spacing.xl};\n  box-shadow: ${theme.shadows.md};\n  border: 1px solid ${theme.colors.gray200};\n  position: relative;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: ${theme.shadows.xl};\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    right: -2px;\n    bottom: -2px;\n    background: linear-gradient(135deg, #3b82f6, #8b5cf6, #10b981);\n    border-radius: ${theme.borderRadius.xl};\n    z-index: -1;\n    opacity: 0;\n    transition: opacity 0.3s ease;\n  }\n\n  &:hover::before {\n    opacity: 1;\n  }\n`;\n\nconst TestimonialQuote = styled.div`\n  font-size: 2rem;\n  color: ${theme.colors.primary};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst TestimonialText = styled.p`\n  font-size: 1.1rem;\n  line-height: 1.7;\n  color: ${theme.colors.gray700};\n  margin-bottom: ${theme.spacing.lg};\n  font-style: italic;\n`;\n\nconst TestimonialAuthor = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst AuthorInfo = styled.div`\n  h4 {\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.xs};\n  }\n\n  p {\n    color: ${theme.colors.gray600};\n    font-size: 0.9rem;\n  }\n`;\n\nconst StarRating = styled.div`\n  display: flex;\n  gap: 2px;\n\n  svg {\n    color: #fbbf24;\n    font-size: 1.1rem;\n  }\n`;\n\n// CTA Banner Section Styles\nconst CTABannerSection = styled.section`\n  padding: ${theme.spacing.xxl} 0;\n  background: linear-gradient(135deg, #1f2937 0%, #374151 100%);\n  color: ${theme.colors.white};\n  text-align: center;\n  position: relative;\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 1000\"><circle fill=\"%23ffffff03\" cx=\"200\" cy=\"200\" r=\"100\"/><circle fill=\"%23ffffff03\" cx=\"800\" cy=\"400\" r=\"150\"/><circle fill=\"%23ffffff03\" cx=\"400\" cy=\"700\" r=\"80\"/></svg>');\n    background-size: cover;\n  }\n`;\n\nconst CTABannerContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n  position: relative;\n  z-index: 1;\n`;\n\nconst CTABannerTitle = styled.h2`\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.lg};\n  line-height: 1.2;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2rem;\n  }\n`;\n\nconst CTABannerButton = styled(Button)`\n  padding: ${theme.spacing.lg} ${theme.spacing.xxl};\n  font-size: 1.2rem;\n  font-weight: 600;\n  background: #10b981;\n  color: ${theme.colors.white};\n  border: none;\n  border-radius: ${theme.borderRadius.lg};\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: #059669;\n    transform: translateY(-2px);\n    box-shadow: ${theme.shadows.xl};\n  }\n`;\n\n// Footer Styles\nconst Footer = styled.footer`\n  background: ${theme.colors.gray900};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xxl} 0 ${theme.spacing.xl};\n`;\n\nconst FooterContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: ${theme.spacing.xl};\n\n  ${media.mobile} {\n    grid-template-columns: repeat(2, 1fr);\n    gap: ${theme.spacing.lg};\n    padding: 0 ${theme.spacing.sm};\n  }\n\n  ${media.tablet} {\n    grid-template-columns: repeat(2, 1fr);\n    gap: ${theme.spacing.xl};\n  }\n`;\n\nconst FooterSection = styled.div`\n  h3 {\n    font-size: 1.2rem;\n    margin-bottom: ${theme.spacing.lg};\n    color: ${theme.colors.white};\n\n    ${media.mobile} {\n      font-size: 1rem;\n      margin-bottom: ${theme.spacing.md};\n    }\n  }\n\n  ${media.mobile} {\n    text-align: center;\n  }\n`;\n\nconst FooterLink = styled.a`\n  display: block;\n  color: ${theme.colors.gray300};\n  text-decoration: none;\n  margin-bottom: ${theme.spacing.sm};\n  transition: color 0.2s ease;\n\n  &:hover {\n    color: ${theme.colors.white};\n  }\n`;\n\nconst ContactInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.md};\n  color: ${theme.colors.gray300};\n\n  ${media.mobile} {\n    flex-direction: column;\n    gap: ${theme.spacing.sm};\n    text-align: center;\n\n    svg {\n      display: none;\n    }\n  }\n`;\n\nconst SocialLinks = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  margin-top: ${theme.spacing.lg};\n\n  ${media.mobile} {\n    justify-content: center;\n    gap: ${theme.spacing.sm};\n    margin-top: ${theme.spacing.md};\n  }\n`;\n\nconst SocialLink = styled.a`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: ${theme.colors.gray700};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.white};\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: ${theme.colors.primary};\n    transform: translateY(-2px);\n  }\n`;\n\nconst FooterBottom = styled.div`\n  text-align: center;\n  padding-top: ${theme.spacing.xl};\n  margin-top: ${theme.spacing.xl};\n  border-top: 1px solid ${theme.colors.gray700};\n  color: ${theme.colors.gray400};\n\n  ${media.mobile} {\n    padding-top: ${theme.spacing.lg};\n    margin-top: ${theme.spacing.lg};\n    font-size: 0.875rem;\n  }\n`;\n\nconst PlatformHomePage = () => {\n  const navigate = useNavigate();\n  const { isAuthenticated } = useAuth();\n  const [showAuthModal, setShowAuthModal] = useState(false);\n\n  // Data is now imported from DummyData/platform.js\n  const stats = platformStats;\n  const benefits = platformBenefits;\n  const testimonials = platformTestimonials;\n\n  const handleStoreClick = store => {\n    navigate(store.path);\n  };\n\n  const handleCreateStore = () => {\n    if (isAuthenticated) {\n      navigate('/start-building');\n    } else {\n      setShowAuthModal(true);\n    }\n  };\n\n  const handleAuthSuccess = () => {\n    setShowAuthModal(false);\n    navigate('/start-building');\n  };\n\n  const handleExploreStores = () => {\n    // Scroll to explore stores section\n    const exploreSection = document.getElementById('explore-stores');\n    if (exploreSection) {\n      exploreSection.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <PageContainer>\n      <Header />\n\n      {/* Hero Section */}\n      <HeroSection>\n        <HeroContent>\n          <HeroTitle>Your Business. Your Website. Live in 5 Minutes.</HeroTitle>\n          <HeroSubtitle>\n            Trusted by 50,000+ businesses worldwide. Create stunning,\n            conversion-optimized stores for any industry with our\n            enterprise-grade no-code platform.\n          </HeroSubtitle>\n          <TrustIndicators>\n            <TrustItem>\n              <FaCheck />\n              <span>No Credit Card Required</span>\n            </TrustItem>\n            <TrustItem>\n              <FaCheck />\n              <span>14-Day Free Trial</span>\n            </TrustItem>\n            <TrustItem>\n              <FaCheck />\n              <span>24/7 Expert Support</span>\n            </TrustItem>\n          </TrustIndicators>\n          <HeroCTAContainer>\n            <CreateStoreCTA onClick={handleCreateStore}>\n              Start Building Your Store\n              <FaRocket />\n            </CreateStoreCTA>\n            <ExploreStoreCTA onClick={handleExploreStores}>\n              View Live Examples\n              <FaArrowRight />\n            </ExploreStoreCTA>\n          </HeroCTAContainer>\n        </HeroContent>\n      </HeroSection>\n\n      {/* Stats Section */}\n      <StatsSection>\n        <StatsContainer>\n          {stats.map((stat, index) => (\n            <StatCard key={index}>\n              <StatNumber>{stat.number}</StatNumber>\n              <StatLabel>{stat.label}</StatLabel>\n            </StatCard>\n          ))}\n        </StatsContainer>\n      </StatsSection>\n\n      {/* Explore Stores Section */}\n      <ExploreStoresSection id=\"explore-stores\">\n        <ExploreStoresContainer>\n          <SectionTitle>Industry-Specific Solutions</SectionTitle>\n          <SectionSubtitle>\n            Explore our specialized templates and features designed for your\n            industry. Each solution comes with industry-specific tools and\n            integrations.\n          </SectionSubtitle>\n          <StoreCardsGrid>\n            {storeCategories.map(store => {\n              const IconComponent = store.icon;\n              return (\n                <StoreCard\n                  key={store.id}\n                  gradient={store.gradient}\n                  onClick={() => handleStoreClick(store)}\n                >\n                  <StoreCardImage gradient={store.gradient}>\n                    <IconComponent />\n                  </StoreCardImage>\n                  <StoreCardContent>\n                    <StoreCardTitle>{store.title}</StoreCardTitle>\n                    <StoreCardDescription>\n                      {store.description}\n                    </StoreCardDescription>\n                    <ViewStoresButton gradient={store.gradient}>\n                      View {store.title} Stores\n                      <FaArrowRight />\n                    </ViewStoresButton>\n                  </StoreCardContent>\n                </StoreCard>\n              );\n            })}\n          </StoreCardsGrid>\n        </ExploreStoresContainer>\n      </ExploreStoresSection>\n\n      {/* Why Choose Us Section */}\n      <WhyChooseUsSection>\n        <WhyChooseUsContainer>\n          <SectionTitle>Why Leading Brands Choose StoreBuilder</SectionTitle>\n          <SectionSubtitle>\n            Join thousands of successful businesses who trust our platform to\n            power their online growth.\n          </SectionSubtitle>\n          <BenefitsGrid>\n            {benefits.map((benefit, index) => {\n              const IconComponent = benefit.icon;\n              return (\n                <BenefitCard key={index}>\n                  <BenefitIcon>\n                    <IconComponent />\n                  </BenefitIcon>\n                  <BenefitTitle>{benefit.title}</BenefitTitle>\n                  <BenefitDescription>{benefit.description}</BenefitDescription>\n                </BenefitCard>\n              );\n            })}\n          </BenefitsGrid>\n        </WhyChooseUsContainer>\n      </WhyChooseUsSection>\n\n      {/* Testimonials Section */}\n      <TestimonialsSection>\n        <TestimonialsContainer>\n          <SectionTitle>Trusted by Industry Leaders</SectionTitle>\n          <SectionSubtitle>\n            Don't just take our word for it. Here's what our customers say about\n            their success with StoreBuilder.\n          </SectionSubtitle>\n          <TestimonialsGrid>\n            {testimonials.map((testimonial, index) => (\n              <TestimonialCard key={index}>\n                <TestimonialQuote>\n                  <FaQuoteLeft />\n                </TestimonialQuote>\n                <TestimonialText>{testimonial.text}</TestimonialText>\n                <TestimonialAuthor>\n                  <AuthorInfo>\n                    <h4>{testimonial.name}</h4>\n                    <p>{testimonial.role}</p>\n                  </AuthorInfo>\n                  <StarRating>\n                    {[...Array(testimonial.rating)].map((_, i) => (\n                      <FaStar key={i} />\n                    ))}\n                  </StarRating>\n                </TestimonialAuthor>\n              </TestimonialCard>\n            ))}\n          </TestimonialsGrid>\n        </TestimonialsContainer>\n      </TestimonialsSection>\n\n      {/* CTA Banner Section */}\n      <CTABannerSection>\n        <CTABannerContainer>\n          <CTABannerTitle>Ready to Transform Your Business?</CTABannerTitle>\n          <CTABannerButton onClick={handleCreateStore}>\n            Start My Online Store\n            <FaRocket />\n          </CTABannerButton>\n        </CTABannerContainer>\n      </CTABannerSection>\n\n      {/* Footer */}\n      <Footer>\n        <FooterContent>\n          <FooterSection>\n            <h3>StoreBuilder</h3>\n            <p>\n              Empowering businesses to create professional websites with\n              industry-specific features and tools.\n            </p>\n            <SocialLinks>\n              <SocialLink href=\"#\" aria-label=\"Facebook\">\n                <FaFacebook />\n              </SocialLink>\n              <SocialLink href=\"#\" aria-label=\"Twitter\">\n                <FaTwitter />\n              </SocialLink>\n              <SocialLink href=\"#\" aria-label=\"Instagram\">\n                <FaInstagram />\n              </SocialLink>\n              <SocialLink href=\"#\" aria-label=\"LinkedIn\">\n                <FaLinkedin />\n              </SocialLink>\n            </SocialLinks>\n          </FooterSection>\n\n          <FooterSection>\n            <h3>Industries</h3>\n            <FooterLink href=\"/hotels\">Hotels</FooterLink>\n            <FooterLink href=\"/ecommerce\">Ecommerce</FooterLink>\n            <FooterLink href=\"/weddings\">Weddings</FooterLink>\n            <FooterLink href=\"/automobiles\">Automobiles</FooterLink>\n          </FooterSection>\n\n          <FooterSection>\n            <h3>Company</h3>\n            <FooterLink href=\"/about\">About Us</FooterLink>\n            <FooterLink href=\"/pricing\">Pricing</FooterLink>\n            <FooterLink href=\"/faq\">FAQ</FooterLink>\n          </FooterSection>\n\n          <FooterSection>\n            <h3>Support</h3>\n            <ContactInfo>\n              <FaPhone />\n              <span>+1 (555) 123-4567</span>\n            </ContactInfo>\n            <ContactInfo>\n              <FaEnvelope />\n              <span>hello@storebuilder.com</span>\n            </ContactInfo>\n            <ContactInfo>\n              <FaMapMarkerAlt />\n              <span>123 Business St, Tech City</span>\n            </ContactInfo>\n            <FooterLink href=\"/privacy\">Privacy Policy</FooterLink>\n            <FooterLink href=\"/terms\">Terms of Service</FooterLink>\n          </FooterSection>\n        </FooterContent>\n\n        <FooterBottom>\n          <p>&copy; 2024 StoreBuilder. All rights reserved.</p>\n        </FooterBottom>\n      </Footer>\n\n      <AuthModal\n        isOpen={showAuthModal}\n        onClose={() => setShowAuthModal(false)}\n        onSuccess={handleAuthSuccess}\n      />\n    </PageContainer>\n  );\n};\n\nexport default PlatformHomePage;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/user/PricingPage.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FaCheck, FaStar, FaArrowRight, FaPlus, FaMinus } from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport Header from '../shared/Header';\nimport {\n  pricingPlans,\n  pricingFeatures,\n  pricingFAQs,\n} from '../../DummyData/platform';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n`;\n\nconst HeroSection = styled.section`\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary} 0%,\n    ${theme.colors.primaryDark} 100%\n  );\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xxl} 0;\n  text-align: center;\n  position: relative;\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><defs><pattern id=\"grain\" width=\"100\" height=\"100\" patternUnits=\"userSpaceOnUse\"><circle cx=\"20\" cy=\"20\" r=\"1\" fill=\"rgba(255,255,255,0.1)\"/><circle cx=\"80\" cy=\"80\" r=\"1\" fill=\"rgba(255,255,255,0.1)\"/><circle cx=\"40\" cy=\"60\" r=\"1\" fill=\"rgba(255,255,255,0.1)\"/></pattern></defs><rect width=\"100\" height=\"100\" fill=\"url(%23grain)\"/></svg>');\n    opacity: 0.3;\n  }\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    padding: ${theme.spacing.xl} 0;\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n  position: relative;\n  z-index: 1;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: 0 ${theme.spacing.sm};\n  }\n`;\n\nconst HeroTitle = styled.h1`\n  font-size: 3.5rem;\n  font-weight: 800;\n  margin-bottom: ${theme.spacing.lg};\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.white} 0%,\n    rgba(255, 255, 255, 0.8) 100%\n  );\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  line-height: 1.1;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    font-size: 2.8rem;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2.2rem;\n  }\n`;\n\nconst HeroSubtitle = styled.p`\n  font-size: 1.3rem;\n  margin-bottom: ${theme.spacing.xl};\n  opacity: 0.9;\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n  line-height: 1.6;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.1rem;\n  }\n`;\n\nconst StatsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: ${theme.spacing.xxl};\n  margin-top: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    gap: ${theme.spacing.lg};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n    align-items: center;\n  }\n`;\n\nconst StatItem = styled.div`\n  text-align: center;\n\n  .number {\n    font-size: 2.5rem;\n    font-weight: 800;\n    margin-bottom: ${theme.spacing.xs};\n    color: ${theme.colors.white};\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n  }\n\n  .label {\n    font-size: 0.9rem;\n    opacity: 0.8;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    .number {\n      font-size: 2rem;\n    }\n  }\n`;\n\nconst PricingSection = styled.section`\n  padding: ${theme.spacing.xxl} 0;\n  background: ${theme.colors.white};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 2.5rem;\n  font-weight: 700;\n  text-align: center;\n  margin-bottom: ${theme.spacing.md};\n  color: ${theme.colors.gray900};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2rem;\n  }\n`;\n\nconst SectionSubtitle = styled.p`\n  font-size: 1.1rem;\n  text-align: center;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.xxl};\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst BillingToggle = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst ToggleContainer = styled.div`\n  background: ${theme.colors.gray100};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xs};\n  display: flex;\n  position: relative;\n`;\n\nconst ToggleOption = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  background: ${props => (props.active ? theme.colors.white : 'transparent')};\n  color: ${props =>\n    props.active ? theme.colors.gray900 : theme.colors.gray600};\n  border: none;\n  padding: ${theme.spacing.sm} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  position: relative;\n  box-shadow: ${props => (props.active ? theme.shadows.sm : 'none')};\n\n  &:hover {\n    color: ${theme.colors.gray900};\n  }\n`;\n\nconst SaveBadge = styled.div`\n  background: ${theme.colors.success};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 600;\n  margin-left: ${theme.spacing.sm};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst PricingGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  gap: ${theme.spacing.xl};\n  max-width: 1200px;\n  margin: 0 auto;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst PricingCard = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'featured',\n})`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  padding: ${theme.spacing.xxl};\n  box-shadow: ${props =>\n    props.featured ? '0 20px 60px rgba(59, 130, 246, 0.15)' : theme.shadows.lg};\n  border: ${props =>\n    props.featured\n      ? `3px solid ${theme.colors.primary}`\n      : `1px solid ${theme.colors.gray200}`};\n  position: relative;\n  transition: all 0.3s ease;\n  transform: ${props => (props.featured ? 'scale(1.05)' : 'scale(1)')};\n\n  &:hover {\n    transform: ${props => (props.featured ? 'scale(1.05)' : 'scale(1.02)')};\n    box-shadow: ${props =>\n      props.featured\n        ? '0 25px 70px rgba(59, 130, 246, 0.2)'\n        : theme.shadows.xl};\n  }\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    transform: scale(1);\n    padding: ${theme.spacing.xl};\n\n    &:hover {\n      transform: scale(1);\n    }\n  }\n`;\n\nconst PopularBadge = styled.div`\n  position: absolute;\n  top: -12px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary},\n    ${theme.colors.primaryDark}\n  );\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.sm} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  font-size: 0.8rem;\n  font-weight: 700;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst PlanIcon = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'featured',\n})`\n  width: 60px;\n  height: 60px;\n  background: ${props =>\n    props.featured\n      ? `linear-gradient(135deg, ${theme.colors.primary}, ${theme.colors.primaryDark})`\n      : theme.colors.gray100};\n  color: ${props =>\n    props.featured ? theme.colors.white : theme.colors.gray600};\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst PlanName = styled.h3`\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst PlanDescription = styled.p`\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.xl};\n  line-height: 1.6;\n`;\n\nconst PlanPrice = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst Price = styled.div`\n  font-size: 3rem;\n  font-weight: 800;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n  display: flex;\n  align-items: baseline;\n  gap: ${theme.spacing.xs};\n\n  .currency {\n    font-size: 1.5rem;\n    color: ${theme.colors.gray600};\n  }\n\n  .period {\n    font-size: 1rem;\n    color: ${theme.colors.gray500};\n    font-weight: 500;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2.5rem;\n\n    .currency {\n      font-size: 1.2rem;\n    }\n  }\n`;\n\nconst OriginalPrice = styled.span`\n  font-size: 1.2rem;\n  color: ${theme.colors.gray400};\n  text-decoration: line-through;\n  margin-right: ${theme.spacing.sm};\n`;\n\nconst PriceNote = styled.div`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray500};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst FeaturesList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0 0 ${theme.spacing.xl} 0;\n`;\n\nconst FeatureItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.md};\n  font-size: 0.95rem;\n  color: ${theme.colors.gray700};\n\n  .icon {\n    color: ${theme.colors.success};\n    font-size: 0.9rem;\n    flex-shrink: 0;\n  }\n\n  &.premium {\n    .icon {\n      color: ${theme.colors.primary};\n    }\n  }\n`;\n\nconst CTAButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'featured',\n})`\n  width: 100%;\n  background: ${props =>\n    props.featured\n      ? `linear-gradient(135deg, ${theme.colors.primary}, ${theme.colors.primaryDark})`\n      : theme.colors.white};\n  color: ${props =>\n    props.featured ? theme.colors.white : theme.colors.primary};\n  border: ${props =>\n    props.featured ? 'none' : `2px solid ${theme.colors.primary}`};\n  padding: ${theme.spacing.lg} ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  font-size: 1.1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n  box-shadow: ${props =>\n    props.featured ? '0 4px 15px rgba(59, 130, 246, 0.3)' : 'none'};\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: ${props =>\n      props.featured\n        ? '0 8px 25px rgba(59, 130, 246, 0.4)'\n        : '0 4px 15px rgba(59, 130, 246, 0.2)'};\n    background: ${props =>\n      props.featured\n        ? `linear-gradient(135deg, ${theme.colors.primaryDark}, ${theme.colors.primary})`\n        : theme.colors.primary};\n    color: ${theme.colors.white};\n  }\n`;\n\nconst FeaturesSection = styled.section`\n  padding: ${theme.spacing.xxl} 0;\n  background: ${theme.colors.gray50};\n`;\n\nconst FeaturesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: ${theme.spacing.xl};\n  margin-top: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst FeatureCard = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.xl};\n  box-shadow: ${theme.shadows.md};\n  text-align: center;\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: translateY(-4px);\n  }\n`;\n\nconst FeatureIcon = styled.div`\n  width: 80px;\n  height: 80px;\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary},\n    ${theme.colors.primaryDark}\n  );\n  color: ${theme.colors.white};\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 2rem;\n  margin: 0 auto ${theme.spacing.lg};\n`;\n\nconst FeatureTitle = styled.h3`\n  font-size: 1.3rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst FeatureDescription = styled.p`\n  color: ${theme.colors.gray600};\n  line-height: 1.6;\n`;\n\nconst FAQSection = styled.section`\n  padding: ${theme.spacing.xxl} 0;\n  background: ${theme.colors.white};\n`;\n\nconst FAQContainer = styled.div`\n  max-width: 800px;\n  margin: ${theme.spacing.xxl} auto 0;\n`;\n\nconst FAQItem = styled.div`\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.lg};\n  margin-bottom: ${theme.spacing.md};\n  overflow: hidden;\n`;\n\nconst FAQQuestion = styled.button`\n  width: 100%;\n  padding: ${theme.spacing.lg};\n  background: none;\n  border: none;\n  text-align: left;\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  transition: background 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray50};\n  }\n`;\n\nconst FAQAnswer = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  padding: 0 ${theme.spacing.lg} ${theme.spacing.lg};\n  color: ${theme.colors.gray700};\n  line-height: 1.6;\n  max-height: ${props => (props.isOpen ? '200px' : '0')};\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n`;\n\nconst CTASection = styled.section`\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.gray900} 0%,\n    ${theme.colors.gray800} 100%\n  );\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xxl} 0;\n  text-align: center;\n`;\n\nconst CTATitle = styled.h2`\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2rem;\n  }\n`;\n\nconst CTASubtitle = styled.p`\n  font-size: 1.2rem;\n  margin-bottom: ${theme.spacing.xl};\n  opacity: 0.9;\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst CTAButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.lg};\n  justify-content: center;\n  flex-wrap: wrap;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst PrimaryCTAButton = styled.button`\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary},\n    ${theme.colors.primaryDark}\n  );\n  color: ${theme.colors.white};\n  border: none;\n  padding: ${theme.spacing.lg} ${theme.spacing.xxl};\n  border-radius: ${theme.borderRadius.lg};\n  font-size: 1.1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 8px 25px rgba(59, 130, 246, 0.4);\n  }\n`;\n\nconst SecondaryCTAButton = styled.button`\n  background: transparent;\n  color: ${theme.colors.white};\n  border: 2px solid ${theme.colors.white};\n  padding: ${theme.spacing.lg} ${theme.spacing.xxl};\n  border-radius: ${theme.borderRadius.lg};\n  font-size: 1.1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: ${theme.colors.white};\n    color: ${theme.colors.gray900};\n    transform: translateY(-2px);\n  }\n`;\n\nconst PricingPage = () => {\n  const [isYearly, setIsYearly] = useState(false);\n  const [openFAQ, setOpenFAQ] = useState(null);\n\n  // Data is now imported from DummyData/platform.js\n  const plans = pricingPlans;\n  const features = pricingFeatures;\n  const faqs = pricingFAQs;\n\n  const toggleFAQ = index => {\n    setOpenFAQ(openFAQ === index ? null : index);\n  };\n\n  const getPrice = plan => {\n    return isYearly ? plan.yearlyPrice : plan.monthlyPrice;\n  };\n\n  const getOriginalPrice = plan => {\n    return isYearly ? plan.originalYearlyPrice : null;\n  };\n\n  return (\n    <PageContainer>\n      <Header />\n\n      <HeroSection>\n        <Container>\n          <HeroTitle>Simple, Transparent Pricing</HeroTitle>\n          <HeroSubtitle>\n            Choose the perfect plan for your business. Start with our free trial\n            and scale as you grow.\n          </HeroSubtitle>\n\n          <StatsContainer>\n            <StatItem>\n              <div className=\"number\">50,000+</div>\n              <div className=\"label\">Websites Created</div>\n            </StatItem>\n            <StatItem>\n              <div className=\"number\">99.9%</div>\n              <div className=\"label\">Uptime Guarantee</div>\n            </StatItem>\n            <StatItem>\n              <div className=\"number\">24/7</div>\n              <div className=\"label\">Expert Support</div>\n            </StatItem>\n          </StatsContainer>\n        </Container>\n      </HeroSection>\n\n      <PricingSection>\n        <Container>\n          <SectionTitle>Choose Your Plan</SectionTitle>\n          <SectionSubtitle>\n            Start with a 14-day free trial. No credit card required. Cancel\n            anytime.\n          </SectionSubtitle>\n\n          <BillingToggle>\n            <ToggleContainer>\n              <ToggleOption\n                active={!isYearly}\n                onClick={() => setIsYearly(false)}\n              >\n                Monthly\n              </ToggleOption>\n              <ToggleOption active={isYearly} onClick={() => setIsYearly(true)}>\n                Yearly\n                <SaveBadge>Save 20%</SaveBadge>\n              </ToggleOption>\n            </ToggleContainer>\n          </BillingToggle>\n\n          <PricingGrid>\n            {plans.map((plan, index) => (\n              <PricingCard key={index} featured={plan.featured}>\n                {plan.featured && (\n                  <PopularBadge>\n                    <FaStar />\n                    Most Popular\n                  </PopularBadge>\n                )}\n\n                <PlanIcon featured={plan.featured}>\n                  <plan.icon />\n                </PlanIcon>\n\n                <PlanName>{plan.name}</PlanName>\n                <PlanDescription>{plan.description}</PlanDescription>\n\n                <PlanPrice>\n                  <Price>\n                    <span className=\"currency\">₹</span>\n                    {getPrice(plan).toLocaleString()}\n                    <span className=\"period\">\n                      /{isYearly ? 'year' : 'month'}\n                    </span>\n                  </Price>\n                  {isYearly && getOriginalPrice(plan) && (\n                    <PriceNote>\n                      <OriginalPrice>\n                        ₹{getOriginalPrice(plan).toLocaleString()}\n                      </OriginalPrice>\n                      Save ₹\n                      {(\n                        getOriginalPrice(plan) - getPrice(plan)\n                      ).toLocaleString()}\n                    </PriceNote>\n                  )}\n                  {!isYearly && (\n                    <PriceNote>Billed monthly • Cancel anytime</PriceNote>\n                  )}\n                </PlanPrice>\n\n                <FeaturesList>\n                  {plan.features.map((feature, featureIndex) => (\n                    <FeatureItem\n                      key={featureIndex}\n                      className={plan.featured ? 'premium' : ''}\n                    >\n                      <FaCheck className=\"icon\" />\n                      {feature}\n                    </FeatureItem>\n                  ))}\n                </FeaturesList>\n\n                <CTAButton featured={plan.featured}>\n                  Start Free Trial\n                  <FaArrowRight />\n                </CTAButton>\n              </PricingCard>\n            ))}\n          </PricingGrid>\n        </Container>\n      </PricingSection>\n\n      <FeaturesSection>\n        <Container>\n          <SectionTitle>Why Choose StoreBuilder?</SectionTitle>\n          <SectionSubtitle>\n            Everything you need to build, launch, and grow your online presence\n          </SectionSubtitle>\n\n          <FeaturesGrid>\n            {features.map((feature, index) => (\n              <FeatureCard key={index}>\n                <FeatureIcon>\n                  <feature.icon />\n                </FeatureIcon>\n                <FeatureTitle>{feature.title}</FeatureTitle>\n                <FeatureDescription>{feature.description}</FeatureDescription>\n              </FeatureCard>\n            ))}\n          </FeaturesGrid>\n        </Container>\n      </FeaturesSection>\n\n      <FAQSection>\n        <Container>\n          <SectionTitle>Frequently Asked Questions</SectionTitle>\n          <SectionSubtitle>\n            Got questions? We've got answers. Can't find what you're looking\n            for? Contact our support team.\n          </SectionSubtitle>\n\n          <FAQContainer>\n            {faqs.map((faq, index) => (\n              <FAQItem key={index}>\n                <FAQQuestion onClick={() => toggleFAQ(index)}>\n                  {faq.question}\n                  {openFAQ === index ? <FaMinus /> : <FaPlus />}\n                </FAQQuestion>\n                <FAQAnswer isOpen={openFAQ === index}>{faq.answer}</FAQAnswer>\n              </FAQItem>\n            ))}\n          </FAQContainer>\n        </Container>\n      </FAQSection>\n\n      <CTASection>\n        <Container>\n          <CTATitle>Ready to Get Started?</CTATitle>\n          <CTASubtitle>\n            Join thousands of businesses already using StoreBuilder to create\n            stunning websites and grow their online presence.\n          </CTASubtitle>\n\n          <CTAButtons>\n            <PrimaryCTAButton>Start Your Free Trial</PrimaryCTAButton>\n            <SecondaryCTAButton>Talk to Sales</SecondaryCTAButton>\n          </CTAButtons>\n        </Container>\n      </CTASection>\n    </PageContainer>\n  );\n};\n\nexport default PricingPage;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/components/user/UserProfile.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'onClose' is defined but never used. Allowed unused args must match /^_/u.","line":357,"column":24,"nodeType":"Identifier","messageId":"unusedVar","endLine":357,"endColumn":31}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaUser,\n  FaCamera,\n  FaSave,\n  FaEdit,\n  FaBell,\n  FaLock,\n  FaStore,\n  FaToggleOn,\n  FaToggleOff,\n  FaGlobe,\n  FaLinkedin,\n  FaTwitter,\n  FaInstagram,\n  FaFacebook,\n} from 'react-icons/fa';\nimport { useAuth } from '../../context/AuthContext';\n\nconst ProfileContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n`;\n\nconst ProfileHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n  margin-bottom: 3rem;\n  padding-bottom: 2rem;\n  border-bottom: 1px solid #e5e7eb;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    text-align: center;\n    gap: 1rem;\n  }\n`;\n\nconst AvatarContainer = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst Avatar = styled.img`\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  object-fit: cover;\n  border: 4px solid #e5e7eb;\n`;\n\nconst AvatarUpload = styled.label`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  background: #3b82f6;\n  color: white;\n  border-radius: 50%;\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: #2563eb;\n    transform: scale(1.1);\n  }\n\n  input {\n    display: none;\n  }\n`;\n\nconst UserInfo = styled.div`\n  flex: 1;\n`;\n\nconst UserName = styled.h2`\n  font-size: 2rem;\n  font-weight: 700;\n  color: #111827;\n  margin: 0 0 0.5rem 0;\n`;\n\nconst UserRole = styled.div`\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  background: #eff6ff;\n  color: #3b82f6;\n  padding: 0.5rem 1rem;\n  border-radius: 999px;\n  font-weight: 600;\n  font-size: 0.875rem;\n  margin-bottom: 1rem;\n`;\n\nconst UserStats = styled.div`\n  display: flex;\n  gap: 2rem;\n\n  @media (max-width: 768px) {\n    justify-content: center;\n  }\n`;\n\nconst StatItem = styled.div`\n  text-align: center;\n\n  .number {\n    font-size: 1.5rem;\n    font-weight: 700;\n    color: #111827;\n  }\n\n  .label {\n    font-size: 0.875rem;\n    color: #6b7280;\n  }\n`;\n\nconst TabContainer = styled.div`\n  display: flex;\n  margin-bottom: 2rem;\n  border-bottom: 1px solid #e5e7eb;\n`;\n\nconst Tab = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  padding: 1rem 1.5rem;\n  background: none;\n  border: none;\n  border-bottom: 2px solid\n    ${props => (props.active ? '#3b82f6' : 'transparent')};\n  color: ${props => (props.active ? '#3b82f6' : '#6b7280')};\n  font-weight: ${props => (props.active ? '600' : '500')};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    color: #3b82f6;\n  }\n`;\n\nconst TabContent = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  display: ${props => (props.active ? 'block' : 'none')};\n`;\n\nconst FormSection = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: #111827;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`;\n\nconst FormGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 1.5rem;\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n\nconst Label = styled.label`\n  font-weight: 600;\n  color: #374151;\n  font-size: 0.875rem;\n`;\n\nconst Input = styled.input`\n  padding: 0.75rem 1rem;\n  border: 2px solid #e5e7eb;\n  border-radius: 8px;\n  font-size: 1rem;\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #3b82f6;\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n\nconst TextArea = styled.textarea`\n  padding: 0.75rem 1rem;\n  border: 2px solid #e5e7eb;\n  border-radius: 8px;\n  font-size: 1rem;\n  min-height: 100px;\n  resize: vertical;\n  font-family: inherit;\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #3b82f6;\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n\nconst Select = styled.select`\n  padding: 0.75rem 1rem;\n  border: 2px solid #e5e7eb;\n  border-radius: 8px;\n  font-size: 1rem;\n  background: white;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #3b82f6;\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n\nconst ToggleSwitch = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem;\n  background: #f9fafb;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: #f3f4f6;\n  }\n`;\n\nconst ToggleLabel = styled.div`\n  .title {\n    font-weight: 600;\n    color: #111827;\n    margin-bottom: 0.25rem;\n  }\n\n  .desc {\n    font-size: 0.875rem;\n    color: #6b7280;\n  }\n`;\n\nconst ToggleIcon = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'enabled',\n})`\n  font-size: 1.5rem;\n  color: ${props => (props.enabled ? '#10b981' : '#9ca3af')};\n`;\n\nconst SocialLinksGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1rem;\n`;\n\nconst SocialInput = styled.div`\n  display: flex;\n  align-items: center;\n  border: 2px solid #e5e7eb;\n  border-radius: 8px;\n  overflow: hidden;\n  transition: all 0.2s ease;\n\n  &:focus-within {\n    border-color: #3b82f6;\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n\n  .icon {\n    padding: 0.75rem;\n    background: #f9fafb;\n    color: #6b7280;\n    border-right: 1px solid #e5e7eb;\n  }\n\n  input {\n    flex: 1;\n    padding: 0.75rem;\n    border: none;\n    outline: none;\n    font-size: 1rem;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 1rem;\n  justify-content: flex-end;\n  margin-top: 2rem;\n  padding-top: 2rem;\n  border-top: 1px solid #e5e7eb;\n`;\n\nconst Button = styled.button`\n  padding: 0.75rem 1.5rem;\n  border-radius: 8px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst PrimaryButton = styled(Button)`\n  background: #3b82f6;\n  color: white;\n  border: 2px solid #3b82f6;\n\n  &:hover:not(:disabled) {\n    background: #2563eb;\n    border-color: #2563eb;\n  }\n`;\n\nconst SecondaryButton = styled(Button)`\n  background: white;\n  color: #374151;\n  border: 2px solid #e5e7eb;\n\n  &:hover:not(:disabled) {\n    background: #f9fafb;\n    border-color: #d1d5db;\n  }\n`;\n\nconst UserProfile = ({ onClose }) => {\n  const { user, updateProfile, switchRole } = useAuth();\n  const [activeTab, setActiveTab] = useState('personal');\n  const [isEditing, setIsEditing] = useState(false);\n  const [formData, setFormData] = useState({\n    name: user?.name || '',\n    email: user?.email || '',\n    phone: user?.phone || '',\n    bio: user?.profile?.bio || '',\n    location: user?.profile?.location || '',\n    website: user?.profile?.website || '',\n    socialLinks: {\n      linkedin: user?.profile?.socialLinks?.linkedin || '',\n      twitter: user?.profile?.socialLinks?.twitter || '',\n      instagram: user?.profile?.socialLinks?.instagram || '',\n      facebook: user?.profile?.socialLinks?.facebook || '',\n    },\n    preferences: {\n      notifications: {\n        email: user?.preferences?.notifications?.email ?? true,\n        sms: user?.preferences?.notifications?.sms ?? false,\n        push: user?.preferences?.notifications?.push ?? true,\n      },\n      language: user?.preferences?.language || 'en',\n      currency: user?.preferences?.currency || 'USD',\n    },\n  });\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    if (name.includes('.')) {\n      const [parent, child] = name.split('.');\n      setFormData(prev => ({\n        ...prev,\n        [parent]: {\n          ...prev[parent],\n          [child]: value,\n        },\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value,\n      }));\n    }\n  };\n\n  const handleToggle = (section, setting) => {\n    setFormData(prev => ({\n      ...prev,\n      preferences: {\n        ...prev.preferences,\n        [section]: {\n          ...prev.preferences[section],\n          [setting]: !prev.preferences[section][setting],\n        },\n      },\n    }));\n  };\n\n  const handleSave = async () => {\n    const result = await updateProfile({\n      name: formData.name,\n      phone: formData.phone,\n      profile: {\n        bio: formData.bio,\n        location: formData.location,\n        website: formData.website,\n        socialLinks: formData.socialLinks,\n      },\n      preferences: formData.preferences,\n    });\n\n    if (result.success) {\n      setIsEditing(false);\n      // Show success message\n    }\n  };\n\n  const getUserStats = () => {\n    if (user?.role === 'seller') {\n      return [\n        { number: user.seller?.totalProducts || 0, label: 'Products' },\n        { number: user.seller?.totalSales || 0, label: 'Sales' },\n        { number: user.seller?.rating || 0, label: 'Rating' },\n      ];\n    } else {\n      return [\n        {\n          number: JSON.parse(localStorage.getItem('userEnquiries') || '[]')\n            .length,\n          label: 'Enquiries',\n        },\n        {\n          number: JSON.parse(localStorage.getItem('recentlyViewed') || '[]')\n            .length,\n          label: 'Viewed',\n        },\n        { number: '4.8', label: 'Rating' },\n      ];\n    }\n  };\n\n  if (!user) return null;\n\n  return (\n    <ProfileContainer>\n      <ProfileHeader>\n        <AvatarContainer>\n          <Avatar src={user.avatar} alt={user.name} />\n          {isEditing && (\n            <AvatarUpload>\n              <FaCamera />\n              <input type=\"file\" accept=\"image/*\" />\n            </AvatarUpload>\n          )}\n        </AvatarContainer>\n\n        <UserInfo>\n          <UserName>{user.name}</UserName>\n          <UserRole>\n            {user.role === 'seller' ? <FaStore /> : <FaUser />}\n            {user.role.charAt(0).toUpperCase() + user.role.slice(1)}\n            {user.seller?.verified && ' • Verified'}\n          </UserRole>\n          <UserStats>\n            {getUserStats().map((stat, index) => (\n              <StatItem key={index}>\n                <div className=\"number\">{stat.number}</div>\n                <div className=\"label\">{stat.label}</div>\n              </StatItem>\n            ))}\n          </UserStats>\n        </UserInfo>\n      </ProfileHeader>\n\n      <TabContainer>\n        <Tab\n          active={activeTab === 'personal'}\n          onClick={() => setActiveTab('personal')}\n        >\n          Personal Info\n        </Tab>\n        <Tab\n          active={activeTab === 'preferences'}\n          onClick={() => setActiveTab('preferences')}\n        >\n          Preferences\n        </Tab>\n        <Tab\n          active={activeTab === 'security'}\n          onClick={() => setActiveTab('security')}\n        >\n          Security\n        </Tab>\n        {user.role === 'customer' && (\n          <Tab\n            active={activeTab === 'seller'}\n            onClick={() => setActiveTab('seller')}\n          >\n            Become Seller\n          </Tab>\n        )}\n      </TabContainer>\n\n      <TabContent active={activeTab === 'personal'}>\n        <FormSection>\n          <SectionTitle>\n            <FaUser />\n            Basic Information\n          </SectionTitle>\n          <FormGrid>\n            <FormGroup>\n              <Label>Full Name</Label>\n              <Input\n                name=\"name\"\n                value={formData.name}\n                onChange={handleInputChange}\n                disabled={!isEditing}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Email Address</Label>\n              <Input name=\"email\" value={formData.email} disabled />\n            </FormGroup>\n            <FormGroup>\n              <Label>Phone Number</Label>\n              <Input\n                name=\"phone\"\n                value={formData.phone}\n                onChange={handleInputChange}\n                disabled={!isEditing}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Location</Label>\n              <Input\n                name=\"location\"\n                value={formData.location}\n                onChange={handleInputChange}\n                disabled={!isEditing}\n                placeholder=\"City, Country\"\n              />\n            </FormGroup>\n          </FormGrid>\n        </FormSection>\n\n        <FormSection>\n          <SectionTitle>\n            <FaGlobe />\n            About & Links\n          </SectionTitle>\n          <FormGroup>\n            <Label>Bio</Label>\n            <TextArea\n              name=\"bio\"\n              value={formData.bio}\n              onChange={handleInputChange}\n              disabled={!isEditing}\n              placeholder=\"Tell us about yourself...\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label>Website</Label>\n            <Input\n              name=\"website\"\n              value={formData.website}\n              onChange={handleInputChange}\n              disabled={!isEditing}\n              placeholder=\"https://yourwebsite.com\"\n            />\n          </FormGroup>\n          <Label>Social Links</Label>\n          <SocialLinksGrid>\n            <SocialInput>\n              <div className=\"icon\">\n                <FaLinkedin />\n              </div>\n              <input\n                name=\"socialLinks.linkedin\"\n                value={formData.socialLinks.linkedin}\n                onChange={handleInputChange}\n                disabled={!isEditing}\n                placeholder=\"LinkedIn profile URL\"\n              />\n            </SocialInput>\n            <SocialInput>\n              <div className=\"icon\">\n                <FaTwitter />\n              </div>\n              <input\n                name=\"socialLinks.twitter\"\n                value={formData.socialLinks.twitter}\n                onChange={handleInputChange}\n                disabled={!isEditing}\n                placeholder=\"Twitter profile URL\"\n              />\n            </SocialInput>\n            <SocialInput>\n              <div className=\"icon\">\n                <FaInstagram />\n              </div>\n              <input\n                name=\"socialLinks.instagram\"\n                value={formData.socialLinks.instagram}\n                onChange={handleInputChange}\n                disabled={!isEditing}\n                placeholder=\"Instagram profile URL\"\n              />\n            </SocialInput>\n            <SocialInput>\n              <div className=\"icon\">\n                <FaFacebook />\n              </div>\n              <input\n                name=\"socialLinks.facebook\"\n                value={formData.socialLinks.facebook}\n                onChange={handleInputChange}\n                disabled={!isEditing}\n                placeholder=\"Facebook profile URL\"\n              />\n            </SocialInput>\n          </SocialLinksGrid>\n        </FormSection>\n      </TabContent>\n\n      <TabContent active={activeTab === 'preferences'}>\n        <FormSection>\n          <SectionTitle>\n            <FaBell />\n            Notifications\n          </SectionTitle>\n          <div\n            style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}\n          >\n            <ToggleSwitch\n              onClick={() => handleToggle('notifications', 'email')}\n            >\n              <ToggleLabel>\n                <div className=\"title\">Email Notifications</div>\n                <div className=\"desc\">Receive updates via email</div>\n              </ToggleLabel>\n              <ToggleIcon enabled={formData.preferences.notifications.email}>\n                {formData.preferences.notifications.email ? (\n                  <FaToggleOn />\n                ) : (\n                  <FaToggleOff />\n                )}\n              </ToggleIcon>\n            </ToggleSwitch>\n\n            <ToggleSwitch onClick={() => handleToggle('notifications', 'sms')}>\n              <ToggleLabel>\n                <div className=\"title\">SMS Notifications</div>\n                <div className=\"desc\">Receive updates via SMS</div>\n              </ToggleLabel>\n              <ToggleIcon enabled={formData.preferences.notifications.sms}>\n                {formData.preferences.notifications.sms ? (\n                  <FaToggleOn />\n                ) : (\n                  <FaToggleOff />\n                )}\n              </ToggleIcon>\n            </ToggleSwitch>\n\n            <ToggleSwitch onClick={() => handleToggle('notifications', 'push')}>\n              <ToggleLabel>\n                <div className=\"title\">Push Notifications</div>\n                <div className=\"desc\">Receive browser notifications</div>\n              </ToggleLabel>\n              <ToggleIcon enabled={formData.preferences.notifications.push}>\n                {formData.preferences.notifications.push ? (\n                  <FaToggleOn />\n                ) : (\n                  <FaToggleOff />\n                )}\n              </ToggleIcon>\n            </ToggleSwitch>\n          </div>\n        </FormSection>\n\n        <FormSection>\n          <SectionTitle>\n            <FaGlobe />\n            Regional Settings\n          </SectionTitle>\n          <FormGrid>\n            <FormGroup>\n              <Label>Language</Label>\n              <Select\n                name=\"preferences.language\"\n                value={formData.preferences.language}\n                onChange={handleInputChange}\n                disabled={!isEditing}\n              >\n                <option value=\"en\">English</option>\n                <option value=\"es\">Español</option>\n                <option value=\"fr\">Français</option>\n                <option value=\"de\">Deutsch</option>\n                <option value=\"it\">Italiano</option>\n                <option value=\"pt\">Português</option>\n              </Select>\n            </FormGroup>\n            <FormGroup>\n              <Label>Currency</Label>\n              <Select\n                name=\"preferences.currency\"\n                value={formData.preferences.currency}\n                onChange={handleInputChange}\n                disabled={!isEditing}\n              >\n                <option value=\"USD\">USD ($)</option>\n                <option value=\"EUR\">EUR (€)</option>\n                <option value=\"GBP\">GBP (£)</option>\n                <option value=\"CAD\">CAD ($)</option>\n                <option value=\"AUD\">AUD ($)</option>\n                <option value=\"JPY\">JPY (¥)</option>\n              </Select>\n            </FormGroup>\n          </FormGrid>\n        </FormSection>\n      </TabContent>\n\n      <TabContent active={activeTab === 'security'}>\n        <FormSection>\n          <SectionTitle>\n            <FaLock />\n            Security Settings\n          </SectionTitle>\n          <p style={{ color: '#6b7280', marginBottom: '2rem' }}>\n            Security features are coming soon. For now, you can update your\n            basic information above.\n          </p>\n        </FormSection>\n      </TabContent>\n\n      {user.role === 'customer' && (\n        <TabContent active={activeTab === 'seller'}>\n          <FormSection>\n            <SectionTitle>\n              <FaStore />\n              Become a Seller\n            </SectionTitle>\n            <p style={{ color: '#6b7280', marginBottom: '2rem' }}>\n              Join thousands of sellers on our platform and start selling your\n              products today!\n            </p>\n            <PrimaryButton onClick={() => switchRole('seller')}>\n              <FaStore />\n              Switch to Seller Account\n            </PrimaryButton>\n          </FormSection>\n        </TabContent>\n      )}\n\n      <ButtonGroup>\n        {isEditing ? (\n          <>\n            <SecondaryButton onClick={() => setIsEditing(false)}>\n              Cancel\n            </SecondaryButton>\n            <PrimaryButton onClick={handleSave}>\n              <FaSave />\n              Save Changes\n            </PrimaryButton>\n          </>\n        ) : (\n          <PrimaryButton onClick={() => setIsEditing(true)}>\n            <FaEdit />\n            Edit Profile\n          </PrimaryButton>\n        )}\n      </ButtonGroup>\n    </ProfileContainer>\n  );\n};\n\nexport default UserProfile;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/context/AppContext.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/context/AuthContext.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create Auth Context\nconst AuthContext = createContext();\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Auth Provider Component\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Initialize auth state from localStorage\n  useEffect(() => {\n    const initializeAuth = () => {\n      try {\n        const savedUser = localStorage.getItem('user');\n        const savedAuth = localStorage.getItem('isAuthenticated');\n\n        if (savedUser && savedAuth === 'true') {\n          const parsedUser = JSON.parse(savedUser);\n          setUser(parsedUser);\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        // Clear corrupted data\n        localStorage.removeItem('user');\n        localStorage.removeItem('isAuthenticated');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  // Login function\n  const login = async credentials => {\n    setLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // For demo purposes, create user based on email\n      const userData = {\n        id: Date.now(),\n        email: credentials.email,\n        name: credentials.name || getNameFromEmail(credentials.email),\n        phone: credentials.phone || '',\n        role: credentials.role || 'customer', // customer, seller, admin\n        avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(credentials.name || getNameFromEmail(credentials.email))}&background=1e40af&color=fff`,\n        preferences: {\n          notifications: {\n            email: true,\n            sms: false,\n            push: true,\n          },\n          language: 'en',\n          currency: 'USD',\n        },\n        profile: {\n          bio: '',\n          location: '',\n          website: '',\n          socialLinks: {},\n        },\n        createdAt: new Date().toISOString(),\n        lastLogin: new Date().toISOString(),\n      };\n\n      // If seller, add seller-specific data\n      if (credentials.role === 'seller') {\n        userData.seller = {\n          businessName: credentials.businessName || `${userData.name}'s Store`,\n          businessType: credentials.businessType || 'General',\n          verified: false,\n          rating: 0,\n          totalSales: 0,\n          totalProducts: 0,\n          joinedDate: new Date().toISOString(),\n          settings: {\n            autoRespond: true,\n            showLocation: true,\n            allowReviews: true,\n          },\n        };\n      }\n\n      setUser(userData);\n      setIsAuthenticated(true);\n\n      // Persist to localStorage\n      localStorage.setItem('user', JSON.stringify(userData));\n      localStorage.setItem('isAuthenticated', 'true');\n\n      return { success: true, user: userData };\n    } catch (error) {\n      return { success: false, error: error.message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    setLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1500));\n\n      const newUser = {\n        id: Date.now(),\n        ...userData,\n        avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(userData.name)}&background=1e40af&color=fff`,\n        preferences: {\n          notifications: {\n            email: true,\n            sms: false,\n            push: true,\n          },\n          language: 'en',\n          currency: 'USD',\n        },\n        profile: {\n          bio: '',\n          location: '',\n          website: '',\n          socialLinks: {},\n        },\n        createdAt: new Date().toISOString(),\n        lastLogin: new Date().toISOString(),\n      };\n\n      // If seller registration, add seller data\n      if (userData.role === 'seller') {\n        newUser.seller = {\n          businessName: userData.businessName || `${userData.name}'s Store`,\n          businessType: userData.businessType || 'General',\n          verified: false,\n          rating: 0,\n          totalSales: 0,\n          totalProducts: 0,\n          joinedDate: new Date().toISOString(),\n          settings: {\n            autoRespond: true,\n            showLocation: true,\n            allowReviews: true,\n          },\n        };\n      }\n\n      setUser(newUser);\n      setIsAuthenticated(true);\n\n      // Persist to localStorage\n      localStorage.setItem('user', JSON.stringify(newUser));\n      localStorage.setItem('isAuthenticated', 'true');\n\n      return { success: true, user: newUser };\n    } catch (error) {\n      return { success: false, error: error.message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('user');\n    localStorage.removeItem('isAuthenticated');\n\n    // Clear other user-specific data\n    localStorage.removeItem('userEnquiries');\n    localStorage.removeItem('shopSettings');\n    localStorage.removeItem('recentlyViewed');\n    localStorage.removeItem('pageViews');\n  };\n\n  // Update user profile\n  const updateProfile = async updates => {\n    if (!user) return { success: false, error: 'No user logged in' };\n\n    try {\n      const updatedUser = {\n        ...user,\n        ...updates,\n        lastModified: new Date().toISOString(),\n      };\n\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n\n      return { success: true, user: updatedUser };\n    } catch (error) {\n      return { success: false, error: error.message };\n    }\n  };\n\n  // Switch user role (for demo purposes)\n  const switchRole = newRole => {\n    if (!user) return;\n\n    const updatedUser = { ...user, role: newRole };\n\n    // Add seller data if switching to seller\n    if (newRole === 'seller' && !user.seller) {\n      updatedUser.seller = {\n        businessName: `${user.name}'s Store`,\n        businessType: 'General',\n        verified: false,\n        rating: 0,\n        totalSales: 0,\n        totalProducts: 0,\n        joinedDate: new Date().toISOString(),\n        settings: {\n          autoRespond: true,\n          showLocation: true,\n          allowReviews: true,\n        },\n      };\n    }\n\n    setUser(updatedUser);\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n  };\n\n  // Check if user has specific role\n  const hasRole = role => {\n    return user?.role === role;\n  };\n\n  // Check if user can access seller features\n  const canAccessSeller = () => {\n    return user?.role === 'seller' || user?.role === 'admin';\n  };\n\n  // Get user display name\n  const getDisplayName = () => {\n    if (!user) return 'Guest';\n    return user.name || getNameFromEmail(user.email);\n  };\n\n  // Helper function to extract name from email\n  const getNameFromEmail = email => {\n    if (!email) return 'User';\n    const name = email.split('@')[0];\n    return name.charAt(0).toUpperCase() + name.slice(1);\n  };\n\n  // Generate temporary guest user for demo\n  const generateGuestUser = () => {\n    const guestId = `guest_${Date.now()}`;\n    return {\n      id: guestId,\n      name: 'Guest User',\n      email: `${guestId}@demo.com`,\n      role: 'customer',\n      isGuest: true,\n      avatar: `https://ui-avatars.com/api/?name=Guest&background=6b7280&color=fff`,\n      preferences: {\n        notifications: {\n          email: false,\n          sms: false,\n          push: false,\n        },\n        language: 'en',\n        currency: 'USD',\n      },\n    };\n  };\n\n  const contextValue = {\n    // State\n    user,\n    loading,\n    isAuthenticated,\n\n    // Actions\n    login,\n    register,\n    logout,\n    updateProfile,\n    switchRole,\n\n    // Utilities\n    hasRole,\n    canAccessSeller,\n    getDisplayName,\n    generateGuestUser,\n  };\n\n  if (loading) {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          minHeight: '100vh',\n          fontSize: '18px',\n          color: '#6b7280',\n        }}\n      >\n        Loading...\n      </div>\n    );\n  }\n\n  return (\n    <AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/AddProductTabEnhanced.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":313,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":313,"endColumn":41}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaUpload,\n  FaTimes,\n  FaSave,\n  FaArrowLeft,\n  FaPlus,\n  FaTrash,\n  FaBarcode,\n  FaTag,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport FormField from './shared/FormField';\nimport { Button } from '../../components/shared/Button';\nimport { sellerDashboardData } from '../../DummyData';\nconst { productCategories } = sellerDashboardData;\n\nconst FormContainer = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n`;\n\nconst FormCard = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  border: 1px solid ${theme.colors.gray200};\n  overflow: hidden;\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst FormHeader = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n`;\n\nconst FormTitle = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n`;\n\nconst FormSubtitle = styled.p`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n  margin: 0;\n`;\n\nconst FormBody = styled.div`\n  padding: ${theme.spacing.xl};\n`;\n\nconst FormGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xl};\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst ImageUploadArea = styled.div`\n  border: 2px dashed ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xxl};\n  text-align: center;\n  background: ${theme.colors.gray50};\n  transition: all 0.2s ease;\n  cursor: pointer;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    background: ${theme.colors.primary}05;\n  }\n\n  &.dragover {\n    border-color: ${theme.colors.primary};\n    background: ${theme.colors.primary}10;\n  }\n`;\n\nconst UploadIcon = styled.div`\n  width: 64px;\n  height: 64px;\n  margin: 0 auto ${theme.spacing.lg};\n  background: ${theme.colors.primary}20;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.primary};\n  font-size: 1.5rem;\n`;\n\nconst UploadText = styled.p`\n  font-size: 1rem;\n  color: ${theme.colors.gray700};\n  margin: 0 0 ${theme.spacing.sm} 0;\n  font-weight: 500;\n`;\n\nconst UploadSubtext = styled.p`\n  font-size: 0.85rem;\n  color: ${theme.colors.gray500};\n  margin: 0;\n`;\n\nconst HiddenFileInput = styled.input`\n  display: none;\n`;\n\nconst ImagePreviewGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\n  gap: ${theme.spacing.md};\n  margin-top: ${theme.spacing.lg};\n`;\n\nconst ImagePreview = styled.div`\n  position: relative;\n  aspect-ratio: 1;\n  border-radius: ${theme.borderRadius.md};\n  overflow: hidden;\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst PreviewImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst RemoveImageButton = styled.button`\n  position: absolute;\n  top: ${theme.spacing.xs};\n  right: ${theme.spacing.xs};\n  width: 24px;\n  height: 24px;\n  border: none;\n  border-radius: 50%;\n  background: ${theme.colors.error};\n  color: ${theme.colors.white};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  font-size: 0.75rem;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.errorDark};\n    transform: scale(1.1);\n  }\n`;\n\nconst VariantCard = styled.div`\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  padding: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.md};\n  background: ${theme.colors.gray50};\n`;\n\nconst VariantHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: between;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst VariantTitle = styled.h5`\n  font-size: 0.95rem;\n  font-weight: 500;\n  color: ${theme.colors.gray900};\n  margin: 0;\n`;\n\nconst FormActions = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: between;\n  gap: ${theme.spacing.lg};\n  padding: ${theme.spacing.xl};\n  border-top: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.gray50};\n`;\n\nconst AddProductTabEnhanced = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    category: '',\n    sku: '',\n    barcode: '',\n    price: '',\n    compareAtPrice: '',\n    stock: '',\n    lowStockThreshold: '',\n    weight: '',\n    status: 'draft',\n    seoTitle: '',\n    seoDescription: '',\n    tags: [],\n    images: [],\n    variants: [],\n  });\n\n  const [dragOver, setDragOver] = useState(false);\n  const [currentTag, setCurrentTag] = useState('');\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleImageUpload = files => {\n    const newImages = Array.from(files).map(file => ({\n      id: Date.now() + Math.random(),\n      file,\n      url: URL.createObjectURL(file),\n    }));\n\n    setFormData(prev => ({\n      ...prev,\n      images: [...prev.images, ...newImages],\n    }));\n  };\n\n  const handleImageRemove = imageId => {\n    setFormData(prev => ({\n      ...prev,\n      images: prev.images.filter(img => img.id !== imageId),\n    }));\n  };\n\n  const handleDragOver = e => {\n    e.preventDefault();\n    setDragOver(true);\n  };\n\n  const handleDragLeave = e => {\n    e.preventDefault();\n    setDragOver(false);\n  };\n\n  const handleDrop = e => {\n    e.preventDefault();\n    setDragOver(false);\n    const files = e.dataTransfer.files;\n    handleImageUpload(files);\n  };\n\n  const addTag = () => {\n    if (currentTag.trim() && !formData.tags.includes(currentTag.trim())) {\n      setFormData(prev => ({\n        ...prev,\n        tags: [...prev.tags, currentTag.trim()],\n      }));\n      setCurrentTag('');\n    }\n  };\n\n  const removeTag = tagToRemove => {\n    setFormData(prev => ({\n      ...prev,\n      tags: prev.tags.filter(tag => tag !== tagToRemove),\n    }));\n  };\n\n  const addVariant = () => {\n    const newVariant = {\n      id: Date.now(),\n      option1: '',\n      option2: '',\n      price: '',\n      sku: '',\n      barcode: '',\n      stock: '',\n      weight: '',\n    };\n    setFormData(prev => ({\n      ...prev,\n      variants: [...prev.variants, newVariant],\n    }));\n  };\n\n  const removeVariant = variantId => {\n    setFormData(prev => ({\n      ...prev,\n      variants: prev.variants.filter(v => v.id !== variantId),\n    }));\n  };\n\n  const updateVariant = (variantId, field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      variants: prev.variants.map(v =>\n        v.id === variantId ? { ...v, [field]: value } : v\n      ),\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    alert('Product saved successfully!');\n  };\n\n  const generateSKU = () => {\n    const prefix = formData.name.substring(0, 3).toUpperCase() || 'PRD';\n    const random = Math.floor(Math.random() * 10000)\n      .toString()\n      .padStart(4, '0');\n    setFormData(prev => ({ ...prev, sku: `${prefix}-${random}` }));\n  };\n\n  const generateBarcode = () => {\n    const barcode = Math.floor(Math.random() * 1000000000000)\n      .toString()\n      .padStart(12, '0');\n    setFormData(prev => ({ ...prev, barcode }));\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormContainer>\n        {/* Basic Information */}\n        <FormCard>\n          <FormHeader>\n            <FormTitle>Basic Information</FormTitle>\n            <FormSubtitle>\n              Essential product details and description\n            </FormSubtitle>\n          </FormHeader>\n          <FormBody>\n            <FormField\n              label=\"Product Name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleInputChange}\n              placeholder=\"Enter product name\"\n              required\n            />\n\n            <FormField\n              label=\"Description\"\n              type=\"textarea\"\n              name=\"description\"\n              value={formData.description}\n              onChange={handleInputChange}\n              placeholder=\"Describe your product features, benefits, and specifications...\"\n              rows={4}\n            />\n\n            <FormGrid>\n              <FormField\n                label=\"Category\"\n                type=\"select\"\n                name=\"category\"\n                value={formData.category}\n                onChange={handleInputChange}\n                options={productCategories.map(cat => ({\n                  value: cat,\n                  label: cat,\n                }))}\n                required\n              />\n\n              <FormField\n                label=\"Product Status\"\n                type=\"select\"\n                name=\"status\"\n                value={formData.status}\n                onChange={handleInputChange}\n                options={[\n                  { value: 'draft', label: 'Draft' },\n                  { value: 'active', label: 'Active' },\n                  { value: 'archived', label: 'Archived' },\n                ]}\n                required\n              />\n            </FormGrid>\n          </FormBody>\n        </FormCard>\n\n        {/* Pricing & Inventory */}\n        <FormCard>\n          <FormHeader>\n            <FormTitle>Pricing & Inventory</FormTitle>\n            <FormSubtitle>\n              Set pricing, stock levels, and inventory tracking\n            </FormSubtitle>\n          </FormHeader>\n          <FormBody>\n            <FormGrid>\n              <FormField\n                label=\"Price\"\n                type=\"number\"\n                name=\"price\"\n                value={formData.price}\n                onChange={handleInputChange}\n                placeholder=\"0.00\"\n                min=\"0\"\n                step=\"0.01\"\n                required\n              />\n\n              <FormField\n                label=\"Compare at Price (MSRP)\"\n                type=\"number\"\n                name=\"compareAtPrice\"\n                value={formData.compareAtPrice}\n                onChange={handleInputChange}\n                placeholder=\"0.00\"\n                min=\"0\"\n                step=\"0.01\"\n                helpText=\"Show customers how much they save\"\n              />\n            </FormGrid>\n\n            <FormGrid>\n              <FormField\n                label=\"Stock Quantity\"\n                type=\"number\"\n                name=\"stock\"\n                value={formData.stock}\n                onChange={handleInputChange}\n                placeholder=\"Enter stock quantity\"\n                min=\"0\"\n                required\n              />\n\n              <FormField\n                label=\"Low Stock Threshold\"\n                type=\"number\"\n                name=\"lowStockThreshold\"\n                value={formData.lowStockThreshold}\n                onChange={handleInputChange}\n                placeholder=\"5\"\n                min=\"0\"\n                helpText=\"Get alerts when stock falls below this level\"\n              />\n            </FormGrid>\n          </FormBody>\n        </FormCard>\n\n        {/* Product Identity */}\n        <FormCard>\n          <FormHeader>\n            <FormTitle>Product Identity</FormTitle>\n            <FormSubtitle>SKU, barcode, and tracking information</FormSubtitle>\n          </FormHeader>\n          <FormBody>\n            <FormGrid>\n              <div>\n                <FormField\n                  label=\"SKU (Stock Keeping Unit)\"\n                  name=\"sku\"\n                  value={formData.sku}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter SKU\"\n                />\n                <Button\n                  type=\"button\"\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={generateSKU}\n                >\n                  <FaTag />\n                  Generate SKU\n                </Button>\n              </div>\n\n              <div>\n                <FormField\n                  label=\"Barcode\"\n                  name=\"barcode\"\n                  value={formData.barcode}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter barcode\"\n                />\n                <Button\n                  type=\"button\"\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={generateBarcode}\n                >\n                  <FaBarcode />\n                  Generate Barcode\n                </Button>\n              </div>\n            </FormGrid>\n\n            <FormField\n              label=\"Weight (kg)\"\n              type=\"number\"\n              name=\"weight\"\n              value={formData.weight}\n              onChange={handleInputChange}\n              placeholder=\"0.0\"\n              min=\"0\"\n              step=\"0.1\"\n              helpText=\"Used for calculating shipping costs\"\n            />\n          </FormBody>\n        </FormCard>\n\n        {/* Product Images */}\n        <FormCard>\n          <FormHeader>\n            <FormTitle>Product Images</FormTitle>\n            <FormSubtitle>\n              Upload high-quality images of your product\n            </FormSubtitle>\n          </FormHeader>\n          <FormBody>\n            <ImageUploadArea\n              className={dragOver ? 'dragover' : ''}\n              onDragOver={handleDragOver}\n              onDragLeave={handleDragLeave}\n              onDrop={handleDrop}\n              onClick={() => document.getElementById('imageInput').click()}\n            >\n              <UploadIcon>\n                <FaUpload />\n              </UploadIcon>\n              <UploadText>Click to upload or drag and drop</UploadText>\n              <UploadSubtext>\n                PNG, JPG, GIF up to 10MB each. First image will be the main\n                product image.\n              </UploadSubtext>\n            </ImageUploadArea>\n\n            <HiddenFileInput\n              id=\"imageInput\"\n              type=\"file\"\n              multiple\n              accept=\"image/*\"\n              onChange={e => handleImageUpload(e.target.files)}\n            />\n\n            {formData.images.length > 0 && (\n              <ImagePreviewGrid>\n                {formData.images.map(image => (\n                  <ImagePreview key={image.id}>\n                    <PreviewImage src={image.url} alt=\"Product preview\" />\n                    <RemoveImageButton\n                      type=\"button\"\n                      onClick={() => handleImageRemove(image.id)}\n                    >\n                      <FaTimes />\n                    </RemoveImageButton>\n                  </ImagePreview>\n                ))}\n              </ImagePreviewGrid>\n            )}\n          </FormBody>\n        </FormCard>\n\n        {/* Product Variants */}\n        <FormCard>\n          <FormHeader>\n            <FormTitle>Product Variants</FormTitle>\n            <FormSubtitle>\n              Add variants like size, color, style (optional)\n            </FormSubtitle>\n          </FormHeader>\n          <FormBody>\n            <div style={{ marginBottom: theme.spacing.lg }}>\n              <Button type=\"button\" variant=\"outline\" onClick={addVariant}>\n                <FaPlus />\n                Add Variant\n              </Button>\n            </div>\n\n            {formData.variants.map(variant => (\n              <VariantCard key={variant.id}>\n                <VariantHeader>\n                  <VariantTitle>\n                    Variant #{formData.variants.indexOf(variant) + 1}\n                  </VariantTitle>\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => removeVariant(variant.id)}\n                  >\n                    <FaTrash />\n                  </Button>\n                </VariantHeader>\n\n                <FormGrid>\n                  <FormField\n                    label=\"Option 1 (e.g., Size)\"\n                    value={variant.option1}\n                    onChange={e =>\n                      updateVariant(variant.id, 'option1', e.target.value)\n                    }\n                    placeholder=\"S, M, L, XL\"\n                  />\n\n                  <FormField\n                    label=\"Option 2 (e.g., Color)\"\n                    value={variant.option2}\n                    onChange={e =>\n                      updateVariant(variant.id, 'option2', e.target.value)\n                    }\n                    placeholder=\"Red, Blue, Green\"\n                  />\n                </FormGrid>\n\n                <FormGrid>\n                  <FormField\n                    label=\"Variant Price\"\n                    type=\"number\"\n                    value={variant.price}\n                    onChange={e =>\n                      updateVariant(variant.id, 'price', e.target.value)\n                    }\n                    placeholder=\"0.00\"\n                    step=\"0.01\"\n                  />\n\n                  <FormField\n                    label=\"Variant Stock\"\n                    type=\"number\"\n                    value={variant.stock}\n                    onChange={e =>\n                      updateVariant(variant.id, 'stock', e.target.value)\n                    }\n                    placeholder=\"0\"\n                  />\n                </FormGrid>\n\n                <FormGrid>\n                  <FormField\n                    label=\"Variant SKU\"\n                    value={variant.sku}\n                    onChange={e =>\n                      updateVariant(variant.id, 'sku', e.target.value)\n                    }\n                    placeholder=\"Unique SKU\"\n                  />\n\n                  <FormField\n                    label=\"Variant Barcode\"\n                    value={variant.barcode}\n                    onChange={e =>\n                      updateVariant(variant.id, 'barcode', e.target.value)\n                    }\n                    placeholder=\"Barcode\"\n                  />\n                </FormGrid>\n              </VariantCard>\n            ))}\n          </FormBody>\n        </FormCard>\n\n        {/* SEO & Tags */}\n        <FormCard>\n          <FormHeader>\n            <FormTitle>SEO & Search</FormTitle>\n            <FormSubtitle>\n              Optimize for search engines and internal search\n            </FormSubtitle>\n          </FormHeader>\n          <FormBody>\n            <FormField\n              label=\"SEO Title\"\n              name=\"seoTitle\"\n              value={formData.seoTitle}\n              onChange={handleInputChange}\n              placeholder=\"Optimized title for search engines\"\n              helpText=\"Recommended: 50-60 characters\"\n            />\n\n            <FormField\n              label=\"SEO Description\"\n              type=\"textarea\"\n              name=\"seoDescription\"\n              value={formData.seoDescription}\n              onChange={handleInputChange}\n              placeholder=\"Description that appears in search results\"\n              rows={3}\n              helpText=\"Recommended: 150-160 characters\"\n            />\n\n            <div>\n              <label\n                style={{\n                  display: 'block',\n                  fontSize: '0.9rem',\n                  fontWeight: '500',\n                  color: theme.colors.gray700,\n                  marginBottom: theme.spacing.sm,\n                }}\n              >\n                Product Tags\n              </label>\n              <div\n                style={{\n                  display: 'flex',\n                  gap: theme.spacing.sm,\n                  marginBottom: theme.spacing.sm,\n                }}\n              >\n                <input\n                  type=\"text\"\n                  value={currentTag}\n                  onChange={e => setCurrentTag(e.target.value)}\n                  placeholder=\"Add a tag\"\n                  onKeyPress={e =>\n                    e.key === 'Enter' && (e.preventDefault(), addTag())\n                  }\n                  style={{\n                    flex: 1,\n                    padding: theme.spacing.md,\n                    border: `1px solid ${theme.colors.gray300}`,\n                    borderRadius: theme.borderRadius.md,\n                    fontSize: '0.9rem',\n                  }}\n                />\n                <Button type=\"button\" variant=\"outline\" onClick={addTag}>\n                  Add Tag\n                </Button>\n              </div>\n              <div\n                style={{\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: theme.spacing.sm,\n                }}\n              >\n                {formData.tags.map(tag => (\n                  <span\n                    key={tag}\n                    style={{\n                      background: theme.colors.primary + '20',\n                      color: theme.colors.primary,\n                      padding: `${theme.spacing.xs} ${theme.spacing.sm}`,\n                      borderRadius: theme.borderRadius.sm,\n                      fontSize: '0.8rem',\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: theme.spacing.xs,\n                    }}\n                  >\n                    {tag}\n                    <button\n                      type=\"button\"\n                      onClick={() => removeTag(tag)}\n                      style={{\n                        background: 'none',\n                        border: 'none',\n                        color: 'inherit',\n                        cursor: 'pointer',\n                        padding: '2px',\n                      }}\n                    >\n                      <FaTimes />\n                    </button>\n                  </span>\n                ))}\n              </div>\n            </div>\n          </FormBody>\n        </FormCard>\n\n        <FormActions>\n          <Button type=\"button\" variant=\"ghost\">\n            <FaArrowLeft />\n            Cancel\n          </Button>\n\n          <div style={{ display: 'flex', gap: theme.spacing.md }}>\n            <Button type=\"submit\" variant=\"outline\">\n              Save as Draft\n            </Button>\n            <Button type=\"submit\" variant=\"primary\">\n              <FaSave />\n              Save & Publish\n            </Button>\n          </div>\n        </FormActions>\n      </FormContainer>\n    </form>\n  );\n};\n\nexport default AddProductTabEnhanced;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/BackToTop.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FaArrowUp } from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst BackToTopButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'visible',\n})`\n  position: fixed;\n  bottom: ${theme.spacing.xl};\n  right: ${theme.spacing.xl};\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary} 0%,\n    ${theme.colors.primaryDark} 100%\n  );\n  color: ${theme.colors.white};\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.2rem;\n  box-shadow: ${theme.shadows.xl};\n  transition: all 0.3s ease;\n  z-index: 1000;\n  opacity: ${props => (props.visible ? 1 : 0)};\n  transform: ${props =>\n    props.visible ? 'translateY(0)' : 'translateY(100px)'};\n\n  &:hover {\n    transform: ${props =>\n      props.visible ? 'translateY(-5px)' : 'translateY(100px)'};\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n    background: linear-gradient(\n      135deg,\n      ${theme.colors.primaryDark} 0%,\n      ${theme.colors.primary} 100%\n    );\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    width: 50px;\n    height: 50px;\n    bottom: ${theme.spacing.lg};\n    right: ${theme.spacing.lg};\n    font-size: 1rem;\n  }\n`;\n\nconst BackToTop = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const toggleVisibility = () => {\n      if (window.pageYOffset > 300) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener('scroll', toggleVisibility);\n    return () => window.removeEventListener('scroll', toggleVisibility);\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <BackToTopButton\n      visible={isVisible}\n      onClick={scrollToTop}\n      title=\"Back to top\"\n    >\n      <FaArrowUp />\n    </BackToTopButton>\n  );\n};\n\nexport default BackToTop;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/CategoriesTab.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":276,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":276,"endColumn":73}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaPlus,\n  FaEdit,\n  FaTrash,\n  FaImage,\n  FaGripVertical,\n  FaFolder,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport Modal from './shared/Modal';\nimport FormField from './shared/FormField';\nimport { Button } from '../../components/shared/Button';\n\nconst CategoriesContainer = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  border: 1px solid ${theme.colors.gray200};\n  overflow: hidden;\n`;\n\nconst CategoriesHeader = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  display: flex;\n  align-items: center;\n  justify-content: between;\n  gap: ${theme.spacing.lg};\n`;\n\nconst HeaderLeft = styled.div`\n  flex: 1;\n`;\n\nconst HeaderTitle = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n`;\n\nconst HeaderSubtitle = styled.p`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n  margin: 0;\n`;\n\nconst CategoriesList = styled.div`\n  padding: ${theme.spacing.lg};\n`;\n\nconst CategoryItem = styled.div`\n  display: flex;\n  align-items: center;\n  padding: ${theme.spacing.lg};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  margin-bottom: ${theme.spacing.md};\n  background: ${theme.colors.white};\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray50};\n    border-color: ${theme.colors.gray300};\n  }\n`;\n\nconst DragHandle = styled.div`\n  color: ${theme.colors.gray400};\n  cursor: grab;\n  margin-right: ${theme.spacing.md};\n\n  &:active {\n    cursor: grabbing;\n  }\n`;\n\nconst CategoryIcon = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.primary}20;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: ${theme.spacing.md};\n  color: ${theme.colors.primary};\n`;\n\nconst CategoryImage = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: ${theme.borderRadius.md};\n  object-fit: cover;\n  margin-right: ${theme.spacing.md};\n`;\n\nconst CategoryInfo = styled.div`\n  flex: 1;\n`;\n\nconst CategoryName = styled.h4`\n  font-size: 1rem;\n  font-weight: 500;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n`;\n\nconst CategoryDescription = styled.p`\n  font-size: 0.85rem;\n  color: ${theme.colors.gray600};\n  margin: 0;\n`;\n\nconst CategoryStats = styled.div`\n  display: flex;\n  gap: ${theme.spacing.lg};\n  margin-right: ${theme.spacing.lg};\n`;\n\nconst StatItem = styled.div`\n  text-align: center;\n`;\n\nconst StatValue = styled.span`\n  display: block;\n  font-size: 1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n`;\n\nconst StatLabel = styled.span`\n  font-size: 0.75rem;\n  color: ${theme.colors.gray500};\n  text-transform: uppercase;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n`;\n\nconst ActionButton = styled.button`\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.sm};\n  background: ${theme.colors.white};\n  color: ${theme.colors.gray600};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n    background: ${theme.colors.primary}10;\n  }\n\n  &.danger:hover {\n    border-color: ${theme.colors.error};\n    color: ${theme.colors.error};\n    background: ${theme.colors.error}10;\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n`;\n\nconst EmptyIcon = styled.div`\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  background: ${theme.colors.gray100};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto ${theme.spacing.lg};\n  color: ${theme.colors.gray400};\n  font-size: 2rem;\n`;\n\nconst EmptyTitle = styled.h3`\n  font-size: 1.2rem;\n  color: ${theme.colors.gray700};\n  margin: 0 0 ${theme.spacing.sm} 0;\n`;\n\nconst EmptyText = styled.p`\n  color: ${theme.colors.gray500};\n  margin: 0 0 ${theme.spacing.lg} 0;\n`;\n\nconst ImageUploadArea = styled.div`\n  border: 2px dashed ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.md};\n  padding: ${theme.spacing.lg};\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    background: ${theme.colors.primary}05;\n  }\n`;\n\nconst HiddenFileInput = styled.input`\n  display: none;\n`;\n\nconst CategoriesTab = () => {\n  const [categories, setCategories] = useState([\n    {\n      id: 1,\n      name: 'Electronics',\n      description: 'Digital devices and gadgets',\n      image:\n        'https://images.unsplash.com/photo-1498049794561-7780e7231661?w=100&q=80',\n      productCount: 45,\n      isActive: true,\n      sortOrder: 1,\n    },\n    {\n      id: 2,\n      name: 'Fashion',\n      description: 'Clothing and accessories',\n      image: null,\n      productCount: 32,\n      isActive: true,\n      sortOrder: 2,\n    },\n    {\n      id: 3,\n      name: 'Home & Garden',\n      description: 'Home improvement and gardening',\n      image:\n        'https://images.unsplash.com/photo-1586023492125-27b2c045efd7?w=100&q=80',\n      productCount: 28,\n      isActive: true,\n      sortOrder: 3,\n    },\n  ]);\n\n  const [showModal, setShowModal] = useState(false);\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    image: null,\n  });\n\n  const handleAddCategory = () => {\n    setEditingCategory(null);\n    setFormData({ name: '', description: '', image: null });\n    setShowModal(true);\n  };\n\n  const handleEditCategory = category => {\n    setEditingCategory(category);\n    setFormData({\n      name: category.name,\n      description: category.description,\n      image: category.image,\n    });\n    setShowModal(true);\n  };\n\n  const handleDeleteCategory = categoryId => {\n    if (window.confirm('Are you sure you want to delete this category?')) {\n      setCategories(categories.filter(cat => cat.id !== categoryId));\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (editingCategory) {\n      // Update existing category\n      setCategories(\n        categories.map(cat =>\n          cat.id === editingCategory.id ? { ...cat, ...formData } : cat\n        )\n      );\n    } else {\n      // Add new category\n      const newCategory = {\n        id: Date.now(),\n        ...formData,\n        productCount: 0,\n        isActive: true,\n        sortOrder: categories.length + 1,\n      };\n      setCategories([...categories, newCategory]);\n    }\n\n    setShowModal(false);\n  };\n\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const imageUrl = URL.createObjectURL(file);\n      setFormData(prev => ({ ...prev, image: imageUrl }));\n    }\n  };\n\n  const modalFooter = (\n    <>\n      <Button variant=\"ghost\" onClick={() => setShowModal(false)}>\n        Cancel\n      </Button>\n      <Button variant=\"primary\" onClick={handleSubmit}>\n        {editingCategory ? 'Update Category' : 'Add Category'}\n      </Button>\n    </>\n  );\n\n  return (\n    <>\n      <CategoriesContainer>\n        <CategoriesHeader>\n          <HeaderLeft>\n            <HeaderTitle>Categories</HeaderTitle>\n            <HeaderSubtitle>\n              Organize your products into categories\n            </HeaderSubtitle>\n          </HeaderLeft>\n\n          <Button variant=\"primary\" onClick={handleAddCategory}>\n            <FaPlus />\n            Add Category\n          </Button>\n        </CategoriesHeader>\n\n        <CategoriesList>\n          {categories.length === 0 ? (\n            <EmptyState>\n              <EmptyIcon>\n                <FaFolder />\n              </EmptyIcon>\n              <EmptyTitle>No categories yet</EmptyTitle>\n              <EmptyText>\n                Create your first category to organize your products\n              </EmptyText>\n              <Button variant=\"primary\" onClick={handleAddCategory}>\n                <FaPlus />\n                Add Your First Category\n              </Button>\n            </EmptyState>\n          ) : (\n            categories.map(category => (\n              <CategoryItem key={category.id}>\n                <DragHandle>\n                  <FaGripVertical />\n                </DragHandle>\n\n                {category.image ? (\n                  <CategoryImage src={category.image} alt={category.name} />\n                ) : (\n                  <CategoryIcon>\n                    <FaFolder />\n                  </CategoryIcon>\n                )}\n\n                <CategoryInfo>\n                  <CategoryName>{category.name}</CategoryName>\n                  <CategoryDescription>\n                    {category.description}\n                  </CategoryDescription>\n                </CategoryInfo>\n\n                <CategoryStats>\n                  <StatItem>\n                    <StatValue>{category.productCount}</StatValue>\n                    <StatLabel>Products</StatLabel>\n                  </StatItem>\n                </CategoryStats>\n\n                <ActionButtons>\n                  <ActionButton onClick={() => handleEditCategory(category)}>\n                    <FaEdit />\n                  </ActionButton>\n                  <ActionButton\n                    className=\"danger\"\n                    onClick={() => handleDeleteCategory(category.id)}\n                  >\n                    <FaTrash />\n                  </ActionButton>\n                </ActionButtons>\n              </CategoryItem>\n            ))\n          )}\n        </CategoriesList>\n      </CategoriesContainer>\n\n      <Modal\n        isOpen={showModal}\n        onClose={() => setShowModal(false)}\n        title={editingCategory ? 'Edit Category' : 'Add New Category'}\n        footer={modalFooter}\n      >\n        <form onSubmit={handleSubmit}>\n          <FormField\n            label=\"Category Name\"\n            name=\"name\"\n            value={formData.name}\n            onChange={e =>\n              setFormData(prev => ({ ...prev, name: e.target.value }))\n            }\n            placeholder=\"Enter category name\"\n            required\n          />\n\n          <FormField\n            label=\"Description\"\n            type=\"textarea\"\n            name=\"description\"\n            value={formData.description}\n            onChange={e =>\n              setFormData(prev => ({ ...prev, description: e.target.value }))\n            }\n            placeholder=\"Describe this category\"\n            rows={3}\n          />\n\n          <FormField label=\"Category Image\">\n            <ImageUploadArea\n              onClick={() =>\n                document.getElementById('categoryImageInput').click()\n              }\n            >\n              {formData.image ? (\n                <img\n                  src={formData.image}\n                  alt=\"Preview\"\n                  style={{\n                    width: '100px',\n                    height: '100px',\n                    objectFit: 'cover',\n                    borderRadius: '8px',\n                  }}\n                />\n              ) : (\n                <>\n                  <FaImage\n                    style={{\n                      fontSize: '2rem',\n                      color: theme.colors.gray400,\n                      marginBottom: '8px',\n                    }}\n                  />\n                  <p style={{ margin: 0, color: theme.colors.gray600 }}>\n                    Click to upload image\n                  </p>\n                </>\n              )}\n            </ImageUploadArea>\n            <HiddenFileInput\n              id=\"categoryImageInput\"\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleImageUpload}\n            />\n          </FormField>\n        </form>\n      </Modal>\n    </>\n  );\n};\n\nexport default CategoriesTab;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/CategoryCard.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaArrowRight } from 'react-icons/fa';\nimport { theme, media } from '../../styles/GlobalStyle';\n\nconst Card = styled(Link)`\n  display: block;\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  overflow: hidden;\n  box-shadow: ${theme.shadows.md};\n  transition: all 0.3s ease;\n  position: relative;\n  height: 250px;\n\n  &:hover {\n    transform: translateY(-8px);\n    box-shadow: ${theme.shadows.xl};\n  }\n\n  ${media.mobile} {\n    height: 200px;\n    border-radius: ${theme.borderRadius.lg};\n\n    &:hover {\n      transform: translateY(-4px);\n      box-shadow: ${theme.shadows.lg};\n    }\n  }\n\n  ${media.tablet} {\n    height: 225px;\n\n    &:hover {\n      transform: translateY(-6px);\n    }\n  }\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  height: 70%;\n  overflow: hidden;\n`;\n\nconst CategoryImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s ease;\n\n  ${Card}:hover & {\n    transform: scale(1.1);\n  }\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    45deg,\n    rgba(0, 0, 0, 0.4) 0%,\n    rgba(0, 0, 0, 0.1) 100%\n  );\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n\n  ${Card}:hover & {\n    opacity: 1;\n  }\n\n  ${media.mobile} {\n    opacity: 0.7;\n    background: linear-gradient(\n      45deg,\n      rgba(0, 0, 0, 0.3) 0%,\n      rgba(0, 0, 0, 0.1) 100%\n    );\n  }\n`;\n\nconst ViewButton = styled.div`\n  background: ${theme.colors.white};\n  color: ${theme.colors.primary};\n  padding: ${theme.spacing.sm} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  transform: translateY(20px);\n  transition: transform 0.3s ease;\n\n  ${Card}:hover & {\n    transform: translateY(0);\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.xs} ${theme.spacing.md};\n    font-size: 0.875rem;\n    border-radius: ${theme.borderRadius.md};\n    transform: translateY(0);\n    gap: ${theme.spacing.xs};\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.sm} ${theme.spacing.lg};\n  }\n`;\n\nconst CardContent = styled.div`\n  padding: ${theme.spacing.lg};\n  height: 30%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  ${media.mobile} {\n    padding: ${theme.spacing.md};\n    height: 35%;\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.lg};\n    height: 32%;\n  }\n`;\n\nconst CategoryName = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n  text-align: center;\n\n  ${media.mobile} {\n    font-size: 1rem;\n    margin-bottom: ${theme.spacing.xs};\n  }\n\n  ${media.tablet} {\n    font-size: 1.125rem;\n  }\n`;\n\nconst CategoryDescription = styled.p`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n  text-align: center;\n  line-height: 1.4;\n\n  ${media.mobile} {\n    font-size: 0.8rem;\n    line-height: 1.3;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n  }\n\n  ${media.tablet} {\n    font-size: 0.875rem;\n  }\n`;\n\nconst CategoryCard = ({ category, storeSlug = '' }) => {\n  const getBaseUrl = () => (storeSlug ? `/${storeSlug}` : '/ecommerce');\n\n  return (\n    <Card to={`${getBaseUrl()}/products?category=${category.slug}`}>\n      <ImageContainer>\n        <CategoryImage src={category.image} alt={category.name} />\n        <Overlay>\n          <ViewButton>\n            Shop Now\n            <FaArrowRight />\n          </ViewButton>\n        </Overlay>\n      </ImageContainer>\n\n      <CardContent>\n        <CategoryName>{category.name}</CategoryName>\n        <CategoryDescription>{category.description}</CategoryDescription>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CategoryCard;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/DashboardTabEnhanced.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'index' is defined but never used. Allowed unused args must match /^_/u.","line":517,"column":50,"nodeType":"Identifier","messageId":"unusedVar","endLine":517,"endColumn":55}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaDollarSign,\n  FaShoppingCart,\n  FaArrowUp,\n  FaArrowDown,\n  FaUsers,\n  FaExclamationTriangle,\n  FaTrophy,\n  FaToggleOn,\n  FaToggleOff,\n  FaEye,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport { sellerDashboardData } from '../../DummyData';\nconst {\n  dashboardStats,\n  salesTrendData,\n  recentActivity,\n  storeStatus,\n  lowStockAlerts,\n  topPerformingProducts,\n} = sellerDashboardData;\n\nconst DashboardContainer = styled.div`\n  display: grid;\n  gap: ${theme.spacing.xl};\n`;\n\nconst StoreStatusCard = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  border: 1px solid ${theme.colors.gray200};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst StatusHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: between;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst StatusInfo = styled.div`\n  flex: 1;\n`;\n\nconst StatusTitle = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n`;\n\nconst StatusSubtitle = styled.p`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n  margin: 0;\n`;\n\nconst ToggleButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'isActive',\n})`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border: none;\n  border-radius: ${theme.borderRadius.lg};\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  background: ${props =>\n    props.isActive ? theme.colors.success : theme.colors.error};\n  color: ${theme.colors.white};\n\n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: ${theme.shadows.md};\n  }\n`;\n\nconst DashboardGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst StatsCard = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  border: 1px solid ${theme.colors.gray200};\n  transition: all 0.3s ease;\n\n  &:hover {\n    box-shadow: ${theme.shadows.md};\n    transform: translateY(-2px);\n  }\n`;\n\nconst StatsHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: between;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst StatsIcon = styled.div`\n  width: 48px;\n  height: 48px;\n  border-radius: ${theme.borderRadius.lg};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.2rem;\n  color: ${theme.colors.white};\n  background: ${props =>\n    props.gradient ||\n    `linear-gradient(135deg, ${theme.colors.primary}, ${theme.colors.secondary})`};\n`;\n\nconst StatsContent = styled.div`\n  flex: 1;\n`;\n\nconst StatsValue = styled.h3`\n  font-size: 2rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n`;\n\nconst StatsLabel = styled.p`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n  margin: 0 0 ${theme.spacing.sm} 0;\n`;\n\nconst StatsChange = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'positive',\n})`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  font-size: 0.85rem;\n  font-weight: 500;\n  color: ${props =>\n    props.positive ? theme.colors.success : theme.colors.error};\n`;\n\nconst ContentGrid = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xxl};\n\n  @media (max-width: 1024px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst ChartCard = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst ChartHeader = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst ChartTitle = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n`;\n\nconst ChartSubtitle = styled.p`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n  margin: 0;\n`;\n\nconst SimpleChart = styled.div`\n  height: 250px;\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n  position: relative;\n  overflow: hidden;\n  padding: ${theme.spacing.lg};\n  display: flex;\n  align-items: end;\n  gap: 4px;\n`;\n\nconst ChartBar = styled.div`\n  flex: 1;\n  background: linear-gradient(\n    to top,\n    ${theme.colors.primary},\n    ${theme.colors.secondary}\n  );\n  border-radius: 2px 2px 0 0;\n  min-height: 10px;\n  position: relative;\n  opacity: 0.8;\n  transition: opacity 0.3s ease;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst AlertsCard = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  border: 1px solid ${theme.colors.gray200};\n  height: fit-content;\n`;\n\nconst AlertsList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.md};\n`;\n\nconst AlertItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  padding: ${theme.spacing.md};\n  background: ${theme.colors.warning}10;\n  border: 1px solid ${theme.colors.warning}30;\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst AlertImage = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: ${theme.borderRadius.sm};\n  object-fit: cover;\n`;\n\nconst AlertContent = styled.div`\n  flex: 1;\n`;\n\nconst AlertTitle = styled.p`\n  font-size: 0.9rem;\n  font-weight: 500;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n`;\n\nconst AlertMessage = styled.p`\n  font-size: 0.8rem;\n  color: ${theme.colors.warning};\n  margin: 0;\n`;\n\nconst TopProductsGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: 1024px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst ProductCard = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst ProductsList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.lg};\n`;\n\nconst ProductItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n`;\n\nconst ProductImage = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: ${theme.borderRadius.md};\n  object-fit: cover;\n`;\n\nconst ProductInfo = styled.div`\n  flex: 1;\n`;\n\nconst ProductName = styled.p`\n  font-size: 0.9rem;\n  font-weight: 500;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n`;\n\nconst ProductStats = styled.p`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n  margin: 0;\n`;\n\nconst ProductGrowth = styled.span`\n  color: ${theme.colors.success};\n  font-weight: 500;\n`;\n\nconst DashboardTabEnhanced = () => {\n  const [isStoreLive, setIsStoreLive] = useState(storeStatus.isLive);\n\n  const formatCurrency = (value, currency = 'USD') => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency,\n    }).format(value);\n  };\n\n  const formatNumber = value => {\n    return new Intl.NumberFormat('en-US').format(value);\n  };\n\n  const maxSales = Math.max(...salesTrendData.map(d => d.sales));\n\n  const toggleStoreStatus = () => {\n    setIsStoreLive(!isStoreLive);\n  };\n\n  return (\n    <DashboardContainer>\n      {/* Store Status Toggle */}\n      <StoreStatusCard>\n        <StatusHeader>\n          <StatusInfo>\n            <StatusTitle>Store Status</StatusTitle>\n            <StatusSubtitle>\n              Your store is currently {isStoreLive ? 'live' : 'paused'}. Last\n              updated: {storeStatus.lastToggled}\n            </StatusSubtitle>\n          </StatusInfo>\n          <ToggleButton isActive={isStoreLive} onClick={toggleStoreStatus}>\n            {isStoreLive ? <FaToggleOn /> : <FaToggleOff />}\n            {isStoreLive ? 'Store Live' : 'Store Paused'}\n          </ToggleButton>\n        </StatusHeader>\n      </StoreStatusCard>\n\n      {/* Stats Cards */}\n      <DashboardGrid>\n        <StatsCard>\n          <StatsHeader>\n            <StatsIcon gradient=\"linear-gradient(135deg, #4CAF50, #45a049)\">\n              <FaDollarSign />\n            </StatsIcon>\n          </StatsHeader>\n          <StatsContent>\n            <StatsValue>\n              {formatCurrency(dashboardStats.totalSales.value)}\n            </StatsValue>\n            <StatsLabel>Total Sales</StatsLabel>\n            <StatsChange positive={dashboardStats.totalSales.change > 0}>\n              {dashboardStats.totalSales.change > 0 ? (\n                <FaArrowUp />\n              ) : (\n                <FaArrowDown />\n              )}\n              {Math.abs(dashboardStats.totalSales.change)}%{' '}\n              {dashboardStats.totalSales.period}\n            </StatsChange>\n          </StatsContent>\n        </StatsCard>\n\n        <StatsCard>\n          <StatsHeader>\n            <StatsIcon gradient=\"linear-gradient(135deg, #2196F3, #1976D2)\">\n              <FaShoppingCart />\n            </StatsIcon>\n          </StatsHeader>\n          <StatsContent>\n            <StatsValue>\n              {formatNumber(dashboardStats.totalOrders.value)}\n            </StatsValue>\n            <StatsLabel>Total Orders</StatsLabel>\n            <StatsChange positive={dashboardStats.totalOrders.change > 0}>\n              {dashboardStats.totalOrders.change > 0 ? (\n                <FaArrowUp />\n              ) : (\n                <FaArrowDown />\n              )}\n              {Math.abs(dashboardStats.totalOrders.change)}%{' '}\n              {dashboardStats.totalOrders.period}\n            </StatsChange>\n          </StatsContent>\n        </StatsCard>\n\n        <StatsCard>\n          <StatsHeader>\n            <StatsIcon gradient=\"linear-gradient(135deg, #9C27B0, #7B1FA2)\">\n              <FaUsers />\n            </StatsIcon>\n          </StatsHeader>\n          <StatsContent>\n            <StatsValue>\n              {formatNumber(dashboardStats.totalCustomers.value)}\n            </StatsValue>\n            <StatsLabel>Total Customers</StatsLabel>\n            <StatsChange positive={dashboardStats.totalCustomers.change > 0}>\n              {dashboardStats.totalCustomers.change > 0 ? (\n                <FaArrowUp />\n              ) : (\n                <FaArrowDown />\n              )}\n              {Math.abs(dashboardStats.totalCustomers.change)}%{' '}\n              {dashboardStats.totalCustomers.period}\n            </StatsChange>\n          </StatsContent>\n        </StatsCard>\n\n        <StatsCard>\n          <StatsHeader>\n            <StatsIcon gradient=\"linear-gradient(135deg, #FF9800, #F57C00)\">\n              <FaEye />\n            </StatsIcon>\n          </StatsHeader>\n          <StatsContent>\n            <StatsValue>\n              {formatNumber(dashboardStats.storeViews.value)}\n            </StatsValue>\n            <StatsLabel>Store Views</StatsLabel>\n            <StatsChange positive={dashboardStats.storeViews.change > 0}>\n              {dashboardStats.storeViews.change > 0 ? (\n                <FaArrowUp />\n              ) : (\n                <FaArrowDown />\n              )}\n              {Math.abs(dashboardStats.storeViews.change)}%{' '}\n              {dashboardStats.storeViews.period}\n            </StatsChange>\n          </StatsContent>\n        </StatsCard>\n      </DashboardGrid>\n\n      {/* Charts and Alerts */}\n      <ContentGrid>\n        <ChartCard>\n          <ChartHeader>\n            <ChartTitle>Sales Trend</ChartTitle>\n            <ChartSubtitle>Daily sales over the last 14 days</ChartSubtitle>\n          </ChartHeader>\n          <SimpleChart>\n            {salesTrendData.map((data, index) => (\n              <ChartBar\n                key={index}\n                style={{\n                  height: `${(data.sales / maxSales) * 100}%`,\n                }}\n                title={`${new Date(data.date).toLocaleDateString()}: ${formatCurrency(data.sales)}`}\n              />\n            ))}\n          </SimpleChart>\n        </ChartCard>\n\n        <AlertsCard>\n          <ChartHeader>\n            <ChartTitle>Low Stock Alerts</ChartTitle>\n            <ChartSubtitle>Products running low on inventory</ChartSubtitle>\n          </ChartHeader>\n          <AlertsList>\n            {lowStockAlerts.map(alert => (\n              <AlertItem key={alert.id}>\n                <AlertImage src={alert.image} alt={alert.productName} />\n                <AlertContent>\n                  <AlertTitle>{alert.productName}</AlertTitle>\n                  <AlertMessage>\n                    Only {alert.currentStock} left in stock (Threshold:{' '}\n                    {alert.threshold})\n                  </AlertMessage>\n                </AlertContent>\n              </AlertItem>\n            ))}\n          </AlertsList>\n        </AlertsCard>\n      </ContentGrid>\n\n      {/* Top Products */}\n      <TopProductsGrid>\n        <ProductCard>\n          <ChartHeader>\n            <ChartTitle>Best Selling Products</ChartTitle>\n            <ChartSubtitle>Top performing products this month</ChartSubtitle>\n          </ChartHeader>\n          <ProductsList>\n            {topPerformingProducts.map((product, index) => (\n              <ProductItem key={product.id}>\n                <ProductImage src={product.image} alt={product.name} />\n                <ProductInfo>\n                  <ProductName>{product.name}</ProductName>\n                  <ProductStats>\n                    {product.sales} sold • {formatCurrency(product.revenue)}{' '}\n                    revenue\n                    <ProductGrowth> (+{product.growth}%)</ProductGrowth>\n                  </ProductStats>\n                </ProductInfo>\n              </ProductItem>\n            ))}\n          </ProductsList>\n        </ProductCard>\n\n        <ProductCard>\n          <ChartHeader>\n            <ChartTitle>Recent Activity</ChartTitle>\n            <ChartSubtitle>Latest updates from your store</ChartSubtitle>\n          </ChartHeader>\n          <ProductsList>\n            {recentActivity.map(activity => (\n              <ProductItem key={activity.id}>\n                <StatsIcon\n                  style={{\n                    width: '32px',\n                    height: '32px',\n                    fontSize: '0.9rem',\n                    background: `${theme.colors.primary}20`,\n                    color: theme.colors.primary,\n                  }}\n                >\n                  {activity.type === 'order' && <FaShoppingCart />}\n                  {activity.type === 'product' && <FaExclamationTriangle />}\n                  {activity.type === 'payment' && <FaDollarSign />}\n                  {activity.type === 'review' && <FaTrophy />}\n                </StatsIcon>\n                <ProductInfo>\n                  <ProductName>{activity.message}</ProductName>\n                  <ProductStats>{activity.time}</ProductStats>\n                </ProductInfo>\n              </ProductItem>\n            ))}\n          </ProductsList>\n        </ProductCard>\n      </TopProductsGrid>\n    </DashboardContainer>\n  );\n};\n\nexport default DashboardTabEnhanced;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/DiscountsTab.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":331,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":331,"endColumn":73},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":346,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":346,"endColumn":56}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaPlus,\n  FaEdit,\n  FaTrash,\n  FaCopy,\n  FaToggleOn,\n  FaToggleOff,\n  FaPercent,\n  FaDollarSign,\n  FaCalendarAlt,\n  FaUsers,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport Modal from './shared/Modal';\nimport FormField from './shared/FormField';\nimport { Button } from '../../components/shared/Button';\n\nconst DiscountsContainer = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  border: 1px solid ${theme.colors.gray200};\n  overflow: hidden;\n`;\n\nconst DiscountsHeader = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  display: flex;\n  align-items: center;\n  justify-content: between;\n  gap: ${theme.spacing.lg};\n`;\n\nconst HeaderLeft = styled.div`\n  flex: 1;\n`;\n\nconst HeaderTitle = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n`;\n\nconst HeaderSubtitle = styled.p`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n  margin: 0;\n`;\n\nconst DiscountsList = styled.div`\n  padding: ${theme.spacing.lg};\n`;\n\nconst DiscountCard = styled.div`\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.lg};\n  background: ${theme.colors.white};\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${theme.colors.gray300};\n    box-shadow: ${theme.shadows.sm};\n  }\n`;\n\nconst DiscountHeader = styled.div`\n  display: flex;\n  align-items: start;\n  justify-content: between;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst DiscountInfo = styled.div`\n  flex: 1;\n`;\n\nconst DiscountCode = styled.h4`\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst CopyButton = styled.button`\n  background: ${theme.colors.gray100};\n  border: none;\n  border-radius: ${theme.borderRadius.sm};\n  padding: ${theme.spacing.xs};\n  color: ${theme.colors.gray600};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray200};\n    color: ${theme.colors.gray700};\n  }\n`;\n\nconst DiscountDescription = styled.p`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n  margin: 0;\n`;\n\nconst DiscountActions = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst StatusToggle = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'isActive',\n})`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.8rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  background: ${props =>\n    props.isActive ? theme.colors.success : theme.colors.gray400};\n  color: ${theme.colors.white};\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst ActionButton = styled.button`\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.sm};\n  background: ${theme.colors.white};\n  color: ${theme.colors.gray600};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n    background: ${theme.colors.primary}10;\n  }\n\n  &.danger:hover {\n    border-color: ${theme.colors.error};\n    color: ${theme.colors.error};\n    background: ${theme.colors.error}10;\n  }\n`;\n\nconst DiscountDetails = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.lg};\n`;\n\nconst DetailItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst DetailIcon = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background: ${theme.colors.primary}20;\n  color: ${theme.colors.primary};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.9rem;\n`;\n\nconst DetailContent = styled.div``;\n\nconst DetailLabel = styled.p`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n  margin: 0;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst DetailValue = styled.p`\n  font-size: 0.9rem;\n  font-weight: 500;\n  color: ${theme.colors.gray900};\n  margin: 0;\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n`;\n\nconst EmptyIcon = styled.div`\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  background: ${theme.colors.gray100};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto ${theme.spacing.lg};\n  color: ${theme.colors.gray400};\n  font-size: 2rem;\n`;\n\nconst FormRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${theme.spacing.lg};\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst DiscountsTab = () => {\n  const [discounts, setDiscounts] = useState([\n    {\n      id: 1,\n      code: 'WELCOME20',\n      description: 'Welcome discount for new customers',\n      type: 'percentage',\n      value: 20,\n      minOrderAmount: 50,\n      maxUsagePerCustomer: 1,\n      totalUsage: 245,\n      maxUsage: 1000,\n      startDate: '2024-01-01',\n      endDate: '2024-12-31',\n      isActive: true,\n    },\n    {\n      id: 2,\n      code: 'SAVE10',\n      description: 'Fixed discount for orders above $100',\n      type: 'fixed',\n      value: 10,\n      minOrderAmount: 100,\n      maxUsagePerCustomer: 3,\n      totalUsage: 89,\n      maxUsage: 500,\n      startDate: '2024-01-15',\n      endDate: '2024-03-15',\n      isActive: true,\n    },\n    {\n      id: 3,\n      code: 'EXPIRED50',\n      description: 'Old promotional discount',\n      type: 'percentage',\n      value: 50,\n      minOrderAmount: 0,\n      maxUsagePerCustomer: 1,\n      totalUsage: 156,\n      maxUsage: 200,\n      startDate: '2023-12-01',\n      endDate: '2023-12-31',\n      isActive: false,\n    },\n  ]);\n\n  const [showModal, setShowModal] = useState(false);\n  const [editingDiscount, setEditingDiscount] = useState(null);\n  const [formData, setFormData] = useState({\n    code: '',\n    description: '',\n    type: 'percentage',\n    value: '',\n    minOrderAmount: '',\n    maxUsagePerCustomer: '',\n    maxUsage: '',\n    startDate: '',\n    endDate: '',\n  });\n\n  const handleAddDiscount = () => {\n    setEditingDiscount(null);\n    setFormData({\n      code: '',\n      description: '',\n      type: 'percentage',\n      value: '',\n      minOrderAmount: '',\n      maxUsagePerCustomer: '',\n      maxUsage: '',\n      startDate: '',\n      endDate: '',\n    });\n    setShowModal(true);\n  };\n\n  const handleEditDiscount = discount => {\n    setEditingDiscount(discount);\n    setFormData({\n      code: discount.code,\n      description: discount.description,\n      type: discount.type,\n      value: discount.value.toString(),\n      minOrderAmount: discount.minOrderAmount.toString(),\n      maxUsagePerCustomer: discount.maxUsagePerCustomer.toString(),\n      maxUsage: discount.maxUsage.toString(),\n      startDate: discount.startDate,\n      endDate: discount.endDate,\n    });\n    setShowModal(true);\n  };\n\n  const handleDeleteDiscount = discountId => {\n    if (window.confirm('Are you sure you want to delete this discount?')) {\n      setDiscounts(discounts.filter(d => d.id !== discountId));\n    }\n  };\n\n  const handleToggleStatus = discountId => {\n    setDiscounts(\n      discounts.map(d =>\n        d.id === discountId ? { ...d, isActive: !d.isActive } : d\n      )\n    );\n  };\n\n  const handleCopyCode = code => {\n    navigator.clipboard.writeText(code);\n    alert(`Coupon code \"${code}\" copied to clipboard!`);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const discountData = {\n      ...formData,\n      value: parseFloat(formData.value),\n      minOrderAmount: parseFloat(formData.minOrderAmount) || 0,\n      maxUsagePerCustomer: parseInt(formData.maxUsagePerCustomer) || 1,\n      maxUsage: parseInt(formData.maxUsage) || 1000,\n    };\n\n    if (editingDiscount) {\n      setDiscounts(\n        discounts.map(d =>\n          d.id === editingDiscount.id ? { ...d, ...discountData } : d\n        )\n      );\n    } else {\n      const newDiscount = {\n        id: Date.now(),\n        ...discountData,\n        totalUsage: 0,\n        isActive: true,\n      };\n      setDiscounts([...discounts, newDiscount]);\n    }\n\n    setShowModal(false);\n  };\n\n  const formatCurrency = value => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(value);\n  };\n\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    });\n  };\n\n  const modalFooter = (\n    <>\n      <Button variant=\"ghost\" onClick={() => setShowModal(false)}>\n        Cancel\n      </Button>\n      <Button variant=\"primary\" onClick={handleSubmit}>\n        {editingDiscount ? 'Update Discount' : 'Create Discount'}\n      </Button>\n    </>\n  );\n\n  return (\n    <>\n      <DiscountsContainer>\n        <DiscountsHeader>\n          <HeaderLeft>\n            <HeaderTitle>Discounts & Coupons</HeaderTitle>\n            <HeaderSubtitle>\n              Create and manage discount codes for your customers\n            </HeaderSubtitle>\n          </HeaderLeft>\n\n          <Button variant=\"primary\" onClick={handleAddDiscount}>\n            <FaPlus />\n            Create Discount\n          </Button>\n        </DiscountsHeader>\n\n        <DiscountsList>\n          {discounts.length === 0 ? (\n            <EmptyState>\n              <EmptyIcon>\n                <FaPercent />\n              </EmptyIcon>\n              <h3>No discounts created yet</h3>\n              <p>\n                Create your first discount to start offering deals to your\n                customers\n              </p>\n              <Button variant=\"primary\" onClick={handleAddDiscount}>\n                <FaPlus />\n                Create Your First Discount\n              </Button>\n            </EmptyState>\n          ) : (\n            discounts.map(discount => (\n              <DiscountCard key={discount.id}>\n                <DiscountHeader>\n                  <DiscountInfo>\n                    <DiscountCode>\n                      {discount.code}\n                      <CopyButton onClick={() => handleCopyCode(discount.code)}>\n                        <FaCopy />\n                      </CopyButton>\n                    </DiscountCode>\n                    <DiscountDescription>\n                      {discount.description}\n                    </DiscountDescription>\n                  </DiscountInfo>\n\n                  <DiscountActions>\n                    <StatusToggle\n                      isActive={discount.isActive}\n                      onClick={() => handleToggleStatus(discount.id)}\n                    >\n                      {discount.isActive ? <FaToggleOn /> : <FaToggleOff />}\n                      {discount.isActive ? 'Active' : 'Inactive'}\n                    </StatusToggle>\n\n                    <ActionButton onClick={() => handleEditDiscount(discount)}>\n                      <FaEdit />\n                    </ActionButton>\n\n                    <ActionButton\n                      className=\"danger\"\n                      onClick={() => handleDeleteDiscount(discount.id)}\n                    >\n                      <FaTrash />\n                    </ActionButton>\n                  </DiscountActions>\n                </DiscountHeader>\n\n                <DiscountDetails>\n                  <DetailItem>\n                    <DetailIcon>\n                      {discount.type === 'percentage' ? (\n                        <FaPercent />\n                      ) : (\n                        <FaDollarSign />\n                      )}\n                    </DetailIcon>\n                    <DetailContent>\n                      <DetailLabel>Discount Value</DetailLabel>\n                      <DetailValue>\n                        {discount.type === 'percentage'\n                          ? `${discount.value}%`\n                          : formatCurrency(discount.value)}\n                      </DetailValue>\n                    </DetailContent>\n                  </DetailItem>\n\n                  <DetailItem>\n                    <DetailIcon>\n                      <FaDollarSign />\n                    </DetailIcon>\n                    <DetailContent>\n                      <DetailLabel>Min Order Amount</DetailLabel>\n                      <DetailValue>\n                        {formatCurrency(discount.minOrderAmount)}\n                      </DetailValue>\n                    </DetailContent>\n                  </DetailItem>\n\n                  <DetailItem>\n                    <DetailIcon>\n                      <FaUsers />\n                    </DetailIcon>\n                    <DetailContent>\n                      <DetailLabel>Usage</DetailLabel>\n                      <DetailValue>\n                        {discount.totalUsage} / {discount.maxUsage}\n                      </DetailValue>\n                    </DetailContent>\n                  </DetailItem>\n\n                  <DetailItem>\n                    <DetailIcon>\n                      <FaCalendarAlt />\n                    </DetailIcon>\n                    <DetailContent>\n                      <DetailLabel>Valid Period</DetailLabel>\n                      <DetailValue>\n                        {formatDate(discount.startDate)} -{' '}\n                        {formatDate(discount.endDate)}\n                      </DetailValue>\n                    </DetailContent>\n                  </DetailItem>\n                </DiscountDetails>\n              </DiscountCard>\n            ))\n          )}\n        </DiscountsList>\n      </DiscountsContainer>\n\n      <Modal\n        isOpen={showModal}\n        onClose={() => setShowModal(false)}\n        title={editingDiscount ? 'Edit Discount' : 'Create New Discount'}\n        footer={modalFooter}\n        size=\"lg\"\n      >\n        <form onSubmit={handleSubmit}>\n          <FormRow>\n            <FormField\n              label=\"Coupon Code\"\n              name=\"code\"\n              value={formData.code}\n              onChange={e =>\n                setFormData(prev => ({\n                  ...prev,\n                  code: e.target.value.toUpperCase(),\n                }))\n              }\n              placeholder=\"e.g., SAVE20\"\n              required\n            />\n\n            <FormField\n              label=\"Discount Type\"\n              type=\"select\"\n              name=\"type\"\n              value={formData.type}\n              onChange={e =>\n                setFormData(prev => ({ ...prev, type: e.target.value }))\n              }\n              options={[\n                { value: 'percentage', label: 'Percentage' },\n                { value: 'fixed', label: 'Fixed Amount' },\n              ]}\n              required\n            />\n          </FormRow>\n\n          <FormField\n            label=\"Description\"\n            type=\"textarea\"\n            name=\"description\"\n            value={formData.description}\n            onChange={e =>\n              setFormData(prev => ({ ...prev, description: e.target.value }))\n            }\n            placeholder=\"Describe this discount offer\"\n            rows={2}\n          />\n\n          <FormRow>\n            <FormField\n              label={`Discount Value (${formData.type === 'percentage' ? '%' : '$'})`}\n              type=\"number\"\n              name=\"value\"\n              value={formData.value}\n              onChange={e =>\n                setFormData(prev => ({ ...prev, value: e.target.value }))\n              }\n              placeholder={formData.type === 'percentage' ? '20' : '10.00'}\n              min=\"0\"\n              max={formData.type === 'percentage' ? '100' : undefined}\n              step={formData.type === 'percentage' ? '1' : '0.01'}\n              required\n            />\n\n            <FormField\n              label=\"Minimum Order Amount ($)\"\n              type=\"number\"\n              name=\"minOrderAmount\"\n              value={formData.minOrderAmount}\n              onChange={e =>\n                setFormData(prev => ({\n                  ...prev,\n                  minOrderAmount: e.target.value,\n                }))\n              }\n              placeholder=\"0.00\"\n              min=\"0\"\n              step=\"0.01\"\n            />\n          </FormRow>\n\n          <FormRow>\n            <FormField\n              label=\"Max Usage Per Customer\"\n              type=\"number\"\n              name=\"maxUsagePerCustomer\"\n              value={formData.maxUsagePerCustomer}\n              onChange={e =>\n                setFormData(prev => ({\n                  ...prev,\n                  maxUsagePerCustomer: e.target.value,\n                }))\n              }\n              placeholder=\"1\"\n              min=\"1\"\n            />\n\n            <FormField\n              label=\"Total Usage Limit\"\n              type=\"number\"\n              name=\"maxUsage\"\n              value={formData.maxUsage}\n              onChange={e =>\n                setFormData(prev => ({ ...prev, maxUsage: e.target.value }))\n              }\n              placeholder=\"1000\"\n              min=\"1\"\n            />\n          </FormRow>\n\n          <FormRow>\n            <FormField\n              label=\"Start Date\"\n              type=\"date\"\n              name=\"startDate\"\n              value={formData.startDate}\n              onChange={e =>\n                setFormData(prev => ({ ...prev, startDate: e.target.value }))\n              }\n              required\n            />\n\n            <FormField\n              label=\"End Date\"\n              type=\"date\"\n              name=\"endDate\"\n              value={formData.endDate}\n              onChange={e =>\n                setFormData(prev => ({ ...prev, endDate: e.target.value }))\n              }\n              required\n            />\n          </FormRow>\n        </form>\n      </Modal>\n    </>\n  );\n};\n\nexport default DiscountsTab;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/EnquiriesTab.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaEnvelope,\n  FaPhone,\n  FaUser,\n  FaEye,\n  FaCheck,\n  FaClock,\n  FaStickyNote,\n  FaEdit,\n  FaSave,\n  FaTimes,\n  FaChevronDown,\n  FaChevronUp,\n  FaInbox,\n  FaBell,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.xl};\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.md};\n`;\n\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0;\n`;\n\nconst StatsCards = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst StatCard = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  text-align: center;\n`;\n\nconst StatNumber = styled.div`\n  font-size: 2rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst StatLabel = styled.div`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n`;\n\nconst FiltersSection = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  display: flex;\n  gap: ${theme.spacing.md};\n  align-items: center;\n  flex-wrap: wrap;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    flex-direction: column;\n    align-items: stretch;\n  }\n`;\n\nconst SearchInput = styled.input`\n  flex: 1;\n  min-width: 250px;\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray400};\n  }\n`;\n\nconst FilterSelect = styled.select`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.white};\n  font-size: 1rem;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst EnquiriesList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.lg};\n`;\n\nconst EnquiryCard = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  overflow: hidden;\n  transition: all 0.2s ease;\n\n  &:hover {\n    box-shadow: ${theme.shadows.md};\n  }\n`;\n\nconst EnquiryHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: ${theme.spacing.lg};\n  border-bottom: 1px solid ${theme.colors.gray100};\n  cursor: pointer;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst ProductInfo = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  flex: 1;\n`;\n\nconst ProductImage = styled.img`\n  width: 60px;\n  height: 60px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst ProductDetails = styled.div`\n  flex: 1;\n`;\n\nconst ProductName = styled.h3`\n  font-size: 1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n`;\n\nconst CustomerName = styled.p`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n  margin: 0 0 ${theme.spacing.xs} 0;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst EnquiryDate = styled.p`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst HeaderActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n  align-items: flex-start;\n`;\n\nconst StatusSelect = styled.select`\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.white};\n  font-size: 0.9rem;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst ExpandButton = styled.button`\n  background: none;\n  border: none;\n  color: ${theme.colors.gray500};\n  cursor: pointer;\n  padding: ${theme.spacing.xs};\n  border-radius: ${theme.borderRadius.sm};\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.gray700};\n  }\n`;\n\nconst StatusBadge = styled.span.withConfig({\n  shouldForwardProp: prop => prop !== 'status',\n})`\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n\n  ${props => {\n    switch (props.status) {\n      case 'pending':\n        return `\n          background: ${theme.colors.warning}20;\n          color: ${theme.colors.warning};\n        `;\n      case 'contacted':\n        return `\n          background: ${theme.colors.info}20;\n          color: ${theme.colors.info};\n        `;\n      case 'in_progress':\n        return `\n          background: ${theme.colors.primary}20;\n          color: ${theme.colors.primary};\n        `;\n      case 'completed':\n        return `\n          background: ${theme.colors.success}20;\n          color: ${theme.colors.success};\n        `;\n      default:\n        return `\n          background: ${theme.colors.gray200};\n          color: ${theme.colors.gray600};\n        `;\n    }\n  }}\n`;\n\nconst EnquiryBody = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'expanded',\n})`\n  display: ${props => (props.expanded ? 'block' : 'none')};\n  padding: ${theme.spacing.lg};\n  border-top: 1px solid ${theme.colors.gray100};\n`;\n\nconst ContactSection = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst ContactItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.sm};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst ContactLabel = styled.span`\n  font-weight: 600;\n  color: ${theme.colors.gray700};\n  min-width: 60px;\n`;\n\nconst ContactValue = styled.span`\n  color: ${theme.colors.gray600};\n`;\n\nconst MessageSection = styled.div`\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst MessageLabel = styled.h4`\n  font-size: 1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.sm} 0;\n`;\n\nconst MessageContent = styled.div`\n  background: ${theme.colors.gray50};\n  padding: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  border-left: 4px solid ${theme.colors.primary};\n`;\n\nconst MessageText = styled.p`\n  color: ${theme.colors.gray700};\n  margin: 0;\n  line-height: 1.5;\n`;\n\nconst NotesSection = styled.div`\n  border-top: 1px solid ${theme.colors.gray200};\n  padding-top: ${theme.spacing.lg};\n`;\n\nconst NotesHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst NotesTitle = styled.h4`\n  font-size: 1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst NotesActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n`;\n\nconst Button = styled.button`\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.9rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst PrimaryButton = styled(Button)`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  border: 2px solid ${theme.colors.primary};\n\n  &:hover:not(:disabled) {\n    background: ${theme.colors.primaryDark};\n    border-color: ${theme.colors.primaryDark};\n  }\n`;\n\nconst SecondaryButton = styled(Button)`\n  background: ${theme.colors.white};\n  color: ${theme.colors.gray700};\n  border: 2px solid ${theme.colors.gray200};\n\n  &:hover:not(:disabled) {\n    background: ${theme.colors.gray50};\n    border-color: ${theme.colors.gray300};\n  }\n`;\n\nconst NotesTextArea = styled.textarea`\n  width: 100%;\n  min-height: 80px;\n  padding: ${theme.spacing.sm};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-family: inherit;\n  font-size: 0.9rem;\n  resize: vertical;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray400};\n  }\n`;\n\nconst ExistingNote = styled.div`\n  background: ${theme.colors.gray50};\n  padding: ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  margin-bottom: ${theme.spacing.sm};\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n`;\n\nconst EmptyIcon = styled.div`\n  font-size: 4rem;\n  color: ${theme.colors.gray300};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst EmptyTitle = styled.h3`\n  font-size: 1.5rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst EmptyText = styled.p`\n  color: ${theme.colors.gray500};\n  margin: 0;\n`;\n\nconst EnquiriesTab = () => {\n  const [enquiries, setEnquiries] = useState([]);\n  const [filteredEnquiries, setFilteredEnquiries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [expandedCards, setExpandedCards] = useState(new Set());\n  const [editingNotes, setEditingNotes] = useState(new Set());\n  const [notes, setNotes] = useState({});\n\n  useEffect(() => {\n    // Load enquiries from localStorage (in real app, this would be from API)\n    const allEnquiries = JSON.parse(\n      localStorage.getItem('userEnquiries') || '[]'\n    );\n    setEnquiries(allEnquiries);\n  }, []);\n\n  useEffect(() => {\n    let filtered = enquiries;\n\n    // Filter by search term\n    if (searchTerm) {\n      filtered = filtered.filter(\n        enquiry =>\n          enquiry.productName\n            .toLowerCase()\n            .includes(searchTerm.toLowerCase()) ||\n          enquiry.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          enquiry.email.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n\n    // Filter by status\n    if (statusFilter !== 'all') {\n      filtered = filtered.filter(enquiry => enquiry.status === statusFilter);\n    }\n\n    // Sort by date (newest first)\n    filtered.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n\n    setFilteredEnquiries(filtered);\n  }, [enquiries, searchTerm, statusFilter]);\n\n  const handleStatusChange = (enquiryId, newStatus) => {\n    const updatedEnquiries = enquiries.map(enquiry =>\n      enquiry.id === enquiryId ? { ...enquiry, status: newStatus } : enquiry\n    );\n    setEnquiries(updatedEnquiries);\n    localStorage.setItem('userEnquiries', JSON.stringify(updatedEnquiries));\n  };\n\n  const toggleCardExpansion = enquiryId => {\n    const newExpanded = new Set(expandedCards);\n    if (newExpanded.has(enquiryId)) {\n      newExpanded.delete(enquiryId);\n    } else {\n      newExpanded.add(enquiryId);\n    }\n    setExpandedCards(newExpanded);\n  };\n\n  const startEditingNote = enquiryId => {\n    setEditingNotes(new Set([...editingNotes, enquiryId]));\n  };\n\n  const saveNote = enquiryId => {\n    setEditingNotes(new Set([...editingNotes].filter(id => id !== enquiryId)));\n    // In real app, save to backend\n  };\n\n  const cancelEditingNote = enquiryId => {\n    setEditingNotes(new Set([...editingNotes].filter(id => id !== enquiryId)));\n    setNotes({ ...notes, [enquiryId]: '' });\n  };\n\n  const handleNoteChange = (enquiryId, value) => {\n    setNotes({ ...notes, [enquiryId]: value });\n  };\n\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'pending':\n        return <FaClock />;\n      case 'contacted':\n        return <FaPhone />;\n      case 'in_progress':\n        return <FaEye />;\n      case 'completed':\n        return <FaCheck />;\n      default:\n        return <FaBell />;\n    }\n  };\n\n  const getStatusLabel = status => {\n    switch (status) {\n      case 'pending':\n        return 'Pending';\n      case 'contacted':\n        return 'Contacted';\n      case 'in_progress':\n        return 'In Progress';\n      case 'completed':\n        return 'Completed';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  const getStats = () => {\n    const total = enquiries.length;\n    const pending = enquiries.filter(e => e.status === 'pending').length;\n    const inProgress = enquiries.filter(\n      e => e.status === 'in_progress' || e.status === 'contacted'\n    ).length;\n    const completed = enquiries.filter(e => e.status === 'completed').length;\n\n    return { total, pending, inProgress, completed };\n  };\n\n  const stats = getStats();\n\n  return (\n    <Container>\n      <Header>\n        <Title>Enquiry Management</Title>\n      </Header>\n\n      <StatsCards>\n        <StatCard>\n          <StatNumber>{stats.total}</StatNumber>\n          <StatLabel>Total Enquiries</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatNumber>{stats.pending}</StatNumber>\n          <StatLabel>Pending Response</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatNumber>{stats.inProgress}</StatNumber>\n          <StatLabel>In Progress</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatNumber>{stats.completed}</StatNumber>\n          <StatLabel>Completed</StatLabel>\n        </StatCard>\n      </StatsCards>\n\n      <FiltersSection>\n        <SearchInput\n          type=\"text\"\n          placeholder=\"Search by product, customer name, or email...\"\n          value={searchTerm}\n          onChange={e => setSearchTerm(e.target.value)}\n        />\n        <FilterSelect\n          value={statusFilter}\n          onChange={e => setStatusFilter(e.target.value)}\n        >\n          <option value=\"all\">All Status</option>\n          <option value=\"pending\">Pending</option>\n          <option value=\"contacted\">Contacted</option>\n          <option value=\"in_progress\">In Progress</option>\n          <option value=\"completed\">Completed</option>\n        </FilterSelect>\n      </FiltersSection>\n\n      <EnquiriesList>\n        {filteredEnquiries.length > 0 ? (\n          filteredEnquiries.map(enquiry => (\n            <EnquiryCard key={enquiry.id}>\n              <EnquiryHeader onClick={() => toggleCardExpansion(enquiry.id)}>\n                <ProductInfo>\n                  <ProductImage\n                    src=\"https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=60&h=60&fit=crop\"\n                    alt={enquiry.productName}\n                  />\n                  <ProductDetails>\n                    <ProductName>{enquiry.productName}</ProductName>\n                    <CustomerName>\n                      <FaUser />\n                      {enquiry.name}\n                    </CustomerName>\n                    <EnquiryDate>\n                      <FaClock />\n                      {formatDate(enquiry.timestamp)}\n                    </EnquiryDate>\n                  </ProductDetails>\n                </ProductInfo>\n                <HeaderActions>\n                  <StatusBadge status={enquiry.status}>\n                    {getStatusIcon(enquiry.status)}\n                    {getStatusLabel(enquiry.status)}\n                  </StatusBadge>\n                  <StatusSelect\n                    value={enquiry.status}\n                    onChange={e => {\n                      e.stopPropagation();\n                      handleStatusChange(enquiry.id, e.target.value);\n                    }}\n                    onClick={e => e.stopPropagation()}\n                  >\n                    <option value=\"pending\">Pending</option>\n                    <option value=\"contacted\">Contacted</option>\n                    <option value=\"in_progress\">In Progress</option>\n                    <option value=\"completed\">Completed</option>\n                  </StatusSelect>\n                  <ExpandButton>\n                    {expandedCards.has(enquiry.id) ? (\n                      <FaChevronUp />\n                    ) : (\n                      <FaChevronDown />\n                    )}\n                  </ExpandButton>\n                </HeaderActions>\n              </EnquiryHeader>\n\n              <EnquiryBody expanded={expandedCards.has(enquiry.id)}>\n                <ContactSection>\n                  <ContactItem>\n                    <FaEnvelope style={{ color: theme.colors.primary }} />\n                    <div>\n                      <ContactLabel>Email:</ContactLabel>\n                      <ContactValue>{enquiry.email}</ContactValue>\n                    </div>\n                  </ContactItem>\n                  <ContactItem>\n                    <FaPhone style={{ color: theme.colors.primary }} />\n                    <div>\n                      <ContactLabel>Phone:</ContactLabel>\n                      <ContactValue>{enquiry.phone}</ContactValue>\n                    </div>\n                  </ContactItem>\n                </ContactSection>\n\n                {enquiry.message && (\n                  <MessageSection>\n                    <MessageLabel>Customer Message:</MessageLabel>\n                    <MessageContent>\n                      <MessageText>{enquiry.message}</MessageText>\n                    </MessageContent>\n                  </MessageSection>\n                )}\n\n                <NotesSection>\n                  <NotesHeader>\n                    <NotesTitle>\n                      <FaStickyNote />\n                      Internal Notes\n                    </NotesTitle>\n                    <NotesActions>\n                      {editingNotes.has(enquiry.id) ? (\n                        <>\n                          <PrimaryButton onClick={() => saveNote(enquiry.id)}>\n                            <FaSave />\n                            Save\n                          </PrimaryButton>\n                          <SecondaryButton\n                            onClick={() => cancelEditingNote(enquiry.id)}\n                          >\n                            <FaTimes />\n                            Cancel\n                          </SecondaryButton>\n                        </>\n                      ) : (\n                        <SecondaryButton\n                          onClick={() => startEditingNote(enquiry.id)}\n                        >\n                          <FaEdit />\n                          Add Note\n                        </SecondaryButton>\n                      )}\n                    </NotesActions>\n                  </NotesHeader>\n\n                  {editingNotes.has(enquiry.id) ? (\n                    <NotesTextArea\n                      value={notes[enquiry.id] || ''}\n                      onChange={e =>\n                        handleNoteChange(enquiry.id, e.target.value)\n                      }\n                      placeholder=\"Add internal notes about this enquiry...\"\n                    />\n                  ) : (\n                    <ExistingNote>\n                      {notes[enquiry.id] || 'No notes added yet.'}\n                    </ExistingNote>\n                  )}\n                </NotesSection>\n              </EnquiryBody>\n            </EnquiryCard>\n          ))\n        ) : (\n          <EmptyState>\n            <EmptyIcon>\n              <FaInbox />\n            </EmptyIcon>\n            <EmptyTitle>No Enquiries Found</EmptyTitle>\n            <EmptyText>\n              {searchTerm || statusFilter !== 'all'\n                ? 'No enquiries match your current filters.'\n                : \"You haven't received any enquiries yet. Customers will be able to enquire about your products.\"}\n            </EmptyText>\n          </EmptyState>\n        )}\n      </EnquiriesList>\n    </Container>\n  );\n};\n\nexport default EnquiriesTab;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/EnquiryModal.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":382,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":382,"endColumn":59}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaTimes,\n  FaUser,\n  FaPhone,\n  FaEnvelope,\n  FaComment,\n  FaCheck,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport { useNotifications } from './NotificationSystem';\nimport { useAuth } from '../../context/AuthContext';\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  padding: ${theme.spacing.md};\n`;\n\nconst ModalContainer = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.xl};\n  max-width: 500px;\n  width: 100%;\n  max-height: 90vh;\n  overflow-y: auto;\n  position: relative;\n`;\n\nconst ModalHeader = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ModalTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0;\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: ${theme.colors.gray500};\n  cursor: pointer;\n  padding: ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.gray700};\n  }\n`;\n\nconst ModalBody = styled.div`\n  padding: ${theme.spacing.xl};\n`;\n\nconst ProductInfo = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.xl};\n  padding: ${theme.spacing.md};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst ProductImage = styled.img`\n  width: 80px;\n  height: 80px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst ProductDetails = styled.div`\n  flex: 1;\n`;\n\nconst ProductName = styled.h3`\n  font-size: 1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n`;\n\nconst ProductPrice = styled.p`\n  font-size: 1.1rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n  margin: 0;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.lg};\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n`;\n\nconst Label = styled.label`\n  font-weight: 500;\n  color: ${theme.colors.gray700};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nconst InputIcon = styled.div`\n  position: absolute;\n  left: ${theme.spacing.md};\n  color: ${theme.colors.gray400};\n  z-index: 1;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.md}\n    ${theme.spacing.xxl};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray400};\n  }\n`;\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  padding: ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.md}\n    ${theme.spacing.xxl};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  min-height: 100px;\n  resize: vertical;\n  font-family: inherit;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray400};\n  }\n`;\n\nconst CheckboxWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  gap: ${theme.spacing.sm};\n`;\n\nconst Checkbox = styled.input`\n  margin-top: 2px;\n`;\n\nconst CheckboxLabel = styled.label`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n  line-height: 1.5;\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  justify-content: flex-end;\n  margin-top: ${theme.spacing.lg};\n`;\n\nconst Button = styled.button`\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst CancelButton = styled(Button)`\n  background: ${theme.colors.white};\n  color: ${theme.colors.gray700};\n  border: 2px solid ${theme.colors.gray200};\n\n  &:hover:not(:disabled) {\n    background: ${theme.colors.gray50};\n    border-color: ${theme.colors.gray300};\n  }\n`;\n\nconst SubmitButton = styled(Button)`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  border: 2px solid ${theme.colors.primary};\n\n  &:hover:not(:disabled) {\n    background: ${theme.colors.primaryDark};\n    border-color: ${theme.colors.primaryDark};\n  }\n`;\n\nconst SuccessMessage = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xl};\n`;\n\nconst SuccessIcon = styled.div`\n  width: 80px;\n  height: 80px;\n  background: ${theme.colors.success};\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto ${theme.spacing.lg} auto;\n  color: ${theme.colors.white};\n  font-size: 2rem;\n`;\n\nconst SuccessTitle = styled.h3`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.md} 0;\n`;\n\nconst SuccessText = styled.p`\n  color: ${theme.colors.gray600};\n  margin: 0 0 ${theme.spacing.xl} 0;\n`;\n\nconst EnquiryModal = ({ isOpen, onClose, product, userInfo = {} }) => {\n  const { showSuccessNotification, showEnquiryNotification } =\n    useNotifications();\n  const { user, isAuthenticated } = useAuth();\n\n  // Use authenticated user data if available, otherwise use passed userInfo\n  const userData = isAuthenticated ? user : userInfo;\n\n  const [formData, setFormData] = useState({\n    name: userData.name || '',\n    phone: userData.phone || '',\n    email: userData.email || '',\n    message: '',\n    agreeToTerms: false,\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = e => {\n    const { name, value, type, checked } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value,\n    }));\n\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: '',\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!formData.name.trim()) {\n      newErrors.name = 'Name is required';\n    }\n\n    if (!formData.phone.trim()) {\n      newErrors.phone = 'Phone number is required';\n    } else if (!/^\\+?[\\d\\s\\-()]{10,}$/.test(formData.phone.trim())) {\n      newErrors.phone = 'Please enter a valid phone number';\n    }\n\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    if (!formData.agreeToTerms) {\n      newErrors.agreeToTerms = 'You must agree to the terms';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1500));\n\n      // Here you would typically send the enquiry to your backend\n      const enquiryData = {\n        ...formData,\n        productId: product.id,\n        productName: product.name,\n        productPrice: product.price,\n        timestamp: new Date().toISOString(),\n        status: 'pending',\n      };\n\n      // Store in localStorage for demo (in real app, this would be in your database)\n      const existingEnquiries = JSON.parse(\n        localStorage.getItem('userEnquiries') || '[]'\n      );\n      const newEnquiry = {\n        id: Date.now(),\n        ...enquiryData,\n      };\n      localStorage.setItem(\n        'userEnquiries',\n        JSON.stringify([...existingEnquiries, newEnquiry])\n      );\n\n      // Show success notification\n      showSuccessNotification(\n        'Enquiry Sent Successfully!',\n        `Your enquiry for ${product.name} has been sent to the seller.`\n      );\n\n      // Trigger enquiry notification for seller (simulated)\n      showEnquiryNotification(newEnquiry);\n\n      setIsSuccess(true);\n    } catch (error) {\n      alert('Failed to submit enquiry. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleClose = () => {\n    if (isSuccess) {\n      setIsSuccess(false);\n      setFormData({\n        name: userInfo.name || '',\n        phone: userInfo.phone || '',\n        email: userInfo.email || '',\n        message: '',\n        agreeToTerms: false,\n      });\n      setErrors({});\n    }\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <ModalOverlay onClick={handleClose}>\n      <ModalContainer onClick={e => e.stopPropagation()}>\n        <ModalHeader>\n          <ModalTitle>\n            {isSuccess ? 'Enquiry Submitted!' : 'Product Enquiry'}\n          </ModalTitle>\n          <CloseButton onClick={handleClose}>\n            <FaTimes />\n          </CloseButton>\n        </ModalHeader>\n\n        <ModalBody>\n          {isSuccess ? (\n            <SuccessMessage>\n              <SuccessIcon>\n                <FaCheck />\n              </SuccessIcon>\n              <SuccessTitle>Enquiry Sent Successfully!</SuccessTitle>\n              <SuccessText>\n                Thank you for your interest in {product.name}. The seller will\n                contact you soon via phone or email.\n              </SuccessText>\n              <SubmitButton onClick={handleClose}>\n                Continue Shopping\n              </SubmitButton>\n            </SuccessMessage>\n          ) : (\n            <>\n              <ProductInfo>\n                <ProductImage src={product.image} alt={product.name} />\n                <ProductDetails>\n                  <ProductName>{product.name}</ProductName>\n                  <ProductPrice>${product.price}</ProductPrice>\n                </ProductDetails>\n              </ProductInfo>\n\n              <Form onSubmit={handleSubmit}>\n                <FormGroup>\n                  <Label>\n                    <FaUser />\n                    Full Name *\n                  </Label>\n                  <InputWrapper>\n                    <InputIcon>\n                      <FaUser />\n                    </InputIcon>\n                    <Input\n                      type=\"text\"\n                      name=\"name\"\n                      value={formData.name}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter your full name\"\n                      style={{\n                        borderColor: errors.name\n                          ? theme.colors.error\n                          : undefined,\n                      }}\n                    />\n                  </InputWrapper>\n                  {errors.name && (\n                    <span\n                      style={{ color: theme.colors.error, fontSize: '0.9rem' }}\n                    >\n                      {errors.name}\n                    </span>\n                  )}\n                </FormGroup>\n\n                <FormGroup>\n                  <Label>\n                    <FaPhone />\n                    Phone Number *\n                  </Label>\n                  <InputWrapper>\n                    <InputIcon>\n                      <FaPhone />\n                    </InputIcon>\n                    <Input\n                      type=\"tel\"\n                      name=\"phone\"\n                      value={formData.phone}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter your phone number\"\n                      style={{\n                        borderColor: errors.phone\n                          ? theme.colors.error\n                          : undefined,\n                      }}\n                    />\n                  </InputWrapper>\n                  {errors.phone && (\n                    <span\n                      style={{ color: theme.colors.error, fontSize: '0.9rem' }}\n                    >\n                      {errors.phone}\n                    </span>\n                  )}\n                </FormGroup>\n\n                <FormGroup>\n                  <Label>\n                    <FaEnvelope />\n                    Email Address *\n                  </Label>\n                  <InputWrapper>\n                    <InputIcon>\n                      <FaEnvelope />\n                    </InputIcon>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      value={formData.email}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter your email address\"\n                      style={{\n                        borderColor: errors.email\n                          ? theme.colors.error\n                          : undefined,\n                      }}\n                    />\n                  </InputWrapper>\n                  {errors.email && (\n                    <span\n                      style={{ color: theme.colors.error, fontSize: '0.9rem' }}\n                    >\n                      {errors.email}\n                    </span>\n                  )}\n                </FormGroup>\n\n                <FormGroup>\n                  <Label>\n                    <FaComment />\n                    Message (Optional)\n                  </Label>\n                  <InputWrapper>\n                    <InputIcon>\n                      <FaComment />\n                    </InputIcon>\n                    <TextArea\n                      name=\"message\"\n                      value={formData.message}\n                      onChange={handleInputChange}\n                      placeholder=\"Tell us about your requirements, quantity needed, or any specific questions...\"\n                    />\n                  </InputWrapper>\n                </FormGroup>\n\n                <CheckboxWrapper>\n                  <Checkbox\n                    type=\"checkbox\"\n                    id=\"agreeToTerms\"\n                    name=\"agreeToTerms\"\n                    checked={formData.agreeToTerms}\n                    onChange={handleInputChange}\n                  />\n                  <CheckboxLabel htmlFor=\"agreeToTerms\">\n                    I agree to share my contact information with the seller and\n                    receive communications about this product. By submitting\n                    this enquiry, I consent to the processing of my personal\n                    data.\n                  </CheckboxLabel>\n                </CheckboxWrapper>\n                {errors.agreeToTerms && (\n                  <span\n                    style={{ color: theme.colors.error, fontSize: '0.9rem' }}\n                  >\n                    {errors.agreeToTerms}\n                  </span>\n                )}\n\n                <ButtonGroup>\n                  <CancelButton type=\"button\" onClick={handleClose}>\n                    Cancel\n                  </CancelButton>\n                  <SubmitButton type=\"submit\" disabled={isSubmitting}>\n                    {isSubmitting ? 'Sending...' : 'Send Enquiry'}\n                  </SubmitButton>\n                </ButtonGroup>\n              </Form>\n            </>\n          )}\n        </ModalBody>\n      </ModalContainer>\n    </ModalOverlay>\n  );\n};\n\nexport default EnquiryModal;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/Footer.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":255,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":255,"endColumn":58}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaFacebook,\n  FaTwitter,\n  FaInstagram,\n  FaLinkedin,\n  FaPhone,\n  FaEnvelope,\n  FaMapMarkerAlt,\n  FaShoppingCart,\n  FaCreditCard,\n  FaShieldAlt,\n  FaTruck,\n  FaUndoAlt,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst FooterContainer = styled.footer`\n  background: ${theme.colors.gray900};\n  color: ${theme.colors.white};\n  margin-top: auto;\n`;\n\nconst FooterContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xxl} ${theme.spacing.md} ${theme.spacing.xl};\n`;\n\nconst FooterTop = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst FooterSection = styled.div`\n  h3 {\n    font-size: 1.2rem;\n    font-weight: 600;\n    margin-bottom: ${theme.spacing.lg};\n    color: ${theme.colors.white};\n  }\n\n  p {\n    color: ${theme.colors.gray300};\n    line-height: 1.6;\n    margin-bottom: ${theme.spacing.md};\n  }\n`;\n\nconst FooterLinks = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n`;\n\nconst FooterLink = styled(Link)`\n  color: ${theme.colors.gray300};\n  font-size: 0.9rem;\n  transition: color 0.2s ease;\n\n  &:hover {\n    color: ${theme.colors.white};\n  }\n`;\n\nconst ContactInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.md};\n  color: ${theme.colors.gray300};\n  font-size: 0.9rem;\n`;\n\nconst SocialLinks = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  margin-top: ${theme.spacing.lg};\n`;\n\nconst SocialLink = styled.a`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: ${theme.colors.gray700};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.white};\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: ${theme.colors.primary};\n    transform: translateY(-2px);\n  }\n`;\n\nconst FeatureGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xl};\n  padding: ${theme.spacing.xl} 0;\n  border-top: 1px solid ${theme.colors.gray700};\n  border-bottom: 1px solid ${theme.colors.gray700};\n`;\n\nconst FeatureItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  text-align: center;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    text-align: center;\n  }\n`;\n\nconst FeatureIcon = styled.div`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background: ${theme.colors.primary};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.white};\n  font-size: 1.2rem;\n  flex-shrink: 0;\n`;\n\nconst FeatureText = styled.div`\n  h4 {\n    font-size: 1rem;\n    font-weight: 600;\n    margin-bottom: ${theme.spacing.xs};\n    color: ${theme.colors.white};\n  }\n\n  p {\n    font-size: 0.8rem;\n    color: ${theme.colors.gray400};\n    margin: 0;\n  }\n`;\n\nconst NewsletterSection = styled.div`\n  background: ${theme.colors.gray800};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  text-align: center;\n  margin-bottom: ${theme.spacing.xl};\n\n  h3 {\n    margin-bottom: ${theme.spacing.sm};\n  }\n\n  p {\n    margin-bottom: ${theme.spacing.lg};\n    color: ${theme.colors.gray300};\n  }\n`;\n\nconst NewsletterForm = styled.form`\n  display: flex;\n  max-width: 400px;\n  margin: 0 auto;\n  gap: ${theme.spacing.sm};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n  }\n`;\n\nconst NewsletterInput = styled.input`\n  flex: 1;\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray600};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.gray700};\n  color: ${theme.colors.white};\n  font-size: 0.9rem;\n\n  &::placeholder {\n    color: ${theme.colors.gray400};\n  }\n\n  &:focus {\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst NewsletterButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.sm} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  transition: all 0.2s ease;\n  white-space: nowrap;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-2px);\n  }\n`;\n\nconst FooterBottom = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: ${theme.spacing.lg};\n  border-top: 1px solid ${theme.colors.gray700};\n  color: ${theme.colors.gray400};\n  font-size: 0.9rem;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n    text-align: center;\n  }\n`;\n\nconst PaymentMethods = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n  align-items: center;\n`;\n\nconst PaymentIcon = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  color: ${theme.colors.gray700};\n  font-size: 0.8rem;\n  font-weight: 600;\n`;\n\nconst Footer = ({ storeSlug = '' }) => {\n  const getBaseUrl = () => (storeSlug ? `/${storeSlug}` : '/ecommerce');\n\n  const handleNewsletterSubmit = e => {\n    e.preventDefault();\n    // Handle newsletter subscription\n    alert('Thank you for subscribing to our newsletter!');\n  };\n\n  const features = [\n    {\n      icon: FaTruck,\n      title: 'Free Shipping',\n      description: 'On orders over $99',\n    },\n    {\n      icon: FaUndoAlt,\n      title: '30-Day Returns',\n      description: 'Money back guarantee',\n    },\n    {\n      icon: FaShieldAlt,\n      title: 'Secure Payment',\n      description: '100% secure checkout',\n    },\n    {\n      icon: FaCreditCard,\n      title: 'Multiple Payment',\n      description: 'All major cards accepted',\n    },\n  ];\n\n  return (\n    <FooterContainer>\n      <FooterContent>\n        <FeatureGrid>\n          {features.map((feature, index) => (\n            <FeatureItem key={index}>\n              <FeatureIcon>\n                <feature.icon />\n              </FeatureIcon>\n              <FeatureText>\n                <h4>{feature.title}</h4>\n                <p>{feature.description}</p>\n              </FeatureText>\n            </FeatureItem>\n          ))}\n        </FeatureGrid>\n\n        <NewsletterSection>\n          <h3>Stay Updated</h3>\n          <p>Subscribe to our newsletter and get 10% off your first order!</p>\n          <NewsletterForm onSubmit={handleNewsletterSubmit}>\n            <NewsletterInput\n              type=\"email\"\n              placeholder=\"Enter your email address\"\n              required\n            />\n            <NewsletterButton type=\"submit\">Subscribe</NewsletterButton>\n          </NewsletterForm>\n        </NewsletterSection>\n\n        <FooterTop>\n          <FooterSection>\n            <h3>\n              <FaShoppingCart style={{ marginRight: theme.spacing.sm }} />\n              ShopMart\n            </h3>\n            <p>\n              Your one-stop destination for quality products at amazing prices.\n              We bring you the latest trends and timeless classics.\n            </p>\n            <SocialLinks>\n              <SocialLink href=\"#\" aria-label=\"Facebook\">\n                <FaFacebook />\n              </SocialLink>\n              <SocialLink href=\"#\" aria-label=\"Twitter\">\n                <FaTwitter />\n              </SocialLink>\n              <SocialLink href=\"#\" aria-label=\"Instagram\">\n                <FaInstagram />\n              </SocialLink>\n              <SocialLink href=\"#\" aria-label=\"LinkedIn\">\n                <FaLinkedin />\n              </SocialLink>\n            </SocialLinks>\n          </FooterSection>\n\n          <FooterSection>\n            <h3>Shop</h3>\n            <FooterLinks>\n              <FooterLink to={`${getBaseUrl()}/products`}>\n                All Products\n              </FooterLink>\n              <FooterLink to={`${getBaseUrl()}/products?category=electronics`}>\n                Electronics\n              </FooterLink>\n              <FooterLink to={`${getBaseUrl()}/products?category=fashion`}>\n                Fashion\n              </FooterLink>\n              <FooterLink to={`${getBaseUrl()}/products?category=home-garden`}>\n                Home & Garden\n              </FooterLink>\n              <FooterLink to={`${getBaseUrl()}/products?category=sports`}>\n                Sports\n              </FooterLink>\n              <FooterLink to={`${getBaseUrl()}/products?featured=true`}>\n                Featured Products\n              </FooterLink>\n              <FooterLink to={`${getBaseUrl()}/products?sale=true`}>\n                Sale\n              </FooterLink>\n            </FooterLinks>\n          </FooterSection>\n\n          <FooterSection>\n            <h3>Customer Service</h3>\n            <FooterLinks>\n              <FooterLink to=\"/ecommerce/contact\">Contact Us</FooterLink>\n              <FooterLink to=\"/ecommerce/shipping\">Shipping Info</FooterLink>\n              <FooterLink to=\"/ecommerce/returns\">\n                Returns & Exchanges\n              </FooterLink>\n              <FooterLink to=\"/ecommerce/size-guide\">Size Guide</FooterLink>\n              <FooterLink to=\"/ecommerce/faq\">FAQ</FooterLink>\n              <FooterLink to=\"/ecommerce/track-order\">\n                Track Your Order\n              </FooterLink>\n            </FooterLinks>\n          </FooterSection>\n\n          <FooterSection>\n            <h3>Contact Info</h3>\n            <ContactInfo>\n              <FaPhone />\n              <span>+1 (555) 123-SHOP</span>\n            </ContactInfo>\n            <ContactInfo>\n              <FaEnvelope />\n              <span>support@shopmart.com</span>\n            </ContactInfo>\n            <ContactInfo>\n              <FaMapMarkerAlt />\n              <span>123 Commerce St, Shopping City, SC 12345</span>\n            </ContactInfo>\n            <p style={{ marginTop: theme.spacing.md, fontSize: '0.8rem' }}>\n              <strong>Store Hours:</strong>\n              <br />\n              Mon-Fri: 9AM-9PM\n              <br />\n              Sat-Sun: 10AM-8PM\n            </p>\n          </FooterSection>\n        </FooterTop>\n\n        <FooterBottom>\n          <div>\n            <p>\n              &copy; 2024 ShopMart. All rights reserved. |\n              <FooterLink\n                to=\"/privacy\"\n                style={{ marginLeft: theme.spacing.sm }}\n              >\n                Privacy Policy\n              </FooterLink>{' '}\n              |\n              <FooterLink to=\"/terms\" style={{ marginLeft: theme.spacing.sm }}>\n                Terms of Service\n              </FooterLink>\n            </p>\n          </div>\n\n          <PaymentMethods>\n            <span style={{ marginRight: theme.spacing.sm, fontSize: '0.8rem' }}>\n              We Accept:\n            </span>\n            <PaymentIcon>VISA</PaymentIcon>\n            <PaymentIcon>MC</PaymentIcon>\n            <PaymentIcon>AMEX</PaymentIcon>\n            <PaymentIcon>DISC</PaymentIcon>\n          </PaymentMethods>\n        </FooterBottom>\n      </FooterContent>\n    </FooterContainer>\n  );\n};\n\nexport default Footer;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/InsightsTab.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport styled from 'styled-components';\nimport {\n  FaChartPie,\n  FaChartBar,\n  FaChartLine,\n  FaDownload,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport { sellerDashboardData } from '../../DummyData';\nconst { categoryRevenueData, bestSellingProducts, salesTrendData } =\n  sellerDashboardData;\n\nconst InsightsContainer = styled.div`\n  display: grid;\n  gap: ${theme.spacing.xl};\n`;\n\nconst InsightsHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: between;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst HeaderTitle = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0;\n`;\n\nconst ExportButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  background: ${theme.colors.primary};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  color: ${theme.colors.white};\n  font-size: 0.9rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-1px);\n  }\n`;\n\nconst ChartsGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: 1024px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst ChartCard = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst ChartHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst ChartIcon = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: ${theme.borderRadius.md};\n  background: ${props =>\n    props.gradient ||\n    `linear-gradient(135deg, ${theme.colors.primary}, ${theme.colors.secondary})`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.white};\n  font-size: 1.1rem;\n`;\n\nconst ChartTitleGroup = styled.div`\n  flex: 1;\n`;\n\nconst ChartTitle = styled.h4`\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n`;\n\nconst ChartSubtitle = styled.p`\n  font-size: 0.85rem;\n  color: ${theme.colors.gray600};\n  margin: 0;\n`;\n\nconst PieChart = styled.div`\n  position: relative;\n  width: 200px;\n  height: 200px;\n  margin: 0 auto ${theme.spacing.lg};\n`;\n\nconst PieSegment = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background: conic-gradient(\n    ${props =>\n      props.segments\n        .map((segment, index) => {\n          const colors = [\n            theme.colors.primary,\n            theme.colors.secondary,\n            theme.colors.success,\n            theme.colors.warning,\n            theme.colors.info,\n          ];\n          const startAngle = segment.startAngle;\n          const endAngle = segment.endAngle;\n          return `${colors[index % colors.length]} ${startAngle}deg ${endAngle}deg`;\n        })\n        .join(', ')}\n  );\n`;\n\nconst PieCenter = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100px;\n  height: 100px;\n  background: ${theme.colors.white};\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  box-shadow: 0 0 0 2px ${theme.colors.gray200};\n`;\n\nconst PieCenterValue = styled.span`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n`;\n\nconst PieCenterLabel = styled.span`\n  font-size: 0.75rem;\n  color: ${theme.colors.gray500};\n  text-transform: uppercase;\n`;\n\nconst LegendList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${theme.spacing.md};\n`;\n\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst LegendColor = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'color',\n})`\n  width: 12px;\n  height: 12px;\n  border-radius: 2px;\n  background: ${props => props.color};\n`;\n\nconst LegendText = styled.span`\n  font-size: 0.85rem;\n  color: ${theme.colors.gray700};\n  flex: 1;\n`;\n\nconst LegendValue = styled.span`\n  font-size: 0.85rem;\n  font-weight: 500;\n  color: ${theme.colors.gray900};\n`;\n\nconst BarChart = styled.div`\n  height: 300px;\n  display: flex;\n  align-items: end;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.lg} 0;\n`;\n\nconst Bar = styled.div`\n  flex: 1;\n  background: linear-gradient(\n    to top,\n    ${theme.colors.primary},\n    ${theme.colors.secondary}\n  );\n  border-radius: 4px 4px 0 0;\n  min-height: 10px;\n  position: relative;\n  transition: all 0.3s ease;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n    transform: translateY(-2px);\n  }\n`;\n\nconst BarLabel = styled.div`\n  position: absolute;\n  bottom: -${theme.spacing.lg};\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 0.75rem;\n  color: ${theme.colors.gray600};\n  text-align: center;\n  white-space: nowrap;\n  max-width: 80px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst BarValue = styled.div`\n  position: absolute;\n  top: -${theme.spacing.lg};\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 0.75rem;\n  font-weight: 500;\n  color: ${theme.colors.gray700};\n  white-space: nowrap;\n`;\n\nconst LineChart = styled.div`\n  height: 250px;\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n  position: relative;\n  overflow: hidden;\n  padding: ${theme.spacing.lg};\n  display: flex;\n  align-items: end;\n  gap: 2px;\n`;\n\nconst LineBar = styled.div`\n  flex: 1;\n  background: linear-gradient(\n    to top,\n    ${theme.colors.primary}40,\n    ${theme.colors.primary}\n  );\n  border-radius: 1px 1px 0 0;\n  min-height: 5px;\n  position: relative;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: linear-gradient(\n      to top,\n      ${theme.colors.primary}60,\n      ${theme.colors.primaryDark}\n    );\n  }\n`;\n\nconst FullWidthCard = styled(ChartCard)`\n  grid-column: 1 / -1;\n`;\n\nconst StatsRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst StatCard = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.lg};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst StatValue = styled.div`\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.85rem;\n  color: ${theme.colors.gray600};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst InsightsTab = () => {\n  const formatCurrency = value => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(value);\n  };\n\n  const formatPercentage = value => {\n    return `${value}%`;\n  };\n\n  // Calculate pie chart segments\n  const totalRevenue = categoryRevenueData.reduce(\n    (sum, item) => sum + item.revenue,\n    0\n  );\n  let currentAngle = 0;\n  const pieSegments = categoryRevenueData.map(item => {\n    const angle = (item.percentage / 100) * 360;\n    const segment = {\n      startAngle: currentAngle,\n      endAngle: currentAngle + angle,\n      ...item,\n    };\n    currentAngle += angle;\n    return segment;\n  });\n\n  // Calculate max values for charts\n  const maxProductSales = Math.max(...bestSellingProducts.map(p => p.sold));\n  const maxSalesValue = Math.max(...salesTrendData.map(d => d.sales));\n\n  const colors = [\n    theme.colors.primary,\n    theme.colors.secondary,\n    theme.colors.success,\n    theme.colors.warning,\n    theme.colors.info,\n  ];\n\n  return (\n    <InsightsContainer>\n      <InsightsHeader>\n        <HeaderTitle>Business Insights</HeaderTitle>\n        <ExportButton>\n          <FaDownload />\n          Export Report\n        </ExportButton>\n      </InsightsHeader>\n\n      <ChartsGrid>\n        <ChartCard>\n          <ChartHeader>\n            <ChartIcon gradient=\"linear-gradient(135deg, #FF6B6B, #FF8E53)\">\n              <FaChartPie />\n            </ChartIcon>\n            <ChartTitleGroup>\n              <ChartTitle>Revenue by Category</ChartTitle>\n              <ChartSubtitle>\n                Distribution of sales across product categories\n              </ChartSubtitle>\n            </ChartTitleGroup>\n          </ChartHeader>\n\n          <PieChart>\n            <PieSegment segments={pieSegments} />\n            <PieCenter>\n              <PieCenterValue>{formatCurrency(totalRevenue)}</PieCenterValue>\n              <PieCenterLabel>Total</PieCenterLabel>\n            </PieCenter>\n          </PieChart>\n\n          <LegendList>\n            {categoryRevenueData.map((item, index) => (\n              <LegendItem key={item.category}>\n                <LegendColor color={colors[index % colors.length]} />\n                <LegendText>{item.category}</LegendText>\n                <LegendValue>{formatPercentage(item.percentage)}</LegendValue>\n              </LegendItem>\n            ))}\n          </LegendList>\n        </ChartCard>\n\n        <ChartCard>\n          <ChartHeader>\n            <ChartIcon gradient=\"linear-gradient(135deg, #4ECDC4, #44A08D)\">\n              <FaChartBar />\n            </ChartIcon>\n            <ChartTitleGroup>\n              <ChartTitle>Best Selling Products</ChartTitle>\n              <ChartSubtitle>\n                Top performing products by units sold\n              </ChartSubtitle>\n            </ChartTitleGroup>\n          </ChartHeader>\n\n          <BarChart>\n            {bestSellingProducts.map((product, index) => (\n              <Bar\n                key={index}\n                style={{\n                  height: `${(product.sold / maxProductSales) * 100}%`,\n                }}\n                title={`${product.name}: ${product.sold} sold`}\n              >\n                <BarValue>{product.sold}</BarValue>\n                <BarLabel>{product.name}</BarLabel>\n              </Bar>\n            ))}\n          </BarChart>\n        </ChartCard>\n\n        <FullWidthCard>\n          <ChartHeader>\n            <ChartIcon gradient=\"linear-gradient(135deg, #667eea, #764ba2)\">\n              <FaChartLine />\n            </ChartIcon>\n            <ChartTitleGroup>\n              <ChartTitle>Sales Trends</ChartTitle>\n              <ChartSubtitle>\n                Daily sales performance over the last 14 days\n              </ChartSubtitle>\n            </ChartTitleGroup>\n          </ChartHeader>\n\n          <StatsRow>\n            <StatCard>\n              <StatValue>{formatCurrency(28450)}</StatValue>\n              <StatLabel>Average Daily Sales</StatLabel>\n            </StatCard>\n            <StatCard>\n              <StatValue>+12.5%</StatValue>\n              <StatLabel>Growth Rate</StatLabel>\n            </StatCard>\n            <StatCard>\n              <StatValue>{formatCurrency(3100)}</StatValue>\n              <StatLabel>Best Day</StatLabel>\n            </StatCard>\n            <StatCard>\n              <StatValue>5.2</StatValue>\n              <StatLabel>Trending Score</StatLabel>\n            </StatCard>\n          </StatsRow>\n\n          <LineChart>\n            {salesTrendData.map((data, index) => (\n              <LineBar\n                key={index}\n                style={{\n                  height: `${(data.sales / maxSalesValue) * 100}%`,\n                }}\n                title={`${new Date(data.date).toLocaleDateString()}: ${formatCurrency(data.sales)}`}\n              />\n            ))}\n          </LineChart>\n        </FullWidthCard>\n      </ChartsGrid>\n    </InsightsContainer>\n  );\n};\n\nexport default InsightsTab;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/LoadingSpinner.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\n\nconst SpinnerContainer = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'fullPage',\n})`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: ${props => (props.fullPage ? '4rem' : '2rem')};\n  min-height: ${props => (props.fullPage ? '200px' : 'auto')};\n`;\n\nconst Spinner = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'size',\n})`\n  width: ${props => props.size || '40px'};\n  height: ${props => props.size || '40px'};\n  border: 3px solid ${theme.colors.gray200};\n  border-top: 3px solid ${theme.colors.primary};\n  border-radius: 50%;\n  animation: ${spin} 1s linear infinite;\n`;\n\nconst LoadingText = styled.p`\n  margin-top: ${theme.spacing.md};\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n  text-align: center;\n`;\n\nconst LoadingSpinner = ({\n  size = '40px',\n  text = 'Loading...',\n  fullPage = false,\n  showText = true,\n}) => {\n  return (\n    <SpinnerContainer fullPage={fullPage}>\n      <div>\n        <Spinner size={size} />\n        {showText && <LoadingText>{text}</LoadingText>}\n      </div>\n    </SpinnerContainer>\n  );\n};\n\nexport default LoadingSpinner;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/Navbar.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAuth } from '../../context/AuthContext';\nimport AuthModal from '../../components/auth/AuthModal';\nimport UserProfile from '../../components/user/UserProfile';\nimport {\n  FaShoppingCart,\n  FaUser,\n  FaSearch,\n  FaBars,\n  FaTimes,\n  FaHome,\n  FaEnvelope,\n  FaStore,\n  FaChevronDown,\n  FaHeart,\n  FaBell,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst NavbarContainer = styled.nav`\n  background: ${theme.colors.white};\n  box-shadow: ${theme.shadows.md};\n  position: sticky;\n  top: 0;\n  z-index: 100;\n  border-bottom: 1px solid ${theme.colors.gray100};\n  backdrop-filter: blur(10px);\n`;\n\nconst NavbarContent = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.sm};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 80px;\n  overflow: hidden;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    height: 70px;\n    padding: 0 ${theme.spacing.xs};\n  }\n\n  @media (min-width: 769px) and (max-width: 1024px) {\n    padding: 0 ${theme.spacing.sm};\n  }\n\n  @media (min-width: 1025px) {\n    padding: 0 ${theme.spacing.md};\n  }\n`;\n\nconst Logo = styled(Link).withConfig({\n  shouldForwardProp: prop => prop !== 'theme',\n})`\n  font-size: 1.8rem;\n  font-weight: 700;\n  color: ${props => props.theme?.primaryColor || theme.colors.primary};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  flex-shrink: 0;\n  white-space: nowrap;\n  min-width: 0;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.4rem;\n    gap: ${theme.spacing.xs};\n  }\n\n  @media (max-width: 1024px) {\n    font-size: 1.6rem;\n  }\n`;\n\nconst LogoImage = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: ${theme.borderRadius.lg};\n  object-fit: cover;\n  border: 2px solid ${theme.colors.gray200};\n  transition: all 0.3s ease;\n  flex-shrink: 0;\n\n  &:hover {\n    transform: scale(1.05);\n    border-color: ${props => props.theme?.primaryColor || theme.colors.primary};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    width: 40px;\n    height: 40px;\n  }\n\n  @media (max-width: 1024px) {\n    width: 45px;\n    height: 45px;\n  }\n`;\n\nconst NavLinks = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  flex-shrink: 1;\n  overflow: hidden;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    display: none;\n  }\n\n  @media (min-width: 1025px) and (max-width: 1200px) {\n    gap: ${theme.spacing.sm};\n  }\n\n  @media (min-width: 1201px) {\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst NavLink = styled(Link).withConfig({\n  shouldForwardProp: prop => prop !== 'theme',\n})`\n  color: ${theme.colors.gray700};\n  font-weight: 600;\n  transition: all 0.3s ease;\n  position: relative;\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.95rem;\n\n  &:hover {\n    color: ${props => props.theme?.primaryColor || theme.colors.primary};\n    background: ${props => props.theme?.primaryColor || theme.colors.primary}10;\n    transform: translateY(-1px);\n  }\n\n  &.active {\n    color: ${props => props.theme?.primaryColor || theme.colors.primary};\n    background: ${props => props.theme?.primaryColor || theme.colors.primary}15;\n\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: 6px;\n      height: 6px;\n      background: ${props => props.theme?.primaryColor || theme.colors.primary};\n      border-radius: 50%;\n    }\n  }\n`;\n\nconst SearchContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex-shrink: 1;\n  min-width: 0;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    display: none;\n  }\n\n  @media (max-width: 1024px) {\n    display: none;\n  }\n`;\n\nconst SearchInput = styled.input.withConfig({\n  shouldForwardProp: prop => prop !== 'theme',\n})`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  padding-left: 2.5rem;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.lg};\n  width: 100%;\n  max-width: 280px;\n  min-width: 200px;\n  font-size: 0.9rem;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    border-color: ${props => props.theme?.primaryColor || theme.colors.primary};\n  }\n\n  @media (min-width: 1025px) and (max-width: 1200px) {\n    max-width: 220px;\n    min-width: 180px;\n  }\n\n  @media (min-width: 1201px) {\n    max-width: 300px;\n    min-width: 240px;\n  }\n`;\n\nconst SearchIcon = styled(FaSearch)`\n  position: absolute;\n  left: ${theme.spacing.md};\n  color: ${theme.colors.gray400};\n  font-size: 0.9rem;\n`;\n\nconst NavActions = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  flex-shrink: 0;\n\n  @media (min-width: 1025px) and (max-width: 1200px) {\n    gap: ${theme.spacing.xs};\n  }\n\n  @media (min-width: 1201px) {\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst CartButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'theme',\n})`\n  position: relative;\n  background: none;\n  color: ${theme.colors.gray700};\n  font-size: 1.2rem;\n  transition: color 0.2s ease;\n\n  &:hover {\n    color: ${props => props.theme?.primaryColor || theme.colors.primary};\n  }\n`;\n\nconst CartBadge = styled.span.withConfig({\n  shouldForwardProp: prop => prop !== 'theme',\n})`\n  position: absolute;\n  top: -8px;\n  right: -8px;\n  background: ${props => props.theme?.primaryColor || theme.colors.error};\n  color: ${theme.colors.white};\n  border-radius: 50%;\n  width: 18px;\n  height: 18px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.7rem;\n  font-weight: 600;\n`;\n\nconst UserButton = styled.button.withConfig({\n  shouldForwardProp: prop =>\n    prop !== 'theme' &&\n    prop !== 'hideOnTablet' &&\n    prop !== 'hideOnSmallDesktop',\n})`\n  background: none;\n  color: ${theme.colors.gray700};\n  font-size: 1.1rem;\n  transition: color 0.2s ease;\n  padding: ${theme.spacing.xs};\n  border-radius: ${theme.borderRadius.sm};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 2rem;\n  height: 2rem;\n\n  &:hover {\n    color: ${props => props.theme?.primaryColor || theme.colors.primary};\n    background: ${theme.colors.gray50};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    display: none;\n  }\n\n  @media (max-width: 1024px) {\n    font-size: 1rem;\n    min-width: 1.8rem;\n    height: 1.8rem;\n    ${props => props.hideOnTablet && 'display: none;'}\n  }\n\n  @media (max-width: 1200px) {\n    ${props => props.hideOnSmallDesktop && 'display: none;'}\n  }\n`;\n\nconst MobileMenuButton = styled.button`\n  display: none;\n  background: none;\n  color: ${theme.colors.gray700};\n  font-size: 1.2rem;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    display: block;\n  }\n`;\n\nconst MobileMenu = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  display: none;\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  background: ${theme.colors.white};\n  box-shadow: ${theme.shadows.lg};\n  padding: ${theme.spacing.lg};\n  flex-direction: column;\n  gap: ${theme.spacing.md};\n\n  &.open {\n    display: flex;\n  }\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    display: ${props => (props.isOpen ? 'flex' : 'none')};\n  }\n`;\n\nconst MobileNavLink = styled(Link)`\n  color: ${theme.colors.gray700};\n  font-weight: 500;\n  padding: ${theme.spacing.sm} 0;\n  border-bottom: 1px solid ${theme.colors.gray200};\n\n  &:hover {\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst MobileSearchInput = styled.input`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.lg};\n  width: 100%;\n  margin-top: ${theme.spacing.md};\n\n  &:focus {\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst UserDropdown = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst UserDropdownButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'theme',\n})`\n  background: none;\n  border: none;\n  color: ${theme.colors.gray700};\n  font-size: 1rem;\n  transition: color 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  padding: ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  pointer-events: auto;\n\n  &:hover {\n    color: ${props => props.theme?.primaryColor || theme.colors.primary};\n    background: ${theme.colors.gray50};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    display: none;\n  }\n`;\n\nconst DropdownMenu = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  position: absolute;\n  top: calc(100% + 0.5rem);\n  right: 0;\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  box-shadow: ${theme.shadows.xl};\n  min-width: 200px;\n  z-index: 9999;\n  opacity: ${props => (props.isOpen ? '1' : '0')};\n  visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n  transform: translateY(${props => (props.isOpen ? '0' : '-10px')});\n  transition: all 0.2s ease;\n  overflow: hidden;\n`;\n\nconst DropdownItem = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.md};\n  color: ${theme.colors.gray700};\n  transition: all 0.2s ease;\n  border-bottom: 1px solid ${theme.colors.gray100};\n\n  &:hover {\n    background: ${theme.colors.gray50};\n    color: ${theme.colors.primary};\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst DropdownDivider = styled.div`\n  height: 1px;\n  background: ${theme.colors.gray200};\n  margin: ${theme.spacing.xs} 0;\n`;\n\nconst DropdownButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.md};\n  color: ${theme.colors.gray700};\n  transition: all 0.2s ease;\n  border-bottom: 1px solid ${theme.colors.gray100};\n  width: 100%;\n  text-align: left;\n  background: none;\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  cursor: pointer;\n\n  &:hover {\n    background: ${theme.colors.gray50};\n    color: ${theme.colors.primary};\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst UserAvatar = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  object-fit: cover;\n  border: 2px solid ${theme.colors.gray200};\n`;\n\nconst UserInfo = styled.div`\n  .name {\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    font-size: 0.9rem;\n  }\n\n  .role {\n    font-size: 0.75rem;\n    color: ${theme.colors.gray500};\n    text-transform: capitalize;\n  }\n`;\n\nconst LoginButton = styled.button`\n  background: ${theme.colors.primary};\n  color: white;\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  white-space: nowrap;\n  font-size: 0.875rem;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-1px);\n  }\n\n  @media (max-width: 1024px) {\n    padding: ${theme.spacing.xs} ${theme.spacing.sm};\n    font-size: 0.8rem;\n  }\n\n  @media (max-width: 1200px) {\n    padding: ${theme.spacing.sm};\n  }\n`;\n\nconst Modal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 10000;\n  backdrop-filter: blur(4px);\n`;\n\nconst ModalContent = styled.div`\n  background: white;\n  border-radius: 16px;\n  max-width: 900px;\n  width: 90%;\n  max-height: 90vh;\n  overflow-y: auto;\n  position: relative;\n`;\n\nconst ModalCloseButton = styled.button`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  background: none;\n  border: none;\n  font-size: 1.5rem;\n  color: ${theme.colors.gray500};\n  cursor: pointer;\n  border-radius: 8px;\n  padding: 0.5rem;\n  z-index: 1;\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.gray700};\n  }\n`;\n\nconst Navbar = ({\n  cartItemsCount = 0,\n  storeName = '',\n  storeLogo = '',\n  storeSlug = '',\n  theme: vendorTheme = {},\n}) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [isUserDropdownOpen, setIsUserDropdownOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showAuthModal, setShowAuthModal] = useState(false);\n  const [showProfile, setShowProfile] = useState(false);\n  const [authModalTab, setAuthModalTab] = useState('login');\n  const navigate = useNavigate();\n  const dropdownRef = useRef(null);\n  const { user, isAuthenticated, logout, canAccessSeller } = useAuth();\n\n  const getBaseUrl = () => `/${storeSlug}`;\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsUserDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Close mobile menu when auth modal opens\n  useEffect(() => {\n    if (showAuthModal) {\n      setIsMenuOpen(false);\n    }\n  }, [showAuthModal]);\n\n  const handleSearch = e => {\n    e.preventDefault();\n    if (searchQuery.trim()) {\n      const baseUrl = storeSlug ? `/${storeSlug}` : '/ecommerce';\n      navigate(\n        `${baseUrl}/products?search=${encodeURIComponent(searchQuery.trim())}`\n      );\n      setSearchQuery('');\n      setIsMenuOpen(false);\n    }\n  };\n\n  const handleMobileSearch = e => {\n    e.preventDefault();\n    if (e.target.value.trim()) {\n      navigate(\n        `/ecommerce/products?search=${encodeURIComponent(e.target.value.trim())}`\n      );\n      setIsMenuOpen(false);\n    }\n  };\n\n  return (\n    <NavbarContainer>\n      <NavbarContent>\n        <Logo to=\"/ecommerce\" theme={vendorTheme}>\n          {storeLogo ? (\n            <LogoImage src={storeLogo} alt={`${storeName} logo`} />\n          ) : (\n            <FaShoppingCart />\n          )}\n          {storeName || 'ShopMart'}\n        </Logo>\n\n        <NavLinks>\n          <NavLink to={getBaseUrl()} theme={vendorTheme}>\n            Home\n          </NavLink>\n          <NavLink to={`${getBaseUrl()}/products`} theme={vendorTheme}>\n            Products\n          </NavLink>\n          <NavLink\n            to={`${getBaseUrl()}/products?category=electronics`}\n            theme={vendorTheme}\n          >\n            Electronics\n          </NavLink>\n          <NavLink\n            to={`${getBaseUrl()}/products?category=fashion`}\n            theme={vendorTheme}\n          >\n            Fashion\n          </NavLink>\n          <NavLink\n            to={`${getBaseUrl()}/products?category=home-garden`}\n            theme={vendorTheme}\n          >\n            Home & Garden\n          </NavLink>\n          <NavLink\n            to={`${getBaseUrl()}/products?category=sports`}\n            theme={vendorTheme}\n          >\n            Sports\n          </NavLink>\n        </NavLinks>\n\n        <SearchContainer>\n          <form onSubmit={handleSearch}>\n            <SearchIcon />\n            <SearchInput\n              type=\"text\"\n              placeholder=\"Search products...\"\n              value={searchQuery}\n              onChange={e => setSearchQuery(e.target.value)}\n              theme={vendorTheme}\n            />\n          </form>\n        </SearchContainer>\n\n        <NavActions>\n          <Link to=\"/\">\n            <UserButton title=\"Back to Main Site\" theme={vendorTheme}>\n              <FaHome />\n            </UserButton>\n          </Link>\n\n          <UserButton title=\"Wishlist\" theme={vendorTheme} hideOnTablet>\n            <FaHeart />\n          </UserButton>\n\n          <UserButton\n            title=\"Notifications\"\n            theme={vendorTheme}\n            hideOnSmallDesktop\n          >\n            <FaBell />\n          </UserButton>\n\n          {isAuthenticated ? (\n            <UserDropdown ref={dropdownRef}>\n              <UserDropdownButton\n                onClick={e => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  setIsUserDropdownOpen(!isUserDropdownOpen);\n                }}\n                theme={vendorTheme}\n              >\n                <DropdownDivider />\n                <DropdownItem\n                  to={`${getBaseUrl()}/selleradminPanel`}\n                  onClick={() => setIsUserDropdownOpen(false)}\n                >\n                  <FaStore />\n                  Seller Dashboard\n                </DropdownItem>\n                <UserAvatar src={user.avatar} alt={user.name} />\n                <UserInfo>\n                  <div className=\"name\">{user.name}</div>\n                  <div className=\"role\">{user.role}</div>\n                </UserInfo>\n                <FaChevronDown />\n              </UserDropdownButton>\n\n              <DropdownMenu isOpen={isUserDropdownOpen}>\n                <DropdownButton\n                  onClick={() => {\n                    setShowProfile(true);\n                    setIsUserDropdownOpen(false);\n                  }}\n                >\n                  <FaUser />\n                  My Profile\n                </DropdownButton>\n\n                <DropdownItem\n                  to={`${getBaseUrl()}/my-enquiries`}\n                  onClick={() => setIsUserDropdownOpen(false)}\n                >\n                  <FaEnvelope />\n                  My Enquiries\n                </DropdownItem>\n\n                <DropdownDivider />\n\n                <DropdownButton\n                  onClick={() => {\n                    logout();\n                    setIsUserDropdownOpen(false);\n                  }}\n                >\n                  <FaTimes />\n                  Sign Out\n                </DropdownButton>\n              </DropdownMenu>\n            </UserDropdown>\n          ) : (\n            <div style={{ display: 'flex', gap: '0.5rem' }}>\n              <LoginButton\n                onClick={() => {\n                  setAuthModalTab('login');\n                  setShowAuthModal(true);\n                }}\n              >\n                Sign In\n              </LoginButton>\n              <LoginButton\n                style={{\n                  background: 'transparent',\n                  color: vendorTheme?.primaryColor || theme.colors.primary,\n                  border: `2px solid ${vendorTheme?.primaryColor || theme.colors.primary}`,\n                }}\n                onClick={() => {\n                  setAuthModalTab('register');\n                  setShowAuthModal(true);\n                }}\n              >\n                Sign Up\n              </LoginButton>\n            </div>\n          )}\n\n          <Link to={`${getBaseUrl()}/cart`}>\n            <CartButton theme={vendorTheme}>\n              <FaShoppingCart />\n              {cartItemsCount > 0 && (\n                <CartBadge theme={vendorTheme}>{cartItemsCount}</CartBadge>\n              )}\n            </CartButton>\n          </Link>\n\n          <MobileMenuButton onClick={() => setIsMenuOpen(!isMenuOpen)}>\n            {isMenuOpen ? <FaTimes /> : <FaBars />}\n          </MobileMenuButton>\n        </NavActions>\n      </NavbarContent>\n\n      <MobileMenu isOpen={isMenuOpen}>\n        <MobileNavLink to={getBaseUrl()} onClick={() => setIsMenuOpen(false)}>\n          Home\n        </MobileNavLink>\n        <MobileNavLink\n          to={`${getBaseUrl()}/products`}\n          onClick={() => setIsMenuOpen(false)}\n        >\n          All Products\n        </MobileNavLink>\n        <MobileNavLink\n          to={`${getBaseUrl()}/products?category=electronics`}\n          onClick={() => setIsMenuOpen(false)}\n        >\n          Electronics\n        </MobileNavLink>\n        <MobileNavLink\n          to={`${getBaseUrl()}/products?category=fashion`}\n          onClick={() => setIsMenuOpen(false)}\n        >\n          Fashion\n        </MobileNavLink>\n        <MobileNavLink\n          to=\"/ecommerce/products?category=home-garden\"\n          onClick={() => setIsMenuOpen(false)}\n        >\n          Home & Garden\n        </MobileNavLink>\n        <MobileNavLink\n          to=\"/ecommerce/products?category=sports\"\n          onClick={() => setIsMenuOpen(false)}\n        >\n          Sports\n        </MobileNavLink>\n\n        {isAuthenticated ? (\n          <>\n            <MobileNavLink\n              to=\"#\"\n              onClick={() => {\n                setShowProfile(true);\n                setIsMenuOpen(false);\n              }}\n            >\n              👤 My Profile\n            </MobileNavLink>\n\n            <MobileNavLink\n              to={`${getBaseUrl()}/my-enquiries`}\n              onClick={() => setIsMenuOpen(false)}\n            >\n              📧 My Enquiries\n            </MobileNavLink>\n\n            <MobileNavLink\n              to=\"#\"\n              onClick={() => {\n                setShowProfile(true);\n                setIsMenuOpen(false);\n              }}\n            >\n              👤 My Profile\n            </MobileNavLink>\n\n            {canAccessSeller() && (\n              <MobileNavLink\n                to={`${getBaseUrl()}/seller-dashboard`}\n                onClick={() => setIsMenuOpen(false)}\n              >\n                🏪 Seller Dashboard\n              </MobileNavLink>\n            )}\n\n            <MobileNavLink\n              to=\"#\"\n              onClick={() => {\n                logout();\n                setIsMenuOpen(false);\n              }}\n            >\n              🚪 Sign Out\n            </MobileNavLink>\n          </>\n        ) : (\n          <>\n            <MobileNavLink\n              to=\"#\"\n              onClick={() => {\n                setAuthModalTab('login');\n                setShowAuthModal(true);\n                setIsMenuOpen(false);\n              }}\n            >\n              🔑 Sign In\n            </MobileNavLink>\n\n            <MobileNavLink\n              to=\"#\"\n              onClick={() => {\n                setAuthModalTab('register');\n                setShowAuthModal(true);\n                setIsMenuOpen(false);\n              }}\n            >\n              📝 Sign Up\n            </MobileNavLink>\n          </>\n        )}\n\n        <form onSubmit={handleSearch}>\n          <MobileSearchInput\n            type=\"text\"\n            placeholder=\"Search products...\"\n            onKeyPress={e => {\n              if (e.key === 'Enter') {\n                handleMobileSearch(e);\n              }\n            }}\n          />\n        </form>\n      </MobileMenu>\n\n      {/* Authentication Modal */}\n      <AuthModal\n        isOpen={showAuthModal}\n        onClose={() => setShowAuthModal(false)}\n        defaultTab={authModalTab}\n      />\n\n      {/* Profile Modal */}\n      {showProfile && (\n        <Modal onClick={() => setShowProfile(false)}>\n          <ModalContent onClick={e => e.stopPropagation()}>\n            <ModalCloseButton onClick={() => setShowProfile(false)}>\n              <FaTimes />\n            </ModalCloseButton>\n            <UserProfile onClose={() => setShowProfile(false)} />\n          </ModalContent>\n        </Modal>\n      )}\n    </NavbarContainer>\n  );\n};\n\nexport default Navbar;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/NotificationSystem.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, {\n  useState,\n  useEffect,\n  useCallback,\n  createContext,\n  useContext,\n} from 'react';\nimport styled from 'styled-components';\nimport {\n  FaBell,\n  FaEnvelope,\n  FaTimes,\n  FaCheck,\n  FaExclamationTriangle,\n  FaInfo,\n  FaShoppingBag,\n  FaUser,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\n// Notification Context\nconst NotificationContext = createContext();\n\nexport const useNotifications = () => {\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error(\n      'useNotifications must be used within a NotificationProvider'\n    );\n  }\n  return context;\n};\n\n// Styled Components\nconst NotificationContainer = styled.div`\n  position: fixed;\n  top: ${theme.spacing.xl};\n  right: ${theme.spacing.xl};\n  z-index: 10000;\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n  max-width: 400px;\n  width: 100%;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    top: ${theme.spacing.lg};\n    right: ${theme.spacing.lg};\n    left: ${theme.spacing.lg};\n    max-width: none;\n  }\n`;\n\nconst NotificationCard = styled.div.withConfig({\n  shouldForwardProp: prop => !['type', 'isVisible'].includes(prop),\n})`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.xl};\n  border: 1px solid ${theme.colors.gray200};\n  padding: ${theme.spacing.lg};\n  display: flex;\n  align-items: flex-start;\n  gap: ${theme.spacing.md};\n  opacity: ${props => (props.isVisible ? 1 : 0)};\n  transform: translateX(${props => (props.isVisible ? 0 : '100%')});\n  transition: all 0.3s ease;\n  border-left: 4px solid\n    ${props => {\n      switch (props.type) {\n        case 'success':\n          return theme.colors.success;\n        case 'error':\n          return theme.colors.error;\n        case 'warning':\n          return theme.colors.warning;\n        case 'enquiry':\n          return theme.colors.primary;\n        default:\n          return theme.colors.info;\n      }\n    }};\n\n  &:hover {\n    transform: translateX(${props => (props.isVisible ? '-4px' : '100%')});\n  }\n`;\n\nconst NotificationIcon = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'type',\n})`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background: ${props => {\n    switch (props.type) {\n      case 'success':\n        return theme.colors.success + '20';\n      case 'error':\n        return theme.colors.error + '20';\n      case 'warning':\n        return theme.colors.warning + '20';\n      case 'enquiry':\n        return theme.colors.primary + '20';\n      default:\n        return theme.colors.info + '20';\n    }\n  }};\n  color: ${props => {\n    switch (props.type) {\n      case 'success':\n        return theme.colors.success;\n      case 'error':\n        return theme.colors.error;\n      case 'warning':\n        return theme.colors.warning;\n      case 'enquiry':\n        return theme.colors.primary;\n      default:\n        return theme.colors.info;\n    }\n  }};\n  font-size: 1.1rem;\n  flex-shrink: 0;\n`;\n\nconst NotificationContent = styled.div`\n  flex: 1;\n`;\n\nconst NotificationTitle = styled.h4`\n  margin: 0 0 ${theme.spacing.xs} 0;\n  font-size: 1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n`;\n\nconst NotificationMessage = styled.p`\n  margin: 0 0 ${theme.spacing.sm} 0;\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n  line-height: 1.4;\n`;\n\nconst NotificationMeta = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n`;\n\nconst NotificationActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n  margin-top: ${theme.spacing.sm};\n`;\n\nconst NotificationButton = styled.button`\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  border: 1px solid transparent;\n\n  &.primary {\n    background: ${theme.colors.primary};\n    color: ${theme.colors.white};\n\n    &:hover {\n      background: ${theme.colors.primaryDark};\n    }\n  }\n\n  &.secondary {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.gray700};\n\n    &:hover {\n      background: ${theme.colors.gray200};\n    }\n  }\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: ${theme.colors.gray400};\n  cursor: pointer;\n  padding: ${theme.spacing.xs};\n  border-radius: ${theme.borderRadius.sm};\n  transition: all 0.2s ease;\n  flex-shrink: 0;\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.gray600};\n  }\n`;\n\nconst BellIcon = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'hasNotifications',\n})`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background: ${props =>\n    props.hasNotifications\n      ? theme.colors.primary + '20'\n      : theme.colors.gray100};\n  color: ${props =>\n    props.hasNotifications ? theme.colors.primary : theme.colors.gray600};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${props =>\n      props.hasNotifications\n        ? theme.colors.primary + '30'\n        : theme.colors.gray200};\n  }\n\n  ${props =>\n    props.hasNotifications &&\n    `\n    &::after {\n      content: \"\";\n      position: absolute;\n      top: 6px;\n      right: 6px;\n      width: 8px;\n      height: 8px;\n      background: ${theme.colors.error};\n      border-radius: 50%;\n      border: 2px solid ${theme.colors.white};\n    }\n  `}\n`;\n\n// Notification Component\nconst NotificationItem = ({ notification, onClose, onAction }) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const handleClose = useCallback(() => {\n    setIsVisible(false);\n    setTimeout(() => onClose(notification.id), 300);\n  }, [onClose, notification.id]);\n\n  useEffect(() => {\n    // Trigger animation\n    setTimeout(() => setIsVisible(true), 100);\n\n    // Auto-close after duration (if specified)\n    if (notification.duration && notification.duration > 0) {\n      const timer = setTimeout(() => {\n        handleClose();\n      }, notification.duration);\n\n      return () => clearTimeout(timer);\n    }\n  }, [notification.duration, handleClose]);\n\n  const handleAction = action => {\n    if (action.callback) {\n      action.callback(notification);\n    }\n    if (action.closeOnClick !== false) {\n      handleClose();\n    }\n    if (onAction) {\n      onAction(notification, action);\n    }\n  };\n\n  const getIcon = () => {\n    switch (notification.type) {\n      case 'success':\n        return <FaCheck />;\n      case 'error':\n        return <FaExclamationTriangle />;\n      case 'warning':\n        return <FaExclamationTriangle />;\n      case 'enquiry':\n        return <FaEnvelope />;\n      case 'order':\n        return <FaShoppingBag />;\n      case 'user':\n        return <FaUser />;\n      default:\n        return <FaInfo />;\n    }\n  };\n\n  const formatTime = timestamp => {\n    const now = new Date();\n    const time = new Date(timestamp);\n    const diffMs = now - time;\n    const diffMinutes = Math.floor(diffMs / 60000);\n\n    if (diffMinutes < 1) return 'Just now';\n    if (diffMinutes < 60) return `${diffMinutes}m ago`;\n    if (diffMinutes < 1440) return `${Math.floor(diffMinutes / 60)}h ago`;\n    return time.toLocaleDateString();\n  };\n\n  return (\n    <NotificationCard type={notification.type} isVisible={isVisible}>\n      <NotificationIcon type={notification.type}>{getIcon()}</NotificationIcon>\n\n      <NotificationContent>\n        <NotificationTitle>{notification.title}</NotificationTitle>\n        <NotificationMessage>{notification.message}</NotificationMessage>\n\n        {notification.meta && (\n          <NotificationMeta>\n            <span>{formatTime(notification.timestamp)}</span>\n            {notification.meta.product && (\n              <span>• {notification.meta.product}</span>\n            )}\n            {notification.meta.customer && (\n              <span>• {notification.meta.customer}</span>\n            )}\n          </NotificationMeta>\n        )}\n\n        {notification.actions && notification.actions.length > 0 && (\n          <NotificationActions>\n            {notification.actions.map((action, index) => (\n              <NotificationButton\n                key={index}\n                className={action.type || 'secondary'}\n                onClick={() => handleAction(action)}\n              >\n                {action.label}\n              </NotificationButton>\n            ))}\n          </NotificationActions>\n        )}\n      </NotificationContent>\n\n      <CloseButton onClick={handleClose}>\n        <FaTimes />\n      </CloseButton>\n    </NotificationCard>\n  );\n};\n\n// Main Notification System\nconst NotificationSystem = ({ children }) => {\n  const [notifications, setNotifications] = useState([]);\n\n  const addNotification = useCallback(notification => {\n    const id = Date.now() + Math.random();\n    const newNotification = {\n      id,\n      timestamp: Date.now(),\n      duration: 5000, // Default 5 seconds\n      ...notification,\n    };\n\n    setNotifications(prev => [newNotification, ...prev]);\n\n    return id;\n  }, []);\n\n  const removeNotification = id => {\n    setNotifications(prev => prev.filter(n => n.id !== id));\n  };\n\n  const clearAllNotifications = () => {\n    setNotifications([]);\n  };\n\n  const markAsRead = id => {\n    setNotifications(prev =>\n      prev.map(n => (n.id === id ? { ...n, read: true } : n))\n    );\n  };\n\n  // Utility functions for common notification types\n  const showSuccessNotification = (title, message, options = {}) => {\n    return addNotification({\n      type: 'success',\n      title,\n      message,\n      ...options,\n    });\n  };\n\n  const showErrorNotification = (title, message, options = {}) => {\n    return addNotification({\n      type: 'error',\n      title,\n      message,\n      duration: 8000, // Longer duration for errors\n      ...options,\n    });\n  };\n\n  const showEnquiryNotification = useCallback(\n    (enquiry, options = {}) => {\n      return addNotification({\n        type: 'enquiry',\n        title: 'New Enquiry Received',\n        message: `${enquiry.name} is interested in ${enquiry.productName}`,\n        meta: {\n          product: enquiry.productName,\n          customer: enquiry.name,\n        },\n        actions: [\n          {\n            label: 'View Details',\n            type: 'primary',\n            callback: () => {\n              // Navigate to enquiry management\n              window.location.href =\n                '/ecommerce/seller-dashboard?tab=enquiries';\n            },\n          },\n          {\n            label: 'Contact Customer',\n            type: 'secondary',\n            callback: () => {\n              window.open(\n                `mailto:${enquiry.email}?subject=Re: Enquiry for ${enquiry.productName}`\n              );\n            },\n            closeOnClick: false,\n          },\n        ],\n        duration: 0, // Don't auto-close enquiry notifications\n        ...options,\n      });\n    },\n    [addNotification]\n  );\n\n  // Check for new enquiries periodically\n  useEffect(() => {\n    const checkForNewEnquiries = () => {\n      const lastCheck = localStorage.getItem('lastEnquiryCheck');\n      const currentEnquiries = JSON.parse(\n        localStorage.getItem('userEnquiries') || '[]'\n      );\n\n      if (lastCheck) {\n        const newEnquiries = currentEnquiries.filter(\n          enquiry => new Date(enquiry.timestamp) > new Date(lastCheck)\n        );\n\n        newEnquiries.forEach(enquiry => {\n          showEnquiryNotification(enquiry);\n        });\n      }\n\n      localStorage.setItem('lastEnquiryCheck', new Date().toISOString());\n    };\n\n    // Check immediately\n    checkForNewEnquiries();\n\n    // Set up periodic checking (every 30 seconds)\n    const interval = setInterval(checkForNewEnquiries, 30000);\n\n    return () => clearInterval(interval);\n  }, [showEnquiryNotification]);\n\n  const contextValue = {\n    notifications,\n    addNotification,\n    removeNotification,\n    clearAllNotifications,\n    markAsRead,\n    showSuccessNotification,\n    showErrorNotification,\n    showEnquiryNotification,\n  };\n\n  return (\n    <NotificationContext.Provider value={contextValue}>\n      {children}\n      <NotificationContainer>\n        {notifications.map(notification => (\n          <NotificationItem\n            key={notification.id}\n            notification={notification}\n            onClose={removeNotification}\n          />\n        ))}\n      </NotificationContainer>\n    </NotificationContext.Provider>\n  );\n};\n\n// Bell Icon Component for Header\nexport const NotificationBell = ({ onClick }) => {\n  const { notifications } = useNotifications();\n  const unreadCount = notifications.filter(n => !n.read).length;\n\n  return (\n    <BellIcon hasNotifications={unreadCount > 0} onClick={onClick}>\n      <FaBell />\n    </BellIcon>\n  );\n};\n\nexport default NotificationSystem;\nexport { NotificationSystem as NotificationProvider };\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/OrdersTabEnhanced.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":450,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":450,"endColumn":56},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":455,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":455,"endColumn":52}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaSearch,\n  FaFilter,\n  FaEye,\n  FaDownload,\n  FaTruck,\n  FaCheck,\n  FaClock,\n  FaTimes,\n  FaPrint,\n  FaFileInvoiceDollar,\n  FaShippingFast,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport Modal from './shared/Modal';\nimport FormField from './shared/FormField';\nimport { Button } from '../../components/shared/Button';\nimport { sellerDashboardData } from '../../DummyData';\nconst { sellerOrders } = sellerDashboardData;\n\nconst OrdersContainer = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  border: 1px solid ${theme.colors.gray200};\n  overflow: hidden;\n`;\n\nconst OrdersHeader = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  display: flex;\n  align-items: center;\n  justify-content: between;\n  gap: ${theme.spacing.lg};\n  flex-wrap: wrap;\n`;\n\nconst HeaderLeft = styled.div`\n  flex: 1;\n  min-width: 200px;\n`;\n\nconst HeaderTitle = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n`;\n\nconst HeaderSubtitle = styled.p`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n  margin: 0;\n`;\n\nconst HeaderActions = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  flex-wrap: wrap;\n`;\n\nconst SearchBox = styled.div`\n  position: relative;\n  min-width: 250px;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.md}\n    ${theme.spacing.xxl};\n  border: 1px solid ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n  background: ${theme.colors.white};\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    box-shadow: 0 0 0 3px ${theme.colors.primary}20;\n  }\n`;\n\nconst SearchIcon = styled(FaSearch)`\n  position: absolute;\n  left: ${theme.spacing.md};\n  top: 50%;\n  transform: translateY(-50%);\n  color: ${theme.colors.gray400};\n  font-size: 0.9rem;\n`;\n\nconst FilterTabs = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  padding: ${theme.spacing.lg} ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.gray50};\n  overflow-x: auto;\n`;\n\nconst FilterTab = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  background: ${props => (props.active ? theme.colors.primary : 'transparent')};\n  color: ${props => (props.active ? theme.colors.white : theme.colors.gray600)};\n  border: none;\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.85rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  white-space: nowrap;\n\n  &:hover {\n    background: ${props =>\n      props.active ? theme.colors.primaryDark : theme.colors.gray200};\n  }\n`;\n\nconst OrdersTable = styled.div`\n  overflow-x: auto;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n`;\n\nconst TableHeader = styled.thead`\n  background: ${theme.colors.gray50};\n`;\n\nconst TableRow = styled.tr`\n  border-bottom: 1px solid ${theme.colors.gray200};\n  transition: background 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray50};\n  }\n`;\n\nconst TableHeaderCell = styled.th`\n  padding: ${theme.spacing.lg} ${theme.spacing.xl};\n  text-align: left;\n  font-size: 0.85rem;\n  font-weight: 600;\n  color: ${theme.colors.gray700};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst TableCell = styled.td`\n  padding: ${theme.spacing.lg} ${theme.spacing.xl};\n  font-size: 0.9rem;\n  color: ${theme.colors.gray900};\n  vertical-align: middle;\n`;\n\nconst OrderId = styled.span`\n  font-family: 'Courier New', monospace;\n  font-weight: 600;\n  color: ${theme.colors.primary};\n`;\n\nconst CustomerInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.xs};\n`;\n\nconst CustomerName = styled.span`\n  font-weight: 500;\n  color: ${theme.colors.gray900};\n`;\n\nconst CustomerEmail = styled.span`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n`;\n\nconst ProductsList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.xs};\n  max-width: 200px;\n`;\n\nconst ProductItem = styled.span`\n  font-size: 0.85rem;\n  color: ${theme.colors.gray700};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst TotalAmount = styled.span`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  font-size: 1rem;\n`;\n\nconst StatusBadge = styled.span.withConfig({\n  shouldForwardProp: prop => prop !== 'status',\n})`\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.75rem;\n  font-weight: 500;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  width: fit-content;\n\n  ${props => {\n    switch (props.status) {\n      case 'completed':\n        return `\n          background: ${theme.colors.success}20;\n          color: ${theme.colors.success};\n        `;\n      case 'shipped':\n        return `\n          background: ${theme.colors.info}20;\n          color: ${theme.colors.info};\n        `;\n      case 'processing':\n        return `\n          background: ${theme.colors.warning}20;\n          color: ${theme.colors.warning};\n        `;\n      case 'pending':\n        return `\n          background: ${theme.colors.gray200};\n          color: ${theme.colors.gray600};\n        `;\n      case 'cancelled':\n        return `\n          background: ${theme.colors.error}20;\n          color: ${theme.colors.error};\n        `;\n      default:\n        return `\n          background: ${theme.colors.gray200};\n          color: ${theme.colors.gray600};\n        `;\n    }\n  }}\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst ActionButton = styled.button`\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.sm};\n  background: ${theme.colors.white};\n  color: ${theme.colors.gray600};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n    background: ${theme.colors.primary}10;\n  }\n`;\n\nconst OrderDetailsModal = styled.div`\n  max-height: 70vh;\n  overflow-y: auto;\n`;\n\nconst DetailSection = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst DetailTitle = styled.h4`\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.lg} 0;\n  padding-bottom: ${theme.spacing.sm};\n  border-bottom: 1px solid ${theme.colors.gray200};\n`;\n\nconst DetailGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${theme.spacing.lg};\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst DetailItem = styled.div`\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst DetailLabel = styled.span`\n  display: block;\n  font-size: 0.8rem;\n  font-weight: 500;\n  color: ${theme.colors.gray500};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst DetailValue = styled.span`\n  display: block;\n  font-size: 0.9rem;\n  color: ${theme.colors.gray900};\n`;\n\nconst StatusUpdateForm = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  align-items: end;\n  margin-top: ${theme.spacing.lg};\n`;\n\nconst OrdersTabEnhanced = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [orders, setOrders] = useState(sellerOrders);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [showOrderModal, setShowOrderModal] = useState(false);\n  const [trackingInfo, setTrackingInfo] = useState({\n    trackingNumber: '',\n    carrier: 'ups',\n    notes: '',\n  });\n\n  const formatCurrency = value => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(value);\n  };\n\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    });\n  };\n\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'completed':\n        return <FaCheck />;\n      case 'shipped':\n        return <FaTruck />;\n      case 'processing':\n        return <FaClock />;\n      case 'pending':\n        return <FaClock />;\n      case 'cancelled':\n        return <FaTimes />;\n      default:\n        return <FaClock />;\n    }\n  };\n\n  const getStatusText = status => {\n    switch (status) {\n      case 'completed':\n        return 'Completed';\n      case 'shipped':\n        return 'Shipped';\n      case 'processing':\n        return 'Processing';\n      case 'pending':\n        return 'Pending';\n      case 'cancelled':\n        return 'Cancelled';\n      default:\n        return status;\n    }\n  };\n\n  const filteredOrders = orders.filter(order => {\n    const matchesSearch =\n      order.id.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      order.customerName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      order.customerEmail.toLowerCase().includes(searchTerm.toLowerCase());\n\n    const matchesStatus =\n      statusFilter === 'all' || order.status === statusFilter;\n\n    return matchesSearch && matchesStatus;\n  });\n\n  const statusCounts = {\n    all: orders.length,\n    pending: orders.filter(o => o.status === 'pending').length,\n    processing: orders.filter(o => o.status === 'processing').length,\n    shipped: orders.filter(o => o.status === 'shipped').length,\n    completed: orders.filter(o => o.status === 'completed').length,\n    cancelled: orders.filter(o => o.status === 'cancelled').length,\n  };\n\n  const handleViewOrder = order => {\n    setSelectedOrder(order);\n    setShowOrderModal(true);\n  };\n\n  const handleUpdateStatus = (orderId, newStatus) => {\n    setOrders(\n      orders.map(order =>\n        order.id === orderId ? { ...order, status: newStatus } : order\n      )\n    );\n  };\n\n  const handleAddTracking = () => {\n    if (selectedOrder && trackingInfo.trackingNumber) {\n      setOrders(\n        orders.map(order =>\n          order.id === selectedOrder.id\n            ? {\n                ...order,\n                status: 'shipped',\n                trackingNumber: trackingInfo.trackingNumber,\n                carrier: trackingInfo.carrier,\n                trackingNotes: trackingInfo.notes,\n              }\n            : order\n        )\n      );\n      setTrackingInfo({ trackingNumber: '', carrier: 'ups', notes: '' });\n      alert('Tracking information added successfully!');\n    }\n  };\n\n  const handlePrintInvoice = order => {\n    alert(`Printing invoice for order ${order.id}`);\n  };\n\n  const handleExportOrders = () => {\n    const csv = [\n      ['Order ID', 'Customer', 'Total', 'Status', 'Date'].join(','),\n      ...filteredOrders.map(order =>\n        [\n          order.id,\n          order.customerName,\n          order.total,\n          order.status,\n          order.orderDate,\n        ].join(',')\n      ),\n    ].join('\\n');\n\n    const blob = new Blob([csv], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'orders.csv';\n    a.click();\n  };\n\n  const orderDetailsFooter = (\n    <>\n      <Button variant=\"ghost\" onClick={() => setShowOrderModal(false)}>\n        Close\n      </Button>\n      <Button\n        variant=\"outline\"\n        onClick={() => handlePrintInvoice(selectedOrder)}\n      >\n        <FaPrint />\n        Print Invoice\n      </Button>\n    </>\n  );\n\n  return (\n    <>\n      <OrdersContainer>\n        <OrdersHeader>\n          <HeaderLeft>\n            <HeaderTitle>Orders</HeaderTitle>\n            <HeaderSubtitle>Track and manage customer orders</HeaderSubtitle>\n          </HeaderLeft>\n\n          <HeaderActions>\n            <SearchBox>\n              <SearchIcon />\n              <SearchInput\n                type=\"text\"\n                placeholder=\"Search orders...\"\n                value={searchTerm}\n                onChange={e => setSearchTerm(e.target.value)}\n              />\n            </SearchBox>\n\n            <Button variant=\"outline\" onClick={() => {}}>\n              <FaFilter />\n              Filter\n            </Button>\n\n            <Button variant=\"primary\" onClick={handleExportOrders}>\n              <FaDownload />\n              Export\n            </Button>\n          </HeaderActions>\n        </OrdersHeader>\n\n        <FilterTabs>\n          <FilterTab\n            active={statusFilter === 'all'}\n            onClick={() => setStatusFilter('all')}\n          >\n            All ({statusCounts.all})\n          </FilterTab>\n          <FilterTab\n            active={statusFilter === 'pending'}\n            onClick={() => setStatusFilter('pending')}\n          >\n            Pending ({statusCounts.pending})\n          </FilterTab>\n          <FilterTab\n            active={statusFilter === 'processing'}\n            onClick={() => setStatusFilter('processing')}\n          >\n            Processing ({statusCounts.processing})\n          </FilterTab>\n          <FilterTab\n            active={statusFilter === 'shipped'}\n            onClick={() => setStatusFilter('shipped')}\n          >\n            Shipped ({statusCounts.shipped})\n          </FilterTab>\n          <FilterTab\n            active={statusFilter === 'completed'}\n            onClick={() => setStatusFilter('completed')}\n          >\n            Completed ({statusCounts.completed})\n          </FilterTab>\n          <FilterTab\n            active={statusFilter === 'cancelled'}\n            onClick={() => setStatusFilter('cancelled')}\n          >\n            Cancelled ({statusCounts.cancelled})\n          </FilterTab>\n        </FilterTabs>\n\n        <OrdersTable>\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHeaderCell>Order ID</TableHeaderCell>\n                <TableHeaderCell>Customer</TableHeaderCell>\n                <TableHeaderCell>Products</TableHeaderCell>\n                <TableHeaderCell>Total</TableHeaderCell>\n                <TableHeaderCell>Status</TableHeaderCell>\n                <TableHeaderCell>Date</TableHeaderCell>\n                <TableHeaderCell>Actions</TableHeaderCell>\n              </TableRow>\n            </TableHeader>\n            <tbody>\n              {filteredOrders.map(order => (\n                <TableRow key={order.id}>\n                  <TableCell>\n                    <OrderId>{order.id}</OrderId>\n                  </TableCell>\n                  <TableCell>\n                    <CustomerInfo>\n                      <CustomerName>{order.customerName}</CustomerName>\n                      <CustomerEmail>{order.customerEmail}</CustomerEmail>\n                    </CustomerInfo>\n                  </TableCell>\n                  <TableCell>\n                    <ProductsList>\n                      {order.products.map((product, index) => (\n                        <ProductItem key={index}>\n                          {product.quantity}x {product.name}\n                        </ProductItem>\n                      ))}\n                    </ProductsList>\n                  </TableCell>\n                  <TableCell>\n                    <TotalAmount>{formatCurrency(order.total)}</TotalAmount>\n                  </TableCell>\n                  <TableCell>\n                    <StatusBadge status={order.status}>\n                      {getStatusIcon(order.status)}\n                      {getStatusText(order.status)}\n                    </StatusBadge>\n                  </TableCell>\n                  <TableCell>{formatDate(order.orderDate)}</TableCell>\n                  <TableCell>\n                    <ActionButtons>\n                      <ActionButton onClick={() => handleViewOrder(order)}>\n                        <FaEye />\n                      </ActionButton>\n                      <ActionButton onClick={() => handlePrintInvoice(order)}>\n                        <FaFileInvoiceDollar />\n                      </ActionButton>\n                    </ActionButtons>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </tbody>\n          </Table>\n        </OrdersTable>\n      </OrdersContainer>\n\n      {/* Order Details Modal */}\n      <Modal\n        isOpen={showOrderModal}\n        onClose={() => setShowOrderModal(false)}\n        title={`Order Details - ${selectedOrder?.id}`}\n        footer={orderDetailsFooter}\n        size=\"lg\"\n      >\n        {selectedOrder && (\n          <OrderDetailsModal>\n            <DetailSection>\n              <DetailTitle>Order Information</DetailTitle>\n              <DetailGrid>\n                <DetailItem>\n                  <DetailLabel>Order ID</DetailLabel>\n                  <DetailValue>{selectedOrder.id}</DetailValue>\n                </DetailItem>\n                <DetailItem>\n                  <DetailLabel>Order Date</DetailLabel>\n                  <DetailValue>\n                    {formatDate(selectedOrder.orderDate)}\n                  </DetailValue>\n                </DetailItem>\n                <DetailItem>\n                  <DetailLabel>Order Status</DetailLabel>\n                  <DetailValue>\n                    <StatusBadge status={selectedOrder.status}>\n                      {getStatusIcon(selectedOrder.status)}\n                      {getStatusText(selectedOrder.status)}\n                    </StatusBadge>\n                  </DetailValue>\n                </DetailItem>\n                <DetailItem>\n                  <DetailLabel>Payment Status</DetailLabel>\n                  <DetailValue>{selectedOrder.paymentStatus}</DetailValue>\n                </DetailItem>\n              </DetailGrid>\n            </DetailSection>\n\n            <DetailSection>\n              <DetailTitle>Customer Information</DetailTitle>\n              <DetailGrid>\n                <DetailItem>\n                  <DetailLabel>Customer Name</DetailLabel>\n                  <DetailValue>{selectedOrder.customerName}</DetailValue>\n                </DetailItem>\n                <DetailItem>\n                  <DetailLabel>Email</DetailLabel>\n                  <DetailValue>{selectedOrder.customerEmail}</DetailValue>\n                </DetailItem>\n                <DetailItem>\n                  <DetailLabel>Shipping Address</DetailLabel>\n                  <DetailValue>{selectedOrder.shippingAddress}</DetailValue>\n                </DetailItem>\n              </DetailGrid>\n            </DetailSection>\n\n            <DetailSection>\n              <DetailTitle>Order Items</DetailTitle>\n              {selectedOrder.products.map((product, index) => (\n                <div\n                  key={index}\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'between',\n                    alignItems: 'center',\n                    padding: theme.spacing.md,\n                    border: `1px solid ${theme.colors.gray200}`,\n                    borderRadius: theme.borderRadius.md,\n                    marginBottom: theme.spacing.sm,\n                  }}\n                >\n                  <span>\n                    {product.quantity}x {product.name}\n                  </span>\n                  <span>\n                    {formatCurrency(product.price * product.quantity)}\n                  </span>\n                </div>\n              ))}\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'between',\n                  alignItems: 'center',\n                  padding: theme.spacing.lg,\n                  background: theme.colors.gray50,\n                  borderRadius: theme.borderRadius.md,\n                  fontWeight: '600',\n                  fontSize: '1.1rem',\n                }}\n              >\n                <span>Total</span>\n                <span>{formatCurrency(selectedOrder.total)}</span>\n              </div>\n            </DetailSection>\n\n            <DetailSection>\n              <DetailTitle>Update Order Status</DetailTitle>\n              <StatusUpdateForm>\n                <FormField\n                  label=\"Change Status\"\n                  type=\"select\"\n                  value={selectedOrder.status}\n                  onChange={e =>\n                    handleUpdateStatus(selectedOrder.id, e.target.value)\n                  }\n                  options={[\n                    { value: 'pending', label: 'Pending' },\n                    { value: 'processing', label: 'Processing' },\n                    { value: 'shipped', label: 'Shipped' },\n                    { value: 'completed', label: 'Completed' },\n                    { value: 'cancelled', label: 'Cancelled' },\n                  ]}\n                />\n                <Button variant=\"primary\">Update Status</Button>\n              </StatusUpdateForm>\n            </DetailSection>\n\n            {selectedOrder.status !== 'shipped' &&\n              selectedOrder.status !== 'completed' && (\n                <DetailSection>\n                  <DetailTitle>Add Tracking Information</DetailTitle>\n                  <FormField\n                    label=\"Tracking Number\"\n                    value={trackingInfo.trackingNumber}\n                    onChange={e =>\n                      setTrackingInfo(prev => ({\n                        ...prev,\n                        trackingNumber: e.target.value,\n                      }))\n                    }\n                    placeholder=\"Enter tracking number\"\n                  />\n                  <DetailGrid>\n                    <FormField\n                      label=\"Carrier\"\n                      type=\"select\"\n                      value={trackingInfo.carrier}\n                      onChange={e =>\n                        setTrackingInfo(prev => ({\n                          ...prev,\n                          carrier: e.target.value,\n                        }))\n                      }\n                      options={[\n                        { value: 'ups', label: 'UPS' },\n                        { value: 'fedex', label: 'FedEx' },\n                        { value: 'usps', label: 'USPS' },\n                        { value: 'dhl', label: 'DHL' },\n                        { value: 'other', label: 'Other' },\n                      ]}\n                    />\n                    <div style={{ display: 'flex', alignItems: 'end' }}>\n                      <Button\n                        variant=\"primary\"\n                        onClick={handleAddTracking}\n                        fullWidth\n                      >\n                        <FaShippingFast />\n                        Add Tracking\n                      </Button>\n                    </div>\n                  </DetailGrid>\n                </DetailSection>\n              )}\n          </OrderDetailsModal>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default OrdersTabEnhanced;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/ProductCard.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'getBaseUrl' is assigned a value but never used.","line":388,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":388,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaStar, FaHeart, FaEnvelope } from 'react-icons/fa';\nimport { theme, media } from '../../styles/GlobalStyle';\nimport EnquiryModal from './EnquiryModal';\nimport {\n  getProductAvailabilityStatus as getAvailabilityStatus,\n  getProductAvailabilityLabel as getAvailabilityLabel,\n  getProductAvailabilityColor as getAvailabilityColor,\n} from '../../DummyData';\n\nconst Card = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  overflow: hidden;\n  box-shadow: ${theme.shadows.sm};\n  transition: all 0.4s ease;\n  position: relative;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid ${theme.colors.gray100};\n\n  &:hover {\n    transform: translateY(-8px);\n    box-shadow: ${theme.shadows.xl};\n    border-color: ${theme.colors.primary}20;\n  }\n\n  ${media.mobile} {\n    border-radius: ${theme.borderRadius.md};\n\n    &:hover {\n      transform: translateY(-2px);\n      box-shadow: ${theme.shadows.md};\n    }\n  }\n\n  ${media.tablet} {\n    &:hover {\n      transform: translateY(-3px);\n    }\n  }\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  overflow: hidden;\n  height: 240px;\n\n  ${media.mobile} {\n    height: 200px;\n  }\n\n  ${media.tablet} {\n    height: 220px;\n  }\n`;\n\nconst ProductImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s ease;\n\n  ${Card}:hover & {\n    transform: scale(1.05);\n  }\n`;\n\nconst Badge = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'type',\n})`\n  position: absolute;\n  top: ${theme.spacing.md};\n  left: ${theme.spacing.md};\n  background: ${props =>\n    props.type === 'sale' ? theme.colors.error : theme.colors.success};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 600;\n  text-transform: uppercase;\n\n  ${media.mobile} {\n    top: ${theme.spacing.sm};\n    left: ${theme.spacing.sm};\n    padding: ${theme.spacing.xs} ${theme.spacing.xs};\n    font-size: 0.7rem;\n  }\n`;\n\nconst WishlistButton = styled.button`\n  position: absolute;\n  top: ${theme.spacing.md};\n  right: ${theme.spacing.md};\n  background: ${theme.colors.white};\n  border-radius: 50%;\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.gray400};\n  transition: all 0.2s ease;\n  opacity: 0;\n\n  ${Card}:hover & {\n    opacity: 1;\n  }\n\n  &:hover {\n    color: ${theme.colors.error};\n    transform: scale(1.1);\n  }\n\n  ${media.mobile} {\n    top: ${theme.spacing.sm};\n    right: ${theme.spacing.sm};\n    width: 32px;\n    height: 32px;\n    opacity: 1;\n\n    &:hover {\n      transform: none;\n    }\n  }\n\n  ${media.tablet} {\n    width: 34px;\n    height: 34px;\n  }\n`;\n\nconst CardContent = styled.div`\n  padding: ${theme.spacing.lg};\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n\n  ${media.mobile} {\n    padding: ${theme.spacing.md};\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.lg};\n  }\n`;\n\nconst Category = styled.span`\n  color: ${theme.colors.gray500};\n  font-size: 0.8rem;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  margin-bottom: ${theme.spacing.xs};\n\n  ${media.mobile} {\n    font-size: 0.7rem;\n  }\n`;\n\nconst ProductName = styled.h3`\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n  line-height: 1.4;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n\n  ${media.mobile} {\n    font-size: 1rem;\n    margin-bottom: ${theme.spacing.xs};\n  }\n`;\n\nconst Description = styled.p`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n  line-height: 1.5;\n  margin-bottom: ${theme.spacing.md};\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  flex: 1;\n\n  ${media.mobile} {\n    font-size: 0.8rem;\n    margin-bottom: ${theme.spacing.sm};\n    -webkit-line-clamp: 3;\n  }\n`;\n\nconst RatingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.md};\n\n  ${media.mobile} {\n    gap: ${theme.spacing.xs};\n    margin-bottom: ${theme.spacing.sm};\n  }\n`;\n\nconst StarRating = styled.div`\n  display: flex;\n  gap: 2px;\n`;\n\nconst Star = styled(FaStar).withConfig({\n  shouldForwardProp: prop => prop !== 'filled',\n})`\n  color: ${props => (props.filled ? '#fbbf24' : theme.colors.gray300)};\n  font-size: 0.8rem;\n`;\n\nconst ReviewCount = styled.span`\n  color: ${theme.colors.gray500};\n  font-size: 0.8rem;\n\n  ${media.mobile} {\n    font-size: 0.7rem;\n  }\n`;\n\nconst PriceContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.lg};\n\n  ${media.mobile} {\n    gap: ${theme.spacing.xs};\n    margin-bottom: ${theme.spacing.md};\n    flex-wrap: wrap;\n  }\n`;\n\nconst CurrentPrice = styled.span`\n  font-size: 1.3rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n\n  ${media.mobile} {\n    font-size: 1.1rem;\n  }\n\n  ${media.tablet} {\n    font-size: 1.2rem;\n  }\n`;\n\nconst OriginalPrice = styled.span`\n  font-size: 1rem;\n  color: ${theme.colors.gray500};\n  text-decoration: line-through;\n\n  ${media.mobile} {\n    font-size: 0.9rem;\n  }\n`;\n\nconst Discount = styled.span`\n  background: ${theme.colors.error};\n  color: ${theme.colors.white};\n  padding: 2px 6px;\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.7rem;\n  font-weight: 600;\n\n  ${media.mobile} {\n    font-size: 0.65rem;\n    padding: 1px 4px;\n  }\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n\n  ${media.mobile} {\n    gap: ${theme.spacing.xs};\n  }\n`;\n\nconst EnquireButton = styled.button`\n  flex: 1;\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary} 0%,\n    ${theme.colors.primaryDark} 100%\n  );\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  font-weight: 700;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n  transition: all 0.3s ease;\n  border: none;\n  cursor: pointer;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  font-size: 0.9rem;\n\n  &:hover {\n    background: linear-gradient(\n      135deg,\n      ${theme.colors.primaryDark} 0%,\n      ${theme.colors.primary} 100%\n    );\n    transform: translateY(-3px);\n    box-shadow: ${theme.shadows.lg};\n  }\n\n  &:disabled {\n    background: ${theme.colors.gray400};\n    cursor: not-allowed;\n    transform: none;\n    box-shadow: none;\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.sm};\n    gap: ${theme.spacing.xs};\n    font-size: 0.875rem;\n\n    &:hover {\n      transform: none;\n    }\n  }\n`;\n\nconst StockIndicator = styled.div.withConfig({\n  shouldForwardProp: prop => !['availability', 'color'].includes(prop),\n})`\n  color: ${props => props.color || theme.colors.gray600};\n  font-size: 0.8rem;\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.sm};\n\n  ${media.mobile} {\n    font-size: 0.7rem;\n    margin-bottom: ${theme.spacing.xs};\n  }\n`;\n\nconst ProductCard = ({\n  product,\n  onToggleWishlist,\n  isInWishlist = false,\n  storeSlug = '',\n}) => {\n  const [isEnquiryModalOpen, setIsEnquiryModalOpen] = useState(false);\n\n  const renderStars = rating => {\n    const stars = [];\n    for (let i = 1; i <= 5; i++) {\n      stars.push(<Star key={i} filled={i <= Math.floor(rating)} />);\n    }\n    return stars;\n  };\n\n  const calculateDiscount = (original, current) => {\n    return Math.round(((original - current) / original) * 100);\n  };\n\n  const handleEnquireClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsEnquiryModalOpen(true);\n  };\n\n  const handleWishlistToggle = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    onToggleWishlist?.(product);\n  };\n\n  const getBaseUrl = () => (storeSlug ? `/${storeSlug}` : '/ecommerce');\n\n  const availabilityStatus = getAvailabilityStatus(product);\n  const availabilityLabel = getAvailabilityLabel(availabilityStatus);\n  const availabilityColor = getAvailabilityColor(availabilityStatus);\n\n  return (\n    <Link to={`/${storeSlug}/productdetail/${product.id}`}>\n      <Card>\n        <ImageContainer>\n          <ProductImage src={product.image} alt={product.name} />\n\n          {product.onSale && product.originalPrice && (\n            <Badge type=\"sale\">Sale</Badge>\n          )}\n\n          {product.featured && !product.onSale && (\n            <Badge type=\"featured\">Featured</Badge>\n          )}\n\n          <WishlistButton\n            onClick={handleWishlistToggle}\n            title={isInWishlist ? 'Remove from wishlist' : 'Add to wishlist'}\n          >\n            <FaHeart\n              style={{\n                color: isInWishlist ? theme.colors.error : 'currentColor',\n              }}\n            />\n          </WishlistButton>\n        </ImageContainer>\n\n        <CardContent>\n          <Category>{product.category.replace('-', ' ')}</Category>\n          <ProductName>{product.name}</ProductName>\n          <Description>{product.description}</Description>\n\n          <RatingContainer>\n            <StarRating>{renderStars(product.rating)}</StarRating>\n            <ReviewCount>({product.reviews} reviews)</ReviewCount>\n          </RatingContainer>\n\n          <PriceContainer>\n            <CurrentPrice>${product.price}</CurrentPrice>\n            {product.originalPrice && product.originalPrice > product.price && (\n              <>\n                <OriginalPrice>${product.originalPrice}</OriginalPrice>\n                <Discount>\n                  -{calculateDiscount(product.originalPrice, product.price)}%\n                </Discount>\n              </>\n            )}\n          </PriceContainer>\n\n          <StockIndicator\n            availability={availabilityStatus}\n            color={availabilityColor}\n          >\n            {availabilityStatus === 'in_stock' && product.stock > 0\n              ? `${product.stock} in stock`\n              : availabilityLabel}\n          </StockIndicator>\n\n          <ActionButtons>\n            <EnquireButton\n              onClick={handleEnquireClick}\n              disabled={availabilityStatus === 'out_of_stock'}\n            >\n              <FaEnvelope />\n              {availabilityStatus === 'out_of_stock'\n                ? 'Not Available'\n                : 'Enquire Now'}\n            </EnquireButton>\n          </ActionButtons>\n        </CardContent>\n      </Card>\n\n      <EnquiryModal\n        isOpen={isEnquiryModalOpen}\n        onClose={() => setIsEnquiryModalOpen(false)}\n        product={product}\n      />\n    </Link>\n  );\n};\n\nexport default ProductCard;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/ProductsTab.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaEdit,\n  FaTrash,\n  FaSearch,\n  FaFilter,\n  FaPlus,\n  FaEye,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport { sellerDashboardData } from '../../DummyData';\nconst { sellerProducts } = sellerDashboardData;\n\nconst ProductsContainer = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  border: 1px solid ${theme.colors.gray200};\n  overflow: hidden;\n`;\n\nconst ProductsHeader = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  display: flex;\n  align-items: center;\n  justify-content: between;\n  gap: ${theme.spacing.lg};\n  flex-wrap: wrap;\n`;\n\nconst HeaderLeft = styled.div`\n  flex: 1;\n  min-width: 200px;\n`;\n\nconst HeaderTitle = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n`;\n\nconst HeaderSubtitle = styled.p`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n  margin: 0;\n`;\n\nconst HeaderActions = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  flex-wrap: wrap;\n`;\n\nconst SearchBox = styled.div`\n  position: relative;\n  min-width: 250px;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.md}\n    ${theme.spacing.xxl};\n  border: 1px solid ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n  background: ${theme.colors.white};\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    box-shadow: 0 0 0 3px ${theme.colors.primary}20;\n  }\n`;\n\nconst SearchIcon = styled(FaSearch)`\n  position: absolute;\n  left: ${theme.spacing.md};\n  top: 50%;\n  transform: translateY(-50%);\n  color: ${theme.colors.gray400};\n  font-size: 0.9rem;\n`;\n\nconst FilterButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.md};\n  color: ${theme.colors.gray700};\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray50};\n    border-color: ${theme.colors.gray400};\n  }\n`;\n\nconst AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  background: ${theme.colors.primary};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  color: ${theme.colors.white};\n  font-size: 0.9rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-1px);\n  }\n`;\n\nconst ProductsTable = styled.div`\n  overflow-x: auto;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n`;\n\nconst TableHeader = styled.thead`\n  background: ${theme.colors.gray50};\n`;\n\nconst TableRow = styled.tr`\n  border-bottom: 1px solid ${theme.colors.gray200};\n  transition: background 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray50};\n  }\n`;\n\nconst TableHeaderCell = styled.th`\n  padding: ${theme.spacing.lg} ${theme.spacing.xl};\n  text-align: left;\n  font-size: 0.85rem;\n  font-weight: 600;\n  color: ${theme.colors.gray700};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst TableCell = styled.td`\n  padding: ${theme.spacing.lg} ${theme.spacing.xl};\n  font-size: 0.9rem;\n  color: ${theme.colors.gray900};\n  vertical-align: middle;\n`;\n\nconst ProductImage = styled.img`\n  width: 48px;\n  height: 48px;\n  border-radius: ${theme.borderRadius.md};\n  object-fit: cover;\n  border: 1px solid ${theme.colors.gray200};\n`;\n\nconst ProductInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n`;\n\nconst ProductDetails = styled.div`\n  flex: 1;\n`;\n\nconst ProductName = styled.h4`\n  font-size: 0.95rem;\n  font-weight: 500;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n`;\n\nconst ProductCategory = styled.p`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n  margin: 0;\n`;\n\nconst Price = styled.span`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n`;\n\nconst StatusBadge = styled.span.withConfig({\n  shouldForwardProp: prop => prop !== 'status',\n})`\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.75rem;\n  font-weight: 500;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n\n  ${props => {\n    switch (props.status) {\n      case 'active':\n        return `\n          background: ${theme.colors.success}20;\n          color: ${theme.colors.success};\n        `;\n      case 'out_of_stock':\n        return `\n          background: ${theme.colors.error}20;\n          color: ${theme.colors.error};\n        `;\n      case 'draft':\n        return `\n          background: ${theme.colors.warning}20;\n          color: ${theme.colors.warning};\n        `;\n      default:\n        return `\n          background: ${theme.colors.gray200};\n          color: ${theme.colors.gray600};\n        `;\n    }\n  }}\n`;\n\nconst StockInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.xs};\n`;\n\nconst StockNumber = styled.span.withConfig({\n  shouldForwardProp: prop => prop !== 'low',\n})`\n  font-weight: 500;\n  color: ${props => (props.low ? theme.colors.warning : theme.colors.gray900)};\n`;\n\nconst StockLabel = styled.span`\n  font-size: 0.75rem;\n  color: ${theme.colors.gray500};\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst ActionButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'color',\n})`\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.sm};\n  background: ${theme.colors.white};\n  color: ${theme.colors.gray600};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${props => props.color || theme.colors.primary};\n    color: ${props => props.color || theme.colors.primary};\n    background: ${props => (props.color || theme.colors.primary) + '10'};\n  }\n\n  &.danger:hover {\n    border-color: ${theme.colors.error};\n    color: ${theme.colors.error};\n    background: ${theme.colors.error}10;\n  }\n`;\n\nconst ProductsTab = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [products] = useState(sellerProducts);\n\n  const formatCurrency = value => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(value);\n  };\n\n  const filteredProducts = products.filter(\n    product =>\n      product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      product.category.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const getStatusText = status => {\n    switch (status) {\n      case 'active':\n        return 'Active';\n      case 'out_of_stock':\n        return 'Out of Stock';\n      case 'draft':\n        return 'Draft';\n      default:\n        return status;\n    }\n  };\n\n  return (\n    <ProductsContainer>\n      <ProductsHeader>\n        <HeaderLeft>\n          <HeaderTitle>Products</HeaderTitle>\n          <HeaderSubtitle>\n            Manage your product catalog and inventory\n          </HeaderSubtitle>\n        </HeaderLeft>\n\n        <HeaderActions>\n          <SearchBox>\n            <SearchIcon />\n            <SearchInput\n              type=\"text\"\n              placeholder=\"Search products...\"\n              value={searchTerm}\n              onChange={e => setSearchTerm(e.target.value)}\n            />\n          </SearchBox>\n\n          <FilterButton>\n            <FaFilter />\n            Filter\n          </FilterButton>\n\n          <AddButton>\n            <FaPlus />\n            Add Product\n          </AddButton>\n        </HeaderActions>\n      </ProductsHeader>\n\n      <ProductsTable>\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHeaderCell>Product</TableHeaderCell>\n              <TableHeaderCell>Price</TableHeaderCell>\n              <TableHeaderCell>Stock</TableHeaderCell>\n              <TableHeaderCell>Sold</TableHeaderCell>\n              <TableHeaderCell>Status</TableHeaderCell>\n              <TableHeaderCell>Revenue</TableHeaderCell>\n              <TableHeaderCell>Actions</TableHeaderCell>\n            </TableRow>\n          </TableHeader>\n          <tbody>\n            {filteredProducts.map(product => (\n              <TableRow key={product.id}>\n                <TableCell>\n                  <ProductInfo>\n                    <ProductImage src={product.image} alt={product.name} />\n                    <ProductDetails>\n                      <ProductName>{product.name}</ProductName>\n                      <ProductCategory>{product.category}</ProductCategory>\n                    </ProductDetails>\n                  </ProductInfo>\n                </TableCell>\n                <TableCell>\n                  <Price>{formatCurrency(product.price)}</Price>\n                </TableCell>\n                <TableCell>\n                  <StockInfo>\n                    <StockNumber low={product.stock < 10}>\n                      {product.stock}\n                    </StockNumber>\n                    <StockLabel>in stock</StockLabel>\n                  </StockInfo>\n                </TableCell>\n                <TableCell>{product.sold}</TableCell>\n                <TableCell>\n                  <StatusBadge status={product.status}>\n                    {getStatusText(product.status)}\n                  </StatusBadge>\n                </TableCell>\n                <TableCell>\n                  <Price>{formatCurrency(product.revenue)}</Price>\n                </TableCell>\n                <TableCell>\n                  <ActionButtons>\n                    <ActionButton title=\"View\">\n                      <FaEye />\n                    </ActionButton>\n                    <ActionButton title=\"Edit\">\n                      <FaEdit />\n                    </ActionButton>\n                    <ActionButton className=\"danger\" title=\"Delete\">\n                      <FaTrash />\n                    </ActionButton>\n                  </ActionButtons>\n                </TableCell>\n              </TableRow>\n            ))}\n          </tbody>\n        </Table>\n      </ProductsTable>\n    </ProductsContainer>\n  );\n};\n\nexport default ProductsTab;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/SearchFilters.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaSearch,\n  FaTimes,\n  FaChevronDown,\n  FaChevronUp,\n  FaSlidersH,\n  FaStar,\n  FaTag,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst FilterContainer = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  margin-bottom: ${theme.spacing.xl};\n  overflow: hidden;\n`;\n\nconst SearchSection = styled.div`\n  padding: ${theme.spacing.lg};\n  border-bottom: 1px solid ${theme.colors.gray200};\n`;\n\nconst SearchWrapper = styled.div`\n  position: relative;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.md}\n    ${theme.spacing.xxl};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray400};\n  }\n`;\n\nconst SearchIcon = styled.div`\n  position: absolute;\n  left: ${theme.spacing.md};\n  top: 50%;\n  transform: translateY(-50%);\n  color: ${theme.colors.gray400};\n  z-index: 1;\n`;\n\nconst QuickFilters = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n  flex-wrap: wrap;\n`;\n\nconst QuickFilterButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid\n    ${props => (props.active ? theme.colors.primary : theme.colors.gray200)};\n  background: ${props =>\n    props.active ? theme.colors.primary + '10' : theme.colors.white};\n  color: ${props =>\n    props.active ? theme.colors.primary : theme.colors.gray700};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst AdvancedFiltersToggle = styled.button`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${theme.spacing.lg};\n  background: ${theme.colors.gray50};\n  border: none;\n  border-top: 1px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst AdvancedFiltersContent = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'expanded',\n})`\n  display: ${props => (props.expanded ? 'block' : 'none')};\n  padding: ${theme.spacing.lg};\n  border-top: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.gray50};\n`;\n\nconst FilterRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst FilterGroup = styled.div``;\n\nconst FilterLabel = styled.label`\n  display: block;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n  font-size: 0.9rem;\n`;\n\nconst FilterSelect = styled.select`\n  width: 100%;\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.white};\n  font-size: 0.9rem;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst RangeSlider = styled.input`\n  width: 100%;\n  height: 6px;\n  border-radius: 3px;\n  background: ${theme.colors.gray200};\n  outline: none;\n  -webkit-appearance: none;\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: ${theme.colors.primary};\n    cursor: pointer;\n  }\n\n  &::-moz-range-thumb {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: ${theme.colors.primary};\n    cursor: pointer;\n    border: none;\n  }\n`;\n\nconst RangeValues = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: ${theme.spacing.sm};\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst StarRating = styled.div`\n  display: flex;\n  gap: 2px;\n  cursor: pointer;\n`;\n\nconst Star = styled(FaStar).withConfig({\n  shouldForwardProp: prop => !['filled', 'hovered'].includes(prop),\n})`\n  color: ${props =>\n    props.filled || props.hovered ? '#fbbf24' : theme.colors.gray300};\n  font-size: 1rem;\n  transition: color 0.2s ease;\n`;\n\nconst ActiveFilters = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.sm};\n  margin-top: ${theme.spacing.md};\n`;\n\nconst ActiveFilter = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.8rem;\n  font-weight: 500;\n`;\n\nconst RemoveFilterButton = styled.button`\n  background: none;\n  border: none;\n  color: ${theme.colors.white};\n  cursor: pointer;\n  padding: 0;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ClearAllButton = styled.button`\n  background: ${theme.colors.white};\n  color: ${theme.colors.primary};\n  border: 2px solid ${theme.colors.primary};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.8rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.primary};\n    color: ${theme.colors.white};\n  }\n`;\n\nconst SearchFilters = ({\n  onFiltersChange,\n  categories = [],\n  brands = [],\n  locations = [],\n  maxPrice = 1000,\n}) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [selectedBrand, setSelectedBrand] = useState('');\n  const [selectedLocation, setSelectedLocation] = useState('');\n  const [priceRange, setPriceRange] = useState([0, maxPrice]);\n  const [minRating, setMinRating] = useState(0);\n  const [availability, setAvailability] = useState('all');\n  const [sortBy, setSortBy] = useState('relevance');\n  const [showAdvanced, setShowAdvanced] = useState(false);\n  const [hoveredStar, setHoveredStar] = useState(0);\n\n  const quickFilters = [\n    { key: 'featured', label: 'Featured', icon: FaStar },\n    { key: 'new', label: 'New Arrivals', icon: FaTag },\n    { key: 'sale', label: 'On Sale', icon: FaTag },\n    { key: 'high_rated', label: 'Top Rated', icon: FaStar },\n  ];\n\n  const [activeQuickFilters, setActiveQuickFilters] = useState(new Set());\n\n  useEffect(() => {\n    const filters = {\n      searchTerm,\n      category: selectedCategory,\n      brand: selectedBrand,\n      location: selectedLocation,\n      priceRange,\n      minRating,\n      availability,\n      sortBy,\n      quickFilters: Array.from(activeQuickFilters),\n    };\n\n    onFiltersChange(filters);\n  }, [\n    searchTerm,\n    selectedCategory,\n    selectedBrand,\n    selectedLocation,\n    priceRange,\n    minRating,\n    availability,\n    sortBy,\n    activeQuickFilters,\n    onFiltersChange,\n  ]);\n\n  const handleQuickFilterToggle = filterKey => {\n    const newFilters = new Set(activeQuickFilters);\n    if (newFilters.has(filterKey)) {\n      newFilters.delete(filterKey);\n    } else {\n      newFilters.add(filterKey);\n    }\n    setActiveQuickFilters(newFilters);\n  };\n\n  const handleStarClick = rating => {\n    setMinRating(rating === minRating ? 0 : rating);\n  };\n\n  const getActiveFilters = () => {\n    const filters = [];\n\n    if (searchTerm) filters.push({ key: 'search', label: `\"${searchTerm}\"` });\n    if (selectedCategory)\n      filters.push({ key: 'category', label: selectedCategory });\n    if (selectedBrand) filters.push({ key: 'brand', label: selectedBrand });\n    if (selectedLocation)\n      filters.push({ key: 'location', label: selectedLocation });\n    if (priceRange[0] > 0 || priceRange[1] < maxPrice) {\n      filters.push({\n        key: 'price',\n        label: `$${priceRange[0]} - $${priceRange[1]}`,\n      });\n    }\n    if (minRating > 0)\n      filters.push({ key: 'rating', label: `${minRating}+ stars` });\n    if (availability !== 'all')\n      filters.push({ key: 'availability', label: availability });\n\n    activeQuickFilters.forEach(filter => {\n      const quickFilter = quickFilters.find(f => f.key === filter);\n      if (quickFilter) filters.push({ key: filter, label: quickFilter.label });\n    });\n\n    return filters;\n  };\n\n  const removeFilter = filterKey => {\n    switch (filterKey) {\n      case 'search':\n        setSearchTerm('');\n        break;\n      case 'category':\n        setSelectedCategory('');\n        break;\n      case 'brand':\n        setSelectedBrand('');\n        break;\n      case 'location':\n        setSelectedLocation('');\n        break;\n      case 'price':\n        setPriceRange([0, maxPrice]);\n        break;\n      case 'rating':\n        setMinRating(0);\n        break;\n      case 'availability':\n        setAvailability('all');\n        break;\n      default:\n        // Handle quick filters\n        const newFilters = new Set(activeQuickFilters);\n        newFilters.delete(filterKey);\n        setActiveQuickFilters(newFilters);\n    }\n  };\n\n  const clearAllFilters = () => {\n    setSearchTerm('');\n    setSelectedCategory('');\n    setSelectedBrand('');\n    setSelectedLocation('');\n    setPriceRange([0, maxPrice]);\n    setMinRating(0);\n    setAvailability('all');\n    setSortBy('relevance');\n    setActiveQuickFilters(new Set());\n  };\n\n  const activeFilters = getActiveFilters();\n\n  return (\n    <FilterContainer>\n      <SearchSection>\n        <SearchWrapper>\n          <SearchIcon>\n            <FaSearch />\n          </SearchIcon>\n          <SearchInput\n            type=\"text\"\n            placeholder=\"Search products, brands, or descriptions...\"\n            value={searchTerm}\n            onChange={e => setSearchTerm(e.target.value)}\n          />\n        </SearchWrapper>\n\n        <QuickFilters>\n          {quickFilters.map(filter => (\n            <QuickFilterButton\n              key={filter.key}\n              active={activeQuickFilters.has(filter.key)}\n              onClick={() => handleQuickFilterToggle(filter.key)}\n            >\n              <filter.icon />\n              {filter.label}\n            </QuickFilterButton>\n          ))}\n        </QuickFilters>\n\n        {activeFilters.length > 0 && (\n          <ActiveFilters>\n            {activeFilters.map((filter, index) => (\n              <ActiveFilter key={index}>\n                {filter.label}\n                <RemoveFilterButton onClick={() => removeFilter(filter.key)}>\n                  <FaTimes />\n                </RemoveFilterButton>\n              </ActiveFilter>\n            ))}\n            <ClearAllButton onClick={clearAllFilters}>Clear All</ClearAllButton>\n          </ActiveFilters>\n        )}\n      </SearchSection>\n\n      <AdvancedFiltersToggle onClick={() => setShowAdvanced(!showAdvanced)}>\n        <span>\n          <FaSlidersH style={{ marginRight: theme.spacing.sm }} />\n          Advanced Filters\n        </span>\n        {showAdvanced ? <FaChevronUp /> : <FaChevronDown />}\n      </AdvancedFiltersToggle>\n\n      <AdvancedFiltersContent expanded={showAdvanced}>\n        <FilterRow>\n          <FilterGroup>\n            <FilterLabel>Category</FilterLabel>\n            <FilterSelect\n              value={selectedCategory}\n              onChange={e => setSelectedCategory(e.target.value)}\n            >\n              <option value=\"\">All Categories</option>\n              {categories.map(category => (\n                <option key={category.slug} value={category.name}>\n                  {category.name}\n                </option>\n              ))}\n            </FilterSelect>\n          </FilterGroup>\n\n          <FilterGroup>\n            <FilterLabel>Brand</FilterLabel>\n            <FilterSelect\n              value={selectedBrand}\n              onChange={e => setSelectedBrand(e.target.value)}\n            >\n              <option value=\"\">All Brands</option>\n              {brands.map(brand => (\n                <option key={brand} value={brand}>\n                  {brand}\n                </option>\n              ))}\n            </FilterSelect>\n          </FilterGroup>\n\n          <FilterGroup>\n            <FilterLabel>Location</FilterLabel>\n            <FilterSelect\n              value={selectedLocation}\n              onChange={e => setSelectedLocation(e.target.value)}\n            >\n              <option value=\"\">All Locations</option>\n              {locations.map(location => (\n                <option key={location} value={location}>\n                  {location}\n                </option>\n              ))}\n            </FilterSelect>\n          </FilterGroup>\n\n          <FilterGroup>\n            <FilterLabel>Sort By</FilterLabel>\n            <FilterSelect\n              value={sortBy}\n              onChange={e => setSortBy(e.target.value)}\n            >\n              <option value=\"relevance\">Relevance</option>\n              <option value=\"price_low\">Price: Low to High</option>\n              <option value=\"price_high\">Price: High to Low</option>\n              <option value=\"rating\">Highest Rated</option>\n              <option value=\"newest\">Newest First</option>\n              <option value=\"popular\">Most Popular</option>\n            </FilterSelect>\n          </FilterGroup>\n        </FilterRow>\n\n        <FilterRow>\n          <FilterGroup>\n            <FilterLabel>Price Range</FilterLabel>\n            <RangeSlider\n              type=\"range\"\n              min=\"0\"\n              max={maxPrice}\n              value={priceRange[1]}\n              onChange={e =>\n                setPriceRange([priceRange[0], parseInt(e.target.value)])\n              }\n            />\n            <RangeValues>\n              <span>${priceRange[0]}</span>\n              <span>${priceRange[1]}</span>\n            </RangeValues>\n          </FilterGroup>\n\n          <FilterGroup>\n            <FilterLabel>Minimum Rating</FilterLabel>\n            <StarRating>\n              {[1, 2, 3, 4, 5].map(star => (\n                <Star\n                  key={star}\n                  filled={star <= minRating}\n                  hovered={star <= hoveredStar}\n                  onClick={() => handleStarClick(star)}\n                  onMouseEnter={() => setHoveredStar(star)}\n                  onMouseLeave={() => setHoveredStar(0)}\n                />\n              ))}\n            </StarRating>\n          </FilterGroup>\n\n          <FilterGroup>\n            <FilterLabel>Availability</FilterLabel>\n            <FilterSelect\n              value={availability}\n              onChange={e => setAvailability(e.target.value)}\n            >\n              <option value=\"all\">All Products</option>\n              <option value=\"in_stock\">In Stock</option>\n              <option value=\"out_of_stock\">Out of Stock</option>\n            </FilterSelect>\n          </FilterGroup>\n        </FilterRow>\n      </AdvancedFiltersContent>\n    </FilterContainer>\n  );\n};\n\nexport default SearchFilters;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/SellerSidebar.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaHome,\n  FaBox,\n  FaPlus,\n  FaShoppingCart,\n  FaEnvelope,\n  FaChartLine,\n  FaStore,\n  FaUser,\n  FaTags,\n  FaPercent,\n  FaCog,\n  FaUsers,\n  FaFileImport,\n  FaPalette,\n  FaBars,\n  FaTimes,\n} from 'react-icons/fa';\nimport { theme, media } from '../../styles/GlobalStyle';\n\nconst SidebarContainer = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 280px;\n  height: 100vh;\n  background: ${theme.colors.white};\n  border-right: 1px solid ${theme.colors.gray200};\n  box-shadow: ${theme.shadows.sm};\n  z-index: 1000;\n  overflow-y: auto;\n  transition: transform 0.3s ease;\n\n  ${media.tabletDown} {\n    width: 260px;\n    transform: translateX(${props => (props.isOpen ? '0' : '-100%')});\n    z-index: 1001;\n  }\n\n  ${media.mobile} {\n    width: 240px;\n  }\n\n  /* Custom scrollbar */\n  &::-webkit-scrollbar {\n    width: 0.25rem;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: ${theme.colors.gray100};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: ${theme.colors.gray300};\n    border-radius: ${theme.borderRadius.sm};\n  }\n`;\n\nconst SidebarHeader = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n\n  ${media.mobile} {\n    padding: ${theme.spacing.lg};\n  }\n`;\n\nconst StoreBranding = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.lg};\n\n  ${media.mobile} {\n    gap: ${theme.spacing.sm};\n    margin-bottom: ${theme.spacing.md};\n  }\n`;\n\nconst StoreLogo = styled.div`\n  width: 50px;\n  height: 50px;\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary},\n    ${theme.colors.secondary}\n  );\n  border-radius: ${theme.borderRadius.lg};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.white};\n  font-size: 1.5rem;\n  font-weight: 600;\n\n  ${media.mobile} {\n    width: 40px;\n    height: 40px;\n    font-size: 1.25rem;\n  }\n`;\n\nconst StoreInfo = styled.div`\n  flex: 1;\n`;\n\nconst StoreName = styled.h2`\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n\n  ${media.mobile} {\n    font-size: 1rem;\n  }\n`;\n\nconst StoreType = styled.p`\n  font-size: 0.85rem;\n  color: ${theme.colors.gray600};\n  margin: 0;\n\n  ${media.mobile} {\n    font-size: 0.8rem;\n  }\n`;\n\nconst SellerProfile = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.md};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n\n  ${media.mobile} {\n    padding: ${theme.spacing.sm};\n    gap: ${theme.spacing.xs};\n  }\n`;\n\nconst ProfileAvatar = styled.div`\n  width: 32px;\n  height: 32px;\n  background: ${theme.colors.primary};\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.white};\n  font-size: 0.9rem;\n\n  ${media.mobile} {\n    width: 28px;\n    height: 28px;\n    font-size: 0.8rem;\n  }\n`;\n\nconst ProfileInfo = styled.div`\n  flex: 1;\n`;\n\nconst ProfileName = styled.p`\n  font-size: 0.9rem;\n  font-weight: 500;\n  color: ${theme.colors.gray900};\n  margin: 0;\n\n  ${media.mobile} {\n    font-size: 0.85rem;\n  }\n`;\n\nconst ProfileRole = styled.p`\n  font-size: 0.75rem;\n  color: ${theme.colors.gray600};\n  margin: 0;\n\n  ${media.mobile} {\n    font-size: 0.7rem;\n  }\n`;\n\nconst Navigation = styled.nav`\n  padding: ${theme.spacing.lg} 0;\n\n  ${media.mobile} {\n    padding: ${theme.spacing.md} 0;\n  }\n`;\n\nconst NavSection = styled.div`\n  margin-bottom: ${theme.spacing.lg};\n\n  ${media.mobile} {\n    margin-bottom: ${theme.spacing.md};\n  }\n`;\n\nconst NavSectionTitle = styled.h3`\n  font-size: 0.75rem;\n  font-weight: 600;\n  color: ${theme.colors.gray500};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  margin: 0 0 ${theme.spacing.md} 0;\n  padding: 0 ${theme.spacing.xl};\n\n  ${media.mobile} {\n    padding: 0 ${theme.spacing.lg};\n    font-size: 0.7rem;\n    margin-bottom: ${theme.spacing.sm};\n  }\n`;\n\nconst NavItem = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  background: ${props =>\n    props.active ? theme.colors.primary + '10' : 'transparent'};\n  border: none;\n  border-left: 3px solid\n    ${props => (props.active ? theme.colors.primary : 'transparent')};\n  color: ${props =>\n    props.active ? theme.colors.primary : theme.colors.gray700};\n  font-size: 0.95rem;\n  font-weight: ${props => (props.active ? '600' : '500')};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  text-align: left;\n\n  &:hover {\n    background: ${props =>\n      props.active ? theme.colors.primary + '10' : theme.colors.gray50};\n    color: ${props =>\n      props.active ? theme.colors.primary : theme.colors.gray900};\n  }\n\n  svg {\n    font-size: 1.1rem;\n    opacity: ${props => (props.active ? '1' : '0.7')};\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.sm} ${theme.spacing.lg};\n    gap: ${theme.spacing.sm};\n    font-size: 0.875rem;\n\n    svg {\n      font-size: 1rem;\n    }\n  }\n`;\n\nconst SidebarFooter = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: ${theme.spacing.lg} ${theme.spacing.xl};\n  border-top: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.white};\n\n  ${media.mobile} {\n    padding: ${theme.spacing.md} ${theme.spacing.lg};\n  }\n`;\n\nconst UpgradeCard = styled.div`\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary},\n    ${theme.colors.secondary}\n  );\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  color: ${theme.colors.white};\n  text-align: center;\n\n  ${media.mobile} {\n    padding: ${theme.spacing.md};\n  }\n`;\n\nconst UpgradeTitle = styled.h4`\n  font-size: 0.9rem;\n  font-weight: 600;\n  margin: 0 0 ${theme.spacing.sm} 0;\n\n  ${media.mobile} {\n    font-size: 0.85rem;\n  }\n`;\n\nconst UpgradeText = styled.p`\n  font-size: 0.8rem;\n  opacity: 0.9;\n  margin: 0 0 ${theme.spacing.md} 0;\n\n  ${media.mobile} {\n    font-size: 0.75rem;\n    margin-bottom: ${theme.spacing.sm};\n  }\n`;\n\nconst UpgradeButton = styled.button`\n  background: ${theme.colors.white};\n  color: ${theme.colors.primary};\n  border: none;\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.8rem;\n  font-weight: 600;\n  cursor: pointer;\n  width: 100%;\n  transition: all 0.2s ease;\n\n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.xs} ${theme.spacing.sm};\n    font-size: 0.75rem;\n\n    &:hover {\n      transform: none;\n    }\n  }\n`;\n\nconst MobileToggle = styled.button`\n  position: fixed;\n  top: ${theme.spacing.lg};\n  left: ${theme.spacing.lg};\n  z-index: 1002;\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.md};\n  padding: ${theme.spacing.sm};\n  color: ${theme.colors.gray700};\n  cursor: pointer;\n  box-shadow: ${theme.shadows.md};\n  display: none;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray50};\n    color: ${theme.colors.primary};\n  }\n\n  ${media.tabletDown} {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  ${media.mobile} {\n    top: ${theme.spacing.md};\n    left: ${theme.spacing.md};\n    padding: ${theme.spacing.xs};\n  }\n\n  svg {\n    font-size: 1rem;\n\n    ${media.mobile} {\n      font-size: 0.875rem;\n    }\n  }\n`;\n\nconst Overlay = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 1000;\n  display: none;\n  opacity: ${props => (props.isOpen ? '1' : '0')};\n  visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n  transition: all 0.3s ease;\n\n  ${media.tabletDown} {\n    display: block;\n  }\n`;\n\nconst SellerSidebar = ({ activeTab, onTabChange }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleSidebar = () => setIsOpen(!isOpen);\n  const closeSidebar = () => setIsOpen(false);\n\n  const handleTabChange = tabId => {\n    onTabChange(tabId);\n    closeSidebar();\n  };\n  const navItems = [\n    {\n      section: 'Overview',\n      items: [{ id: 'dashboard', label: 'Dashboard', icon: FaHome }],\n    },\n    {\n      section: 'Catalog',\n      items: [\n        { id: 'products', label: 'Products', icon: FaBox },\n        { id: 'add-product', label: 'Add Product', icon: FaPlus },\n        { id: 'categories', label: 'Categories', icon: FaTags },\n        { id: 'bulk-import', label: 'Bulk Import', icon: FaFileImport },\n      ],\n    },\n    {\n      section: 'Sales',\n      items: [\n        { id: 'orders', label: 'Orders', icon: FaShoppingCart },\n        { id: 'enquiries', label: 'Enquiries', icon: FaEnvelope },\n        { id: 'discounts', label: 'Discounts & Coupons', icon: FaPercent },\n      ],\n    },\n    {\n      section: 'Customers',\n      items: [{ id: 'customers', label: 'Customer List', icon: FaUsers }],\n    },\n    {\n      section: 'Store Management',\n      items: [\n        { id: 'store-settings', label: 'Store Settings', icon: FaCog },\n        { id: 'appearance', label: 'Appearance', icon: FaPalette },\n        { id: 'analytics', label: 'Analytics', icon: FaChartLine },\n      ],\n    },\n  ];\n\n  return (\n    <>\n      <MobileToggle onClick={toggleSidebar}>\n        {isOpen ? <FaTimes /> : <FaBars />}\n      </MobileToggle>\n\n      <Overlay isOpen={isOpen} onClick={closeSidebar} />\n\n      <SidebarContainer isOpen={isOpen}>\n        <SidebarHeader>\n          <StoreBranding>\n            <StoreLogo>\n              <FaStore />\n            </StoreLogo>\n            <StoreInfo>\n              <StoreName>My Store</StoreName>\n              <StoreType>Premium Seller</StoreType>\n            </StoreInfo>\n          </StoreBranding>\n\n          <SellerProfile>\n            <ProfileAvatar>\n              <FaUser />\n            </ProfileAvatar>\n            <ProfileInfo>\n              <ProfileName>John Doe</ProfileName>\n              <ProfileRole>Store Owner</ProfileRole>\n            </ProfileInfo>\n          </SellerProfile>\n        </SidebarHeader>\n\n        <Navigation>\n          {navItems.map((section, sectionIndex) => (\n            <NavSection key={sectionIndex}>\n              <NavSectionTitle>{section.section}</NavSectionTitle>\n              {section.items.map(item => (\n                <NavItem\n                  key={item.id}\n                  active={activeTab === item.id}\n                  onClick={() => handleTabChange(item.id)}\n                >\n                  <item.icon />\n                  {item.label}\n                </NavItem>\n              ))}\n            </NavSection>\n          ))}\n        </Navigation>\n\n        <SidebarFooter>\n          <UpgradeCard>\n            <UpgradeTitle>Upgrade to Pro</UpgradeTitle>\n            <UpgradeText>\n              Get advanced analytics and unlimited products\n            </UpgradeText>\n            <UpgradeButton>Upgrade Now</UpgradeButton>\n          </UpgradeCard>\n        </SidebarFooter>\n      </SidebarContainer>\n    </>\n  );\n};\n\nexport default SellerSidebar;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/ShopSettingsTab.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":472,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":472,"endColumn":44},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":474,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":474,"endColumn":58}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaStore,\n  FaUser,\n  FaPhone,\n  FaEnvelope,\n  FaMapMarkerAlt,\n  FaGlobe,\n  FaClock,\n  FaSave,\n  FaEdit,\n  FaUpload,\n  FaCamera,\n  FaBell,\n  FaToggleOn,\n  FaToggleOff,\n  FaShieldAlt,\n  FaTimes,\n  FaExclamationTriangle,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.xl};\n`;\n\nconst SettingsSection = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  overflow: hidden;\n`;\n\nconst SectionHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.gray50};\n`;\n\nconst SectionIcon = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n  background: ${theme.colors.primary}20;\n  border-radius: ${theme.borderRadius.md};\n  color: ${theme.colors.primary};\n  font-size: 1.2rem;\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 1.3rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0;\n`;\n\nconst SectionSubtitle = styled.p`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n  margin: ${theme.spacing.xs} 0 0 0;\n`;\n\nconst SectionContent = styled.div`\n  padding: ${theme.spacing.xl};\n`;\n\nconst FormGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n`;\n\nconst Label = styled.label`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  font-size: 0.9rem;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst Input = styled.input`\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray400};\n  }\n\n  &:disabled {\n    background: ${theme.colors.gray100};\n    cursor: not-allowed;\n  }\n`;\n\nconst TextArea = styled.textarea`\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  min-height: 100px;\n  resize: vertical;\n  font-family: inherit;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray400};\n  }\n`;\n\nconst Select = styled.select`\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  background: ${theme.colors.white};\n  cursor: pointer;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst ImageUploadSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.md};\n`;\n\nconst ImagePreview = styled.div`\n  display: flex;\n  gap: ${theme.spacing.lg};\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n`;\n\nconst Image = styled.img`\n  width: 120px;\n  height: 120px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.md};\n  border: 2px solid ${theme.colors.gray200};\n`;\n\nconst ImagePlaceholder = styled.div`\n  width: 120px;\n  height: 120px;\n  background: ${theme.colors.gray100};\n  border: 2px dashed ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.md};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.gray500};\n  font-size: 2rem;\n`;\n\nconst UploadButton = styled.label`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  font-weight: 500;\n  transition: all 0.2s ease;\n  width: fit-content;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n  }\n\n  input {\n    display: none;\n  }\n`;\n\nconst ToggleSwitch = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'enabled',\n})`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  cursor: pointer;\n\n  .toggle-icon {\n    font-size: 1.5rem;\n    color: ${props =>\n      props.enabled ? theme.colors.success : theme.colors.gray400};\n    transition: color 0.2s ease;\n  }\n\n  .toggle-label {\n    font-weight: 500;\n    color: ${theme.colors.gray700};\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  justify-content: flex-end;\n  margin-top: ${theme.spacing.xl};\n  padding-top: ${theme.spacing.lg};\n  border-top: 1px solid ${theme.colors.gray200};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n  }\n`;\n\nconst Button = styled.button`\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst PrimaryButton = styled(Button)`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  border: 2px solid ${theme.colors.primary};\n\n  &:hover:not(:disabled) {\n    background: ${theme.colors.primaryDark};\n    border-color: ${theme.colors.primaryDark};\n  }\n`;\n\nconst SecondaryButton = styled(Button)`\n  background: ${theme.colors.white};\n  color: ${theme.colors.gray700};\n  border: 2px solid ${theme.colors.gray200};\n\n  &:hover:not(:disabled) {\n    background: ${theme.colors.gray50};\n    border-color: ${theme.colors.gray300};\n  }\n`;\n\nconst HoursContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.md};\n`;\n\nconst DayRow = styled.div`\n  display: grid;\n  grid-template-columns: 120px 1fr 1fr auto;\n  gap: ${theme.spacing.md};\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.sm};\n    padding: ${theme.spacing.sm};\n    background: ${theme.colors.gray50};\n    border-radius: ${theme.borderRadius.sm};\n  }\n`;\n\nconst DayLabel = styled.span`\n  font-weight: 500;\n  color: ${theme.colors.gray700};\n`;\n\nconst TimeInput = styled(Input)`\n  padding: ${theme.spacing.sm};\n`;\n\nconst AlertBox = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'type',\n})`\n  padding: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.lg};\n\n  ${props => {\n    switch (props.type) {\n      case 'warning':\n        return `\n          background: ${theme.colors.warning}20;\n          border: 1px solid ${theme.colors.warning}40;\n          color: ${theme.colors.warning};\n        `;\n      case 'error':\n        return `\n          background: ${theme.colors.error}20;\n          border: 1px solid ${theme.colors.error}40;\n          color: ${theme.colors.error};\n        `;\n      default:\n        return `\n          background: ${theme.colors.info}20;\n          border: 1px solid ${theme.colors.info}40;\n          color: ${theme.colors.info};\n        `;\n    }\n  }}\n`;\n\nconst ShopSettingsTab = () => {\n  const [settings, setSettings] = useState({\n    // Basic Info\n    shopName: 'TechMart Downtown',\n    description:\n      'Your one-stop destination for the latest electronics and gadgets.',\n    category: 'Electronics',\n    logo: null,\n    banner: null,\n\n    // Contact Info\n    ownerName: 'John Doe',\n    email: 'john@techmart.com',\n    phone: '+1 (555) 123-4567',\n    website: 'https://techmart.com',\n\n    // Address\n    address: '123 Main Street',\n    city: 'Downtown',\n    state: 'CA',\n    zipCode: '90210',\n    country: 'United States',\n\n    // Business Hours\n    businessHours: {\n      monday: { open: '09:00', close: '18:00', closed: false },\n      tuesday: { open: '09:00', close: '18:00', closed: false },\n      wednesday: { open: '09:00', close: '18:00', closed: false },\n      thursday: { open: '09:00', close: '18:00', closed: false },\n      friday: { open: '09:00', close: '18:00', closed: false },\n      saturday: { open: '10:00', close: '16:00', closed: false },\n      sunday: { open: '12:00', close: '16:00', closed: false },\n    },\n\n    // Notification Settings\n    notifications: {\n      newEnquiries: true,\n      orderUpdates: true,\n      emailNotifications: true,\n      smsNotifications: false,\n      weeklyReports: true,\n    },\n\n    // Shop Settings\n    autoRespond: true,\n    showLocation: true,\n    allowReviews: true,\n    requireApproval: false,\n  });\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n\n  useEffect(() => {\n    // Load settings from localStorage or API\n    const savedSettings = localStorage.getItem('shopSettings');\n    if (savedSettings) {\n      setSettings(prev => ({ ...prev, ...JSON.parse(savedSettings) }));\n    }\n  }, []);\n\n  const handleInputChange = (field, value) => {\n    setSettings(prev => ({\n      ...prev,\n      [field]: value,\n    }));\n  };\n\n  const handleNestedChange = (section, field, value) => {\n    setSettings(prev => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [field]: value,\n      },\n    }));\n  };\n\n  const handleHoursChange = (day, field, value) => {\n    setSettings(prev => ({\n      ...prev,\n      businessHours: {\n        ...prev.businessHours,\n        [day]: {\n          ...prev.businessHours[day],\n          [field]: value,\n        },\n      },\n    }));\n  };\n\n  const handleImageUpload = (field, file) => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        setSettings(prev => ({\n          ...prev,\n          [field]: e.target.result,\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleSave = async () => {\n    setIsSaving(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1500));\n\n      // Save to localStorage (in real app, this would be API call)\n      localStorage.setItem('shopSettings', JSON.stringify(settings));\n\n      setIsEditing(false);\n      alert('Settings saved successfully!');\n    } catch (error) {\n      alert('Failed to save settings. Please try again.');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n    // Reload settings from localStorage\n    const savedSettings = localStorage.getItem('shopSettings');\n    if (savedSettings) {\n      setSettings({ ...settings, ...JSON.parse(savedSettings) });\n    }\n  };\n\n  const days = [\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n    'sunday',\n  ];\n\n  const categories = [\n    'Electronics',\n    'Fashion',\n    'Home & Garden',\n    'Sports',\n    'Books',\n    'Automotive',\n    'Health & Beauty',\n    'Food & Beverages',\n  ];\n\n  return (\n    <Container>\n      <SettingsSection>\n        <SectionHeader>\n          <SectionIcon>\n            <FaStore />\n          </SectionIcon>\n          <div>\n            <SectionTitle>Basic Information</SectionTitle>\n            <SectionSubtitle>\n              Manage your shop's basic details and branding\n            </SectionSubtitle>\n          </div>\n        </SectionHeader>\n\n        <SectionContent>\n          <ImageUploadSection>\n            <Label>Shop Logo & Banner</Label>\n            <ImagePreview>\n              <div>\n                <Label>Logo</Label>\n                <ImageContainer>\n                  {settings.logo ? (\n                    <Image src={settings.logo} alt=\"Shop Logo\" />\n                  ) : (\n                    <ImagePlaceholder>\n                      <FaCamera />\n                    </ImagePlaceholder>\n                  )}\n                </ImageContainer>\n                <UploadButton>\n                  <FaUpload />\n                  Upload Logo\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={e => handleImageUpload('logo', e.target.files[0])}\n                    disabled={!isEditing}\n                  />\n                </UploadButton>\n              </div>\n\n              <div>\n                <Label>Banner</Label>\n                <ImageContainer>\n                  {settings.banner ? (\n                    <Image\n                      src={settings.banner}\n                      alt=\"Shop Banner\"\n                      style={{ width: '240px', height: '120px' }}\n                    />\n                  ) : (\n                    <ImagePlaceholder\n                      style={{ width: '240px', height: '120px' }}\n                    >\n                      <FaCamera />\n                    </ImagePlaceholder>\n                  )}\n                </ImageContainer>\n                <UploadButton>\n                  <FaUpload />\n                  Upload Banner\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={e =>\n                      handleImageUpload('banner', e.target.files[0])\n                    }\n                    disabled={!isEditing}\n                  />\n                </UploadButton>\n              </div>\n            </ImagePreview>\n          </ImageUploadSection>\n\n          <FormGrid>\n            <FormGroup>\n              <Label>\n                <FaStore />\n                Shop Name\n              </Label>\n              <Input\n                type=\"text\"\n                value={settings.shopName}\n                onChange={e => handleInputChange('shopName', e.target.value)}\n                disabled={!isEditing}\n                placeholder=\"Enter your shop name\"\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>Category</Label>\n              <Select\n                value={settings.category}\n                onChange={e => handleInputChange('category', e.target.value)}\n                disabled={!isEditing}\n              >\n                {categories.map(category => (\n                  <option key={category} value={category}>\n                    {category}\n                  </option>\n                ))}\n              </Select>\n            </FormGroup>\n\n            <FormGroup style={{ gridColumn: '1 / -1' }}>\n              <Label>Description</Label>\n              <TextArea\n                value={settings.description}\n                onChange={e => handleInputChange('description', e.target.value)}\n                disabled={!isEditing}\n                placeholder=\"Describe your shop and what you offer\"\n              />\n            </FormGroup>\n          </FormGrid>\n        </SectionContent>\n      </SettingsSection>\n\n      <SettingsSection>\n        <SectionHeader>\n          <SectionIcon>\n            <FaUser />\n          </SectionIcon>\n          <div>\n            <SectionTitle>Contact Information</SectionTitle>\n            <SectionSubtitle>\n              Your contact details for customers\n            </SectionSubtitle>\n          </div>\n        </SectionHeader>\n\n        <SectionContent>\n          <FormGrid>\n            <FormGroup>\n              <Label>\n                <FaUser />\n                Owner Name\n              </Label>\n              <Input\n                type=\"text\"\n                value={settings.ownerName}\n                onChange={e => handleInputChange('ownerName', e.target.value)}\n                disabled={!isEditing}\n                placeholder=\"Your full name\"\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>\n                <FaEnvelope />\n                Email Address\n              </Label>\n              <Input\n                type=\"email\"\n                value={settings.email}\n                onChange={e => handleInputChange('email', e.target.value)}\n                disabled={!isEditing}\n                placeholder=\"your@email.com\"\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>\n                <FaPhone />\n                Phone Number\n              </Label>\n              <Input\n                type=\"tel\"\n                value={settings.phone}\n                onChange={e => handleInputChange('phone', e.target.value)}\n                disabled={!isEditing}\n                placeholder=\"+1 (555) 123-4567\"\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>\n                <FaGlobe />\n                Website (Optional)\n              </Label>\n              <Input\n                type=\"url\"\n                value={settings.website}\n                onChange={e => handleInputChange('website', e.target.value)}\n                disabled={!isEditing}\n                placeholder=\"https://yourwebsite.com\"\n              />\n            </FormGroup>\n          </FormGrid>\n        </SectionContent>\n      </SettingsSection>\n\n      <SettingsSection>\n        <SectionHeader>\n          <SectionIcon>\n            <FaMapMarkerAlt />\n          </SectionIcon>\n          <div>\n            <SectionTitle>Address</SectionTitle>\n            <SectionSubtitle>Your business location</SectionSubtitle>\n          </div>\n        </SectionHeader>\n\n        <SectionContent>\n          <FormGrid>\n            <FormGroup style={{ gridColumn: '1 / -1' }}>\n              <Label>Street Address</Label>\n              <Input\n                type=\"text\"\n                value={settings.address}\n                onChange={e => handleInputChange('address', e.target.value)}\n                disabled={!isEditing}\n                placeholder=\"123 Main Street\"\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>City</Label>\n              <Input\n                type=\"text\"\n                value={settings.city}\n                onChange={e => handleInputChange('city', e.target.value)}\n                disabled={!isEditing}\n                placeholder=\"City name\"\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>State/Province</Label>\n              <Input\n                type=\"text\"\n                value={settings.state}\n                onChange={e => handleInputChange('state', e.target.value)}\n                disabled={!isEditing}\n                placeholder=\"State or Province\"\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>ZIP/Postal Code</Label>\n              <Input\n                type=\"text\"\n                value={settings.zipCode}\n                onChange={e => handleInputChange('zipCode', e.target.value)}\n                disabled={!isEditing}\n                placeholder=\"12345\"\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>Country</Label>\n              <Input\n                type=\"text\"\n                value={settings.country}\n                onChange={e => handleInputChange('country', e.target.value)}\n                disabled={!isEditing}\n                placeholder=\"Country\"\n              />\n            </FormGroup>\n          </FormGrid>\n        </SectionContent>\n      </SettingsSection>\n\n      <SettingsSection>\n        <SectionHeader>\n          <SectionIcon>\n            <FaClock />\n          </SectionIcon>\n          <div>\n            <SectionTitle>Business Hours</SectionTitle>\n            <SectionSubtitle>\n              Set your operating hours for each day\n            </SectionSubtitle>\n          </div>\n        </SectionHeader>\n\n        <SectionContent>\n          <HoursContainer>\n            {days.map(day => (\n              <DayRow key={day}>\n                <DayLabel>\n                  {day.charAt(0).toUpperCase() + day.slice(1)}\n                </DayLabel>\n                <TimeInput\n                  type=\"time\"\n                  value={settings.businessHours[day].open}\n                  onChange={e => handleHoursChange(day, 'open', e.target.value)}\n                  disabled={!isEditing || settings.businessHours[day].closed}\n                />\n                <TimeInput\n                  type=\"time\"\n                  value={settings.businessHours[day].close}\n                  onChange={e =>\n                    handleHoursChange(day, 'close', e.target.value)\n                  }\n                  disabled={!isEditing || settings.businessHours[day].closed}\n                />\n                <ToggleSwitch\n                  enabled={!settings.businessHours[day].closed}\n                  onClick={() =>\n                    isEditing &&\n                    handleHoursChange(\n                      day,\n                      'closed',\n                      !settings.businessHours[day].closed\n                    )\n                  }\n                >\n                  {settings.businessHours[day].closed ? (\n                    <FaToggleOff className=\"toggle-icon\" />\n                  ) : (\n                    <FaToggleOn className=\"toggle-icon\" />\n                  )}\n                  <span className=\"toggle-label\">\n                    {settings.businessHours[day].closed ? 'Closed' : 'Open'}\n                  </span>\n                </ToggleSwitch>\n              </DayRow>\n            ))}\n          </HoursContainer>\n        </SectionContent>\n      </SettingsSection>\n\n      <SettingsSection>\n        <SectionHeader>\n          <SectionIcon>\n            <FaBell />\n          </SectionIcon>\n          <div>\n            <SectionTitle>Notification Preferences</SectionTitle>\n            <SectionSubtitle>Manage how you receive updates</SectionSubtitle>\n          </div>\n        </SectionHeader>\n\n        <SectionContent>\n          <FormGrid>\n            <FormGroup>\n              <ToggleSwitch\n                enabled={settings.notifications.newEnquiries}\n                onClick={() =>\n                  isEditing &&\n                  handleNestedChange(\n                    'notifications',\n                    'newEnquiries',\n                    !settings.notifications.newEnquiries\n                  )\n                }\n              >\n                {settings.notifications.newEnquiries ? (\n                  <FaToggleOn className=\"toggle-icon\" />\n                ) : (\n                  <FaToggleOff className=\"toggle-icon\" />\n                )}\n                <span className=\"toggle-label\">New Enquiry Notifications</span>\n              </ToggleSwitch>\n            </FormGroup>\n\n            <FormGroup>\n              <ToggleSwitch\n                enabled={settings.notifications.emailNotifications}\n                onClick={() =>\n                  isEditing &&\n                  handleNestedChange(\n                    'notifications',\n                    'emailNotifications',\n                    !settings.notifications.emailNotifications\n                  )\n                }\n              >\n                {settings.notifications.emailNotifications ? (\n                  <FaToggleOn className=\"toggle-icon\" />\n                ) : (\n                  <FaToggleOff className=\"toggle-icon\" />\n                )}\n                <span className=\"toggle-label\">Email Notifications</span>\n              </ToggleSwitch>\n            </FormGroup>\n\n            <FormGroup>\n              <ToggleSwitch\n                enabled={settings.notifications.smsNotifications}\n                onClick={() =>\n                  isEditing &&\n                  handleNestedChange(\n                    'notifications',\n                    'smsNotifications',\n                    !settings.notifications.smsNotifications\n                  )\n                }\n              >\n                {settings.notifications.smsNotifications ? (\n                  <FaToggleOn className=\"toggle-icon\" />\n                ) : (\n                  <FaToggleOff className=\"toggle-icon\" />\n                )}\n                <span className=\"toggle-label\">SMS Notifications</span>\n              </ToggleSwitch>\n            </FormGroup>\n\n            <FormGroup>\n              <ToggleSwitch\n                enabled={settings.notifications.weeklyReports}\n                onClick={() =>\n                  isEditing &&\n                  handleNestedChange(\n                    'notifications',\n                    'weeklyReports',\n                    !settings.notifications.weeklyReports\n                  )\n                }\n              >\n                {settings.notifications.weeklyReports ? (\n                  <FaToggleOn className=\"toggle-icon\" />\n                ) : (\n                  <FaToggleOff className=\"toggle-icon\" />\n                )}\n                <span className=\"toggle-label\">Weekly Reports</span>\n              </ToggleSwitch>\n            </FormGroup>\n          </FormGrid>\n        </SectionContent>\n      </SettingsSection>\n\n      <SettingsSection>\n        <SectionHeader>\n          <SectionIcon>\n            <FaShieldAlt />\n          </SectionIcon>\n          <div>\n            <SectionTitle>Privacy & Security</SectionTitle>\n            <SectionSubtitle>\n              Control your shop's privacy settings\n            </SectionSubtitle>\n          </div>\n        </SectionHeader>\n\n        <SectionContent>\n          <AlertBox type=\"warning\">\n            <FaExclamationTriangle />\n            <span>\n              Changes to privacy settings will affect how customers can interact\n              with your shop.\n            </span>\n          </AlertBox>\n\n          <FormGrid>\n            <FormGroup>\n              <ToggleSwitch\n                enabled={settings.showLocation}\n                onClick={() =>\n                  isEditing &&\n                  handleInputChange('showLocation', !settings.showLocation)\n                }\n              >\n                {settings.showLocation ? (\n                  <FaToggleOn className=\"toggle-icon\" />\n                ) : (\n                  <FaToggleOff className=\"toggle-icon\" />\n                )}\n                <span className=\"toggle-label\">Show Location to Customers</span>\n              </ToggleSwitch>\n            </FormGroup>\n\n            <FormGroup>\n              <ToggleSwitch\n                enabled={settings.allowReviews}\n                onClick={() =>\n                  isEditing &&\n                  handleInputChange('allowReviews', !settings.allowReviews)\n                }\n              >\n                {settings.allowReviews ? (\n                  <FaToggleOn className=\"toggle-icon\" />\n                ) : (\n                  <FaToggleOff className=\"toggle-icon\" />\n                )}\n                <span className=\"toggle-label\">Allow Customer Reviews</span>\n              </ToggleSwitch>\n            </FormGroup>\n\n            <FormGroup>\n              <ToggleSwitch\n                enabled={settings.autoRespond}\n                onClick={() =>\n                  isEditing &&\n                  handleInputChange('autoRespond', !settings.autoRespond)\n                }\n              >\n                {settings.autoRespond ? (\n                  <FaToggleOn className=\"toggle-icon\" />\n                ) : (\n                  <FaToggleOff className=\"toggle-icon\" />\n                )}\n                <span className=\"toggle-label\">Auto-respond to Enquiries</span>\n              </ToggleSwitch>\n            </FormGroup>\n\n            <FormGroup>\n              <ToggleSwitch\n                enabled={settings.requireApproval}\n                onClick={() =>\n                  isEditing &&\n                  handleInputChange(\n                    'requireApproval',\n                    !settings.requireApproval\n                  )\n                }\n              >\n                {settings.requireApproval ? (\n                  <FaToggleOn className=\"toggle-icon\" />\n                ) : (\n                  <FaToggleOff className=\"toggle-icon\" />\n                )}\n                <span className=\"toggle-label\">\n                  Require Admin Approval for Products\n                </span>\n              </ToggleSwitch>\n            </FormGroup>\n          </FormGrid>\n        </SectionContent>\n      </SettingsSection>\n\n      <ButtonGroup>\n        {isEditing ? (\n          <>\n            <SecondaryButton onClick={handleCancel}>\n              <FaTimes />\n              Cancel\n            </SecondaryButton>\n            <PrimaryButton onClick={handleSave} disabled={isSaving}>\n              <FaSave />\n              {isSaving ? 'Saving...' : 'Save Changes'}\n            </PrimaryButton>\n          </>\n        ) : (\n          <PrimaryButton onClick={() => setIsEditing(true)}>\n            <FaEdit />\n            Edit Settings\n          </PrimaryButton>\n        )}\n      </ButtonGroup>\n    </Container>\n  );\n};\n\nexport default ShopSettingsTab;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/shared/FormField.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport styled from 'styled-components';\nimport { theme, media } from '../../../styles/GlobalStyle';\n\nconst FieldContainer = styled.div`\n  margin-bottom: ${theme.spacing.lg};\n\n  ${media.mobile} {\n    margin-bottom: ${theme.spacing.md};\n  }\n`;\n\nconst Label = styled.label`\n  display: block;\n  font-size: 0.9rem;\n  font-weight: 500;\n  color: ${theme.colors.gray700};\n  margin-bottom: ${theme.spacing.sm};\n\n  ${media.mobile} {\n    font-size: 0.85rem;\n    margin-bottom: ${theme.spacing.xs};\n  }\n`;\n\nconst RequiredMark = styled.span`\n  color: ${theme.colors.error};\n  margin-left: ${theme.spacing.xs};\n`;\n\nconst Input = styled.input.withConfig({\n  shouldForwardProp: prop => prop !== 'hasError',\n})`\n  width: 100%;\n  padding: ${theme.spacing.md};\n  border: 1px solid\n    ${props => (props.hasError ? theme.colors.error : theme.colors.gray300)};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n  background: ${theme.colors.white};\n  transition: all 0.2s ease;\n  min-height: 2.75rem;\n\n  &:focus {\n    outline: none;\n    border-color: ${props =>\n      props.hasError ? theme.colors.error : theme.colors.primary};\n    box-shadow: 0 0 0 3px\n      ${props =>\n        props.hasError\n          ? theme.colors.error + '20'\n          : theme.colors.primary + '20'};\n  }\n\n  &:disabled {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.gray500};\n    cursor: not-allowed;\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.sm} ${theme.spacing.md};\n    font-size: 1rem;\n    min-height: 2.5rem;\n  }\n\n  ${media.tablet} {\n    font-size: 0.9rem;\n  }\n`;\n\nconst Textarea = styled.textarea.withConfig({\n  shouldForwardProp: prop => prop !== 'hasError',\n})`\n  width: 100%;\n  padding: ${theme.spacing.md};\n  border: 1px solid\n    ${props => (props.hasError ? theme.colors.error : theme.colors.gray300)};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n  background: ${theme.colors.white};\n  min-height: 100px;\n  resize: vertical;\n  font-family: inherit;\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${props =>\n      props.hasError ? theme.colors.error : theme.colors.primary};\n    box-shadow: 0 0 0 3px\n      ${props =>\n        props.hasError\n          ? theme.colors.error + '20'\n          : theme.colors.primary + '20'};\n  }\n\n  &:disabled {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.gray500};\n    cursor: not-allowed;\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.sm} ${theme.spacing.md};\n    font-size: 1rem;\n    min-height: 80px;\n  }\n\n  ${media.tablet} {\n    font-size: 0.9rem;\n    min-height: 90px;\n  }\n`;\n\nconst Select = styled.select.withConfig({\n  shouldForwardProp: prop => prop !== 'hasError',\n})`\n  width: 100%;\n  padding: ${theme.spacing.md};\n  border: 1px solid\n    ${props => (props.hasError ? theme.colors.error : theme.colors.gray300)};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n  background: ${theme.colors.white};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  min-height: 2.75rem;\n\n  &:focus {\n    outline: none;\n    border-color: ${props =>\n      props.hasError ? theme.colors.error : theme.colors.primary};\n    box-shadow: 0 0 0 3px\n      ${props =>\n        props.hasError\n          ? theme.colors.error + '20'\n          : theme.colors.primary + '20'};\n  }\n\n  &:disabled {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.gray500};\n    cursor: not-allowed;\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.sm} ${theme.spacing.md};\n    font-size: 1rem;\n    min-height: 2.5rem;\n  }\n\n  ${media.tablet} {\n    font-size: 0.9rem;\n  }\n`;\n\nconst ErrorMessage = styled.span`\n  display: block;\n  font-size: 0.8rem;\n  color: ${theme.colors.error};\n  margin-top: ${theme.spacing.xs};\n\n  ${media.mobile} {\n    font-size: 0.75rem;\n  }\n`;\n\nconst HelpText = styled.span`\n  display: block;\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n  margin-top: ${theme.spacing.xs};\n\n  ${media.mobile} {\n    font-size: 0.75rem;\n  }\n`;\n\nconst FormField = ({\n  label,\n  type = 'text',\n  name,\n  value,\n  onChange,\n  placeholder,\n  required = false,\n  error,\n  helpText,\n  disabled = false,\n  options = [],\n  rows,\n  children,\n  ...props\n}) => {\n  const renderInput = () => {\n    // If children are provided, render them instead of input elements\n    if (children) {\n      return children;\n    }\n\n    if (type === 'textarea') {\n      return (\n        <Textarea\n          name={name}\n          value={value}\n          onChange={onChange}\n          placeholder={placeholder}\n          required={required}\n          disabled={disabled}\n          hasError={!!error}\n          rows={rows}\n          {...props}\n        />\n      );\n    }\n\n    if (type === 'select') {\n      return (\n        <Select\n          name={name}\n          value={value}\n          onChange={onChange}\n          required={required}\n          disabled={disabled}\n          hasError={!!error}\n          {...props}\n        >\n          <option value=\"\">Select an option</option>\n          {options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </Select>\n      );\n    }\n\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={required}\n        disabled={disabled}\n        hasError={!!error}\n        {...props}\n      />\n    );\n  };\n\n  return (\n    <FieldContainer>\n      {label && (\n        <Label>\n          {label}\n          {required && <RequiredMark>*</RequiredMark>}\n        </Label>\n      )}\n      {renderInput()}\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n      {helpText && !error && <HelpText>{helpText}</HelpText>}\n    </FieldContainer>\n  );\n};\n\nexport default FormField;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/components/shared/Modal.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport styled from 'styled-components';\nimport { FaTimes } from 'react-icons/fa';\nimport { theme, media } from '../../../styles/GlobalStyle';\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 10000;\n  padding: ${theme.spacing.lg};\n\n  ${media.mobile} {\n    padding: ${theme.spacing.sm};\n    align-items: flex-start;\n    padding-top: ${theme.spacing.lg};\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.md};\n    align-items: center;\n  }\n`;\n\nconst ModalContent = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'size',\n})`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.xl};\n  max-height: 90vh;\n  overflow-y: auto;\n  position: relative;\n  width: 100%;\n  max-width: ${props => {\n    switch (props.size) {\n      case 'sm':\n        return '400px';\n      case 'lg':\n        return '800px';\n      case 'xl':\n        return '1200px';\n      default:\n        return '600px';\n    }\n  }};\n\n  ${media.mobile} {\n    max-width: 100%;\n    max-height: 95vh;\n    border-radius: ${theme.borderRadius.md};\n    margin: ${theme.spacing.sm};\n  }\n\n  ${media.tablet} {\n    max-width: 90vw;\n    max-height: 90vh;\n  }\n\n  ${media.desktop} {\n    max-height: 85vh;\n  }\n\n  /* Custom scrollbar */\n  &::-webkit-scrollbar {\n    width: 0.25rem;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: ${theme.colors.gray100};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: ${theme.colors.gray300};\n    border-radius: ${theme.borderRadius.sm};\n  }\n`;\n\nconst ModalHeader = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  ${media.mobile} {\n    padding: ${theme.spacing.lg};\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.xl};\n  }\n`;\n\nconst ModalTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0;\n  flex: 1;\n\n  ${media.mobile} {\n    font-size: 1.25rem;\n  }\n\n  ${media.tablet} {\n    font-size: 1.375rem;\n  }\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: ${theme.colors.gray500};\n  cursor: pointer;\n  padding: ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  transition: all 0.2s ease;\n  min-width: 2.5rem;\n  min-height: 2.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.gray700};\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.xs};\n    min-width: 2.25rem;\n    min-height: 2.25rem;\n    font-size: 0.875rem;\n  }\n\n  ${media.tablet} {\n    min-width: 2.375rem;\n    min-height: 2.375rem;\n  }\n`;\n\nconst ModalBody = styled.div`\n  padding: ${theme.spacing.xl};\n\n  ${media.mobile} {\n    padding: ${theme.spacing.lg};\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.xl};\n  }\n`;\n\nconst ModalFooter = styled.div`\n  padding: ${theme.spacing.xl};\n  border-top: 1px solid ${theme.colors.gray200};\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  gap: ${theme.spacing.md};\n\n  ${media.mobile} {\n    padding: ${theme.spacing.lg};\n    flex-direction: column;\n    align-items: stretch;\n    gap: ${theme.spacing.sm};\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.xl};\n    flex-direction: row;\n    align-items: center;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst Modal = ({ isOpen, onClose, title, children, footer, size = 'md' }) => {\n  if (!isOpen) return null;\n\n  const handleOverlayClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <ModalOverlay onClick={handleOverlayClick}>\n      <ModalContent size={size}>\n        <ModalHeader>\n          <ModalTitle>{title}</ModalTitle>\n          <CloseButton onClick={onClose}>\n            <FaTimes />\n          </CloseButton>\n        </ModalHeader>\n        <ModalBody>{children}</ModalBody>\n        {footer && <ModalFooter>{footer}</ModalFooter>}\n      </ModalContent>\n    </ModalOverlay>\n  );\n};\n\nexport default Modal;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'NotificationProvider' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":30}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nimport EcommerceMain from './pages/EcommerceMain';\n\nimport { NotificationProvider } from './components/NotificationSystem';\n\nconst EcommerceModule = () => {\n  return <EcommerceMain />;\n};\n\nexport default EcommerceModule;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/pages/Cart.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":443,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":443,"endColumn":34}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaMinus,\n  FaPlus,\n  FaTrash,\n  FaShoppingCart,\n  FaArrowLeft,\n  FaTruck,\n  FaTags,\n  FaTimes,\n  FaEnvelope,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n  flex: 1;\n`;\n\nconst PageHeader = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst BackLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.primary};\n  text-decoration: none;\n  font-weight: 500;\n  transition: all 0.2s ease;\n\n  &:hover {\n    transform: translateX(-4px);\n  }\n`;\n\nconst CartContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 400px;\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst CartItems = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  overflow: hidden;\n`;\n\nconst CartItem = styled.div`\n  display: grid;\n  grid-template-columns: 120px 1fr auto;\n  gap: ${theme.spacing.lg};\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  align-items: center;\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 80px 1fr;\n    gap: ${theme.spacing.md};\n    padding: ${theme.spacing.lg};\n  }\n`;\n\nconst ItemImage = styled.img`\n  width: 100%;\n  height: 120px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    height: 80px;\n  }\n`;\n\nconst ItemDetails = styled.div`\n  h3 {\n    font-size: 1.1rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.sm};\n    line-height: 1.3;\n  }\n\n  .category {\n    color: ${theme.colors.gray500};\n    font-size: 0.9rem;\n    margin-bottom: ${theme.spacing.sm};\n    text-transform: capitalize;\n  }\n\n  .size {\n    color: ${theme.colors.gray600};\n    font-size: 0.9rem;\n    margin-bottom: ${theme.spacing.sm};\n  }\n\n  .price {\n    font-size: 1.2rem;\n    font-weight: 600;\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst ItemActions = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.md};\n  align-items: flex-end;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-column: 1 / -1;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nconst QuantityControls = styled.div`\n  display: flex;\n  align-items: center;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  overflow: hidden;\n`;\n\nconst QuantityButton = styled.button`\n  background: ${theme.colors.gray100};\n  border: none;\n  padding: ${theme.spacing.sm};\n  color: ${theme.colors.gray700};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n\n  &:hover {\n    background: ${theme.colors.gray200};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst QuantityInput = styled.span`\n  padding: ${theme.spacing.sm};\n  text-align: center;\n  width: 40px;\n  font-weight: 600;\n  background: ${theme.colors.white};\n`;\n\nconst RemoveButton = styled.button`\n  background: none;\n  border: none;\n  color: ${theme.colors.error};\n  cursor: pointer;\n  padding: ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.error};\n    color: ${theme.colors.white};\n  }\n`;\n\nconst CartSummary = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  padding: ${theme.spacing.xl};\n  height: fit-content;\n  position: sticky;\n  top: ${theme.spacing.xl};\n`;\n\nconst SummaryTitle = styled.h2`\n  font-size: 1.3rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst SummaryRow = styled.div.withConfig({\n  shouldForwardProp: prop => !['large', 'bold'].includes(prop),\n})`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.md};\n  font-size: ${props => (props.large ? '1.1rem' : '0.9rem')};\n  font-weight: ${props => (props.bold ? '600' : '400')};\n  color: ${props => (props.bold ? theme.colors.gray900 : theme.colors.gray600)};\n\n  &.total {\n    font-size: 1.2rem;\n    font-weight: 600;\n    padding-top: ${theme.spacing.md};\n    border-top: 1px solid ${theme.colors.gray200};\n    color: ${theme.colors.gray900};\n  }\n`;\n\nconst PromoSection = styled.div`\n  margin: ${theme.spacing.lg} 0;\n  padding: ${theme.spacing.lg} 0;\n  border-top: 1px solid ${theme.colors.gray200};\n  border-bottom: 1px solid ${theme.colors.gray200};\n`;\n\nconst PromoInput = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst PromoCodeInput = styled.input`\n  flex: 1;\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst ApplyButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  border: none;\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  white-space: nowrap;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n  }\n`;\n\nconst ShippingInfo = styled.div`\n  background: ${theme.colors.gray50};\n  padding: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  margin-bottom: ${theme.spacing.lg};\n\n  .shipping-option {\n    display: flex;\n    align-items: center;\n    gap: ${theme.spacing.sm};\n    margin-bottom: ${theme.spacing.sm};\n    font-size: 0.9rem;\n    color: ${theme.colors.gray700};\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  .free-shipping {\n    color: ${theme.colors.success};\n    font-weight: 600;\n  }\n`;\n\nconst CheckoutButton = styled.button`\n  width: 100%;\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-2px);\n  }\n\n  &:disabled {\n    background: ${theme.colors.gray400};\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst EmptyCart = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n\n  .icon {\n    font-size: 4rem;\n    color: ${theme.colors.gray300};\n    margin-bottom: ${theme.spacing.lg};\n  }\n\n  h2 {\n    font-size: 1.5rem;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.md};\n  }\n\n  p {\n    color: ${theme.colors.gray600};\n    margin-bottom: ${theme.spacing.xl};\n  }\n`;\n\nconst ShopButton = styled(Link)`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.md};\n  text-decoration: none;\n  font-weight: 600;\n  transition: all 0.2s ease;\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-2px);\n  }\n`;\n\nconst Cart = () => {\n  const navigate = useNavigate();\n  const [cartItems, setCartItems] = useState([\n    // Mock cart items for demonstration\n    {\n      id: 1,\n      name: 'Premium Wireless Headphones',\n      category: 'electronics',\n      price: 299.99,\n      originalPrice: 399.99,\n      image:\n        'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=500&q=80',\n      quantity: 1,\n      stock: 15,\n    },\n    {\n      id: 4,\n      name: 'Classic Denim Jacket',\n      category: 'fashion',\n      price: 89.99,\n      image:\n        'https://images.unsplash.com/photo-1544022613-e87ca75a784a?w=500&q=80',\n      quantity: 2,\n      selectedSize: 'M',\n      stock: 28,\n    },\n  ]);\n  const [promoCode, setPromoCode] = useState('');\n  const [appliedPromo, setAppliedPromo] = useState(null);\n\n  const updateQuantity = (id, selectedSize, newQuantity) => {\n    setCartItems(prev =>\n      prev.map(item =>\n        item.id === id && item.selectedSize === selectedSize\n          ? {\n              ...item,\n              quantity: Math.max(1, Math.min(item.stock, newQuantity)),\n            }\n          : item\n      )\n    );\n  };\n\n  const removeItem = (id, selectedSize) => {\n    setCartItems(prev =>\n      prev.filter(\n        item => !(item.id === id && item.selectedSize === selectedSize)\n      )\n    );\n  };\n\n  const applyPromoCode = () => {\n    // Mock promo code logic\n    const validCodes = {\n      SAVE10: { type: 'percentage', value: 10, description: '10% off' },\n      WELCOME: { type: 'fixed', value: 20, description: '$20 off' },\n      FREESHIP: { type: 'shipping', value: 0, description: 'Free shipping' },\n    };\n\n    if (validCodes[promoCode.toUpperCase()]) {\n      setAppliedPromo({\n        code: promoCode.toUpperCase(),\n        ...validCodes[promoCode.toUpperCase()],\n      });\n      setPromoCode('');\n    } else {\n      alert('Invalid promo code');\n    }\n  };\n\n  const removePromoCode = () => {\n    setAppliedPromo(null);\n  };\n\n  const calculateSubtotal = () => {\n    return cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n  };\n\n  const calculateDiscount = () => {\n    if (!appliedPromo) return 0;\n\n    const subtotal = calculateSubtotal();\n    if (appliedPromo.type === 'percentage') {\n      return subtotal * (appliedPromo.value / 100);\n    } else if (appliedPromo.type === 'fixed') {\n      return Math.min(appliedPromo.value, subtotal);\n    }\n    return 0;\n  };\n\n  const calculateShipping = () => {\n    const subtotal = calculateSubtotal();\n    if (appliedPromo?.type === 'shipping' || subtotal >= 99) {\n      return 0;\n    }\n    return 9.99;\n  };\n\n  const calculateTotal = () => {\n    return calculateSubtotal() - calculateDiscount() + calculateShipping();\n  };\n\n  const handleEnquireAll = () => {\n    // Since this is an enquiry system, we'll convert cart to enquiries\n    navigate('/ecommerce/my-enquiries');\n  };\n\n  if (cartItems.length === 0) {\n    return (\n      <PageContainer>\n        <Navbar cartItemsCount={0} />\n\n        <Container>\n          <PageHeader>\n            <BackLink to=\"/ecommerce/products\">\n              <FaArrowLeft />\n              Continue Shopping\n            </BackLink>\n          </PageHeader>\n\n          <EmptyCart>\n            <FaShoppingCart className=\"icon\" />\n            <h2>Your cart is empty</h2>\n            <p>Looks like you haven't added any items to your cart yet.</p>\n            <ShopButton to=\"/ecommerce/products\">\n              Start Shopping\n              <FaShoppingCart />\n            </ShopButton>\n          </EmptyCart>\n        </Container>\n\n        <Footer />\n      </PageContainer>\n    );\n  }\n\n  return (\n    <PageContainer>\n      <Navbar\n        cartItemsCount={cartItems.reduce((sum, item) => sum + item.quantity, 0)}\n      />\n\n      <Container>\n        <PageHeader>\n          <BackLink to=\"/ecommerce/products\">\n            <FaArrowLeft />\n            Continue Shopping\n          </BackLink>\n          <PageTitle>Shopping Cart ({cartItems.length} items)</PageTitle>\n        </PageHeader>\n\n        <CartContainer>\n          <CartItems>\n            {cartItems.map((item, index) => (\n              <CartItem\n                key={`${item.id}-${item.selectedSize || 'no-size'}-${index}`}\n              >\n                <ItemImage src={item.image} alt={item.name} />\n\n                <ItemDetails>\n                  <h3>{item.name}</h3>\n                  <div className=\"category\">\n                    {item.category.replace('-', ' ')}\n                  </div>\n                  {item.selectedSize && (\n                    <div className=\"size\">Size: {item.selectedSize}</div>\n                  )}\n                  <div className=\"price\">\n                    ${item.price}\n                    {item.originalPrice && item.originalPrice > item.price && (\n                      <span\n                        style={{\n                          marginLeft: '8px',\n                          fontSize: '0.9rem',\n                          color: theme.colors.gray500,\n                          textDecoration: 'line-through',\n                        }}\n                      >\n                        ${item.originalPrice}\n                      </span>\n                    )}\n                  </div>\n                </ItemDetails>\n\n                <ItemActions>\n                  <QuantityControls>\n                    <QuantityButton\n                      onClick={() =>\n                        updateQuantity(\n                          item.id,\n                          item.selectedSize,\n                          item.quantity - 1\n                        )\n                      }\n                      disabled={item.quantity <= 1}\n                    >\n                      <FaMinus />\n                    </QuantityButton>\n                    <QuantityInput>{item.quantity}</QuantityInput>\n                    <QuantityButton\n                      onClick={() =>\n                        updateQuantity(\n                          item.id,\n                          item.selectedSize,\n                          item.quantity + 1\n                        )\n                      }\n                      disabled={item.quantity >= item.stock}\n                    >\n                      <FaPlus />\n                    </QuantityButton>\n                  </QuantityControls>\n\n                  <RemoveButton\n                    onClick={() => removeItem(item.id, item.selectedSize)}\n                    title=\"Remove item\"\n                  >\n                    <FaTrash />\n                  </RemoveButton>\n                </ItemActions>\n              </CartItem>\n            ))}\n          </CartItems>\n\n          <CartSummary>\n            <SummaryTitle>Order Summary</SummaryTitle>\n\n            <SummaryRow>\n              <span>\n                Subtotal (\n                {cartItems.reduce((sum, item) => sum + item.quantity, 0)} items)\n              </span>\n              <span>${calculateSubtotal().toFixed(2)}</span>\n            </SummaryRow>\n\n            {appliedPromo && (\n              <SummaryRow style={{ color: theme.colors.success }}>\n                <span>\n                  Discount ({appliedPromo.description})\n                  <button\n                    onClick={removePromoCode}\n                    style={{\n                      marginLeft: '8px',\n                      background: 'none',\n                      border: 'none',\n                      color: theme.colors.error,\n                      cursor: 'pointer',\n                    }}\n                  >\n                    <FaTimes />\n                  </button>\n                </span>\n                <span>-${calculateDiscount().toFixed(2)}</span>\n              </SummaryRow>\n            )}\n\n            <PromoSection>\n              <div\n                style={{ marginBottom: theme.spacing.sm, fontWeight: '600' }}\n              >\n                <FaTags style={{ marginRight: theme.spacing.sm }} />\n                Promo Code\n              </div>\n              <PromoInput>\n                <PromoCodeInput\n                  type=\"text\"\n                  placeholder=\"Enter promo code\"\n                  value={promoCode}\n                  onChange={e => setPromoCode(e.target.value)}\n                />\n                <ApplyButton onClick={applyPromoCode}>Apply</ApplyButton>\n              </PromoInput>\n              <div style={{ fontSize: '0.8rem', color: theme.colors.gray500 }}>\n                Try: SAVE10, WELCOME, or FREESHIP\n              </div>\n            </PromoSection>\n\n            <ShippingInfo>\n              <div className=\"shipping-option\">\n                <FaTruck />\n                <span>Shipping</span>\n                <span style={{ marginLeft: 'auto' }}>\n                  {calculateShipping() === 0 ? (\n                    <span className=\"free-shipping\">FREE</span>\n                  ) : (\n                    `$${calculateShipping().toFixed(2)}`\n                  )}\n                </span>\n              </div>\n              {calculateShipping() > 0 && (\n                <div\n                  style={{ fontSize: '0.8rem', color: theme.colors.gray600 }}\n                >\n                  Free shipping on orders over $99\n                </div>\n              )}\n            </ShippingInfo>\n\n            <SummaryRow className=\"total\">\n              <span>Total</span>\n              <span>${calculateTotal().toFixed(2)}</span>\n            </SummaryRow>\n\n            <CheckoutButton onClick={handleEnquireAll}>\n              Enquire About All Items\n              <FaEnvelope />\n            </CheckoutButton>\n\n            <div\n              style={{\n                textAlign: 'center',\n                marginTop: theme.spacing.md,\n                fontSize: '0.8rem',\n                color: theme.colors.gray500,\n              }}\n            >\n              Secure checkout with SSL encryption\n            </div>\n          </CartSummary>\n        </CartContainer>\n      </Container>\n\n      <Footer />\n    </PageContainer>\n  );\n};\n\nexport default Cart;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/pages/Checkout.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":487,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":487,"endColumn":49}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaLock,\n  FaArrowLeft,\n  FaCreditCard,\n  FaPaypal,\n  FaApplePay,\n  FaGooglePay,\n  FaShieldAlt,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n  flex: 1;\n`;\n\nconst PageHeader = styled.div`\n  text-align: center;\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst SecurityBadge = styled.div`\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  background: ${theme.colors.success};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n  font-weight: 600;\n`;\n\nconst CheckoutContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 400px;\n  gap: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.xl};\n  }\n`;\n\nconst CheckoutForm = styled.form`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  overflow: hidden;\n`;\n\nconst Section = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.3rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.lg};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst FormGrid = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'columns',\n})`\n  display: grid;\n  grid-template-columns: ${props => props.columns || '1fr'};\n  gap: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst Label = styled.label`\n  display: block;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n  font-size: 0.9rem;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &.error {\n    border-color: ${theme.colors.error};\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  background: ${theme.colors.white};\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst Checkbox = styled.div`\n  display: flex;\n  align-items: flex-start;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.lg};\n\n  input {\n    margin-top: 2px;\n  }\n\n  label {\n    font-size: 0.9rem;\n    line-height: 1.5;\n    color: ${theme.colors.gray700};\n    cursor: pointer;\n  }\n`;\n\nconst PaymentMethods = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst PaymentMethod = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'selected',\n})`\n  border: 2px solid\n    ${props => (props.selected ? theme.colors.primary : theme.colors.gray200)};\n  border-radius: ${theme.borderRadius.md};\n  padding: ${theme.spacing.lg};\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  background: ${props =>\n    props.selected ? theme.colors.primary : theme.colors.white};\n  color: ${props =>\n    props.selected ? theme.colors.white : theme.colors.gray700};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n  }\n\n  .icon {\n    font-size: 1.5rem;\n    margin-bottom: ${theme.spacing.sm};\n  }\n\n  .label {\n    font-size: 0.8rem;\n    font-weight: 600;\n  }\n`;\n\nconst OrderSummary = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  padding: ${theme.spacing.xl};\n  height: fit-content;\n  position: sticky;\n  top: ${theme.spacing.xl};\n`;\n\nconst SummaryTitle = styled.h2`\n  font-size: 1.3rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst OrderItem = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.lg};\n  padding-bottom: ${theme.spacing.lg};\n  border-bottom: 1px solid ${theme.colors.gray200};\n\n  &:last-child {\n    margin-bottom: 0;\n    padding-bottom: 0;\n    border-bottom: none;\n  }\n`;\n\nconst ItemImage = styled.img`\n  width: 60px;\n  height: 60px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst ItemDetails = styled.div`\n  flex: 1;\n\n  h4 {\n    font-size: 0.9rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.xs};\n    line-height: 1.3;\n  }\n\n  .meta {\n    font-size: 0.8rem;\n    color: ${theme.colors.gray600};\n    margin-bottom: ${theme.spacing.xs};\n  }\n\n  .price {\n    font-size: 0.9rem;\n    font-weight: 600;\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst SummaryRow = styled.div.withConfig({\n  shouldForwardProp: prop => !['large', 'bold'].includes(prop),\n})`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.md};\n  font-size: ${props => (props.large ? '1.1rem' : '0.9rem')};\n  font-weight: ${props => (props.bold ? '600' : '400')};\n  color: ${props => (props.bold ? theme.colors.gray900 : theme.colors.gray600)};\n\n  &.total {\n    font-size: 1.2rem;\n    font-weight: 600;\n    padding-top: ${theme.spacing.md};\n    border-top: 2px solid ${theme.colors.gray200};\n    color: ${theme.colors.gray900};\n  }\n`;\n\nconst PlaceOrderButton = styled.button`\n  width: 100%;\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1.1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n  margin-top: ${theme.spacing.xl};\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-2px);\n  }\n\n  &:disabled {\n    background: ${theme.colors.gray400};\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst BackButton = styled.button`\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.xl};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: ${theme.colors.error};\n  font-size: 0.8rem;\n  margin-top: ${theme.spacing.xs};\n`;\n\nconst Checkout = () => {\n  const navigate = useNavigate();\n  const [paymentMethod, setPaymentMethod] = useState('card');\n  const [formData, setFormData] = useState({\n    email: '',\n    firstName: '',\n    lastName: '',\n    address: '',\n    city: '',\n    state: '',\n    zipCode: '',\n    country: 'US',\n    phone: '',\n    cardNumber: '',\n    expiryDate: '',\n    cvv: '',\n    cardName: '',\n    saveInfo: false,\n    terms: false,\n  });\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  // Mock order items\n  const orderItems = [\n    {\n      id: 1,\n      name: 'Premium Wireless Headphones',\n      price: 299.99,\n      quantity: 1,\n      image:\n        'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=500&q=80',\n    },\n    {\n      id: 4,\n      name: 'Classic Denim Jacket',\n      price: 89.99,\n      quantity: 2,\n      size: 'M',\n      image:\n        'https://images.unsplash.com/photo-1544022613-e87ca75a784a?w=500&q=80',\n    },\n  ];\n\n  const subtotal = orderItems.reduce(\n    (sum, item) => sum + item.price * item.quantity,\n    0\n  );\n  const shipping = subtotal >= 99 ? 0 : 9.99;\n  const tax = subtotal * 0.08; // 8% tax\n  const total = subtotal + shipping + tax;\n\n  const handleInputChange = e => {\n    const { name, value, type, checked } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value,\n    }));\n\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({ ...prev, [name]: '' }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    // Email validation\n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email';\n    }\n\n    // Required fields\n    const requiredFields = [\n      'firstName',\n      'lastName',\n      'address',\n      'city',\n      'state',\n      'zipCode',\n      'phone',\n    ];\n    requiredFields.forEach(field => {\n      if (!formData[field]) {\n        newErrors[field] = 'This field is required';\n      }\n    });\n\n    // Payment validation\n    if (paymentMethod === 'card') {\n      if (!formData.cardNumber) {\n        newErrors.cardNumber = 'Card number is required';\n      } else if (formData.cardNumber.replace(/\\s/g, '').length < 16) {\n        newErrors.cardNumber = 'Please enter a valid card number';\n      }\n\n      if (!formData.expiryDate) {\n        newErrors.expiryDate = 'Expiry date is required';\n      }\n\n      if (!formData.cvv) {\n        newErrors.cvv = 'CVV is required';\n      } else if (formData.cvv.length < 3) {\n        newErrors.cvv = 'Please enter a valid CVV';\n      }\n\n      if (!formData.cardName) {\n        newErrors.cardName = 'Cardholder name is required';\n      }\n    }\n\n    // Terms acceptance\n    if (!formData.terms) {\n      newErrors.terms = 'You must accept the terms and conditions';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    setLoading(true);\n\n    // Simulate payment processing\n    try {\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      // Navigate to order confirmation\n      navigate('/ecommerce/order-confirmation', {\n        state: {\n          orderNumber: 'ORD-' + Date.now(),\n          total: total,\n          paymentMethod: paymentMethod,\n          email: formData.email,\n        },\n      });\n    } catch (error) {\n      alert('Payment failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatCardNumber = value => {\n    const v = value.replace(/\\s+/g, '').replace(/[^0-9]/gi, '');\n    const matches = v.match(/\\d{4,16}/g);\n    const match = (matches && matches[0]) || '';\n    const parts = [];\n    for (let i = 0, len = match.length; i < len; i += 4) {\n      parts.push(match.substring(i, i + 4));\n    }\n    if (parts.length) {\n      return parts.join(' ');\n    } else {\n      return v;\n    }\n  };\n\n  const handleCardNumberChange = e => {\n    const formatted = formatCardNumber(e.target.value);\n    setFormData(prev => ({ ...prev, cardNumber: formatted }));\n  };\n\n  return (\n    <PageContainer>\n      <Navbar\n        cartItemsCount={orderItems.reduce(\n          (sum, item) => sum + item.quantity,\n          0\n        )}\n      />\n\n      <Container>\n        <BackButton onClick={() => navigate('/ecommerce/cart')}>\n          <FaArrowLeft />\n          Back to Cart\n        </BackButton>\n\n        <PageHeader>\n          <PageTitle>Secure Checkout</PageTitle>\n          <SecurityBadge>\n            <FaShieldAlt />\n            SSL Secured\n          </SecurityBadge>\n        </PageHeader>\n\n        <CheckoutContainer>\n          <CheckoutForm onSubmit={handleSubmit}>\n            <Section>\n              <SectionTitle>1. Contact Information</SectionTitle>\n\n              <FormGroup>\n                <Label htmlFor=\"email\">Email Address</Label>\n                <Input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleInputChange}\n                  className={errors.email ? 'error' : ''}\n                  placeholder=\"Enter your email\"\n                />\n                {errors.email && <ErrorMessage>{errors.email}</ErrorMessage>}\n              </FormGroup>\n            </Section>\n\n            <Section>\n              <SectionTitle>2. Shipping Address</SectionTitle>\n\n              <FormGrid columns=\"1fr 1fr\">\n                <FormGroup>\n                  <Label htmlFor=\"firstName\">First Name</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    value={formData.firstName}\n                    onChange={handleInputChange}\n                    className={errors.firstName ? 'error' : ''}\n                    placeholder=\"First name\"\n                  />\n                  {errors.firstName && (\n                    <ErrorMessage>{errors.firstName}</ErrorMessage>\n                  )}\n                </FormGroup>\n\n                <FormGroup>\n                  <Label htmlFor=\"lastName\">Last Name</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    value={formData.lastName}\n                    onChange={handleInputChange}\n                    className={errors.lastName ? 'error' : ''}\n                    placeholder=\"Last name\"\n                  />\n                  {errors.lastName && (\n                    <ErrorMessage>{errors.lastName}</ErrorMessage>\n                  )}\n                </FormGroup>\n              </FormGrid>\n\n              <FormGroup>\n                <Label htmlFor=\"address\">Address</Label>\n                <Input\n                  type=\"text\"\n                  id=\"address\"\n                  name=\"address\"\n                  value={formData.address}\n                  onChange={handleInputChange}\n                  className={errors.address ? 'error' : ''}\n                  placeholder=\"Street address\"\n                />\n                {errors.address && (\n                  <ErrorMessage>{errors.address}</ErrorMessage>\n                )}\n              </FormGroup>\n\n              <FormGrid columns=\"1fr 1fr 1fr\">\n                <FormGroup>\n                  <Label htmlFor=\"city\">City</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"city\"\n                    name=\"city\"\n                    value={formData.city}\n                    onChange={handleInputChange}\n                    className={errors.city ? 'error' : ''}\n                    placeholder=\"City\"\n                  />\n                  {errors.city && <ErrorMessage>{errors.city}</ErrorMessage>}\n                </FormGroup>\n\n                <FormGroup>\n                  <Label htmlFor=\"state\">State</Label>\n                  <Select\n                    id=\"state\"\n                    name=\"state\"\n                    value={formData.state}\n                    onChange={handleInputChange}\n                  >\n                    <option value=\"\">Select State</option>\n                    <option value=\"AL\">Alabama</option>\n                    <option value=\"CA\">California</option>\n                    <option value=\"FL\">Florida</option>\n                    <option value=\"NY\">New York</option>\n                    <option value=\"TX\">Texas</option>\n                  </Select>\n                  {errors.state && <ErrorMessage>{errors.state}</ErrorMessage>}\n                </FormGroup>\n\n                <FormGroup>\n                  <Label htmlFor=\"zipCode\">ZIP Code</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"zipCode\"\n                    name=\"zipCode\"\n                    value={formData.zipCode}\n                    onChange={handleInputChange}\n                    className={errors.zipCode ? 'error' : ''}\n                    placeholder=\"ZIP\"\n                  />\n                  {errors.zipCode && (\n                    <ErrorMessage>{errors.zipCode}</ErrorMessage>\n                  )}\n                </FormGroup>\n              </FormGrid>\n\n              <FormGroup>\n                <Label htmlFor=\"phone\">Phone Number</Label>\n                <Input\n                  type=\"tel\"\n                  id=\"phone\"\n                  name=\"phone\"\n                  value={formData.phone}\n                  onChange={handleInputChange}\n                  className={errors.phone ? 'error' : ''}\n                  placeholder=\"(555) 123-4567\"\n                />\n                {errors.phone && <ErrorMessage>{errors.phone}</ErrorMessage>}\n              </FormGroup>\n            </Section>\n\n            <Section>\n              <SectionTitle>3. Payment Method</SectionTitle>\n\n              <PaymentMethods>\n                <PaymentMethod\n                  selected={paymentMethod === 'card'}\n                  onClick={() => setPaymentMethod('card')}\n                >\n                  <FaCreditCard className=\"icon\" />\n                  <div className=\"label\">Credit Card</div>\n                </PaymentMethod>\n                <PaymentMethod\n                  selected={paymentMethod === 'paypal'}\n                  onClick={() => setPaymentMethod('paypal')}\n                >\n                  <FaPaypal className=\"icon\" />\n                  <div className=\"label\">PayPal</div>\n                </PaymentMethod>\n                <PaymentMethod\n                  selected={paymentMethod === 'apple'}\n                  onClick={() => setPaymentMethod('apple')}\n                >\n                  <FaApplePay className=\"icon\" />\n                  <div className=\"label\">Apple Pay</div>\n                </PaymentMethod>\n                <PaymentMethod\n                  selected={paymentMethod === 'google'}\n                  onClick={() => setPaymentMethod('google')}\n                >\n                  <FaGooglePay className=\"icon\" />\n                  <div className=\"label\">Google Pay</div>\n                </PaymentMethod>\n              </PaymentMethods>\n\n              {paymentMethod === 'card' && (\n                <>\n                  <FormGroup>\n                    <Label htmlFor=\"cardNumber\">Card Number</Label>\n                    <Input\n                      type=\"text\"\n                      id=\"cardNumber\"\n                      name=\"cardNumber\"\n                      value={formData.cardNumber}\n                      onChange={handleCardNumberChange}\n                      className={errors.cardNumber ? 'error' : ''}\n                      placeholder=\"1234 5678 9012 3456\"\n                      maxLength=\"19\"\n                    />\n                    {errors.cardNumber && (\n                      <ErrorMessage>{errors.cardNumber}</ErrorMessage>\n                    )}\n                  </FormGroup>\n\n                  <FormGrid columns=\"1fr 1fr\">\n                    <FormGroup>\n                      <Label htmlFor=\"expiryDate\">Expiry Date</Label>\n                      <Input\n                        type=\"text\"\n                        id=\"expiryDate\"\n                        name=\"expiryDate\"\n                        value={formData.expiryDate}\n                        onChange={handleInputChange}\n                        className={errors.expiryDate ? 'error' : ''}\n                        placeholder=\"MM/YY\"\n                        maxLength=\"5\"\n                      />\n                      {errors.expiryDate && (\n                        <ErrorMessage>{errors.expiryDate}</ErrorMessage>\n                      )}\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Label htmlFor=\"cvv\">CVV</Label>\n                      <Input\n                        type=\"text\"\n                        id=\"cvv\"\n                        name=\"cvv\"\n                        value={formData.cvv}\n                        onChange={handleInputChange}\n                        className={errors.cvv ? 'error' : ''}\n                        placeholder=\"123\"\n                        maxLength=\"4\"\n                      />\n                      {errors.cvv && <ErrorMessage>{errors.cvv}</ErrorMessage>}\n                    </FormGroup>\n                  </FormGrid>\n\n                  <FormGroup>\n                    <Label htmlFor=\"cardName\">Cardholder Name</Label>\n                    <Input\n                      type=\"text\"\n                      id=\"cardName\"\n                      name=\"cardName\"\n                      value={formData.cardName}\n                      onChange={handleInputChange}\n                      className={errors.cardName ? 'error' : ''}\n                      placeholder=\"Name on card\"\n                    />\n                    {errors.cardName && (\n                      <ErrorMessage>{errors.cardName}</ErrorMessage>\n                    )}\n                  </FormGroup>\n                </>\n              )}\n\n              <Checkbox>\n                <input\n                  type=\"checkbox\"\n                  id=\"saveInfo\"\n                  name=\"saveInfo\"\n                  checked={formData.saveInfo}\n                  onChange={handleInputChange}\n                />\n                <label htmlFor=\"saveInfo\">\n                  Save my information for faster checkout next time\n                </label>\n              </Checkbox>\n\n              <Checkbox>\n                <input\n                  type=\"checkbox\"\n                  id=\"terms\"\n                  name=\"terms\"\n                  checked={formData.terms}\n                  onChange={handleInputChange}\n                />\n                <label htmlFor=\"terms\">\n                  I agree to the Terms of Service and Privacy Policy\n                  {errors.terms && <ErrorMessage>{errors.terms}</ErrorMessage>}\n                </label>\n              </Checkbox>\n            </Section>\n\n            <Section>\n              <PlaceOrderButton type=\"submit\" disabled={loading}>\n                {loading ? (\n                  'Processing...'\n                ) : (\n                  <>\n                    <FaLock />\n                    Place Order - ${total.toFixed(2)}\n                  </>\n                )}\n              </PlaceOrderButton>\n            </Section>\n          </CheckoutForm>\n\n          <OrderSummary>\n            <SummaryTitle>Order Summary</SummaryTitle>\n\n            {orderItems.map(item => (\n              <OrderItem key={item.id}>\n                <ItemImage src={item.image} alt={item.name} />\n                <ItemDetails>\n                  <h4>{item.name}</h4>\n                  <div className=\"meta\">\n                    Qty: {item.quantity}\n                    {item.size && ` • Size: ${item.size}`}\n                  </div>\n                  <div className=\"price\">\n                    ${(item.price * item.quantity).toFixed(2)}\n                  </div>\n                </ItemDetails>\n              </OrderItem>\n            ))}\n\n            <div style={{ marginTop: theme.spacing.lg }}>\n              <SummaryRow>\n                <span>Subtotal</span>\n                <span>${subtotal.toFixed(2)}</span>\n              </SummaryRow>\n\n              <SummaryRow>\n                <span>Shipping</span>\n                <span>\n                  {shipping === 0 ? 'FREE' : `$${shipping.toFixed(2)}`}\n                </span>\n              </SummaryRow>\n\n              <SummaryRow>\n                <span>Tax</span>\n                <span>${tax.toFixed(2)}</span>\n              </SummaryRow>\n\n              <SummaryRow className=\"total\">\n                <span>Total</span>\n                <span>${total.toFixed(2)}</span>\n              </SummaryRow>\n            </div>\n\n            <div\n              style={{\n                textAlign: 'center',\n                marginTop: theme.spacing.lg,\n                fontSize: '0.8rem',\n                color: theme.colors.gray500,\n              }}\n            >\n              <FaShieldAlt style={{ marginRight: '4px' }} />\n              Your payment information is secure and encrypted\n            </div>\n          </OrderSummary>\n        </CheckoutContainer>\n      </Container>\n\n      <Footer />\n    </PageContainer>\n  );\n};\n\nexport default Checkout;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/pages/EcommerceMain.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"prefer-const","severity":1,"message":"'vendor' is never reassigned. Use 'const' instead.","line":441,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":441,"endColumn":15,"fix":{"range":[10830,10869],"text":"const vendor = getVendorByIdOrSlug(slug);"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate, Link, useParams } from 'react-router-dom';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { FaArrowRight, FaShoppingBag, FaHome } from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport ProductCard from '../components/ProductCard';\nimport CategoryCard from '../components/CategoryCard';\nimport BackToTop from '../components/BackToTop';\nimport {\n  ecommerceCategories as categories,\n  getFeaturedProducts,\n  getOnSaleProducts,\n  getEcommerceVendorByIdOrSlug as getVendorByIdOrSlug,\n} from '../../DummyData';\n\n// Dynamic theme styles that override global styles\nconst DynamicGlobalStyle = createGlobalStyle`\n  :root {\n    --vendor-primary: ${props => props.primaryColor || theme.colors.primary};\n    --vendor-secondary: ${props => props.secondaryColor || theme.colors.secondary};\n    --vendor-background: ${props => props.backgroundColor || theme.colors.gray50};\n    --vendor-text: ${props => props.textColor || theme.colors.gray900};\n  }\n`;\n\nconst PageContainer = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'backgroundColor',\n})`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${props => props.backgroundColor || theme.colors.gray50};\n`;\n\nconst HeroSection = styled.section.withConfig({\n  shouldForwardProp: prop =>\n    !['primaryColor', 'secondaryColor', 'heroImage'].includes(prop),\n})`\n  background:\n    linear-gradient(\n      135deg,\n      ${props => props.primaryColor || '#667eea'}dd 0%,\n      ${props => props.secondaryColor || '#764ba2'}dd 100%\n    ),\n    ${props => (props.heroImage ? `url(\"${props.heroImage}\")` : 'none')};\n  background-size: cover;\n  background-position: center;\n  background-attachment: fixed;\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xl} 0;\n  text-align: center;\n  position: relative;\n  overflow: hidden;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.3);\n    z-index: 1;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    min-height: 100vh;\n    background-attachment: scroll;\n    padding: ${theme.spacing.lg} 0;\n  }\n`;\n\nconst HeroContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n  position: relative;\n  z-index: 2;\n  width: 100%;\n`;\n\nconst StoreHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.sm};\n    text-align: center;\n  }\n`;\n\nconst StoreLogo = styled.img`\n  width: 80px;\n  height: 80px;\n  border-radius: ${theme.borderRadius.xl};\n  border: 3px solid ${theme.colors.white};\n  object-fit: cover;\n  box-shadow: ${theme.shadows.xl};\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    width: 70px;\n    height: 70px;\n  }\n`;\n\nconst HeroTitle = styled.h1`\n  font-size: 2.75rem;\n  font-weight: 800;\n  margin-bottom: ${theme.spacing.md};\n  background: linear-gradient(45deg, #ffffff, #f0f8ff);\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n  letter-spacing: -1px;\n  line-height: 1.1;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    font-size: 2.25rem;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.875rem;\n  }\n`;\n\nconst HeroSubtitle = styled.p`\n  font-size: 1.125rem;\n  margin-bottom: ${theme.spacing.lg};\n  opacity: 0.95;\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  font-weight: 300;\n  line-height: 1.6;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    font-size: 1rem;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1rem;\n  }\n`;\n\nconst HeroActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.lg};\n  justify-content: center;\n  flex-wrap: wrap;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    align-items: center;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst HeroButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'primaryColor',\n})`\n  background: ${theme.colors.white};\n  color: ${props => props.primaryColor || theme.colors.primary};\n  padding: ${theme.spacing.lg} ${theme.spacing.xxl};\n  border: none;\n  border-radius: ${theme.borderRadius.xl};\n  font-weight: 700;\n  font-size: 1.1rem;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  transition: all 0.3s ease;\n  box-shadow: ${theme.shadows.xl};\n  cursor: pointer;\n  min-width: 200px;\n  justify-content: center;\n\n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n    background: ${theme.colors.gray50};\n  }\n\n  &.secondary {\n    background: rgba(255, 255, 255, 0.1);\n    color: ${theme.colors.white};\n    border: 2px solid ${theme.colors.white};\n    backdrop-filter: blur(10px);\n\n    &:hover {\n      background: rgba(255, 255, 255, 0.2);\n      transform: translateY(-3px);\n    }\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.md} ${theme.spacing.xl};\n    min-width: 180px;\n    font-size: 1rem;\n  }\n`;\n\nconst Section = styled.section`\n  padding: ${theme.spacing.xxl} 0;\n  background: ${props => props.background || theme.colors.white};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    padding: ${theme.spacing.xl} 0;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg} 0;\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    padding: 0 ${theme.spacing.md};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: 0 ${theme.spacing.sm};\n  }\n`;\n\nconst SectionHeader = styled.div`\n  text-align: center;\n  margin-bottom: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    margin-bottom: ${theme.spacing.xl};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    margin-bottom: ${theme.spacing.lg};\n    padding: 0 ${theme.spacing.sm};\n  }\n`;\n\nconst SectionTitle = styled.h2.withConfig({\n  shouldForwardProp: prop => prop !== 'textColor',\n})`\n  font-size: 2.5rem;\n  font-weight: 600;\n  color: ${props => props.textColor || theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    font-size: 2rem;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.75rem;\n    margin-bottom: ${theme.spacing.sm};\n  }\n`;\n\nconst SectionSubtitle = styled.p`\n  font-size: 1.1rem;\n  color: ${theme.colors.gray600};\n  max-width: 600px;\n  margin: 0 auto;\n  line-height: 1.6;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    font-size: 1rem;\n    max-width: 500px;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 0.95rem;\n    max-width: 100%;\n    padding: 0 ${theme.spacing.sm};\n  }\n`;\n\nconst Grid = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'minWidth',\n})`\n  display: grid;\n  grid-template-columns: repeat(\n    auto-fit,\n    minmax(${props => props.minWidth || '280px'}, 1fr)\n  );\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: ${theme.spacing.lg};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n    gap: ${theme.spacing.md};\n    padding: 0 ${theme.spacing.sm};\n  }\n\n  @media (max-width: 320px) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst BackButton = styled.button`\n  position: fixed;\n  top: ${theme.spacing.xl};\n  left: ${theme.spacing.xl};\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  z-index: 1000;\n  box-shadow: ${theme.shadows.md};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n    transform: translateY(-1px);\n  }\n`;\n\nconst FallbackContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  padding: ${theme.spacing.xl};\n  background: ${theme.colors.gray50};\n`;\n\nconst FallbackTitle = styled.h1`\n  font-size: 2.5rem;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst FallbackText = styled.p`\n  font-size: 1.1rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.xl};\n  max-width: 500px;\n`;\n\nconst FallbackButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-1px);\n  }\n`;\n\nconst Breadcrumb = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.md} 0;\n  border-bottom: 1px solid ${theme.colors.gray100};\n`;\n\nconst BreadcrumbNav = styled.nav`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n\n  a {\n    color: ${theme.colors.primary};\n    text-decoration: none;\n    transition: color 0.2s ease;\n\n    &:hover {\n      color: ${theme.colors.primaryDark};\n      text-decoration: underline;\n    }\n  }\n\n  .separator {\n    color: ${theme.colors.gray400};\n  }\n\n  .current {\n    color: ${theme.colors.gray900};\n    font-weight: 600;\n  }\n`;\n\nconst EcommerceMain = () => {\n  const { slug } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [featuredProducts, setFeaturedProducts] = useState([]);\n  const [saleProducts, setSaleProducts] = useState([]);\n  const [selectedVendor, setSelectedVendor] = useState(null);\n\n  useEffect(() => {\n    // Get vendor data from URL slug or navigation state (fallback)\n\n    let vendor = getVendorByIdOrSlug(slug);\n    // Fallback to location state if no vendor found by slug\n    if (vendor) {\n      setSelectedVendor(vendor);\n    }\n\n    // Load products (these would be filtered by vendor in a real app)\n    setFeaturedProducts(getFeaturedProducts());\n    setSaleProducts(getOnSaleProducts());\n  }, [location.pathname, location.state, navigate, slug]);\n\n  const handleBackToStores = () => {\n    navigate('/ecommerce-stores');\n  };\n\n  // Show fallback if no vendor is selected\n  if (!selectedVendor) {\n    return (\n      <FallbackContainer>\n        <FallbackTitle>Please Select a Store</FallbackTitle>\n        <FallbackText>\n          You need to select a store first to view its products and continue\n          shopping.\n        </FallbackText>\n        <FallbackButton onClick={handleBackToStores}>\n          <FaShoppingBag />\n          Browse Stores\n        </FallbackButton>\n      </FallbackContainer>\n    );\n  }\n\n  const vendorTheme = selectedVendor.theme || {};\n\n  return (\n    <>\n      <DynamicGlobalStyle\n        primaryColor={vendorTheme.primaryColor}\n        secondaryColor={vendorTheme.secondaryColor}\n        backgroundColor={vendorTheme.backgroundColor}\n        textColor={vendorTheme.textColor}\n      />\n\n      <PageContainer backgroundColor={vendorTheme.backgroundColor}>\n        <BackButton onClick={handleBackToStores}>\n          <FaHome />\n          Back to Stores\n        </BackButton>\n\n        <Navbar\n          storeName={selectedVendor.name}\n          storeLogo={selectedVendor.logo}\n          storeSlug={selectedVendor.slug}\n          theme={vendorTheme}\n        />\n\n        <Breadcrumb>\n          <BreadcrumbNav>\n            <Link to=\"/ecommerce-stores\">All Stores</Link>\n            <span className=\"separator\">›</span>\n            <span className=\"current\">{selectedVendor.name}</span>\n          </BreadcrumbNav>\n        </Breadcrumb>\n\n        <HeroSection\n          primaryColor={vendorTheme.primaryColor}\n          secondaryColor={vendorTheme.secondaryColor}\n          heroImage={selectedVendor.image}\n        >\n          <HeroContent>\n            <StoreHeader>\n              <StoreLogo\n                src={selectedVendor.logo}\n                alt={`${selectedVendor.name} logo`}\n              />\n              <div>\n                <HeroTitle>Welcome to {selectedVendor.name}</HeroTitle>\n              </div>\n            </StoreHeader>\n            <HeroSubtitle>{selectedVendor.description}</HeroSubtitle>\n            <HeroActions>\n              <HeroButton\n                primaryColor={vendorTheme.primaryColor}\n                onClick={() => navigate(`products`)}\n              >\n                <FaShoppingBag />\n                Shop Now\n              </HeroButton>\n              <HeroButton\n                className=\"secondary\"\n                onClick={() => navigate(`products?category=electronics`)}\n              >\n                View Categories\n                <FaArrowRight />\n              </HeroButton>\n            </HeroActions>\n          </HeroContent>\n        </HeroSection>\n\n        <Section>\n          <Container>\n            <SectionHeader>\n              <SectionTitle textColor={vendorTheme.textColor}>\n                Shop by Category\n              </SectionTitle>\n              <SectionSubtitle>\n                Explore our diverse range of products across different\n                categories\n              </SectionSubtitle>\n            </SectionHeader>\n            <Grid minWidth=\"280px\">\n              {categories.map(category => (\n                <CategoryCard\n                  key={category.id}\n                  category={category}\n                  storeSlug={selectedVendor.slug}\n                />\n              ))}\n            </Grid>\n          </Container>\n        </Section>\n\n        <Section\n          background={vendorTheme.backgroundColor || theme.colors.gray50}\n        >\n          <Container>\n            <SectionHeader>\n              <SectionTitle textColor={vendorTheme.textColor}>\n                Featured Products\n              </SectionTitle>\n              <SectionSubtitle>\n                Handpicked items from {selectedVendor.name} that customers love\n                the most\n              </SectionSubtitle>\n            </SectionHeader>\n            <Grid>\n              {featuredProducts.slice(0, 4).map(product => (\n                <ProductCard\n                  key={product.id}\n                  product={product}\n                  storeSlug={selectedVendor.slug}\n                />\n              ))}\n            </Grid>\n          </Container>\n        </Section>\n\n        {saleProducts.length > 0 && (\n          <Section>\n            <Container>\n              <SectionHeader>\n                <SectionTitle textColor={vendorTheme.textColor}>\n                  🔥 Hot Deals\n                </SectionTitle>\n                <SectionSubtitle>\n                  Limited time offers from {selectedVendor.name} you don't want\n                  to miss\n                </SectionSubtitle>\n              </SectionHeader>\n              <Grid>\n                {saleProducts.slice(0, 4).map(product => (\n                  <ProductCard\n                    key={product.id}\n                    product={product}\n                    storeSlug={selectedVendor.slug}\n                  />\n                ))}\n              </Grid>\n            </Container>\n          </Section>\n        )}\n\n        <Footer storeSlug={selectedVendor.slug} theme={vendorTheme} />\n        <BackToTop />\n      </PageContainer>\n    </>\n  );\n};\n\nexport default EcommerceMain;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/pages/MyEnquiries.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaEnvelope,\n  FaPhone,\n  FaClock,\n  FaCheck,\n  FaEye,\n  FaExclamationCircle,\n  FaInbox,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport { getVendorByIdOrSlug } from '../data/vendors';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n  flex: 1;\n`;\n\nconst PageHeader = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst PageSubtitle = styled.p`\n  color: ${theme.colors.gray600};\n  font-size: 1rem;\n`;\n\nconst FiltersSection = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  margin-bottom: ${theme.spacing.xl};\n  display: flex;\n  gap: ${theme.spacing.md};\n  align-items: center;\n  flex-wrap: wrap;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.md};\n    flex-direction: column;\n    align-items: stretch;\n  }\n`;\n\nconst SearchInput = styled.input`\n  flex: 1;\n  min-width: 250px;\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray400};\n  }\n`;\n\nconst FilterSelect = styled.select`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.white};\n  font-size: 1rem;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst StatsSection = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst StatCard = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  text-align: center;\n`;\n\nconst StatNumber = styled.div`\n  font-size: 2rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst StatLabel = styled.div`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n`;\n\nconst EnquiriesList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.lg};\n`;\n\nconst EnquiryCard = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  overflow: hidden;\n  transition: all 0.2s ease;\n\n  &:hover {\n    box-shadow: ${theme.shadows.md};\n  }\n`;\n\nconst EnquiryHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: ${theme.spacing.lg};\n  border-bottom: 1px solid ${theme.colors.gray100};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst ProductInfo = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  flex: 1;\n`;\n\nconst ProductImage = styled.img`\n  width: 80px;\n  height: 80px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst ProductDetails = styled.div`\n  flex: 1;\n`;\n\nconst ProductName = styled.h3`\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n`;\n\nconst ProductPrice = styled.p`\n  font-size: 1rem;\n  font-weight: 600;\n  color: ${theme.colors.primary};\n  margin: 0 0 ${theme.spacing.sm} 0;\n`;\n\nconst EnquiryDate = styled.p`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray500};\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst StatusBadge = styled.span.withConfig({\n  shouldForwardProp: prop => prop !== 'status',\n})`\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  width: fit-content;\n\n  ${props => {\n    switch (props.status) {\n      case 'pending':\n        return `\n          background: ${theme.colors.warning}20;\n          color: ${theme.colors.warning};\n        `;\n      case 'contacted':\n        return `\n          background: ${theme.colors.info}20;\n          color: ${theme.colors.info};\n        `;\n      case 'in_progress':\n        return `\n          background: ${theme.colors.primary}20;\n          color: ${theme.colors.primary};\n        `;\n      case 'completed':\n        return `\n          background: ${theme.colors.success}20;\n          color: ${theme.colors.success};\n        `;\n      default:\n        return `\n          background: ${theme.colors.gray200};\n          color: ${theme.colors.gray600};\n        `;\n    }\n  }}\n`;\n\nconst EnquiryBody = styled.div`\n  padding: ${theme.spacing.lg};\n`;\n\nconst ContactInfo = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst ContactItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst Message = styled.div`\n  background: ${theme.colors.gray50};\n  padding: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  border-left: 4px solid ${theme.colors.primary};\n`;\n\nconst MessageLabel = styled.p`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.sm} 0;\n`;\n\nconst MessageText = styled.p`\n  color: ${theme.colors.gray700};\n  margin: 0;\n  line-height: 1.5;\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n`;\n\nconst EmptyIcon = styled.div`\n  font-size: 4rem;\n  color: ${theme.colors.gray300};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst EmptyTitle = styled.h3`\n  font-size: 1.5rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst EmptyText = styled.p`\n  color: ${theme.colors.gray500};\n  margin: 0;\n`;\n\nconst MyEnquiries = () => {\n  const location = useLocation();\n  const [enquiries, setEnquiries] = useState([]);\n  const [filteredEnquiries, setFilteredEnquiries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [vendor, setVendor] = useState(null);\n  const [storeSlug, setStoreSlug] = useState('');\n\n  // Detect store slug from URL\n  useEffect(() => {\n    const path = location.pathname;\n    if (path !== '/ecommerce/my-enquiries') {\n      const pathSegments = path.split('/').filter(Boolean);\n      const slug = pathSegments[0];\n      const foundVendor = getVendorByIdOrSlug(slug);\n      if (foundVendor) {\n        setStoreSlug(foundVendor.slug);\n        setVendor(foundVendor);\n      }\n    }\n  }, [location.pathname]);\n\n  useEffect(() => {\n    // Load enquiries from localStorage (in real app, this would be from API)\n    const userEnquiries = JSON.parse(\n      localStorage.getItem('userEnquiries') || '[]'\n    );\n    setEnquiries(userEnquiries);\n  }, []);\n\n  useEffect(() => {\n    let filtered = enquiries;\n\n    // Filter by search term\n    if (searchTerm) {\n      filtered = filtered.filter(\n        enquiry =>\n          enquiry.productName\n            .toLowerCase()\n            .includes(searchTerm.toLowerCase()) ||\n          enquiry.name.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n\n    // Filter by status\n    if (statusFilter !== 'all') {\n      filtered = filtered.filter(enquiry => enquiry.status === statusFilter);\n    }\n\n    // Sort by date (newest first)\n    filtered.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n\n    setFilteredEnquiries(filtered);\n  }, [enquiries, searchTerm, statusFilter]);\n\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'pending':\n        return <FaClock />;\n      case 'contacted':\n        return <FaPhone />;\n      case 'in_progress':\n        return <FaEye />;\n      case 'completed':\n        return <FaCheck />;\n      default:\n        return <FaExclamationCircle />;\n    }\n  };\n\n  const getStatusLabel = status => {\n    switch (status) {\n      case 'pending':\n        return 'Pending';\n      case 'contacted':\n        return 'Contacted';\n      case 'in_progress':\n        return 'In Progress';\n      case 'completed':\n        return 'Completed';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  const getStats = () => {\n    const total = enquiries.length;\n    const pending = enquiries.filter(e => e.status === 'pending').length;\n    const inProgress = enquiries.filter(\n      e => e.status === 'in_progress' || e.status === 'contacted'\n    ).length;\n    const completed = enquiries.filter(e => e.status === 'completed').length;\n\n    return { total, pending, inProgress, completed };\n  };\n\n  const stats = getStats();\n\n  return (\n    <PageContainer>\n      <Navbar\n        storeName={vendor?.name || ''}\n        storeLogo={vendor?.logo || ''}\n        storeSlug={storeSlug}\n        theme={vendor?.theme || {}}\n      />\n\n      <Container>\n        <PageHeader>\n          <PageTitle>My Enquiries</PageTitle>\n          <PageSubtitle>Track and manage your product enquiries</PageSubtitle>\n        </PageHeader>\n\n        <StatsSection>\n          <StatCard>\n            <StatNumber>{stats.total}</StatNumber>\n            <StatLabel>Total Enquiries</StatLabel>\n          </StatCard>\n          <StatCard>\n            <StatNumber>{stats.pending}</StatNumber>\n            <StatLabel>Pending</StatLabel>\n          </StatCard>\n          <StatCard>\n            <StatNumber>{stats.inProgress}</StatNumber>\n            <StatLabel>In Progress</StatLabel>\n          </StatCard>\n          <StatCard>\n            <StatNumber>{stats.completed}</StatNumber>\n            <StatLabel>Completed</StatLabel>\n          </StatCard>\n        </StatsSection>\n\n        <FiltersSection>\n          <SearchInput\n            type=\"text\"\n            placeholder=\"Search by product name or your name...\"\n            value={searchTerm}\n            onChange={e => setSearchTerm(e.target.value)}\n          />\n          <FilterSelect\n            value={statusFilter}\n            onChange={e => setStatusFilter(e.target.value)}\n          >\n            <option value=\"all\">All Status</option>\n            <option value=\"pending\">Pending</option>\n            <option value=\"contacted\">Contacted</option>\n            <option value=\"in_progress\">In Progress</option>\n            <option value=\"completed\">Completed</option>\n          </FilterSelect>\n        </FiltersSection>\n\n        <EnquiriesList>\n          {filteredEnquiries.length > 0 ? (\n            filteredEnquiries.map(enquiry => (\n              <EnquiryCard key={enquiry.id}>\n                <EnquiryHeader>\n                  <ProductInfo>\n                    <ProductImage\n                      src=\"https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=80&h=80&fit=crop\"\n                      alt={enquiry.productName}\n                    />\n                    <ProductDetails>\n                      <ProductName>{enquiry.productName}</ProductName>\n                      <ProductPrice>${enquiry.productPrice}</ProductPrice>\n                      <EnquiryDate>\n                        <FaClock />\n                        Enquired on {formatDate(enquiry.timestamp)}\n                      </EnquiryDate>\n                    </ProductDetails>\n                  </ProductInfo>\n                  <StatusBadge status={enquiry.status}>\n                    {getStatusIcon(enquiry.status)}\n                    {getStatusLabel(enquiry.status)}\n                  </StatusBadge>\n                </EnquiryHeader>\n\n                <EnquiryBody>\n                  <ContactInfo>\n                    <ContactItem>\n                      <FaEnvelope />\n                      <span>{enquiry.email}</span>\n                    </ContactItem>\n                    <ContactItem>\n                      <FaPhone />\n                      <span>{enquiry.phone}</span>\n                    </ContactItem>\n                  </ContactInfo>\n\n                  {enquiry.message && (\n                    <Message>\n                      <MessageLabel>Your Message:</MessageLabel>\n                      <MessageText>{enquiry.message}</MessageText>\n                    </Message>\n                  )}\n                </EnquiryBody>\n              </EnquiryCard>\n            ))\n          ) : (\n            <EmptyState>\n              <EmptyIcon>\n                <FaInbox />\n              </EmptyIcon>\n              <EmptyTitle>No Enquiries Found</EmptyTitle>\n              <EmptyText>\n                {searchTerm || statusFilter !== 'all'\n                  ? 'No enquiries match your current filters. Try adjusting your search or filter criteria.'\n                  : \"You haven't made any product enquiries yet. Start exploring products and make your first enquiry!\"}\n              </EmptyText>\n            </EmptyState>\n          )}\n        </EnquiriesList>\n      </Container>\n\n      <Footer storeSlug={storeSlug} theme={vendor?.theme || {}} />\n    </PageContainer>\n  );\n};\n\nexport default MyEnquiries;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/pages/OrderConfirmation.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":286,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":286,"endColumn":53}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaCheckCircle,\n  FaEnvelope,\n  FaTruck,\n  FaCalendarAlt,\n  FaPrint,\n  FaDownload,\n  FaShoppingBag,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n  flex: 1;\n`;\n\nconst SuccessCard = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  box-shadow: ${theme.shadows.lg};\n  padding: ${theme.spacing.xxl};\n  text-align: center;\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst SuccessIcon = styled.div`\n  width: 100px;\n  height: 100px;\n  background: ${theme.colors.success};\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto ${theme.spacing.xl};\n  animation: pulse 2s ease-in-out infinite;\n\n  @keyframes pulse {\n    0% {\n      transform: scale(1);\n    }\n    50% {\n      transform: scale(1.05);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n\n  .icon {\n    font-size: 3rem;\n    color: ${theme.colors.white};\n  }\n`;\n\nconst SuccessTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst SuccessMessage = styled.p`\n  font-size: 1.1rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.xl};\n  line-height: 1.6;\n`;\n\nconst OrderNumber = styled.div`\n  background: ${theme.colors.gray100};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  margin-bottom: ${theme.spacing.xl};\n  border-left: 4px solid ${theme.colors.primary};\n\n  .label {\n    font-size: 0.9rem;\n    color: ${theme.colors.gray600};\n    margin-bottom: ${theme.spacing.xs};\n  }\n\n  .number {\n    font-size: 1.2rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    font-family: monospace;\n  }\n`;\n\nconst OrderDetails = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  padding: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.3rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst InfoGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst InfoCard = styled.div`\n  background: ${theme.colors.gray50};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  border-left: 3px solid ${theme.colors.primary};\n\n  .icon {\n    color: ${theme.colors.primary};\n    margin-bottom: ${theme.spacing.sm};\n    font-size: 1.2rem;\n  }\n\n  .title {\n    font-size: 0.9rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.sm};\n  }\n\n  .content {\n    color: ${theme.colors.gray700};\n    font-size: 0.9rem;\n    line-height: 1.5;\n  }\n`;\n\nconst Timeline = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst TimelineItem = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'completed',\n})`\n  display: flex;\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.lg};\n  position: relative;\n\n  &:not(:last-child)::after {\n    content: '';\n    position: absolute;\n    left: 12px;\n    top: 30px;\n    width: 2px;\n    height: 40px;\n    background: ${props =>\n      props.completed ? theme.colors.success : theme.colors.gray300};\n  }\n`;\n\nconst TimelineIcon = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'completed',\n})`\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background: ${props =>\n    props.completed ? theme.colors.success : theme.colors.gray300};\n  color: ${theme.colors.white};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.8rem;\n  flex-shrink: 0;\n  margin-top: 2px;\n`;\n\nconst TimelineContent = styled.div`\n  .title {\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.xs};\n  }\n\n  .description {\n    font-size: 0.9rem;\n    color: ${theme.colors.gray600};\n    margin-bottom: ${theme.spacing.xs};\n  }\n\n  .date {\n    font-size: 0.8rem;\n    color: ${theme.colors.gray500};\n  }\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  justify-content: center;\n  margin-bottom: ${theme.spacing.xl};\n  flex-wrap: wrap;\n`;\n\nconst ActionButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'primary',\n})`\n  background: ${props =>\n    props.primary ? theme.colors.primary : theme.colors.white};\n  color: ${props =>\n    props.primary ? theme.colors.white : theme.colors.gray700};\n  border: 2px solid\n    ${props => (props.primary ? theme.colors.primary : theme.colors.gray200)};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    background: ${props =>\n      props.primary ? theme.colors.primaryDark : theme.colors.gray50};\n    transform: translateY(-1px);\n  }\n`;\n\nconst ContinueShoppingButton = styled(Link)`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.lg} ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  text-decoration: none;\n  font-weight: 600;\n  font-size: 1.1rem;\n  transition: all 0.2s ease;\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  box-shadow: ${theme.shadows.md};\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-2px);\n    box-shadow: ${theme.shadows.lg};\n  }\n`;\n\nconst OrderConfirmation = () => {\n  const location = useLocation();\n  const orderData = location.state || {\n    orderNumber: 'ORD-' + Date.now(),\n    total: 489.97,\n    paymentMethod: 'card',\n    email: 'customer@example.com',\n  };\n\n  useEffect(() => {\n    // Scroll to top when component mounts\n    window.scrollTo(0, 0);\n  }, []);\n\n  const handlePrint = () => {\n    window.print();\n  };\n\n  const handleDownload = () => {\n    // Mock download functionality\n    alert('Order receipt download would start here');\n  };\n\n  const getEstimatedDelivery = () => {\n    const date = new Date();\n    date.setDate(date.getDate() + 5); // Add 5 days\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    });\n  };\n\n  const getPaymentMethodName = method => {\n    switch (method) {\n      case 'card':\n        return 'Credit Card';\n      case 'paypal':\n        return 'PayPal';\n      case 'apple':\n        return 'Apple Pay';\n      case 'google':\n        return 'Google Pay';\n      default:\n        return 'Credit Card';\n    }\n  };\n\n  const timelineSteps = [\n    {\n      title: 'Order Confirmed',\n      description: 'Your order has been received and confirmed',\n      date: new Date().toLocaleDateString(),\n      completed: true,\n    },\n    {\n      title: 'Payment Processed',\n      description: 'Payment successfully processed',\n      date: new Date().toLocaleDateString(),\n      completed: true,\n    },\n    {\n      title: 'Preparing for Shipment',\n      description: 'Your items are being prepared for shipping',\n      date: 'In progress',\n      completed: false,\n    },\n    {\n      title: 'Shipped',\n      description: 'Your order is on its way',\n      date: 'Pending',\n      completed: false,\n    },\n    {\n      title: 'Delivered',\n      description: 'Your order has been delivered',\n      date: getEstimatedDelivery(),\n      completed: false,\n    },\n  ];\n\n  return (\n    <PageContainer>\n      <Navbar cartItemsCount={0} />\n\n      <Container>\n        <SuccessCard>\n          <SuccessIcon>\n            <FaCheckCircle className=\"icon\" />\n          </SuccessIcon>\n\n          <SuccessTitle>Order Confirmed!</SuccessTitle>\n          <SuccessMessage>\n            Thank you for your purchase! Your order has been successfully placed\n            and we've sent a confirmation email to {orderData.email}.\n          </SuccessMessage>\n\n          <OrderNumber>\n            <div className=\"label\">Order Number</div>\n            <div className=\"number\">{orderData.orderNumber}</div>\n          </OrderNumber>\n\n          <ActionButtons>\n            <ActionButton onClick={handlePrint}>\n              <FaPrint />\n              Print Receipt\n            </ActionButton>\n            <ActionButton onClick={handleDownload}>\n              <FaDownload />\n              Download Receipt\n            </ActionButton>\n          </ActionButtons>\n\n          <ContinueShoppingButton to=\"/ecommerce/products\">\n            <FaShoppingBag />\n            Continue Shopping\n          </ContinueShoppingButton>\n        </SuccessCard>\n\n        <OrderDetails>\n          <SectionTitle>Order Information</SectionTitle>\n\n          <InfoGrid>\n            <InfoCard>\n              <FaEnvelope className=\"icon\" />\n              <div className=\"title\">Confirmation Email</div>\n              <div className=\"content\">\n                A confirmation email has been sent to:\n                <br />\n                <strong>{orderData.email}</strong>\n              </div>\n            </InfoCard>\n\n            <InfoCard>\n              <FaTruck className=\"icon\" />\n              <div className=\"title\">Estimated Delivery</div>\n              <div className=\"content\">\n                <strong>{getEstimatedDelivery()}</strong>\n                <br />\n                Free standard shipping\n              </div>\n            </InfoCard>\n\n            <InfoCard>\n              <FaCalendarAlt className=\"icon\" />\n              <div className=\"title\">Payment Method</div>\n              <div className=\"content\">\n                {getPaymentMethodName(orderData.paymentMethod)}\n                <br />\n                <strong>Total: ${orderData.total.toFixed(2)}</strong>\n              </div>\n            </InfoCard>\n          </InfoGrid>\n\n          <SectionTitle>Order Status</SectionTitle>\n          <Timeline>\n            {timelineSteps.map((step, index) => (\n              <TimelineItem key={index} completed={step.completed}>\n                <TimelineIcon completed={step.completed}>\n                  {step.completed ? <FaCheckCircle /> : index + 1}\n                </TimelineIcon>\n                <TimelineContent>\n                  <div className=\"title\">{step.title}</div>\n                  <div className=\"description\">{step.description}</div>\n                  <div className=\"date\">{step.date}</div>\n                </TimelineContent>\n              </TimelineItem>\n            ))}\n          </Timeline>\n\n          <div\n            style={{\n              background: theme.colors.gray50,\n              padding: theme.spacing.lg,\n              borderRadius: theme.borderRadius.md,\n              textAlign: 'center',\n            }}\n          >\n            <p style={{ margin: 0, color: theme.colors.gray700 }}>\n              <strong>Need help?</strong> Contact our customer support at{' '}\n              <a\n                href=\"mailto:support@shopmart.com\"\n                style={{ color: theme.colors.primary }}\n              >\n                support@shopmart.com\n              </a>{' '}\n              or call{' '}\n              <a\n                href=\"tel:+15551234567\"\n                style={{ color: theme.colors.primary }}\n              >\n                (555) 123-4567\n              </a>\n            </p>\n          </div>\n        </OrderDetails>\n      </Container>\n\n      <Footer />\n    </PageContainer>\n  );\n};\n\nexport default OrderConfirmation;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/pages/ProductDetail.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":534,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":534,"endColumn":49}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, Link, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaStar,\n  FaHeart,\n  FaEnvelope,\n  FaShare,\n  FaArrowLeft,\n  FaCheck,\n  FaTruck,\n  FaUndoAlt,\n  FaShieldAlt,\n  FaUser,\n  FaStore,\n  FaMapMarkerAlt,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport ProductCard from '../components/ProductCard';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport EnquiryModal from '../components/EnquiryModal';\nimport {\n  getProductById,\n  ecommerceProducts as products,\n  getProductAvailabilityStatus as getAvailabilityStatus,\n  getProductAvailabilityLabel as getAvailabilityLabel,\n  getEcommerceVendorByIdOrSlug as getVendorByIdOrSlug,\n} from '../../DummyData';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n  flex: 1;\n`;\n\nconst Breadcrumb = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.xl};\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n\n  a {\n    color: ${theme.colors.primary};\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst BackButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  color: ${theme.colors.gray700};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  margin-bottom: ${theme.spacing.lg};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst ProductContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${theme.spacing.xxl};\n  margin-bottom: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.xl};\n  }\n`;\n\nconst ImageSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.lg};\n`;\n\nconst MainImage = styled.img`\n  width: 100%;\n  height: 500px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    height: 300px;\n  }\n`;\n\nconst ThumbnailContainer = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  overflow-x: auto;\n  padding-bottom: ${theme.spacing.sm};\n`;\n\nconst Thumbnail = styled.img.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  width: 80px;\n  height: 80px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  border: 2px solid\n    ${props => (props.active ? theme.colors.primary : theme.colors.gray200)};\n  transition: all 0.2s ease;\n  flex-shrink: 0;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst ProductInfo = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  height: fit-content;\n`;\n\nconst ProductName = styled.h1`\n  font-size: 2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n  line-height: 1.3;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.5rem;\n  }\n`;\n\nconst RatingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst StarRating = styled.div`\n  display: flex;\n  gap: 2px;\n`;\n\nconst Star = styled(FaStar).withConfig({\n  shouldForwardProp: prop => prop !== 'filled',\n})`\n  color: ${props => (props.filled ? '#fbbf24' : theme.colors.gray300)};\n  font-size: 1rem;\n`;\n\nconst ReviewInfo = styled.span`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n`;\n\nconst PriceContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst CurrentPrice = styled.span`\n  font-size: 2rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n`;\n\nconst OriginalPrice = styled.span`\n  font-size: 1.3rem;\n  color: ${theme.colors.gray500};\n  text-decoration: line-through;\n`;\n\nconst Discount = styled.span`\n  background: ${theme.colors.error};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 600;\n`;\n\nconst Description = styled.p`\n  color: ${theme.colors.gray700};\n  line-height: 1.6;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst Features = styled.div`\n  margin-bottom: ${theme.spacing.lg};\n\n  h3 {\n    font-size: 1.1rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.sm};\n  }\n`;\n\nconst FeatureList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nconst FeatureItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.gray700};\n  margin-bottom: ${theme.spacing.xs};\n  font-size: 0.9rem;\n\n  &::before {\n    content: '';\n    width: 6px;\n    height: 6px;\n    background: ${theme.colors.success};\n    border-radius: 50%;\n    flex-shrink: 0;\n  }\n`;\n\nconst VariantSection = styled.div`\n  margin-bottom: ${theme.spacing.lg};\n\n  h3 {\n    font-size: 1rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.sm};\n  }\n`;\n\nconst VariantOptions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n  flex-wrap: wrap;\n`;\n\nconst VariantOption = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'selected',\n})`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid\n    ${props => (props.selected ? theme.colors.primary : theme.colors.gray200)};\n  background: ${props =>\n    props.selected ? theme.colors.primary : theme.colors.white};\n  color: ${props =>\n    props.selected ? theme.colors.white : theme.colors.gray700};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst StockInfo = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'inStock',\n})`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.lg};\n  color: ${props =>\n    props.inStock ? theme.colors.success : theme.colors.error};\n  font-weight: 600;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n  }\n`;\n\nconst EnquireButton = styled.button`\n  flex: 1;\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  font-size: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n  transition: all 0.2s ease;\n  cursor: pointer;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-2px);\n  }\n\n  &:disabled {\n    background: ${theme.colors.gray400};\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst WishlistButton = styled.button`\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  padding: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  color: ${theme.colors.gray700};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    border-color: ${theme.colors.error};\n    color: ${theme.colors.error};\n  }\n`;\n\nconst ShareButton = styled.button`\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  padding: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  color: ${theme.colors.gray700};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst Guarantees = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: ${theme.spacing.md};\n  padding-top: ${theme.spacing.lg};\n  border-top: 1px solid ${theme.colors.gray200};\n`;\n\nconst GuaranteeItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst RelatedSection = styled.section`\n  margin-top: ${theme.spacing.xxl};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.8rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xl};\n  text-align: center;\n`;\n\nconst RelatedGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: ${theme.spacing.xl};\n`;\n\nconst SellerInfo = styled.div`\n  background: ${theme.colors.gray50};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst SellerHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst SellerLogo = styled.img`\n  width: 60px;\n  height: 60px;\n  border-radius: ${theme.borderRadius.md};\n  object-fit: cover;\n`;\n\nconst SellerDetails = styled.div`\n  flex: 1;\n`;\n\nconst SellerName = styled.h4`\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.xs} 0;\n`;\n\nconst SellerBadge = styled.span`\n  background: ${theme.colors.success};\n  color: ${theme.colors.white};\n  padding: 2px 8px;\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.7rem;\n  font-weight: 600;\n  text-transform: uppercase;\n`;\n\nconst SellerMeta = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.md};\n  margin-top: ${theme.spacing.md};\n`;\n\nconst SellerMetaItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst ProductDetail = () => {\n  const { productId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [product, setProduct] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(0);\n  const [selectedSize, setSelectedSize] = useState('');\n  const [relatedProducts, setRelatedProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [storeSlug, setStoreSlug] = useState('');\n  const [vendor, setVendor] = useState(null);\n  const [isEnquiryModalOpen, setIsEnquiryModalOpen] = useState(false);\n\n  // Detect store slug from URL\n  useEffect(() => {\n    const path = location.pathname;\n    if (path !== `/ecommerce/product/${productId}`) {\n      // Extract store slug from URL like \"/techmart-downtown/product/4\"\n      const pathSegments = path.split('/').filter(Boolean);\n      const slug = pathSegments[0];\n      const foundVendor = getVendorByIdOrSlug(slug);\n      if (foundVendor) {\n        setStoreSlug(foundVendor.slug);\n        setVendor(foundVendor);\n      }\n    }\n  }, [location.pathname, productId]);\n\n  useEffect(() => {\n    setLoading(true);\n    const foundProduct = getProductById(productId);\n\n    if (foundProduct) {\n      setProduct(foundProduct);\n\n      // Get related products from same category\n      const related = products\n        .filter(\n          p =>\n            p.categoryId === foundProduct.categoryId &&\n            p.productId !== foundProduct.productId\n        )\n        .slice(0, 4);\n      setRelatedProducts(related);\n\n      // Set default size if available\n      if (foundProduct.sizes && foundProduct.sizes.length > 0) {\n        setSelectedSize(foundProduct.sizes[0]);\n      }\n    }\n\n    setLoading(false);\n  }, [productId]);\n\n  const getBaseUrl = () => (storeSlug ? `/${storeSlug}` : '/ecommerce');\n\n  const handleEnquireClick = () => {\n    setIsEnquiryModalOpen(true);\n  };\n\n  const handleShare = () => {\n    if (navigator.share) {\n      navigator.share({\n        title: product.name,\n        text: product.description,\n        url: window.location.href,\n      });\n    } else {\n      navigator.clipboard.writeText(window.location.href);\n      alert('Product link copied to clipboard!');\n    }\n  };\n\n  const renderStars = rating => {\n    const stars = [];\n    for (let i = 1; i <= 5; i++) {\n      stars.push(<Star key={i} filled={i <= Math.floor(rating)} />);\n    }\n    return stars;\n  };\n\n  const calculateDiscount = (original, current) => {\n    return Math.round(((original - current) / original) * 100);\n  };\n\n  if (loading) {\n    return (\n      <PageContainer>\n        <Navbar\n          storeName={vendor?.name || ''}\n          storeLogo={vendor?.logo || ''}\n          storeSlug={storeSlug}\n          theme={vendor?.theme || {}}\n        />\n        <LoadingSpinner fullPage text=\"Loading product...\" />\n        <Footer storeSlug={storeSlug} theme={vendor?.theme || {}} />\n      </PageContainer>\n    );\n  }\n\n  if (!product) {\n    return (\n      <PageContainer>\n        <Navbar\n          storeName={vendor?.name || ''}\n          storeLogo={vendor?.logo || ''}\n          storeSlug={storeSlug}\n          theme={vendor?.theme || {}}\n        />\n        <Container>\n          <div style={{ textAlign: 'center', padding: '4rem 0' }}>\n            <h2>Product not found</h2>\n            <p style={{ margin: '1rem 0', color: theme.colors.gray600 }}>\n              The product you're looking for doesn't exist.\n            </p>\n            <Link\n              to={`${getBaseUrl()}/products`}\n              style={{ color: theme.colors.primary }}\n            >\n              Back to Products\n            </Link>\n          </div>\n        </Container>\n        <Footer storeSlug={storeSlug} theme={vendor?.theme || {}} />\n      </PageContainer>\n    );\n  }\n\n  return (\n    <PageContainer>\n      <Navbar\n        storeName={vendor?.name || ''}\n        storeLogo={vendor?.logo || ''}\n        storeSlug={storeSlug}\n        theme={vendor?.theme || {}}\n      />\n\n      <Container>\n        <BackButton onClick={() => navigate(-1)}>\n          <FaArrowLeft />\n          Back\n        </BackButton>\n\n        <Breadcrumb>\n          <Link to={getBaseUrl()}>Home</Link>\n          <span>/</span>\n          <Link to={`${getBaseUrl()}/products`}>Products</Link>\n          <span>/</span>\n          <Link to={`${getBaseUrl()}/products?category=${product.category}`}>\n            {product.category.replace('-', ' ')}\n          </Link>\n          <span>/</span>\n          <span>{product.name}</span>\n        </Breadcrumb>\n\n        <ProductContainer>\n          <ImageSection>\n            <MainImage\n              src={\n                product.images ? product.images[selectedImage] : product.image\n              }\n              alt={product.name}\n            />\n\n            {product.images && product.images.length > 1 && (\n              <ThumbnailContainer>\n                {product.images.map((image, index) => (\n                  <Thumbnail\n                    key={index}\n                    src={image}\n                    alt={`${product.name} ${index + 1}`}\n                    active={selectedImage === index}\n                    onClick={() => setSelectedImage(index)}\n                  />\n                ))}\n              </ThumbnailContainer>\n            )}\n          </ImageSection>\n\n          <ProductInfo>\n            <ProductName>{product.name}</ProductName>\n\n            <RatingContainer>\n              <StarRating>{renderStars(product.rating)}</StarRating>\n              <ReviewInfo>\n                {product.rating} ({product.reviews} reviews)\n              </ReviewInfo>\n            </RatingContainer>\n\n            <PriceContainer>\n              <CurrentPrice>${product.price}</CurrentPrice>\n              {product.originalPrice &&\n                product.originalPrice > product.price && (\n                  <>\n                    <OriginalPrice>${product.originalPrice}</OriginalPrice>\n                    <Discount>\n                      -{calculateDiscount(product.originalPrice, product.price)}\n                      % OFF\n                    </Discount>\n                  </>\n                )}\n            </PriceContainer>\n\n            <Description>{product.description}</Description>\n\n            {product.features && (\n              <Features>\n                <h3>Key Features:</h3>\n                <FeatureList>\n                  {product.features.map((feature, index) => (\n                    <FeatureItem key={index}>{feature}</FeatureItem>\n                  ))}\n                </FeatureList>\n              </Features>\n            )}\n\n            {product.sizes && (\n              <VariantSection>\n                <h3>Size:</h3>\n                <VariantOptions>\n                  {product.sizes.map(size => (\n                    <VariantOption\n                      key={size}\n                      selected={selectedSize === size}\n                      onClick={() => setSelectedSize(size)}\n                    >\n                      {size}\n                    </VariantOption>\n                  ))}\n                </VariantOptions>\n              </VariantSection>\n            )}\n\n            <StockInfo\n              inStock={getAvailabilityStatus(product) !== 'out_of_stock'}\n            >\n              <FaCheck />\n              {getAvailabilityLabel(getAvailabilityStatus(product))}\n              {getAvailabilityStatus(product) === 'in_stock' &&\n                product.stock > 0 && (\n                  <span\n                    style={{\n                      marginLeft: '8px',\n                      fontSize: '0.9rem',\n                      opacity: 0.8,\n                    }}\n                  >\n                    ({product.stock} units available)\n                  </span>\n                )}\n            </StockInfo>\n\n            <SellerInfo>\n              <SellerHeader>\n                <SellerLogo\n                  src={\n                    vendor?.logo ||\n                    'https://images.unsplash.com/photo-1560472354-b33ff0c44a43?w=80&h=80&fit=crop&crop=center'\n                  }\n                  alt={vendor?.name || 'Seller'}\n                />\n                <SellerDetails>\n                  <SellerName>{vendor?.name || 'TechMart Downtown'}</SellerName>\n                  <SellerBadge>Verified Seller</SellerBadge>\n                </SellerDetails>\n              </SellerHeader>\n              <SellerMeta>\n                <SellerMetaItem>\n                  <FaStore />\n                  <span>Electronics Store</span>\n                </SellerMetaItem>\n                <SellerMetaItem>\n                  <FaMapMarkerAlt />\n                  <span>Downtown Area</span>\n                </SellerMetaItem>\n                <SellerMetaItem>\n                  <FaUser />\n                  <span>500+ Products</span>\n                </SellerMetaItem>\n                <SellerMetaItem>\n                  <FaStar />\n                  <span>4.8 Rating</span>\n                </SellerMetaItem>\n              </SellerMeta>\n            </SellerInfo>\n\n            <ActionButtons>\n              <EnquireButton\n                onClick={handleEnquireClick}\n                disabled={\n                  getAvailabilityStatus(product) === 'out_of_stock' ||\n                  (product.sizes && !selectedSize)\n                }\n              >\n                <FaEnvelope />\n                {getAvailabilityStatus(product) === 'out_of_stock'\n                  ? 'Not Available'\n                  : 'Enquire Now'}\n              </EnquireButton>\n\n              <WishlistButton title=\"Add to Wishlist\">\n                <FaHeart />\n              </WishlistButton>\n\n              <ShareButton onClick={handleShare} title=\"Share Product\">\n                <FaShare />\n              </ShareButton>\n            </ActionButtons>\n\n            <Guarantees>\n              <GuaranteeItem>\n                <FaTruck />\n                Free shipping over $99\n              </GuaranteeItem>\n              <GuaranteeItem>\n                <FaUndoAlt />\n                30-day returns\n              </GuaranteeItem>\n              <GuaranteeItem>\n                <FaShieldAlt />\n                2-year warranty\n              </GuaranteeItem>\n            </Guarantees>\n          </ProductInfo>\n        </ProductContainer>\n\n        {relatedProducts.length > 0 && (\n          <RelatedSection>\n            <SectionTitle>Related Products</SectionTitle>\n            <RelatedGrid>\n              {relatedProducts.map(relatedProduct => (\n                <ProductCard\n                  key={relatedProduct.productId}\n                  product={relatedProduct}\n                  storeSlug={storeSlug}\n                />\n              ))}\n            </RelatedGrid>\n          </RelatedSection>\n        )}\n      </Container>\n\n      <EnquiryModal\n        isOpen={isEnquiryModalOpen}\n        onClose={() => setIsEnquiryModalOpen(false)}\n        product={product}\n      />\n\n      <Footer storeSlug={storeSlug} theme={vendor?.theme || {}} />\n    </PageContainer>\n  );\n};\n\nexport default ProductDetail;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/pages/ProductList.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaTh, FaList, FaTimes } from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport ProductCard from '../components/ProductCard';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport {\n  ecommerceProducts as products,\n  ecommerceCategories as categories,\n  getProductsByCategory,\n  getEcommerceVendorByIdOrSlug as getVendorByIdOrSlug,\n} from '../../DummyData';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n  flex: 1;\n`;\n\nconst PageHeader = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst ResultsInfo = styled.p`\n  color: ${theme.colors.gray600};\n  font-size: 1rem;\n`;\n\nconst FiltersBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.xl};\n  flex-wrap: wrap;\n  gap: ${theme.spacing.md};\n`;\n\nconst FilterGroup = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  flex-wrap: wrap;\n`;\n\nconst FilterButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  color: ${theme.colors.gray700};\n  font-weight: 500;\n  transition: all 0.2s ease;\n  cursor: pointer;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n  }\n\n  &.active {\n    background: ${theme.colors.primary};\n    color: ${theme.colors.white};\n    border-color: ${theme.colors.primary};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 0.9rem;\n    padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  }\n`;\n\nconst Select = styled.select`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.white};\n  color: ${theme.colors.gray700};\n  font-weight: 500;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst ViewToggle = styled.div`\n  display: flex;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  overflow: hidden;\n`;\n\nconst ViewButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  background: ${props =>\n    props.active ? theme.colors.primary : theme.colors.white};\n  color: ${props => (props.active ? theme.colors.white : theme.colors.gray700)};\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${props =>\n      props.active ? theme.colors.primaryDark : theme.colors.gray100};\n  }\n`;\n\nconst ActiveFilters = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst ActiveFilter = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n`;\n\nconst RemoveFilterButton = styled.button`\n  background: none;\n  border: none;\n  color: ${theme.colors.white};\n  cursor: pointer;\n  padding: 0;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ProductsGrid = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'view',\n})`\n  display: grid;\n  grid-template-columns: ${props =>\n    props.view === 'list' ? '1fr' : 'repeat(auto-fill, minmax(280px, 1fr))'};\n  gap: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst NoResults = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray900};\n  }\n\n  p {\n    font-size: 1rem;\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst ClearFiltersButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.sm} ${theme.spacing.lg};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n  }\n`;\n\nconst ProductList = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [sortBy, setSortBy] = useState('name');\n  const [view, setView] = useState('grid');\n  const [loading, setLoading] = useState(true);\n  const [storeSlug, setStoreSlug] = useState('');\n  const [vendor, setVendor] = useState(null);\n\n  // Detect store slug from URL\n  useEffect(() => {\n    const path = location.pathname;\n    if (path !== '/ecommerce/products') {\n      // Extract store slug from URL like \"/techmart-downtown/products\"\n      const pathSegments = path.split('/').filter(Boolean);\n      const slug = pathSegments[0];\n      const foundVendor = getVendorByIdOrSlug(slug);\n      if (foundVendor) {\n        setStoreSlug(foundVendor.slug);\n        setVendor(foundVendor);\n      }\n    }\n  }, [location.pathname]);\n\n  // Get URL parameters\n  const category = searchParams.get('category');\n  const searchQuery = searchParams.get('search');\n  const featured = searchParams.get('featured');\n  const sale = searchParams.get('sale');\n\n  useEffect(() => {\n    setLoading(true);\n    let result = [...products];\n\n    // Filter by category\n    if (category) {\n      result = getProductsByCategory(category);\n    }\n\n    // Filter by search query\n    if (searchQuery) {\n      const query = searchQuery.toLowerCase();\n      result = result.filter(\n        product =>\n          product.name.toLowerCase().includes(query) ||\n          product.description.toLowerCase().includes(query) ||\n          product.category.toLowerCase().includes(query)\n      );\n    }\n\n    // Filter by featured\n    if (featured === 'true') {\n      result = result.filter(product => product.featured);\n    }\n\n    // Filter by sale\n    if (sale === 'true') {\n      result = result.filter(product => product.onSale);\n    }\n\n    // Sort products\n    result.sort((a, b) => {\n      switch (sortBy) {\n        case 'price-low':\n          return a.price - b.price;\n        case 'price-high':\n          return b.price - a.price;\n        case 'rating':\n          return b.rating - a.rating;\n        case 'newest':\n          return b.id - a.id;\n        default:\n          return a.name.localeCompare(b.name);\n      }\n    });\n\n    setFilteredProducts(result);\n    setLoading(false);\n  }, [category, searchQuery, featured, sale, sortBy]);\n\n  const getPageTitle = () => {\n    if (searchQuery) return `Search Results for \"${searchQuery}\"`;\n    if (category) {\n      const cat = categories.find(c => c.slug === category);\n      return cat ? cat.name : 'Products';\n    }\n    if (featured === 'true') return 'Featured Products';\n    if (sale === 'true') return 'Sale Items';\n    return 'All Products';\n  };\n\n  const getActiveFilters = () => {\n    const filters = [];\n    if (category) {\n      const cat = categories.find(c => c.slug === category);\n      if (cat)\n        filters.push({ type: 'category', value: cat.name, param: 'category' });\n    }\n    if (searchQuery)\n      filters.push({ type: 'search', value: searchQuery, param: 'search' });\n    if (featured === 'true')\n      filters.push({ type: 'featured', value: 'Featured', param: 'featured' });\n    if (sale === 'true')\n      filters.push({ type: 'sale', value: 'On Sale', param: 'sale' });\n    return filters;\n  };\n\n  const removeFilter = param => {\n    const newParams = new URLSearchParams(searchParams);\n    newParams.delete(param);\n    setSearchParams(newParams);\n  };\n\n  const clearAllFilters = () => {\n    setSearchParams({});\n  };\n\n  const setCategoryFilter = categorySlug => {\n    const newParams = new URLSearchParams(searchParams);\n    if (categorySlug) {\n      newParams.set('category', categorySlug);\n    } else {\n      newParams.delete('category');\n    }\n    setSearchParams(newParams);\n  };\n\n  const activeFilters = getActiveFilters();\n\n  if (loading) {\n    return (\n      <PageContainer>\n        <Navbar\n          storeName={vendor?.name || ''}\n          storeLogo={vendor?.logo || ''}\n          storeSlug={storeSlug}\n          theme={vendor?.theme || {}}\n        />\n        <LoadingSpinner fullPage text=\"Loading products...\" />\n        <Footer storeSlug={storeSlug} theme={vendor?.theme || {}} />\n      </PageContainer>\n    );\n  }\n\n  return (\n    <PageContainer>\n      <Navbar\n        storeName={vendor?.name || ''}\n        storeLogo={vendor?.logo || ''}\n        storeSlug={storeSlug}\n        theme={vendor?.theme || {}}\n      />\n\n      <Container>\n        <PageHeader>\n          <PageTitle>{getPageTitle()}</PageTitle>\n          <ResultsInfo>\n            Showing {filteredProducts.length} product\n            {filteredProducts.length !== 1 ? 's' : ''}\n          </ResultsInfo>\n        </PageHeader>\n\n        <FiltersBar>\n          <FilterGroup>\n            <FilterButton\n              className={!category ? 'active' : ''}\n              onClick={() => setCategoryFilter('')}\n            >\n              All\n            </FilterButton>\n            {categories.map(cat => (\n              <FilterButton\n                key={cat.id}\n                className={category === cat.slug ? 'active' : ''}\n                onClick={() => setCategoryFilter(cat.slug)}\n              >\n                {cat.name}\n              </FilterButton>\n            ))}\n          </FilterGroup>\n\n          <FilterGroup>\n            <Select value={sortBy} onChange={e => setSortBy(e.target.value)}>\n              <option value=\"name\">Sort by Name</option>\n              <option value=\"price-low\">Price: Low to High</option>\n              <option value=\"price-high\">Price: High to Low</option>\n              <option value=\"rating\">Highest Rated</option>\n              <option value=\"newest\">Newest First</option>\n            </Select>\n\n            <ViewToggle>\n              <ViewButton\n                active={view === 'grid'}\n                onClick={() => setView('grid')}\n                title=\"Grid View\"\n              >\n                <FaTh />\n              </ViewButton>\n              <ViewButton\n                active={view === 'list'}\n                onClick={() => setView('list')}\n                title=\"List View\"\n              >\n                <FaList />\n              </ViewButton>\n            </ViewToggle>\n          </FilterGroup>\n        </FiltersBar>\n\n        {activeFilters.length > 0 && (\n          <ActiveFilters>\n            {activeFilters.map((filter, index) => (\n              <ActiveFilter key={index}>\n                {filter.value}\n                <RemoveFilterButton onClick={() => removeFilter(filter.param)}>\n                  <FaTimes />\n                </RemoveFilterButton>\n              </ActiveFilter>\n            ))}\n            <ClearFiltersButton onClick={clearAllFilters}>\n              Clear All\n            </ClearFiltersButton>\n          </ActiveFilters>\n        )}\n\n        {filteredProducts.length > 0 ? (\n          <ProductsGrid view={view}>\n            {filteredProducts.map(product => (\n              <ProductCard\n                key={product.id}\n                product={product}\n                storeSlug={storeSlug}\n              />\n            ))}\n          </ProductsGrid>\n        ) : (\n          <NoResults>\n            <h3>No products found</h3>\n            <p>Try adjusting your filters or search terms</p>\n            <ClearFiltersButton onClick={clearAllFilters}>\n              Clear All Filters\n            </ClearFiltersButton>\n          </NoResults>\n        )}\n      </Container>\n\n      <Footer storeSlug={storeSlug} theme={vendor?.theme || {}} />\n    </PageContainer>\n  );\n};\n\nexport default ProductList;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/pages/SellerDashboard.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { theme } from '../../styles/GlobalStyle';\nimport SellerSidebar from '../components/SellerSidebar';\nimport DashboardTabEnhanced from '../components/DashboardTabEnhanced';\nimport ProductsTab from '../components/ProductsTab';\nimport AddProductTabEnhanced from '../components/AddProductTabEnhanced';\nimport CategoriesTab from '../components/CategoriesTab';\nimport OrdersTabEnhanced from '../components/OrdersTabEnhanced';\nimport EnquiriesTab from '../components/EnquiriesTab';\nimport DiscountsTab from '../components/DiscountsTab';\nimport ShopSettingsTab from '../components/ShopSettingsTab';\nimport InsightsTab from '../components/InsightsTab';\n\nconst DashboardContainer = styled.div`\n  display: flex;\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n`;\n\nconst MainContent = styled.div`\n  flex: 1;\n  margin-left: 280px;\n  padding: ${theme.spacing.xl};\n  min-height: 100vh;\n\n  @media (max-width: 1024px) {\n    margin-left: 0;\n    padding: ${theme.spacing.lg};\n  }\n\n  @media (max-width: 768px) {\n    padding: ${theme.spacing.md};\n  }\n`;\n\nconst ContentWrapper = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n`;\n\nconst PageHeader = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0;\n`;\n\nconst PageSubtitle = styled.p`\n  color: ${theme.colors.gray600};\n  margin: ${theme.spacing.sm} 0 0 0;\n  font-size: 1rem;\n`;\n\nconst SellerDashboard = () => {\n  const [activeTab, setActiveTab] = useState('dashboard');\n\n  const getPageTitle = () => {\n    switch (activeTab) {\n      case 'dashboard':\n        return 'Dashboard Overview';\n      case 'products':\n        return 'Product Management';\n      case 'add-product':\n        return 'Add New Product';\n      case 'categories':\n        return 'Category Management';\n      case 'bulk-import':\n        return 'Bulk Import Products';\n      case 'orders':\n        return 'Order Management';\n      case 'enquiries':\n        return 'Enquiry Management';\n      case 'discounts':\n        return 'Discounts & Coupons';\n      case 'customers':\n        return 'Customer Management';\n      case 'store-settings':\n        return 'Store Settings';\n      case 'appearance':\n        return 'Store Appearance';\n      case 'analytics':\n        return 'Analytics & Reports';\n      default:\n        return 'Dashboard';\n    }\n  };\n\n  const getPageSubtitle = () => {\n    switch (activeTab) {\n      case 'dashboard':\n        return 'Monitor your store performance and key metrics';\n      case 'products':\n        return 'Manage your product catalog and inventory';\n      case 'add-product':\n        return 'Add a new product to your store';\n      case 'categories':\n        return 'Organize your products into categories';\n      case 'bulk-import':\n        return 'Import multiple products via CSV file';\n      case 'orders':\n        return 'Track and manage customer orders';\n      case 'enquiries':\n        return 'Manage customer enquiries and communications';\n      case 'discounts':\n        return 'Create and manage discount codes';\n      case 'customers':\n        return 'View and manage your customer base';\n      case 'store-settings':\n        return 'Configure your store settings and preferences';\n      case 'appearance':\n        return \"Customize your store's look and feel\";\n      case 'analytics':\n        return 'Analyze your business data and trends';\n      default:\n        return '';\n    }\n  };\n\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'dashboard':\n        return <DashboardTabEnhanced />;\n      case 'products':\n        return <ProductsTab />;\n      case 'add-product':\n        return <AddProductTabEnhanced />;\n      case 'categories':\n        return <CategoriesTab />;\n      case 'bulk-import':\n        return (\n          <div style={{ padding: '2rem', textAlign: 'center' }}>\n            <h3>Bulk Import - Coming Soon</h3>\n            <p>CSV import functionality will be available soon.</p>\n          </div>\n        );\n      case 'orders':\n        return <OrdersTabEnhanced />;\n      case 'enquiries':\n        return <EnquiriesTab />;\n      case 'discounts':\n        return <DiscountsTab />;\n      case 'customers':\n        return (\n          <div style={{ padding: '2rem', textAlign: 'center' }}>\n            <h3>Customer Management - Coming Soon</h3>\n            <p>Customer management features will be available soon.</p>\n          </div>\n        );\n      case 'store-settings':\n        return <ShopSettingsTab />;\n      case 'appearance':\n        return (\n          <div style={{ padding: '2rem', textAlign: 'center' }}>\n            <h3>Store Appearance - Coming Soon</h3>\n            <p>Theme customization features will be available soon.</p>\n          </div>\n        );\n      case 'analytics':\n        return <InsightsTab />;\n      default:\n        return <DashboardTabEnhanced />;\n    }\n  };\n\n  return (\n    <DashboardContainer>\n      <SellerSidebar activeTab={activeTab} onTabChange={setActiveTab} />\n      <MainContent>\n        <ContentWrapper>\n          <PageHeader>\n            <PageTitle>{getPageTitle()}</PageTitle>\n            <PageSubtitle>{getPageSubtitle()}</PageSubtitle>\n          </PageHeader>\n          {renderContent()}\n        </ContentWrapper>\n      </MainContent>\n    </DashboardContainer>\n  );\n};\n\nexport default SellerDashboard;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/pages/SellerDashboardDemo.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaStore,\n  FaChartLine,\n  FaArrowRight,\n  FaUser,\n  FaShoppingCart,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst DemoContainer = styled.div`\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: ${theme.spacing.xl};\n`;\n\nconst DemoCard = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  padding: ${theme.spacing.xxl};\n  box-shadow: ${theme.shadows.xl};\n  text-align: center;\n  max-width: 600px;\n  width: 100%;\n`;\n\nconst DemoIcon = styled.div`\n  width: 80px;\n  height: 80px;\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary},\n    ${theme.colors.secondary}\n  );\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto ${theme.spacing.xl};\n  color: ${theme.colors.white};\n  font-size: 2rem;\n`;\n\nconst DemoTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst DemoSubtitle = styled.p`\n  font-size: 1.2rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.xxl};\n  line-height: 1.6;\n`;\n\nconst FeaturesList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xxl};\n  text-align: left;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst FeatureItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n`;\n\nconst FeatureIcon = styled.div`\n  width: 32px;\n  height: 32px;\n  background: ${theme.colors.primary}20;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.primary};\n  font-size: 0.9rem;\n  flex-shrink: 0;\n`;\n\nconst FeatureText = styled.span`\n  font-size: 0.95rem;\n  color: ${theme.colors.gray700};\n`;\n\nconst DemoButton = styled.button`\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary},\n    ${theme.colors.secondary}\n  );\n  color: ${theme.colors.white};\n  border: none;\n  padding: ${theme.spacing.lg} ${theme.spacing.xxl};\n  border-radius: ${theme.borderRadius.lg};\n  font-size: 1.1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  margin: 0 auto;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: ${theme.shadows.lg};\n  }\n`;\n\nconst BackButton = styled.button`\n  position: absolute;\n  top: ${theme.spacing.xl};\n  left: ${theme.spacing.xl};\n  background: ${theme.colors.white}40;\n  color: ${theme.colors.white};\n  border: 2px solid ${theme.colors.white}60;\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  backdrop-filter: blur(10px);\n\n  &:hover {\n    background: ${theme.colors.white}60;\n    transform: translateY(-1px);\n  }\n`;\n\nconst SellerDashboardDemo = () => {\n  const navigate = useNavigate();\n\n  const features = [\n    { icon: FaChartLine, text: 'Sales Analytics & Insights' },\n    { icon: FaShoppingCart, text: 'Order Management' },\n    { icon: FaStore, text: 'Product Catalog' },\n    { icon: FaUser, text: 'Customer Management' },\n    { icon: FaChartLine, text: 'Revenue Tracking' },\n    { icon: FaStore, text: 'Inventory Control' },\n  ];\n\n  return (\n    <DemoContainer>\n      <BackButton onClick={() => navigate('/')}>← Back to Home</BackButton>\n\n      <DemoCard>\n        <DemoIcon>\n          <FaStore />\n        </DemoIcon>\n\n        <DemoTitle>Seller Dashboard</DemoTitle>\n\n        <DemoSubtitle>\n          Experience our complete ecommerce seller management system with\n          comprehensive analytics, product management, and order processing\n          tools.\n        </DemoSubtitle>\n\n        <FeaturesList>\n          {features.map((feature, index) => (\n            <FeatureItem key={index}>\n              <FeatureIcon>\n                <feature.icon />\n              </FeatureIcon>\n              <FeatureText>{feature.text}</FeatureText>\n            </FeatureItem>\n          ))}\n        </FeaturesList>\n\n        <DemoButton onClick={() => navigate('/ecommerce/seller-dashboard')}>\n          Launch Seller Dashboard\n          <FaArrowRight />\n        </DemoButton>\n      </DemoCard>\n    </DemoContainer>\n  );\n};\n\nexport default SellerDashboardDemo;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/pages/StoreHome.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":448,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":448,"endColumn":44}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaArrowRight,\n  FaShoppingBag,\n  FaStar,\n  FaMapMarkerAlt,\n  FaPhone,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport ProductCard from '../components/ProductCard';\nimport { ecommerceVendors } from '../data/vendors';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst StoreHeroSection = styled.section.withConfig({\n  shouldForwardProp: prop => prop !== 'bgImage',\n})`\n  background-image:\n    linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)),\n    url(${props => props.bgImage});\n  background-size: cover;\n  background-position: center;\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xxl} 0;\n  text-align: center;\n  position: relative;\n`;\n\nconst HeroContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n  position: relative;\n  z-index: 2;\n`;\n\nconst StoreLogo = styled.div`\n  width: 120px;\n  height: 120px;\n  margin: 0 auto ${theme.spacing.lg};\n  border-radius: 50%;\n  background: ${theme.colors.white};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: ${theme.shadows.xl};\n  overflow: hidden;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nconst StoreName = styled.h1`\n  font-size: 3rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.md};\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2rem;\n  }\n`;\n\nconst StoreTagline = styled.p`\n  font-size: 1.3rem;\n  margin-bottom: ${theme.spacing.lg};\n  opacity: 0.95;\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.1rem;\n  }\n`;\n\nconst StoreInfo = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n    align-items: center;\n  }\n`;\n\nconst InfoItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  font-size: 1rem;\n\n  svg {\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst Rating = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n\n  .stars {\n    display: flex;\n    gap: 2px;\n  }\n`;\n\nconst CTAButton = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  text-decoration: none;\n  font-weight: 600;\n  font-size: 1.1rem;\n  transition: all 0.3s ease;\n  box-shadow: ${theme.shadows.lg};\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-2px);\n    box-shadow: ${theme.shadows.xl};\n  }\n`;\n\nconst MainContent = styled.main`\n  flex: 1;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xxl} ${theme.spacing.md};\n`;\n\nconst Section = styled.section`\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xl};\n  text-align: center;\n`;\n\nconst ProductsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst ViewAllButton = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  background: ${theme.colors.white};\n  color: ${theme.colors.primary};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border: 2px solid ${theme.colors.primary};\n  border-radius: ${theme.borderRadius.lg};\n  text-decoration: none;\n  font-weight: 600;\n  transition: all 0.3s ease;\n  margin: 0 auto;\n  display: flex;\n  width: fit-content;\n\n  &:hover {\n    background: ${theme.colors.primary};\n    color: ${theme.colors.white};\n  }\n`;\n\nconst SpecialtiesSection = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.xl};\n  box-shadow: ${theme.shadows.md};\n  text-align: center;\n`;\n\nconst SpecialtiesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-top: ${theme.spacing.lg};\n`;\n\nconst SpecialtyCard = styled.div`\n  padding: ${theme.spacing.lg};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.lg};\n\n  h3 {\n    font-size: 1.2rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.sm};\n  }\n\n  p {\n    color: ${theme.colors.gray600};\n    font-size: 0.9rem;\n  }\n`;\n\nconst StoreHome = () => {\n  const { storeId } = useParams();\n  const [store, setStore] = useState(null);\n  const [storeProducts, setStoreProducts] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n\n  useEffect(() => {\n    // Find the store\n    const foundStore = ecommerceVendors.find(v => v.id === storeId);\n    setStore(foundStore);\n\n    // Generate mock products for this store based on its specialties\n    if (foundStore) {\n      const mockProducts = generateStoreProducts(foundStore);\n      setStoreProducts(mockProducts);\n    }\n  }, [storeId]);\n\n  const generateStoreProducts = store => {\n    const productTemplates = {\n      'techmart-downtown': [\n        {\n          name: 'Premium Smartphone',\n          price: 899.99,\n          category: 'Electronics',\n          image:\n            'https://images.unsplash.com/photo-1511707171634-5f897ff02aa9?w=500&q=80',\n        },\n        {\n          name: 'Wireless Headphones',\n          price: 249.99,\n          category: 'Electronics',\n          image:\n            'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=500&q=80',\n        },\n        {\n          name: 'Smart Watch',\n          price: 399.99,\n          category: 'Electronics',\n          image:\n            'https://images.unsplash.com/photo-1544117519-31a4b719223d?w=500&q=80',\n        },\n        {\n          name: 'Bluetooth Speaker',\n          price: 129.99,\n          category: 'Electronics',\n          image:\n            'https://images.unsplash.com/photo-1608043152269-423dbba4e7e1?w=500&q=80',\n        },\n        {\n          name: 'Laptop Computer',\n          price: 1299.99,\n          category: 'Electronics',\n          image:\n            'https://images.unsplash.com/photo-1496181133206-80ce9b88a853?w=500&q=80',\n        },\n        {\n          name: 'Gaming Mouse',\n          price: 79.99,\n          category: 'Electronics',\n          image:\n            'https://images.unsplash.com/photo-1527864550417-7fd91fc51a46?w=500&q=80',\n        },\n      ],\n      'fashion-forward': [\n        {\n          name: 'Designer Dress',\n          price: 199.99,\n          category: 'Fashion',\n          image:\n            'https://images.unsplash.com/photo-1515372039744-b8f02a3ae446?w=500&q=80',\n        },\n        {\n          name: 'Leather Handbag',\n          price: 299.99,\n          category: 'Fashion',\n          image:\n            'https://images.unsplash.com/photo-1553062407-98eeb64c6a62?w=500&q=80',\n        },\n        {\n          name: 'Casual Sneakers',\n          price: 149.99,\n          category: 'Fashion',\n          image:\n            'https://images.unsplash.com/photo-1549298916-b41d501d3772?w=500&q=80',\n        },\n        {\n          name: 'Elegant Watch',\n          price: 459.99,\n          category: 'Fashion',\n          image:\n            'https://images.unsplash.com/photo-1523275335684-37898b6baf30?w=500&q=80',\n        },\n        {\n          name: 'Summer Jacket',\n          price: 179.99,\n          category: 'Fashion',\n          image:\n            'https://images.unsplash.com/photo-1551028719-00167b16eac5?w=500&q=80',\n        },\n        {\n          name: 'Stylish Sunglasses',\n          price: 89.99,\n          category: 'Fashion',\n          image:\n            'https://images.unsplash.com/photo-1473496169904-658ba7c44d8a?w=500&q=80',\n        },\n      ],\n      'home-essentials': [\n        {\n          name: 'Coffee Maker',\n          price: 159.99,\n          category: 'Home & Kitchen',\n          image:\n            'https://images.unsplash.com/photo-1514066558159-fc8c737ef259?w=500&q=80',\n        },\n        {\n          name: 'Throw Pillows Set',\n          price: 49.99,\n          category: 'Home Decor',\n          image:\n            'https://images.unsplash.com/photo-1586023492125-27b2c045efd7?w=500&q=80',\n        },\n        {\n          name: 'Indoor Plant',\n          price: 29.99,\n          category: 'Home & Garden',\n          image:\n            'https://images.unsplash.com/photo-1416879595882-3373a0480b5b?w=500&q=80',\n        },\n        {\n          name: 'Kitchen Knife Set',\n          price: 89.99,\n          category: 'Home & Kitchen',\n          image:\n            'https://images.unsplash.com/photo-1563135465-3ba3f6a71b59?w=500&q=80',\n        },\n        {\n          name: 'Bedding Set',\n          price: 119.99,\n          category: 'Home & Garden',\n          image:\n            'https://images.unsplash.com/photo-1560448204-e02f11c3d0e2?w=500&q=80',\n        },\n        {\n          name: 'Table Lamp',\n          price: 79.99,\n          category: 'Home Decor',\n          image:\n            'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=500&q=80',\n        },\n      ],\n      'sports-zone': [\n        {\n          name: 'Running Shoes',\n          price: 129.99,\n          category: 'Sports',\n          image:\n            'https://images.unsplash.com/photo-1542291026-7eec264c27ff?w=500&q=80',\n        },\n        {\n          name: 'Yoga Mat',\n          price: 39.99,\n          category: 'Sports',\n          image:\n            'https://images.unsplash.com/photo-1544367567-0f2fcb009e0b?w=500&q=80',\n        },\n        {\n          name: 'Basketball',\n          price: 29.99,\n          category: 'Sports',\n          image:\n            'https://images.unsplash.com/photo-1546519638-68e109498ffc?w=500&q=80',\n        },\n        {\n          name: 'Workout Clothes',\n          price: 69.99,\n          category: 'Sports',\n          image:\n            'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=500&q=80',\n        },\n        {\n          name: 'Protein Shaker',\n          price: 19.99,\n          category: 'Sports',\n          image:\n            'https://images.unsplash.com/photo-1594737626072-90dc274bc2bd?w=500&q=80',\n        },\n        {\n          name: 'Resistance Bands',\n          price: 24.99,\n          category: 'Sports',\n          image:\n            'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=500&q=80',\n        },\n      ],\n    };\n\n    const templates = productTemplates[store.id] || [];\n    return templates.map((template, index) => ({\n      id: `${store.id}-${index + 1}`,\n      ...template,\n      slug: template.name.toLowerCase().replace(/\\s+/g, '-'),\n      rating: (4.0 + Math.random() * 1).toFixed(1),\n      reviewCount: Math.floor(Math.random() * 500) + 50,\n      inStock: true,\n      featured: index < 2,\n    }));\n  };\n\n  const handleAddToCart = product => {\n    setCartItems(prev => {\n      const existingItem = prev.find(item => item.id === product.id);\n      if (existingItem) {\n        return prev.map(item =>\n          item.id === product.id\n            ? { ...item, quantity: item.quantity + 1 }\n            : item\n        );\n      }\n      return [...prev, { ...product, quantity: 1 }];\n    });\n    alert(`${product.name} added to cart!`);\n  };\n\n  const renderStars = rating => {\n    const stars = [];\n    const fullStars = Math.floor(rating);\n    for (let i = 0; i < fullStars; i++) {\n      stars.push(<FaStar key={i} style={{ color: '#fbbf24' }} />);\n    }\n    return stars;\n  };\n\n  if (!store) {\n    return (\n      <PageContainer>\n        <Navbar\n          cartItemsCount={cartItems.reduce(\n            (sum, item) => sum + item.quantity,\n            0\n          )}\n        />\n        <div style={{ padding: '4rem', textAlign: 'center' }}>\n          <h2>Store not found</h2>\n          <Link to=\"/ecommerce-stores\">← Back to Store Listings</Link>\n        </div>\n        <Footer />\n      </PageContainer>\n    );\n  }\n\n  return (\n    <PageContainer>\n      <Navbar\n        cartItemsCount={cartItems.reduce((sum, item) => sum + item.quantity, 0)}\n        storeName={store.name}\n      />\n\n      <StoreHeroSection bgImage={store.image}>\n        <HeroContent>\n          <StoreLogo>\n            <img src={store.logo} alt={`${store.name} logo`} />\n          </StoreLogo>\n          <StoreName>{store.name}</StoreName>\n          <StoreTagline>{store.description}</StoreTagline>\n\n          <StoreInfo>\n            <InfoItem>\n              <FaMapMarkerAlt />\n              <span>\n                {store.city}, {store.state}\n              </span>\n            </InfoItem>\n            <Rating>\n              <div className=\"stars\">{renderStars(store.rating)}</div>\n              <span>\n                {store.rating} ({store.reviewCount} reviews)\n              </span>\n            </Rating>\n            <InfoItem>\n              <FaPhone />\n              <span>{store.phone}</span>\n            </InfoItem>\n          </StoreInfo>\n\n          <CTAButton to={`/ecommerce/${storeId}/products`}>\n            <FaShoppingBag />\n            Shop Now\n            <FaArrowRight />\n          </CTAButton>\n        </HeroContent>\n      </StoreHeroSection>\n\n      <MainContent>\n        <Section>\n          <SectionTitle>Featured Products</SectionTitle>\n          <ProductsGrid>\n            {storeProducts.slice(0, 6).map(product => (\n              <ProductCard\n                key={product.id}\n                product={product}\n                onAddToCart={() => handleAddToCart(product)}\n              />\n            ))}\n          </ProductsGrid>\n          <ViewAllButton to={`/ecommerce/${storeId}/products`}>\n            View All Products\n            <FaArrowRight />\n          </ViewAllButton>\n        </Section>\n\n        <Section>\n          <SpecialtiesSection>\n            <SectionTitle>Our Specialties</SectionTitle>\n            <SpecialtiesGrid>\n              {store.specialties.map((specialty, index) => (\n                <SpecialtyCard key={index}>\n                  <h3>{specialty}</h3>\n                  <p>\n                    Premium quality {specialty.toLowerCase()} for all your needs\n                  </p>\n                </SpecialtyCard>\n              ))}\n            </SpecialtiesGrid>\n          </SpecialtiesSection>\n        </Section>\n      </MainContent>\n\n      <Footer />\n    </PageContainer>\n  );\n};\n\nexport default StoreHome;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/ecommerce/pages/StoresListing.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":368,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":368,"endColumn":76},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":381,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":383,"endColumn":8}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaMapMarkerAlt,\n  FaSearch,\n  FaLocationArrow,\n  FaHome,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport StoreCard from '../../components/shared/StoreCard';\nimport { ecommerceVendors } from '../data/vendors';\nimport {\n  getCurrentLocation,\n  getLocationFromZip,\n  searchLocationByCity,\n  updateVendorsWithDistance,\n  getDefaultLocation,\n} from '../../utils/location';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst NavHeader = styled.div`\n  background: ${theme.colors.white};\n  box-shadow: ${theme.shadows.sm};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  position: sticky;\n  top: 0;\n  z-index: 100;\n`;\n\nconst NavContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.lg} ${theme.spacing.md};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Logo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n`;\n\nconst BackButton = styled.button`\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n  flex: 1;\n`;\n\nconst PageHeader = styled.div`\n  text-align: center;\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst PageSubtitle = styled.p`\n  font-size: 1.1rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst LocationDisplay = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.primary};\n  font-weight: 600;\n`;\n\nconst SearchSection = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst SearchForm = styled.form`\n  display: grid;\n  grid-template-columns: 1fr auto auto;\n  gap: ${theme.spacing.md};\n  align-items: end;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst SearchInputContainer = styled.div`\n  position: relative;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.md} 3rem;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray500};\n  }\n`;\n\nconst SearchIcon = styled.div`\n  position: absolute;\n  left: ${theme.spacing.md};\n  top: 50%;\n  transform: translateY(-50%);\n  color: ${theme.colors.gray400};\n  font-size: 1.1rem;\n`;\n\nconst LocationButton = styled.button`\n  background: ${theme.colors.gray100};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  white-space: nowrap;\n\n  &:hover {\n    background: ${theme.colors.gray200};\n    border-color: ${theme.colors.primary};\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst SearchButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  white-space: nowrap;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-1px);\n  }\n`;\n\nconst FiltersSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.xl};\n  flex-wrap: wrap;\n  gap: ${theme.spacing.md};\n`;\n\nconst FilterGroup = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  flex-wrap: wrap;\n`;\n\nconst FilterButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  background: ${props =>\n    props.active ? theme.colors.primary : theme.colors.white};\n  color: ${props => (props.active ? theme.colors.white : theme.colors.gray700)};\n  border: 2px solid\n    ${props => (props.active ? theme.colors.primary : theme.colors.gray200)};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst SortSelect = styled.select`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.white};\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst ResultsInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.lg};\n  color: ${theme.colors.gray600};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst StoresGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst LoadingState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n\n  .spinner {\n    margin-bottom: ${theme.spacing.lg};\n    font-size: 2rem;\n    animation: spin 1s linear infinite;\n  }\n\n  @keyframes spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray900};\n  }\n\n  p {\n    font-size: 1rem;\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst StoresListing = () => {\n  const navigate = useNavigate();\n  const [stores, setStores] = useState([]);\n  const [filteredStores, setFilteredStores] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [activeFilter, setActiveFilter] = useState('all');\n  const [sortBy, setSortBy] = useState('distance');\n  const [locationLoading, setLocationLoading] = useState(false);\n\n  const loadStoresForLocation = useCallback(location => {\n    const vendorsWithDistance = updateVendorsWithDistance(\n      ecommerceVendors,\n      location\n    );\n    setStores(vendorsWithDistance);\n    setFilteredStores(vendorsWithDistance);\n    setLoading(false);\n  }, []);\n\n  const initializeLocation = useCallback(async () => {\n    setLoading(true);\n    try {\n      const location = await getCurrentLocation();\n      setCurrentLocation(location);\n      loadStoresForLocation(location);\n    } catch (error) {\n      const defaultLocation = getDefaultLocation();\n      setCurrentLocation(defaultLocation);\n      loadStoresForLocation(defaultLocation);\n    }\n  }, [loadStoresForLocation]);\n\n  const handleLocationSearch = async e => {\n    e.preventDefault();\n    if (!searchTerm.trim()) return;\n\n    setLocationLoading(true);\n    try {\n      let newLocation;\n\n      // Check if it's a ZIP code (5 digits)\n      if (/^\\d{5}$/.test(searchTerm.trim())) {\n        newLocation = await getLocationFromZip(searchTerm.trim());\n      } else {\n        newLocation = await searchLocationByCity(searchTerm.trim());\n      }\n\n      setCurrentLocation(newLocation);\n      loadStoresForLocation(newLocation);\n      setSearchTerm('');\n    } catch (error) {\n      alert('Location not found. Please try a different city or ZIP code.');\n    } finally {\n      setLocationLoading(false);\n    }\n  };\n\n  const handleUseCurrentLocation = async () => {\n    setLocationLoading(true);\n    try {\n      const location = await getCurrentLocation();\n      setCurrentLocation(location);\n      loadStoresForLocation(location);\n    } catch (error) {\n      alert(\n        'Unable to get your current location. Please check your browser settings.'\n      );\n    } finally {\n      setLocationLoading(false);\n    }\n  };\n\n  const applyFilters = useCallback(() => {\n    let filtered = [...stores];\n\n    // Apply category filter\n    if (activeFilter === 'featured') {\n      filtered = filtered.filter(store => store.featured);\n    }\n\n    // Apply sorting\n    switch (sortBy) {\n      case 'distance':\n        filtered.sort((a, b) => a.distance - b.distance);\n        break;\n      case 'rating':\n        filtered.sort((a, b) => b.rating - a.rating);\n        break;\n      case 'name':\n        filtered.sort((a, b) => a.name.localeCompare(b.name));\n        break;\n      default:\n        break;\n    }\n\n    setFilteredStores(filtered);\n  }, [stores, activeFilter, sortBy]);\n\n  useEffect(() => {\n    initializeLocation();\n  }, [initializeLocation]);\n\n  useEffect(() => {\n    applyFilters();\n  }, [applyFilters]);\n\n  if (loading) {\n    return (\n      <PageContainer>\n        <NavHeader>\n          <NavContent>\n            <Logo>🛒 ShopMart Stores</Logo>\n            <BackButton onClick={() => navigate('/')}>\n              <FaHome />\n              Back to Home\n            </BackButton>\n          </NavContent>\n        </NavHeader>\n        <LoadingState>\n          <div className=\"spinner\">⭐</div>\n          <h3>Finding stores near you...</h3>\n          <p>Please wait while we locate nearby stores.</p>\n        </LoadingState>\n      </PageContainer>\n    );\n  }\n\n  return (\n    <PageContainer>\n      <NavHeader>\n        <NavContent>\n          <Logo>🛒 ShopMart Stores</Logo>\n          <BackButton onClick={() => navigate('/')}>\n            <FaHome />\n            Back to Home\n          </BackButton>\n        </NavContent>\n      </NavHeader>\n\n      <Container>\n        <PageHeader>\n          <PageTitle>Nearby Stores</PageTitle>\n          <PageSubtitle>\n            Discover amazing shopping experiences near you\n          </PageSubtitle>\n          {currentLocation && (\n            <LocationDisplay>\n              <FaMapMarkerAlt />\n              <span>\n                {currentLocation.city}, {currentLocation.state}\n                {currentLocation.isDefault && ' (Default Location)'}\n              </span>\n            </LocationDisplay>\n          )}\n        </PageHeader>\n\n        <SearchSection>\n          <SearchForm onSubmit={handleLocationSearch}>\n            <SearchInputContainer>\n              <SearchIcon>\n                <FaSearch />\n              </SearchIcon>\n              <SearchInput\n                type=\"text\"\n                placeholder=\"Enter city name or ZIP code...\"\n                value={searchTerm}\n                onChange={e => setSearchTerm(e.target.value)}\n              />\n            </SearchInputContainer>\n\n            <LocationButton\n              type=\"button\"\n              onClick={handleUseCurrentLocation}\n              disabled={locationLoading}\n            >\n              <FaLocationArrow />\n              Use My Location\n            </LocationButton>\n\n            <SearchButton type=\"submit\" disabled={locationLoading}>\n              {locationLoading ? 'Searching...' : 'Search'}\n            </SearchButton>\n          </SearchForm>\n        </SearchSection>\n\n        <FiltersSection>\n          <FilterGroup>\n            <FilterButton\n              active={activeFilter === 'all'}\n              onClick={() => setActiveFilter('all')}\n            >\n              All Stores\n            </FilterButton>\n            <FilterButton\n              active={activeFilter === 'featured'}\n              onClick={() => setActiveFilter('featured')}\n            >\n              Featured\n            </FilterButton>\n          </FilterGroup>\n\n          <FilterGroup>\n            <SortSelect\n              value={sortBy}\n              onChange={e => setSortBy(e.target.value)}\n            >\n              <option value=\"distance\">Sort by Distance</option>\n              <option value=\"rating\">Sort by Rating</option>\n              <option value=\"name\">Sort by Name</option>\n            </SortSelect>\n          </FilterGroup>\n        </FiltersSection>\n\n        <ResultsInfo>\n          <span>\n            {filteredStores.length} store\n            {filteredStores.length !== 1 ? 's' : ''} found\n          </span>\n        </ResultsInfo>\n\n        {filteredStores.length > 0 ? (\n          <StoresGrid>\n            {filteredStores.map(store => (\n              <StoreCard key={store.id} store={store} category=\"ecommerce\" />\n            ))}\n          </StoresGrid>\n        ) : (\n          <EmptyState>\n            <h3>No stores found</h3>\n            <p>\n              Try searching for a different location or adjusting your filters.\n            </p>\n          </EmptyState>\n        )}\n      </Container>\n    </PageContainer>\n  );\n};\n\nexport default StoresListing;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/hotel/components/HotelCard.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaStar,\n  FaMapMarkerAlt,\n  FaWifi,\n  FaSwimmingPool,\n  FaCar,\n  FaUtensils,\n} from 'react-icons/fa';\nimport { theme, media } from '../../styles/GlobalStyle';\n\nconst Card = styled(Link)`\n  display: block;\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  overflow: hidden;\n  box-shadow: ${theme.shadows.md};\n  transition: all 0.3s ease;\n  text-decoration: none;\n  color: inherit;\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: ${theme.shadows.xl};\n  }\n\n  ${media.mobile} {\n    border-radius: ${theme.borderRadius.md};\n\n    &:hover {\n      transform: translateY(-2px);\n      box-shadow: ${theme.shadows.lg};\n    }\n  }\n\n  ${media.tablet} {\n    &:hover {\n      transform: translateY(-3px);\n    }\n  }\n`;\n\nconst CardImage = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'image',\n})`\n  position: relative;\n  height: 200px;\n  background-image: url(${props => props.image});\n  background-size: cover;\n  background-position: center;\n  overflow: hidden;\n\n  ${media.mobile} {\n    height: 160px;\n  }\n\n  ${media.tablet} {\n    height: 180px;\n  }\n`;\n\nconst ImageOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    to bottom,\n    transparent 0%,\n    rgba(0, 0, 0, 0.1) 50%,\n    rgba(0, 0, 0, 0.3) 100%\n  );\n`;\n\nconst StarRating = styled.div`\n  position: absolute;\n  top: ${theme.spacing.md};\n  right: ${theme.spacing.md};\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  font-size: 0.8rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n\n  ${media.mobile} {\n    top: ${theme.spacing.sm};\n    right: ${theme.spacing.sm};\n    padding: ${theme.spacing.xs} ${theme.spacing.xs};\n    font-size: 0.7rem;\n  }\n`;\n\nconst PriceBadge = styled.div`\n  position: absolute;\n  bottom: ${theme.spacing.md};\n  right: ${theme.spacing.md};\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n\n  ${media.mobile} {\n    bottom: ${theme.spacing.sm};\n    right: ${theme.spacing.sm};\n    padding: ${theme.spacing.xs} ${theme.spacing.sm};\n    font-size: 0.875rem;\n  }\n`;\n\nconst CardContent = styled.div`\n  padding: ${theme.spacing.lg};\n\n  ${media.mobile} {\n    padding: ${theme.spacing.md};\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.lg};\n  }\n`;\n\nconst HotelName = styled.h3`\n  font-size: 1.3rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n  line-height: 1.3;\n\n  ${media.mobile} {\n    font-size: 1.125rem;\n    margin-bottom: ${theme.spacing.xs};\n  }\n\n  ${media.tablet} {\n    font-size: 1.2rem;\n  }\n`;\n\nconst Location = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n  margin-bottom: ${theme.spacing.md};\n\n  ${media.mobile} {\n    font-size: 0.8rem;\n    gap: ${theme.spacing.xs};\n    margin-bottom: ${theme.spacing.sm};\n  }\n`;\n\nconst Description = styled.p`\n  color: ${theme.colors.gray700};\n  font-size: 0.9rem;\n  line-height: 1.5;\n  margin-bottom: ${theme.spacing.md};\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n\n  ${media.mobile} {\n    font-size: 0.8rem;\n    margin-bottom: ${theme.spacing.sm};\n    -webkit-line-clamp: 3;\n  }\n`;\n\nconst Amenities = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.lg};\n  flex-wrap: wrap;\n\n  ${media.mobile} {\n    gap: ${theme.spacing.sm};\n    margin-bottom: ${theme.spacing.md};\n  }\n`;\n\nconst AmenityIcon = styled.div`\n  color: ${theme.colors.primary};\n  font-size: 1rem;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  font-size: 0.8rem;\n  color: ${theme.colors.gray600};\n\n  ${media.mobile} {\n    font-size: 0.7rem;\n    gap: ${theme.spacing.xs};\n\n    svg {\n      font-size: 0.75rem;\n    }\n  }\n`;\n\nconst Rating = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n\n  ${media.mobile} {\n    font-size: 0.8rem;\n    gap: ${theme.spacing.xs};\n  }\n`;\n\nconst RatingStars = styled.div`\n  display: flex;\n  gap: 2px;\n`;\n\nconst Star = styled(FaStar).withConfig({\n  shouldForwardProp: prop => prop !== 'filled',\n})`\n  color: ${props => (props.filled ? '#fbbf24' : theme.colors.gray300)};\n  font-size: 0.8rem;\n\n  ${media.mobile} {\n    font-size: 0.7rem;\n  }\n`;\n\nconst HotelCard = ({ hotel }) => {\n  const renderStars = rating => {\n    const stars = [];\n    for (let i = 1; i <= 5; i++) {\n      stars.push(<Star key={i} filled={i <= Math.floor(rating)} />);\n    }\n    return stars;\n  };\n\n  const getAmenityIcon = amenity => {\n    const iconMap = {\n      WiFi: FaWifi,\n      Pool: FaSwimmingPool,\n      Parking: FaCar,\n      Restaurant: FaUtensils,\n    };\n    const IconComponent = iconMap[amenity];\n    return IconComponent ? <IconComponent /> : null;\n  };\n\n  const topAmenities = hotel.amenities.slice(0, 4);\n\n  return (\n    <Card to={`/${hotel.slug}`}>\n      <CardImage image={hotel.image}>\n        <ImageOverlay />\n        <StarRating>\n          <FaStar style={{ color: '#fbbf24' }} />\n          {hotel.starRating}\n        </StarRating>\n        <PriceBadge>₹{hotel.startingPrice.toLocaleString()}+</PriceBadge>\n      </CardImage>\n\n      <CardContent>\n        <HotelName>{hotel.name}</HotelName>\n\n        <Location>\n          <FaMapMarkerAlt />\n          {hotel.location}\n        </Location>\n\n        <Description>{hotel.description}</Description>\n\n        <Amenities>\n          {topAmenities.map((amenity, index) => (\n            <AmenityIcon key={index}>\n              {getAmenityIcon(amenity)}\n              {amenity}\n            </AmenityIcon>\n          ))}\n        </Amenities>\n\n        <Rating>\n          <RatingStars>{renderStars(hotel.rating)}</RatingStars>\n          <span>{hotel.rating}/5</span>\n        </Rating>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default HotelCard;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/hotel/components/HotelFooter.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":196,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":196,"endColumn":58}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useMemo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaFacebook,\n  FaTwitter,\n  FaInstagram,\n  FaLinkedin,\n  FaPhone,\n  FaEnvelope,\n  FaMapMarkerAlt,\n  FaHotel,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst FooterContainer = styled.footer`\n  background: ${theme.colors.gray900};\n  color: ${theme.colors.white};\n  margin-top: auto;\n`;\n\nconst FooterContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xxl} ${theme.spacing.md} ${theme.spacing.xl};\n`;\n\nconst FooterTop = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst FooterSection = styled.div`\n  h3 {\n    font-size: 1.2rem;\n    font-weight: 600;\n    margin-bottom: ${theme.spacing.lg};\n    color: ${theme.colors.white};\n  }\n\n  p {\n    color: ${theme.colors.gray300};\n    line-height: 1.6;\n    margin-bottom: ${theme.spacing.md};\n  }\n`;\n\nconst FooterLinks = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n`;\n\nconst FooterLink = styled(Link)`\n  color: ${theme.colors.gray300};\n  font-size: 0.9rem;\n  transition: color 0.2s ease;\n\n  &:hover {\n    color: ${theme.colors.white};\n  }\n`;\n\nconst ContactInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.md};\n  color: ${theme.colors.gray300};\n  font-size: 0.9rem;\n`;\n\nconst SocialLinks = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  margin-top: ${theme.spacing.lg};\n`;\n\nconst SocialLink = styled.a`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: ${theme.colors.gray700};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.white};\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: ${theme.colors.primary};\n    transform: translateY(-2px);\n  }\n`;\n\nconst NewsletterSection = styled.div`\n  background: ${theme.colors.gray800};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  text-align: center;\n  margin-bottom: ${theme.spacing.xl};\n\n  h3 {\n    margin-bottom: ${theme.spacing.sm};\n  }\n\n  p {\n    margin-bottom: ${theme.spacing.lg};\n    color: ${theme.colors.gray300};\n  }\n`;\n\nconst NewsletterForm = styled.form`\n  display: flex;\n  max-width: 400px;\n  margin: 0 auto;\n  gap: ${theme.spacing.sm};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n  }\n`;\n\nconst NewsletterInput = styled.input`\n  flex: 1;\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray600};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.gray700};\n  color: ${theme.colors.white};\n  font-size: 0.9rem;\n\n  &::placeholder {\n    color: ${theme.colors.gray400};\n  }\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst NewsletterButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.sm} ${theme.spacing.lg};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  transition: all 0.2s ease;\n  white-space: nowrap;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-2px);\n  }\n`;\n\nconst FooterBottom = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: ${theme.spacing.lg};\n  border-top: 1px solid ${theme.colors.gray700};\n  color: ${theme.colors.gray400};\n  font-size: 0.9rem;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n    text-align: center;\n  }\n`;\n\nconst HotelFooter = () => {\n  const location = useLocation();\n\n  // Extract hotel slug from URL path like \"/taj-palace/rooms/101\"\n  const hotelSlug = useMemo(() => {\n    const pathSegments = location.pathname.split('/').filter(Boolean);\n    // For hotel routes, the first segment is usually the hotel slug\n    return pathSegments.length > 0 && pathSegments[0] !== 'hotels'\n      ? pathSegments[0]\n      : '';\n  }, [location.pathname]);\n\n  const handleNewsletterSubmit = e => {\n    e.preventDefault();\n    alert('Thank you for subscribing to our newsletter!');\n  };\n\n  return (\n    <FooterContainer>\n      <FooterContent>\n        <NewsletterSection>\n          <h3>Get Special Offers & Updates</h3>\n          <p>\n            Subscribe to our newsletter and never miss exclusive deals and\n            travel tips!\n          </p>\n          <NewsletterForm onSubmit={handleNewsletterSubmit}>\n            <NewsletterInput\n              type=\"email\"\n              placeholder=\"Enter your email address\"\n              required\n            />\n            <NewsletterButton type=\"submit\">Subscribe</NewsletterButton>\n          </NewsletterForm>\n        </NewsletterSection>\n\n        <FooterTop>\n          <FooterSection>\n            <h3>\n              <FaHotel style={{ marginRight: theme.spacing.sm }} />\n              HotelBooker\n            </h3>\n            <p>\n              Your trusted partner for finding and booking the perfect\n              accommodation. From luxury resorts to cozy lodges, we have it all.\n            </p>\n            <SocialLinks>\n              <SocialLink href=\"#\" aria-label=\"Facebook\">\n                <FaFacebook />\n              </SocialLink>\n              <SocialLink href=\"#\" aria-label=\"Twitter\">\n                <FaTwitter />\n              </SocialLink>\n              <SocialLink href=\"#\" aria-label=\"Instagram\">\n                <FaInstagram />\n              </SocialLink>\n              <SocialLink href=\"#\" aria-label=\"LinkedIn\">\n                <FaLinkedin />\n              </SocialLink>\n            </SocialLinks>\n          </FooterSection>\n\n          <FooterSection>\n            <h3>Quick Links</h3>\n            <FooterLinks>\n              <FooterLink to=\"/hotels\">Find Hotels</FooterLink>\n              <FooterLink to=\"/my-bookings\">My Bookings</FooterLink>\n              <FooterLink\n                to={hotelSlug ? `/${hotelSlug}/owner` : '/owner/dashboard'}\n              >\n                Hotel Owners\n              </FooterLink>\n              <FooterLink to=\"/about\">About Us</FooterLink>\n              <FooterLink to=\"/contact\">Contact</FooterLink>\n              <FooterLink to=\"/help\">Help & Support</FooterLink>\n            </FooterLinks>\n          </FooterSection>\n\n          <FooterSection>\n            <h3>Popular Destinations</h3>\n            <FooterLinks>\n              <FooterLink to=\"/hotels?city=mumbai\">Mumbai Hotels</FooterLink>\n              <FooterLink to=\"/hotels?city=delhi\">Delhi Hotels</FooterLink>\n              <FooterLink to=\"/hotels?city=bangalore\">\n                Bangalore Hotels\n              </FooterLink>\n              <FooterLink to=\"/hotels?city=goa\">Goa Hotels</FooterLink>\n              <FooterLink to=\"/hotels?city=jaipur\">Jaipur Hotels</FooterLink>\n              <FooterLink to=\"/hotels?city=manali\">Manali Hotels</FooterLink>\n            </FooterLinks>\n          </FooterSection>\n\n          <FooterSection>\n            <h3>Contact Info</h3>\n            <ContactInfo>\n              <FaPhone />\n              <span>+91 1800-HOTELS</span>\n            </ContactInfo>\n            <ContactInfo>\n              <FaEnvelope />\n              <span>support@hotelbooker.com</span>\n            </ContactInfo>\n            <ContactInfo>\n              <FaMapMarkerAlt />\n              <span>123 Travel Street, Tourism City, TC 12345</span>\n            </ContactInfo>\n            <p style={{ marginTop: theme.spacing.md, fontSize: '0.8rem' }}>\n              <strong>Customer Support:</strong>\n              <br />\n              Available 24/7 for all your booking needs\n            </p>\n          </FooterSection>\n        </FooterTop>\n\n        <FooterBottom>\n          <div>\n            <p>\n              &copy; 2024 HotelBooker. All rights reserved. |\n              <FooterLink\n                to=\"/privacy\"\n                style={{ marginLeft: theme.spacing.sm }}\n              >\n                Privacy Policy\n              </FooterLink>{' '}\n              |\n              <FooterLink to=\"/terms\" style={{ marginLeft: theme.spacing.sm }}>\n                Terms of Service\n              </FooterLink>\n            </p>\n          </div>\n        </FooterBottom>\n      </FooterContent>\n    </FooterContainer>\n  );\n};\n\nexport default HotelFooter;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/hotel/components/HotelNavbar.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'hotelSlug' is assigned a value but never used.","line":300,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":300,"endColumn":18}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useMemo } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaHotel,\n  FaUser,\n  FaCalendarAlt,\n  FaHome,\n  FaBars,\n  FaTimes,\n} from 'react-icons/fa';\nimport { theme, media } from '../../styles/GlobalStyle';\n\nconst NavbarContainer = styled.nav`\n  background: ${theme.colors.white};\n  box-shadow: ${theme.shadows.md};\n  position: sticky;\n  top: 0;\n  z-index: 100;\n`;\n\nconst NavbarContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 70px;\n\n  ${media.mobile} {\n    padding: 0 ${theme.spacing.sm};\n    height: 60px;\n  }\n\n  ${media.tablet} {\n    padding: 0 ${theme.spacing.lg};\n    height: 65px;\n  }\n`;\n\nconst Logo = styled(Link)`\n  font-size: 1.8rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  ${media.mobile} {\n    font-size: 1.4rem;\n    gap: ${theme.spacing.xs};\n  }\n\n  ${media.tablet} {\n    font-size: 1.6rem;\n  }\n`;\n\nconst NavLinks = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xl};\n\n  ${media.tabletDown} {\n    position: fixed;\n    top: 60px;\n    left: 0;\n    right: 0;\n    background: ${theme.colors.white};\n    flex-direction: column;\n    padding: ${theme.spacing.lg};\n    box-shadow: ${theme.shadows.lg};\n    transform: translateY(${props => (props.isOpen ? '0' : '-100%')});\n    opacity: ${props => (props.isOpen ? '1' : '0')};\n    visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n    transition: all 0.3s ease;\n    z-index: 99;\n    gap: ${theme.spacing.lg};\n    align-items: stretch;\n  }\n\n  ${media.mobile} {\n    top: 60px;\n    padding: ${theme.spacing.md};\n  }\n`;\n\nconst NavLink = styled(Link)`\n  color: ${theme.colors.gray700};\n  font-weight: 500;\n  transition: color 0.2s ease;\n  position: relative;\n  white-space: nowrap;\n\n  &:hover {\n    color: ${theme.colors.primary};\n  }\n\n  &.active {\n    color: ${theme.colors.primary};\n\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: -8px;\n      left: 0;\n      right: 0;\n      height: 2px;\n      background: ${theme.colors.primary};\n    }\n  }\n\n  ${media.tabletDown} {\n    padding: ${theme.spacing.md} ${theme.spacing.lg};\n    width: 100%;\n    text-align: center;\n    border-radius: ${theme.borderRadius.md};\n\n    &:hover {\n      background: ${theme.colors.gray50};\n    }\n\n    &.active::after {\n      display: none;\n    }\n\n    &.active {\n      background: ${theme.colors.primary}10;\n    }\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.sm} ${theme.spacing.md};\n    font-size: 1.125rem;\n  }\n`;\n\nconst NavActions = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.lg};\n\n  ${media.mobile} {\n    gap: ${theme.spacing.sm};\n  }\n\n  ${media.tablet} {\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst ActionButton = styled.button`\n  background: none;\n  color: ${theme.colors.gray700};\n  font-size: 1.2rem;\n  transition: color 0.2s ease;\n  padding: ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  min-width: 2.5rem;\n  min-height: 2.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    color: ${theme.colors.primary};\n    background: ${theme.colors.gray100};\n  }\n\n  ${media.mobile} {\n    font-size: 1rem;\n    padding: ${theme.spacing.xs};\n    min-width: 2.25rem;\n    min-height: 2.25rem;\n  }\n\n  ${media.tablet} {\n    font-size: 1.1rem;\n  }\n`;\n\nconst BackButton = styled(Link)`\n  background: ${theme.colors.white};\n  color: ${theme.colors.gray700};\n  border: 2px solid ${theme.colors.gray200};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  transition: all 0.2s ease;\n  white-space: nowrap;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.xs} ${theme.spacing.sm};\n    gap: ${theme.spacing.xs};\n    font-size: 0.875rem;\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.sm} ${theme.spacing.md};\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst MobileMenuButton = styled.button`\n  background: none;\n  border: none;\n  color: ${theme.colors.gray700};\n  font-size: 1.25rem;\n  padding: ${theme.spacing.sm};\n  cursor: pointer;\n  border-radius: ${theme.borderRadius.sm};\n  transition: all 0.2s ease;\n  display: none;\n  min-width: 2.5rem;\n  min-height: 2.5rem;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background: ${theme.colors.gray50};\n    color: ${theme.colors.primary};\n  }\n\n  &:active {\n    background: ${theme.colors.gray100};\n  }\n\n  ${media.tabletDown} {\n    display: flex;\n  }\n\n  ${media.mobile} {\n    font-size: 1.125rem;\n    min-width: 2.25rem;\n    min-height: 2.25rem;\n  }\n`;\n\nconst MobileNavActions = styled.div`\n  display: none;\n\n  ${media.tabletDown} {\n    display: flex;\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n    padding: ${theme.spacing.lg} 0;\n    border-top: 1px solid ${theme.colors.gray200};\n    margin-top: ${theme.spacing.lg};\n    width: 100%;\n  }\n\n  ${media.mobile} {\n    gap: ${theme.spacing.sm};\n    padding: ${theme.spacing.md} 0;\n  }\n`;\n\nconst MobileActionButton = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  text-decoration: none;\n  transition: all 0.2s ease;\n  gap: ${theme.spacing.sm};\n  background: ${theme.colors.gray50};\n  color: ${theme.colors.gray700};\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.primary};\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.sm} ${theme.spacing.md};\n    font-size: 0.875rem;\n  }\n`;\n\nconst HotelNavbar = ({ showBackToMain = true }) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n  // Extract hotel slug from URL path like \"/taj-palace/rooms/101\"\n  const hotelSlug = useMemo(() => {\n    const pathSegments = location.pathname.split('/').filter(Boolean);\n    // For hotel routes, the first segment is usually the hotel slug\n    return pathSegments.length > 0 && pathSegments[0] !== 'hotels'\n      ? pathSegments[0]\n      : '';\n  }, [location.pathname]);\n\n  const closeMobileMenu = () => setMobileMenuOpen(false);\n\n  return (\n    <NavbarContainer>\n      <NavbarContent>\n        <Logo to=\"/hotels\">\n          <FaHotel />\n          HotelBooker\n        </Logo>\n\n        <NavLinks isOpen={mobileMenuOpen}>\n          <NavLink to=\"/hotels\" onClick={closeMobileMenu}>\n            Find Hotels\n          </NavLink>\n          <NavLink to=\"/my-bookings\" onClick={closeMobileMenu}>\n            My Bookings\n          </NavLink>\n          <NavLink to={'hoteladmin'} onClick={closeMobileMenu}>\n            Hotel Owner\n          </NavLink>\n\n          <MobileNavActions>\n            {showBackToMain && (\n              <MobileActionButton to=\"/\" onClick={closeMobileMenu}>\n                <FaHome />\n                Main Site\n              </MobileActionButton>\n            )}\n            <MobileActionButton to=\"/my-bookings\" onClick={closeMobileMenu}>\n              <FaCalendarAlt />\n              My Bookings\n            </MobileActionButton>\n          </MobileNavActions>\n        </NavLinks>\n\n        <NavActions>\n          {showBackToMain && (\n            <BackButton to=\"/\" title=\"Back to Main Site\">\n              <FaHome />\n              Main Site\n            </BackButton>\n          )}\n\n          <ActionButton\n            title=\"My Bookings\"\n            onClick={() => navigate('/my-bookings')}\n          >\n            <FaCalendarAlt />\n          </ActionButton>\n\n          <ActionButton title=\"User Account\">\n            <FaUser />\n          </ActionButton>\n\n          <MobileMenuButton\n            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n            title=\"Menu\"\n          >\n            {mobileMenuOpen ? <FaTimes /> : <FaBars />}\n          </MobileMenuButton>\n        </NavActions>\n      </NavbarContent>\n    </NavbarContainer>\n  );\n};\n\nexport default HotelNavbar;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/hotel/components/RoomCard.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'hotelId' is defined but never used. Allowed unused args must match /^_/u.","line":509,"column":27,"nodeType":"Identifier","messageId":"unusedVar","endLine":509,"endColumn":34},{"ruleId":"no-unused-vars","severity":1,"message":"'hotelSlug' is defined but never used. Allowed unused args must match /^_/u.","line":509,"column":36,"nodeType":"Identifier","messageId":"unusedVar","endLine":509,"endColumn":45},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":545,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":545,"endColumn":46}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaBed,\n  FaUsers,\n  FaWifi,\n  FaTv,\n  FaCoffee,\n  FaWind,\n  FaExpand,\n  FaHeart,\n  FaShare,\n  FaImages,\n  FaCheckCircle,\n  FaStar,\n} from 'react-icons/fa';\nimport { theme, media } from '../../styles/GlobalStyle';\n\nconst Card = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  overflow: hidden;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  transition: all 0.4s ease;\n  border: 1px solid ${theme.colors.gray100};\n  position: relative;\n\n  &:hover {\n    transform: translateY(-8px);\n    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);\n  }\n\n  ${media.mobile} {\n    border-radius: ${theme.borderRadius.lg};\n\n    &:hover {\n      transform: translateY(-4px);\n      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);\n    }\n  }\n\n  ${media.tablet} {\n    &:hover {\n      transform: translateY(-6px);\n    }\n  }\n`;\n\nconst CardImage = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'image',\n})`\n  height: 240px;\n  background-image: url(${props => props.image});\n  background-size: cover;\n  background-position: center;\n  position: relative;\n  overflow: hidden;\n  cursor: pointer;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(\n      to bottom,\n      transparent 0%,\n      rgba(0, 0, 0, 0.1) 100%\n    );\n    transition: background 0.3s ease;\n  }\n\n  &:hover::before {\n    background: linear-gradient(\n      to bottom,\n      transparent 0%,\n      rgba(0, 0, 0, 0.3) 100%\n    );\n  }\n\n  ${media.mobile} {\n    height: 180px;\n  }\n\n  ${media.tablet} {\n    height: 200px;\n  }\n`;\n\nconst RoomType = styled.div`\n  position: absolute;\n  top: ${theme.spacing.md};\n  left: ${theme.spacing.md};\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary},\n    ${theme.colors.primaryDark}\n  );\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.8rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  backdrop-filter: blur(10px);\n  box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);\n  z-index: 2;\n\n  ${media.mobile} {\n    top: ${theme.spacing.sm};\n    left: ${theme.spacing.sm};\n    padding: ${theme.spacing.xs} ${theme.spacing.sm};\n    font-size: 0.7rem;\n  }\n`;\n\nconst ImageActions = styled.div`\n  position: absolute;\n  top: ${theme.spacing.md};\n  right: ${theme.spacing.md};\n  display: flex;\n  gap: ${theme.spacing.sm};\n  z-index: 2;\n\n  ${media.mobile} {\n    top: ${theme.spacing.sm};\n    right: ${theme.spacing.sm};\n    gap: ${theme.spacing.xs};\n  }\n`;\n\nconst ActionButton = styled.button`\n  background: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(10px);\n  border: none;\n  color: ${theme.colors.gray700};\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 0.9rem;\n\n  &:hover {\n    background: ${theme.colors.white};\n    color: ${theme.colors.primary};\n    transform: scale(1.1);\n  }\n\n  ${media.mobile} {\n    width: 32px;\n    height: 32px;\n    font-size: 0.8rem;\n  }\n`;\n\nconst ImageOverlay = styled.div`\n  position: absolute;\n  bottom: ${theme.spacing.md};\n  left: ${theme.spacing.md};\n  right: ${theme.spacing.md};\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  border-radius: ${theme.borderRadius.md};\n  padding: ${theme.spacing.sm};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  opacity: 0;\n  transform: translateY(10px);\n  transition: all 0.3s ease;\n  z-index: 2;\n\n  ${Card}:hover & {\n    opacity: 1;\n    transform: translateY(0);\n  }\n\n  .icon {\n    color: ${theme.colors.primary};\n  }\n\n  .text {\n    font-size: 0.85rem;\n    font-weight: 500;\n    color: ${theme.colors.gray700};\n  }\n\n  ${media.mobile} {\n    bottom: ${theme.spacing.sm};\n    left: ${theme.spacing.sm};\n    right: ${theme.spacing.sm};\n    padding: ${theme.spacing.xs};\n\n    .text {\n      font-size: 0.75rem;\n    }\n  }\n`;\n\nconst CardContent = styled.div`\n  padding: ${theme.spacing.xl};\n\n  ${media.mobile} {\n    padding: ${theme.spacing.lg};\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.xl};\n  }\n`;\n\nconst RoomHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: ${theme.spacing.md};\n\n  ${media.mobile} {\n    flex-direction: column;\n    align-items: stretch;\n    gap: ${theme.spacing.sm};\n    margin-bottom: ${theme.spacing.sm};\n  }\n\n  ${media.tablet} {\n    flex-direction: row;\n    align-items: flex-start;\n  }\n`;\n\nconst RoomInfo = styled.div`\n  flex: 1;\n`;\n\nconst RoomName = styled.h3`\n  font-size: 1.4rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n  line-height: 1.3;\n\n  ${media.mobile} {\n    font-size: 1.2rem;\n    margin-bottom: ${theme.spacing.xs};\n  }\n\n  ${media.tablet} {\n    font-size: 1.3rem;\n  }\n`;\n\nconst RoomDetails = styled.div`\n  display: flex;\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.sm};\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n  flex-wrap: wrap;\n\n  ${media.mobile} {\n    gap: ${theme.spacing.md};\n    font-size: 0.85rem;\n    margin-bottom: ${theme.spacing.xs};\n  }\n\n  ${media.tablet} {\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst Detail = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n\n  ${media.mobile} {\n    gap: ${theme.spacing.xs};\n\n    svg {\n      font-size: 0.8rem;\n    }\n  }\n`;\n\nconst PriceContainer = styled.div`\n  text-align: right;\n\n  ${media.mobile} {\n    text-align: left;\n    margin-top: ${theme.spacing.sm};\n  }\n\n  ${media.tablet} {\n    text-align: right;\n    margin-top: 0;\n  }\n`;\n\nconst Price = styled.div`\n  font-size: 1.8rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n  margin-bottom: ${theme.spacing.xs};\n  display: flex;\n  align-items: baseline;\n  gap: ${theme.spacing.xs};\n\n  .currency {\n    font-size: 1.2rem;\n  }\n\n  ${media.mobile} {\n    font-size: 1.5rem;\n\n    .currency {\n      font-size: 1rem;\n    }\n  }\n\n  ${media.tablet} {\n    font-size: 1.6rem;\n\n    .currency {\n      font-size: 1.1rem;\n    }\n  }\n`;\n\nconst PriceUnit = styled.div`\n  font-size: 0.8rem;\n  color: ${theme.colors.gray500};\n\n  ${media.mobile} {\n    font-size: 0.75rem;\n  }\n`;\n\nconst Description = styled.p`\n  color: ${theme.colors.gray700};\n  font-size: 0.9rem;\n  line-height: 1.5;\n  margin-bottom: ${theme.spacing.lg};\n\n  ${media.mobile} {\n    font-size: 0.85rem;\n    margin-bottom: ${theme.spacing.md};\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n  }\n\n  ${media.tablet} {\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst Amenities = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.xl};\n\n  ${media.mobile} {\n    grid-template-columns: repeat(2, 1fr);\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst AmenityItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.gray700};\n  font-size: 0.85rem;\n  padding: ${theme.spacing.xs} 0;\n\n  .icon {\n    color: ${theme.colors.success};\n    font-size: 0.9rem;\n  }\n\n  ${media.mobile} {\n    font-size: 0.8rem;\n    gap: ${theme.spacing.xs};\n\n    .icon {\n      font-size: 0.8rem;\n    }\n  }\n`;\n\nconst BookingActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n\n  ${media.mobile} {\n    flex-direction: column;\n  }\n`;\n\nconst BookButton = styled(Link)`\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary},\n    ${theme.colors.primaryDark}\n  );\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  text-decoration: none;\n  font-weight: 600;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n  transition: all 0.3s ease;\n  min-height: 3rem;\n  flex: 1;\n  box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);\n  font-size: 0.95rem;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(59, 130, 246, 0.4);\n  }\n\n  ${media.mobile} {\n    padding: ${theme.spacing.sm} ${theme.spacing.lg};\n    font-size: 0.9rem;\n    min-height: 2.75rem;\n\n    &:hover {\n      transform: translateY(-1px);\n    }\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.md} ${theme.spacing.xl};\n  }\n`;\n\nconst ViewRoomButton = styled(Link)`\n  background: ${theme.colors.white};\n  color: ${theme.colors.primary};\n  border: 2px solid ${theme.colors.primary};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  min-height: 3rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n  text-decoration: none;\n  flex: 0 0 auto;\n  min-width: 120px;\n\n  &:hover {\n    background: ${theme.colors.primary};\n    color: ${theme.colors.white};\n    transform: translateY(-2px);\n  }\n\n  ${media.mobile} {\n    min-height: 2.75rem;\n    padding: ${theme.spacing.sm} ${theme.spacing.md};\n    font-size: 0.9rem;\n    min-width: 100px;\n\n    &:hover {\n      transform: translateY(-1px);\n    }\n  }\n`;\n\nconst RoomFeatures = styled.div`\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.lg};\n  margin: ${theme.spacing.lg} 0;\n`;\n\nconst FeatureTitle = styled.h4`\n  font-size: 1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  .icon {\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst RoomCard = ({ room, hotelId, hotelSlug }) => {\n  const [isLiked, setIsLiked] = useState(false);\n\n  const getAmenityIcon = amenity => {\n    const iconMap = {\n      WiFi: FaWifi,\n      TV: FaTv,\n      'Mini Bar': FaCoffee,\n      'Room Service': FaCoffee,\n      AC: FaWind,\n      'Ocean View': FaExpand,\n      'City View': FaExpand,\n      'Mountain View': FaExpand,\n      'Heritage Decor': FaStar,\n      Balcony: FaExpand,\n      'Work Desk': FaTv,\n      'Butler Service': FaCoffee,\n      'Living Room': FaExpand,\n    };\n    const IconComponent = iconMap[amenity] || FaCheckCircle;\n    return <IconComponent className=\"icon\" />;\n  };\n\n  const handleLike = () => {\n    setIsLiked(!isLiked);\n  };\n\n  const handleShare = () => {\n    if (navigator.share) {\n      navigator.share({\n        title: room.name,\n        text: room.description,\n        url: window.location.href,\n      });\n    } else {\n      navigator.clipboard.writeText(window.location.href);\n      alert('Room link copied to clipboard!');\n    }\n  };\n\n  return (\n    <Card>\n      <CardImage\n        image={\n          room.images?.[0] ||\n          'https://images.unsplash.com/photo-1631049307264-da0ec9d70304?ixlib=rb-4.0.3'\n        }\n      >\n        <RoomType>{room.type}</RoomType>\n        <ImageActions>\n          <ActionButton\n            onClick={handleLike}\n            style={{ color: isLiked ? '#ef4444' : undefined }}\n          >\n            <FaHeart />\n          </ActionButton>\n          <ActionButton onClick={handleShare}>\n            <FaShare />\n          </ActionButton>\n        </ImageActions>\n        <ImageOverlay>\n          <FaImages className=\"icon\" />\n          <span className=\"text\">{room.images?.length || 3} Photos</span>\n        </ImageOverlay>\n      </CardImage>\n\n      <CardContent>\n        <RoomHeader>\n          <RoomInfo>\n            <RoomName>{room.name}</RoomName>\n            <RoomDetails>\n              <Detail>\n                <FaBed />\n                {room.bedType}\n              </Detail>\n              <Detail>\n                <FaUsers />\n                {room.maxGuests} guests\n              </Detail>\n            </RoomDetails>\n          </RoomInfo>\n\n          <PriceContainer>\n            <Price>\n              <span className=\"currency\">₹</span>\n              {room.price.toLocaleString()}\n            </Price>\n            <PriceUnit>per night</PriceUnit>\n          </PriceContainer>\n        </RoomHeader>\n\n        <Description>{room.description}</Description>\n\n        <RoomFeatures>\n          <FeatureTitle>\n            <FaCheckCircle className=\"icon\" />\n            Room Features\n          </FeatureTitle>\n          <Amenities>\n            {room.amenities?.slice(0, 6).map((amenity, index) => (\n              <AmenityItem key={index}>\n                {getAmenityIcon(amenity)}\n                {amenity}\n              </AmenityItem>\n            ))}\n          </Amenities>\n        </RoomFeatures>\n\n        <BookingActions>\n          <BookButton to={`booking/${room.id}`}>Book Now</BookButton>\n          <ViewRoomButton to={`${room.id}`}>\n            <FaExpand />\n            View Room\n          </ViewRoomButton>\n        </BookingActions>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default RoomCard;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/hotel/components/SearchForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaSearch,\n  FaMapMarkerAlt,\n  FaCalendarAlt,\n  FaUsers,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\n\nconst SearchContainer = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.xl};\n  box-shadow: ${theme.shadows.xl};\n  margin-top: -${theme.spacing.xxl};\n  position: relative;\n  z-index: 10;\n`;\n\nconst SearchForm = styled.form`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr auto;\n  gap: ${theme.spacing.lg};\n  align-items: end;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.label`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n  font-size: 0.9rem;\n`;\n\nconst InputContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.md} 3rem;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray500};\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.md} 3rem;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  background: ${theme.colors.white};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n\nconst Icon = styled.div`\n  position: absolute;\n  left: ${theme.spacing.md};\n  color: ${theme.colors.gray500};\n  font-size: 1.1rem;\n  z-index: 1;\n`;\n\nconst SearchButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  white-space: nowrap;\n  height: fit-content;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-2px);\n    box-shadow: ${theme.shadows.lg};\n  }\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    width: 100%;\n    justify-content: center;\n  }\n`;\n\nconst HotelSearchForm = ({ onSearch, initialValues = {} }) => {\n  const [searchData, setSearchData] = useState({\n    destination: initialValues.destination || '',\n    checkIn: initialValues.checkIn || '',\n    checkOut: initialValues.checkOut || '',\n    guests: initialValues.guests || '2',\n  });\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setSearchData(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (onSearch) {\n      onSearch(searchData);\n    }\n  };\n\n  // Get today's date for min attribute\n  const today = new Date().toISOString().split('T')[0];\n\n  return (\n    <SearchContainer>\n      <SearchForm onSubmit={handleSubmit}>\n        <FormGroup>\n          <Label htmlFor=\"destination\">Where to?</Label>\n          <InputContainer>\n            <Icon>\n              <FaMapMarkerAlt />\n            </Icon>\n            <Input\n              type=\"text\"\n              id=\"destination\"\n              name=\"destination\"\n              placeholder=\"City, hotel name...\"\n              value={searchData.destination}\n              onChange={handleInputChange}\n              required\n            />\n          </InputContainer>\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"checkIn\">Check-in</Label>\n          <InputContainer>\n            <Icon>\n              <FaCalendarAlt />\n            </Icon>\n            <Input\n              type=\"date\"\n              id=\"checkIn\"\n              name=\"checkIn\"\n              value={searchData.checkIn}\n              onChange={handleInputChange}\n              min={today}\n              required\n            />\n          </InputContainer>\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"checkOut\">Check-out</Label>\n          <InputContainer>\n            <Icon>\n              <FaCalendarAlt />\n            </Icon>\n            <Input\n              type=\"date\"\n              id=\"checkOut\"\n              name=\"checkOut\"\n              value={searchData.checkOut}\n              onChange={handleInputChange}\n              min={searchData.checkIn || today}\n              required\n            />\n          </InputContainer>\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"guests\">Guests</Label>\n          <InputContainer>\n            <Icon>\n              <FaUsers />\n            </Icon>\n            <Select\n              id=\"guests\"\n              name=\"guests\"\n              value={searchData.guests}\n              onChange={handleInputChange}\n            >\n              <option value=\"1\">1 Guest</option>\n              <option value=\"2\">2 Guests</option>\n              <option value=\"3\">3 Guests</option>\n              <option value=\"4\">4 Guests</option>\n              <option value=\"5\">5+ Guests</option>\n            </Select>\n          </InputContainer>\n        </FormGroup>\n\n        <SearchButton type=\"submit\">\n          <FaSearch />\n          Search\n        </SearchButton>\n      </SearchForm>\n    </SearchContainer>\n  );\n};\n\nexport default HotelSearchForm;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/hotel/index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nimport HotelDetail from './pages/HotelDetail';\n\nconst HotelModule = () => {\n  return <HotelDetail />;\n};\n\nexport default HotelModule;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/hotel/pages/Booking.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":605,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":605,"endColumn":49}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaArrowLeft,\n  FaUser,\n  FaCalendarAlt,\n  FaCreditCard,\n  FaLock,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport HotelNavbar from '../components/HotelNavbar';\nimport HotelFooter from '../components/HotelFooter';\nimport { getHotelByIdOrSlug, getRoomById } from '../../DummyData';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n  flex: 1;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg} ${theme.spacing.sm};\n  }\n`;\n\nconst BackButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  background: none;\n  border: none;\n  color: ${theme.colors.primary};\n  font-weight: 500;\n  margin-bottom: ${theme.spacing.xl};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 1rem;\n\n  &:hover {\n    transform: translateX(-4px);\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.1rem;\n    font-weight: 600;\n    margin-bottom: ${theme.spacing.lg};\n    padding: ${theme.spacing.sm} 0;\n  }\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xl};\n  text-align: center;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2.2rem;\n    margin-bottom: ${theme.spacing.lg};\n    line-height: 1.3;\n  }\n`;\n\nconst BookingGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 400px;\n  gap: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.xl};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst BookingForm = styled.form`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xxl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.xl};\n    margin: 0 -${theme.spacing.xs};\n    border-radius: ${theme.borderRadius.lg};\n    box-shadow: ${theme.shadows.lg};\n  }\n`;\n\nconst BookingSummary = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  height: fit-content;\n  position: sticky;\n  top: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    position: static;\n    padding: ${theme.spacing.xl};\n    margin: 0 -${theme.spacing.xs};\n    order: -1;\n    border-radius: ${theme.borderRadius.lg};\n    box-shadow: ${theme.shadows.lg};\n  }\n`;\n\nconst Section = styled.div`\n  margin-bottom: ${theme.spacing.xxl};\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    margin-bottom: ${theme.spacing.xl};\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.lg};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.7rem;\n    font-weight: 700;\n    margin-bottom: ${theme.spacing.xl};\n  }\n`;\n\nconst FormGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.xl};\n  }\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst Label = styled.label`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  font-size: 0.9rem;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1rem;\n    font-weight: 700;\n  }\n`;\n\nconst Input = styled.input`\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &.error {\n    border-color: ${theme.colors.error};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg};\n    font-size: 1.1rem;\n    border-radius: ${theme.borderRadius.lg};\n    border-width: 2px;\n\n    &:focus {\n      border-width: 3px;\n    }\n  }\n`;\n\nconst Select = styled.select`\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  background: ${theme.colors.white};\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg};\n    font-size: 1.1rem;\n    border-radius: ${theme.borderRadius.lg};\n    border-width: 2px;\n\n    &:focus {\n      border-width: 3px;\n    }\n  }\n`;\n\nconst TextArea = styled.textarea`\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  resize: vertical;\n  min-height: 100px;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg};\n    font-size: 1.1rem;\n    border-radius: ${theme.borderRadius.lg};\n    border-width: 2px;\n    min-height: 120px;\n\n    &:focus {\n      border-width: 3px;\n    }\n  }\n`;\n\nconst ErrorMessage = styled.span`\n  color: ${theme.colors.error};\n  font-size: 0.8rem;\n  margin-top: ${theme.spacing.xs};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 0.9rem;\n    font-weight: 600;\n  }\n`;\n\nconst SummaryHeader = styled.div`\n  margin-bottom: ${theme.spacing.lg};\n  padding-bottom: ${theme.spacing.lg};\n  border-bottom: 1px solid ${theme.colors.gray200};\n`;\n\nconst HotelInfo = styled.div`\n  h3 {\n    font-size: 1.2rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.sm};\n  }\n\n  p {\n    color: ${theme.colors.gray600};\n    font-size: 0.9rem;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    text-align: center;\n\n    h3 {\n      font-size: 1.4rem;\n      font-weight: 700;\n    }\n\n    p {\n      font-size: 1rem;\n    }\n  }\n`;\n\nconst BookingDetails = styled.div`\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst DetailRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.md};\n  font-size: 0.9rem;\n\n  .label {\n    color: ${theme.colors.gray600};\n  }\n\n  .value {\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1rem;\n    margin-bottom: ${theme.spacing.lg};\n\n    .label {\n      font-weight: 600;\n    }\n\n    .value {\n      font-weight: 700;\n    }\n  }\n`;\n\nconst PriceBreakdown = styled.div`\n  padding-top: ${theme.spacing.lg};\n  border-top: 1px solid ${theme.colors.gray200};\n`;\n\nconst PriceRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${theme.spacing.sm};\n\n  &.total {\n    font-weight: 600;\n    font-size: 1.1rem;\n    border-top: 1px solid ${theme.colors.gray300};\n    padding-top: ${theme.spacing.md};\n    margin-top: ${theme.spacing.md};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1rem;\n    margin-bottom: ${theme.spacing.md};\n\n    &.total {\n      font-size: 1.3rem;\n      font-weight: 700;\n      padding-top: ${theme.spacing.lg};\n    }\n  }\n`;\n\nconst BookButton = styled.button`\n  width: 100%;\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary},\n    ${theme.colors.primaryDark}\n  );\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1.1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  margin-top: ${theme.spacing.lg};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n  position: relative;\n  overflow: hidden;\n  box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      90deg,\n      transparent,\n      rgba(255, 255, 255, 0.2),\n      transparent\n    );\n    transition: left 0.5s;\n  }\n\n  &:hover::before {\n    left: 100%;\n  }\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(59, 130, 246, 0.4);\n  }\n\n  &:disabled {\n    background: ${theme.colors.gray400};\n    cursor: not-allowed;\n    transform: none;\n\n    &::before {\n      display: none;\n    }\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.xl};\n    font-size: 1.3rem;\n    font-weight: 700;\n    border-radius: ${theme.borderRadius.lg};\n    box-shadow: 0 6px 20px rgba(59, 130, 246, 0.4);\n\n    &:hover {\n      transform: translateY(-1px);\n    }\n  }\n`;\n\nconst SecurityNote = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.gray600};\n  font-size: 0.8rem;\n  margin-top: ${theme.spacing.md};\n  text-align: center;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 0.9rem;\n    justify-content: center;\n    flex-wrap: wrap;\n  }\n`;\n\nconst Booking = () => {\n  const { slug, roomId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [hotel, setHotel] = useState(null);\n  const [room, setRoom] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  const initialBookingData = location.state?.bookingData || {\n    checkIn: '',\n    checkOut: '',\n    guests: '2',\n  };\n\n  const [formData, setFormData] = useState({\n    // Guest Information\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    // Booking Details\n    checkIn: initialBookingData.checkIn,\n    checkOut: initialBookingData.checkOut,\n    guests: initialBookingData.guests,\n    specialRequests: '',\n    // Payment Information\n    cardNumber: '',\n    expiryDate: '',\n    cvv: '',\n    cardName: '',\n  });\n\n  useEffect(() => {\n    const foundHotel = getHotelByIdOrSlug(slug);\n    const foundRoom = foundHotel ? getRoomById(foundHotel.id, roomId) : null;\n    setHotel(foundHotel);\n    setRoom(foundRoom);\n  }, [slug, roomId]);\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors({ ...errors, [name]: '' });\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    // Required fields validation\n    const requiredFields = [\n      'firstName',\n      'lastName',\n      'email',\n      'phone',\n      'checkIn',\n      'checkOut',\n      'cardNumber',\n      'expiryDate',\n      'cvv',\n      'cardName',\n    ];\n\n    requiredFields.forEach(field => {\n      if (!formData[field].trim()) {\n        newErrors[field] = 'This field is required';\n      }\n    });\n\n    // Email validation\n    if (formData.email && !/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    // Phone validation\n    if (formData.phone && !/^\\+?[\\d\\s-()]{10,}$/.test(formData.phone)) {\n      newErrors.phone = 'Please enter a valid phone number';\n    }\n\n    // Date validation\n    if (formData.checkIn && formData.checkOut) {\n      const checkIn = new Date(formData.checkIn);\n      const checkOut = new Date(formData.checkOut);\n      if (checkOut <= checkIn) {\n        newErrors.checkOut = 'Check-out date must be after check-in date';\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const calculateNights = () => {\n    if (formData.checkIn && formData.checkOut) {\n      const checkIn = new Date(formData.checkIn);\n      const checkOut = new Date(formData.checkOut);\n      const diffTime = Math.abs(checkOut - checkIn);\n      return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    }\n    return 1;\n  };\n\n  const calculateSubtotal = () => {\n    return room ? room.price * calculateNights() : 0;\n  };\n\n  const calculateTaxes = () => {\n    return calculateSubtotal() * 0.12; // 12% tax\n  };\n\n  const calculateTotal = () => {\n    return calculateSubtotal() + calculateTaxes();\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    setLoading(true);\n\n    // Simulate booking process\n    try {\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      // Create booking object\n      const booking = {\n        id: Date.now(),\n\n        roomId: parseInt(roomId),\n        hotelName: hotel.name,\n        roomName: room.name,\n        ...formData,\n        totalPrice: calculateTotal(),\n        status: 'confirmed',\n        bookingDate: new Date().toISOString().split('T')[0],\n      };\n\n      // Navigate to confirmation\n      navigate(`/${slug}/bookingconfirmation`, {\n        state: { booking },\n      });\n    } catch (error) {\n      alert('Booking failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!hotel || !room) {\n    return (\n      <PageContainer>\n        <HotelNavbar />\n        <Container>\n          <div style={{ textAlign: 'center', padding: '4rem 0' }}>\n            <h2>Booking not available</h2>\n            <p>Please select a valid hotel and room.</p>\n          </div>\n        </Container>\n        <HotelFooter />\n      </PageContainer>\n    );\n  }\n\n  return (\n    <PageContainer>\n      <HotelNavbar />\n\n      <Container>\n        <BackButton onClick={() => navigate(-1)}>\n          <FaArrowLeft />\n          Back to Room\n        </BackButton>\n\n        <PageTitle>Complete Your Booking</PageTitle>\n\n        <BookingGrid>\n          <BookingForm onSubmit={handleSubmit}>\n            <Section>\n              <SectionTitle>\n                <FaUser />\n                Guest Information\n              </SectionTitle>\n              <FormGrid>\n                <FormGroup>\n                  <Label htmlFor=\"firstName\">First Name</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    value={formData.firstName}\n                    onChange={handleInputChange}\n                    className={errors.firstName ? 'error' : ''}\n                  />\n                  {errors.firstName && (\n                    <ErrorMessage>{errors.firstName}</ErrorMessage>\n                  )}\n                </FormGroup>\n\n                <FormGroup>\n                  <Label htmlFor=\"lastName\">Last Name</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    value={formData.lastName}\n                    onChange={handleInputChange}\n                    className={errors.lastName ? 'error' : ''}\n                  />\n                  {errors.lastName && (\n                    <ErrorMessage>{errors.lastName}</ErrorMessage>\n                  )}\n                </FormGroup>\n\n                <FormGroup>\n                  <Label htmlFor=\"email\">Email Address</Label>\n                  <Input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleInputChange}\n                    className={errors.email ? 'error' : ''}\n                  />\n                  {errors.email && <ErrorMessage>{errors.email}</ErrorMessage>}\n                </FormGroup>\n\n                <FormGroup>\n                  <Label htmlFor=\"phone\">Phone Number</Label>\n                  <Input\n                    type=\"tel\"\n                    id=\"phone\"\n                    name=\"phone\"\n                    value={formData.phone}\n                    onChange={handleInputChange}\n                    className={errors.phone ? 'error' : ''}\n                  />\n                  {errors.phone && <ErrorMessage>{errors.phone}</ErrorMessage>}\n                </FormGroup>\n              </FormGrid>\n            </Section>\n\n            <Section>\n              <SectionTitle>\n                <FaCalendarAlt />\n                Booking Details\n              </SectionTitle>\n              <FormGrid>\n                <FormGroup>\n                  <Label htmlFor=\"checkIn\">Check-in Date</Label>\n                  <Input\n                    type=\"date\"\n                    id=\"checkIn\"\n                    name=\"checkIn\"\n                    value={formData.checkIn}\n                    onChange={handleInputChange}\n                    min={new Date().toISOString().split('T')[0]}\n                    className={errors.checkIn ? 'error' : ''}\n                  />\n                  {errors.checkIn && (\n                    <ErrorMessage>{errors.checkIn}</ErrorMessage>\n                  )}\n                </FormGroup>\n\n                <FormGroup>\n                  <Label htmlFor=\"checkOut\">Check-out Date</Label>\n                  <Input\n                    type=\"date\"\n                    id=\"checkOut\"\n                    name=\"checkOut\"\n                    value={formData.checkOut}\n                    onChange={handleInputChange}\n                    min={formData.checkIn}\n                    className={errors.checkOut ? 'error' : ''}\n                  />\n                  {errors.checkOut && (\n                    <ErrorMessage>{errors.checkOut}</ErrorMessage>\n                  )}\n                </FormGroup>\n\n                <FormGroup>\n                  <Label htmlFor=\"guests\">Number of Guests</Label>\n                  <Select\n                    id=\"guests\"\n                    name=\"guests\"\n                    value={formData.guests}\n                    onChange={handleInputChange}\n                  >\n                    {Array.from({ length: room.maxGuests }, (_, i) => (\n                      <option key={i + 1} value={i + 1}>\n                        {i + 1} Guest{i > 0 ? 's' : ''}\n                      </option>\n                    ))}\n                  </Select>\n                </FormGroup>\n              </FormGrid>\n\n              <FormGroup style={{ marginTop: theme.spacing.lg }}>\n                <Label htmlFor=\"specialRequests\">\n                  Special Requests (Optional)\n                </Label>\n                <TextArea\n                  id=\"specialRequests\"\n                  name=\"specialRequests\"\n                  value={formData.specialRequests}\n                  onChange={handleInputChange}\n                  placeholder=\"Any special requirements or requests...\"\n                />\n              </FormGroup>\n            </Section>\n\n            <Section>\n              <SectionTitle>\n                <FaCreditCard />\n                Payment Information\n              </SectionTitle>\n              <FormGrid>\n                <FormGroup style={{ gridColumn: '1 / -1' }}>\n                  <Label htmlFor=\"cardNumber\">Card Number</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"cardNumber\"\n                    name=\"cardNumber\"\n                    value={formData.cardNumber}\n                    onChange={handleInputChange}\n                    placeholder=\"1234 5678 9012 3456\"\n                    className={errors.cardNumber ? 'error' : ''}\n                  />\n                  {errors.cardNumber && (\n                    <ErrorMessage>{errors.cardNumber}</ErrorMessage>\n                  )}\n                </FormGroup>\n\n                <FormGroup>\n                  <Label htmlFor=\"expiryDate\">Expiry Date</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"expiryDate\"\n                    name=\"expiryDate\"\n                    value={formData.expiryDate}\n                    onChange={handleInputChange}\n                    placeholder=\"MM/YY\"\n                    className={errors.expiryDate ? 'error' : ''}\n                  />\n                  {errors.expiryDate && (\n                    <ErrorMessage>{errors.expiryDate}</ErrorMessage>\n                  )}\n                </FormGroup>\n\n                <FormGroup>\n                  <Label htmlFor=\"cvv\">CVV</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"cvv\"\n                    name=\"cvv\"\n                    value={formData.cvv}\n                    onChange={handleInputChange}\n                    placeholder=\"123\"\n                    className={errors.cvv ? 'error' : ''}\n                  />\n                  {errors.cvv && <ErrorMessage>{errors.cvv}</ErrorMessage>}\n                </FormGroup>\n\n                <FormGroup style={{ gridColumn: '1 / -1' }}>\n                  <Label htmlFor=\"cardName\">Cardholder Name</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"cardName\"\n                    name=\"cardName\"\n                    value={formData.cardName}\n                    onChange={handleInputChange}\n                    className={errors.cardName ? 'error' : ''}\n                  />\n                  {errors.cardName && (\n                    <ErrorMessage>{errors.cardName}</ErrorMessage>\n                  )}\n                </FormGroup>\n              </FormGrid>\n            </Section>\n\n            <BookButton type=\"submit\" disabled={loading}>\n              {loading ? (\n                'Processing...'\n              ) : (\n                <>\n                  <FaLock />\n                  Complete Booking\n                </>\n              )}\n            </BookButton>\n\n            <SecurityNote>\n              <FaLock />\n              Your payment information is secure and encrypted\n            </SecurityNote>\n          </BookingForm>\n\n          <BookingSummary>\n            <SummaryHeader>\n              <HotelInfo>\n                <h3>{hotel.name}</h3>\n                <p>{hotel.location}</p>\n              </HotelInfo>\n            </SummaryHeader>\n\n            <BookingDetails>\n              <DetailRow>\n                <span className=\"label\">Room:</span>\n                <span className=\"value\">{room.name}</span>\n              </DetailRow>\n              <DetailRow>\n                <span className=\"label\">Check-in:</span>\n                <span className=\"value\">\n                  {formData.checkIn\n                    ? new Date(formData.checkIn).toLocaleDateString()\n                    : '-'}\n                </span>\n              </DetailRow>\n              <DetailRow>\n                <span className=\"label\">Check-out:</span>\n                <span className=\"value\">\n                  {formData.checkOut\n                    ? new Date(formData.checkOut).toLocaleDateString()\n                    : '-'}\n                </span>\n              </DetailRow>\n              <DetailRow>\n                <span className=\"label\">Guests:</span>\n                <span className=\"value\">{formData.guests}</span>\n              </DetailRow>\n              <DetailRow>\n                <span className=\"label\">Nights:</span>\n                <span className=\"value\">{calculateNights()}</span>\n              </DetailRow>\n            </BookingDetails>\n\n            <PriceBreakdown>\n              <PriceRow>\n                <span>\n                  ₹{room.price.toLocaleString()} × {calculateNights()} night\n                  {calculateNights() > 1 ? 's' : ''}\n                </span>\n                <span>₹{calculateSubtotal().toLocaleString()}</span>\n              </PriceRow>\n              <PriceRow>\n                <span>Taxes & fees</span>\n                <span>₹{calculateTaxes().toLocaleString()}</span>\n              </PriceRow>\n              <PriceRow className=\"total\">\n                <span>Total</span>\n                <span>₹{calculateTotal().toLocaleString()}</span>\n              </PriceRow>\n            </PriceBreakdown>\n          </BookingSummary>\n        </BookingGrid>\n      </Container>\n\n      <HotelFooter />\n    </PageContainer>\n  );\n};\n\nexport default Booking;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/hotel/pages/BookingConfirmation.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'useParams' is defined but never used.","line":2,"column":29,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":38},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":304,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":304,"endColumn":60}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaCheckCircle,\n  FaCalendarAlt,\n  FaUsers,\n  FaEnvelope,\n  FaPhone,\n  FaPrint,\n  FaDownload,\n  FaHotel,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport HotelNavbar from '../components/HotelNavbar';\nimport HotelFooter from '../components/HotelFooter';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n  flex: 1;\n`;\n\nconst SuccessCard = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  box-shadow: ${theme.shadows.lg};\n  padding: ${theme.spacing.xxl};\n  text-align: center;\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst SuccessIcon = styled.div`\n  width: 100px;\n  height: 100px;\n  background: ${theme.colors.success};\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto ${theme.spacing.xl};\n  animation: pulse 2s ease-in-out infinite;\n\n  @keyframes pulse {\n    0% {\n      transform: scale(1);\n    }\n    50% {\n      transform: scale(1.05);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n\n  .icon {\n    font-size: 3rem;\n    color: ${theme.colors.white};\n  }\n`;\n\nconst SuccessTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst SuccessMessage = styled.p`\n  font-size: 1.1rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.xl};\n  line-height: 1.6;\n`;\n\nconst BookingNumber = styled.div`\n  background: ${theme.colors.gray100};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  margin-bottom: ${theme.spacing.xl};\n  border-left: 4px solid ${theme.colors.primary};\n\n  .label {\n    font-size: 0.9rem;\n    color: ${theme.colors.gray600};\n    margin-bottom: ${theme.spacing.xs};\n  }\n\n  .number {\n    font-size: 1.2rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    font-family: monospace;\n  }\n`;\n\nconst BookingDetails = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  padding: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.3rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst InfoGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst InfoCard = styled.div`\n  background: ${theme.colors.gray50};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  border-left: 3px solid ${theme.colors.primary};\n\n  .icon {\n    color: ${theme.colors.primary};\n    margin-bottom: ${theme.spacing.sm};\n    font-size: 1.2rem;\n  }\n\n  .title {\n    font-size: 0.9rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.sm};\n  }\n\n  .content {\n    color: ${theme.colors.gray700};\n    font-size: 0.9rem;\n    line-height: 1.5;\n  }\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  justify-content: center;\n  margin-bottom: ${theme.spacing.xl};\n  flex-wrap: wrap;\n`;\n\nconst ActionButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'primary',\n})`\n  background: ${props =>\n    props.primary ? theme.colors.primary : theme.colors.white};\n  color: ${props =>\n    props.primary ? theme.colors.white : theme.colors.gray700};\n  border: 2px solid\n    ${props => (props.primary ? theme.colors.primary : theme.colors.gray200)};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    background: ${props =>\n      props.primary ? theme.colors.primaryDark : theme.colors.gray50};\n    transform: translateY(-1px);\n  }\n`;\n\nconst NextSteps = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  padding: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst StepsList = styled.ol`\n  list-style: none;\n  padding: 0;\n  counter-reset: step-counter;\n`;\n\nconst StepItem = styled.li`\n  counter-increment: step-counter;\n  position: relative;\n  padding-left: 3rem;\n  margin-bottom: ${theme.spacing.lg};\n\n  &::before {\n    content: counter(step-counter);\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 2rem;\n    height: 2rem;\n    background: ${theme.colors.primary};\n    color: ${theme.colors.white};\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: 600;\n    font-size: 0.9rem;\n  }\n\n  .step-title {\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.xs};\n  }\n\n  .step-content {\n    color: ${theme.colors.gray600};\n    font-size: 0.9rem;\n  }\n`;\n\nconst ContactInfo = styled.div`\n  background: ${theme.colors.gray50};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  text-align: center;\n\n  h3 {\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray900};\n  }\n\n  .contact-item {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: ${theme.spacing.sm};\n    margin-bottom: ${theme.spacing.sm};\n    color: ${theme.colors.gray700};\n  }\n`;\n\nconst ContinueButton = styled(Link)`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.lg} ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  text-decoration: none;\n  font-weight: 600;\n  font-size: 1.1rem;\n  transition: all 0.2s ease;\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  box-shadow: ${theme.shadows.md};\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-2px);\n    box-shadow: ${theme.shadows.lg};\n  }\n`;\n\nconst BookingConfirmation = () => {\n  const location = useLocation();\n  const booking = location.state?.booking || {\n    id: Date.now(),\n    hotelName: 'Sample Hotel',\n    roomName: 'Sample Room',\n    checkIn: new Date().toISOString().split('T')[0],\n    checkOut: new Date(Date.now() + 86400000).toISOString().split('T')[0],\n    guests: 2,\n    firstName: 'John',\n    lastName: 'Doe',\n    email: 'john@example.com',\n    phone: '+91 9876543210',\n    totalPrice: 10000,\n  };\n\n  useEffect(() => {\n    // Scroll to top when component mounts\n    window.scrollTo(0, 0);\n  }, []);\n\n  const handlePrint = () => {\n    window.print();\n  };\n\n  const handleDownload = () => {\n    // Mock download functionality\n    alert('Booking confirmation download would start here');\n  };\n\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    });\n  };\n\n  const calculateNights = () => {\n    const checkIn = new Date(booking.checkIn);\n    const checkOut = new Date(booking.checkOut);\n    const diffTime = Math.abs(checkOut - checkIn);\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  };\n\n  return (\n    <PageContainer>\n      <HotelNavbar />\n\n      <Container>\n        <SuccessCard>\n          <SuccessIcon>\n            <FaCheckCircle className=\"icon\" />\n          </SuccessIcon>\n\n          <SuccessTitle>Booking Confirmed!</SuccessTitle>\n          <SuccessMessage>\n            Great news! Your hotel reservation has been successfully confirmed.\n            We've sent a confirmation email to {booking.email}.\n          </SuccessMessage>\n\n          <BookingNumber>\n            <div className=\"label\">Confirmation Number</div>\n            <div className=\"number\">HTL-{booking.id}</div>\n          </BookingNumber>\n\n          <ActionButtons>\n            <ActionButton onClick={handlePrint}>\n              <FaPrint />\n              Print Confirmation\n            </ActionButton>\n            <ActionButton onClick={handleDownload}>\n              <FaDownload />\n              Download PDF\n            </ActionButton>\n          </ActionButtons>\n\n          <ContinueButton to=\"/hotels\">\n            <FaHotel />\n            Browse More Hotels\n          </ContinueButton>\n        </SuccessCard>\n\n        <BookingDetails>\n          <SectionTitle>Booking Information</SectionTitle>\n\n          <InfoGrid>\n            <InfoCard>\n              <FaHotel className=\"icon\" />\n              <div className=\"title\">Hotel & Room</div>\n              <div className=\"content\">\n                <strong>{booking.hotelName}</strong>\n                <br />\n                {booking.roomName}\n              </div>\n            </InfoCard>\n\n            <InfoCard>\n              <FaCalendarAlt className=\"icon\" />\n              <div className=\"title\">Check-in</div>\n              <div className=\"content\">\n                <strong>{formatDate(booking.checkIn)}</strong>\n                <br />\n                From 3:00 PM\n              </div>\n            </InfoCard>\n\n            <InfoCard>\n              <FaCalendarAlt className=\"icon\" />\n              <div className=\"title\">Check-out</div>\n              <div className=\"content\">\n                <strong>{formatDate(booking.checkOut)}</strong>\n                <br />\n                Before 11:00 AM\n              </div>\n            </InfoCard>\n\n            <InfoCard>\n              <FaUsers className=\"icon\" />\n              <div className=\"title\">Guest Details</div>\n              <div className=\"content\">\n                <strong>\n                  {booking.firstName} {booking.lastName}\n                </strong>\n                <br />\n                {booking.guests} Guest{booking.guests > 1 ? 's' : ''} •{' '}\n                {calculateNights()} Night{calculateNights() > 1 ? 's' : ''}\n              </div>\n            </InfoCard>\n          </InfoGrid>\n\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              paddingTop: theme.spacing.lg,\n              borderTop: `1px solid ${theme.colors.gray200}`,\n            }}\n          >\n            <div>\n              <div\n                style={{\n                  fontSize: '0.9rem',\n                  color: theme.colors.gray600,\n                  marginBottom: theme.spacing.xs,\n                }}\n              >\n                Total Amount Paid\n              </div>\n              <div\n                style={{\n                  fontSize: '1.5rem',\n                  fontWeight: '700',\n                  color: theme.colors.primary,\n                }}\n              >\n                ₹{booking.totalPrice.toLocaleString()}\n              </div>\n            </div>\n          </div>\n        </BookingDetails>\n\n        <NextSteps>\n          <SectionTitle>What's Next?</SectionTitle>\n          <StepsList>\n            <StepItem>\n              <div className=\"step-title\">Check Your Email</div>\n              <div className=\"step-content\">\n                We've sent a detailed confirmation to {booking.email} with all\n                your booking information.\n              </div>\n            </StepItem>\n            <StepItem>\n              <div className=\"step-title\">Prepare for Your Trip</div>\n              <div className=\"step-content\">\n                Remember to bring a valid ID and the credit card used for\n                booking during check-in.\n              </div>\n            </StepItem>\n            <StepItem>\n              <div className=\"step-title\">Contact the Hotel</div>\n              <div className=\"step-content\">\n                If you have any special requests or need to modify your booking,\n                contact the hotel directly.\n              </div>\n            </StepItem>\n          </StepsList>\n\n          <ContactInfo>\n            <h3>Need Help?</h3>\n            <div className=\"contact-item\">\n              <FaPhone />\n              <span>Customer Support: +91 1800-HOTELS</span>\n            </div>\n            <div className=\"contact-item\">\n              <FaEnvelope />\n              <span>Email: support@hotelbooker.com</span>\n            </div>\n          </ContactInfo>\n        </NextSteps>\n      </Container>\n\n      <HotelFooter />\n    </PageContainer>\n  );\n};\n\nexport default BookingConfirmation;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/hotel/pages/HotelDetail.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport {\n  FaMapMarkerAlt,\n  FaStar,\n  FaSwimmingPool,\n  FaUtensils,\n  FaClock,\n  FaCheckCircle,\n  FaPhone,\n  FaEnvelope,\n  FaConciergeBell,\n  FaUmbrellaBeach,\n  FaBusinessTime,\n  FaTaxi,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport HotelNavbar from '../components/HotelNavbar';\nimport HotelFooter from '../components/HotelFooter';\n\nimport { getHotelByIdOrSlug } from '../../DummyData';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst HeroBanner = styled.section.withConfig({\n  shouldForwardProp: prop => prop !== 'image',\n})`\n  position: relative;\n  height: 100vh;\n  background-image: url(${props => props.image});\n  background-size: cover;\n  background-position: center;\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(135deg, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.6));\n  }\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    height: 80vh;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    height: 100vh;\n    padding-top: 60px;\n    background-attachment: scroll;\n    background-position: center center;\n\n    &::before {\n      background: linear-gradient(\n        135deg,\n        rgba(0, 0, 0, 0.3),\n        rgba(0, 0, 0, 0.5)\n      );\n    }\n  }\n`;\n\nconst HeroContent = styled.div`\n  position: relative;\n  z-index: 2;\n  color: ${theme.colors.white};\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.xl};\n  width: 100%;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: 0 ${theme.spacing.md};\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    min-height: calc(100vh - 120px);\n  }\n`;\n\nconst HeroTitle = styled.h1`\n  font-size: 4.5rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.lg};\n  text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.7);\n  line-height: 1.1;\n  background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  text-shadow: none;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    font-size: 3rem;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2.8rem;\n    margin-bottom: ${theme.spacing.lg};\n    line-height: 1.2;\n    letter-spacing: -0.02em;\n    color: ${theme.colors.white};\n    background: none;\n    -webkit-text-fill-color: unset;\n    text-shadow: 2px 2px 12px rgba(0, 0, 0, 0.8);\n  }\n`;\n\nconst HeroSubtitle = styled.p`\n  font-size: 1.5rem;\n  margin-bottom: ${theme.spacing.xl};\n  opacity: 0.95;\n  text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.5);\n  max-width: 600px;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    font-size: 1.3rem;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.1rem;\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst HeroActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.lg};\n  align-items: center;\n  flex-wrap: wrap;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.lg};\n    align-items: stretch;\n    margin-top: ${theme.spacing.xl};\n  }\n`;\n\nconst CTAButton = styled.button`\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary},\n    ${theme.colors.primaryDark}\n  );\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.xxl};\n  border: none;\n  border-radius: ${theme.borderRadius.lg};\n  font-size: 1.1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 0 8px 25px rgba(59, 130, 246, 0.3);\n  position: relative;\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      90deg,\n      transparent,\n      rgba(255, 255, 255, 0.2),\n      transparent\n    );\n    transition: left 0.5s;\n  }\n\n  &:hover::before {\n    left: 100%;\n  }\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 12px 35px rgba(59, 130, 246, 0.4);\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg} ${theme.spacing.xl};\n    font-size: 1.2rem;\n    font-weight: 700;\n    border-radius: ${theme.borderRadius.xl};\n    box-shadow: 0 10px 30px rgba(59, 130, 246, 0.4);\n    width: 100%;\n    max-width: 280px;\n    margin: 0 auto;\n  }\n`;\n\nconst QuickInfoCard = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.lg};\n  color: ${theme.colors.white};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  min-width: 200px;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.15);\n    transform: translateY(-2px);\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    min-width: auto;\n    padding: ${theme.spacing.sm} ${theme.spacing.md};\n    background: rgba(255, 255, 255, 0.15);\n    border-radius: ${theme.borderRadius.md};\n    backdrop-filter: blur(15px);\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n    width: auto;\n    max-width: 140px;\n    justify-content: center;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst MobileQuickInfoContainer = styled.div`\n  display: contents;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    display: flex;\n    justify-content: center;\n    gap: ${theme.spacing.md};\n    width: 100%;\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst QuickInfoIcon = styled.div`\n  font-size: 1.5rem;\n  color: #fbbf24;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.2rem;\n  }\n`;\n\nconst QuickInfoText = styled.div`\n  .label {\n    font-size: 0.9rem;\n    opacity: 0.8;\n    margin-bottom: 2px;\n  }\n  .value {\n    font-size: 1.1rem;\n    font-weight: 600;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    .label {\n      font-size: 0.7rem;\n      opacity: 0.9;\n    }\n    .value {\n      font-size: 0.9rem;\n      font-weight: 700;\n    }\n  }\n`;\n\nconst ContentSection = styled.section`\n  padding: ${theme.spacing.xxl} 0;\n  background: ${theme.colors.white};\n\n  &.alt {\n    background: ${theme.colors.gray50};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.xl} 0;\n\n    &:first-of-type {\n      padding-top: ${theme.spacing.xxl};\n    }\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: 0 ${theme.spacing.lg};\n  }\n`;\n\nconst SectionHeader = styled.div`\n  text-align: center;\n  margin-bottom: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    margin-bottom: ${theme.spacing.xl};\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 2.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2.2rem;\n    font-weight: 700;\n    line-height: 1.3;\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst SectionSubtitle = styled.p`\n  font-size: 1.1rem;\n  color: ${theme.colors.gray600};\n  max-width: 600px;\n  margin: 0 auto;\n  line-height: 1.6;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.15rem;\n    line-height: 1.7;\n    max-width: 100%;\n    padding: 0 ${theme.spacing.sm};\n  }\n`;\n\nconst Description = styled.p`\n  font-size: 1.1rem;\n  line-height: 1.7;\n  color: ${theme.colors.gray700};\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.15rem;\n    line-height: 1.8;\n    text-align: left;\n    padding: 0 ${theme.spacing.sm};\n  }\n`;\n\nconst FeaturesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: ${theme.spacing.xl};\n  margin: ${theme.spacing.xxl} 0;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n    margin: ${theme.spacing.xl} 0;\n  }\n`;\n\nconst FeatureCard = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  text-align: center;\n  transition: all 0.3s ease;\n  border: 2px solid transparent;\n\n  &:hover {\n    transform: translateY(-8px);\n    box-shadow: ${theme.shadows.xl};\n    border-color: ${theme.colors.primary};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.xxl};\n    border-radius: ${theme.borderRadius.xl};\n    box-shadow: ${theme.shadows.lg};\n\n    &:hover {\n      transform: translateY(-4px);\n    }\n  }\n`;\n\nconst FeatureIcon = styled.div`\n  font-size: 3rem;\n  color: ${theme.colors.primary};\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 3.5rem;\n    margin-bottom: ${theme.spacing.xl};\n  }\n`;\n\nconst FeatureTitle = styled.h3`\n  font-size: 1.3rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.5rem;\n    font-weight: 700;\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst FeatureDescription = styled.p`\n  color: ${theme.colors.gray600};\n  line-height: 1.6;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.1rem;\n    line-height: 1.7;\n  }\n`;\n\nconst AmenitiesSection = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  padding: ${theme.spacing.xxl};\n  box-shadow: ${theme.shadows.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.xl};\n    border-radius: ${theme.borderRadius.lg};\n    margin: 0 -${theme.spacing.sm};\n  }\n`;\n\nconst AmenitiesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.xl};\n  }\n`;\n\nconst AmenityCategory = styled.div`\n  h4 {\n    font-size: 1.2rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.md};\n    display: flex;\n    align-items: center;\n    gap: ${theme.spacing.sm};\n\n    @media (max-width: ${theme.breakpoints.mobile}) {\n      font-size: 1.3rem;\n      font-weight: 700;\n      padding: ${theme.spacing.md} 0;\n      border-bottom: 2px solid ${theme.colors.gray100};\n      margin-bottom: ${theme.spacing.lg};\n    }\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    background: ${theme.colors.gray50};\n    padding: ${theme.spacing.lg};\n    border-radius: ${theme.borderRadius.lg};\n    border: 1px solid ${theme.colors.gray200};\n  }\n`;\n\nconst AmenityList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst AmenityItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.xs} 0;\n  color: ${theme.colors.gray700};\n  font-size: 0.95rem;\n\n  .icon {\n    color: ${theme.colors.success};\n    font-size: 0.8rem;\n  }\n`;\n\nconst GallerySection = styled.div`\n  margin: ${theme.spacing.xxl} 0;\n`;\n\nconst GalleryGrid = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr 1fr;\n  grid-template-rows: 300px 300px;\n  gap: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.xl};\n  overflow: hidden;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    grid-template-rows: repeat(5, 200px);\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    grid-template-rows: repeat(5, 250px);\n    gap: ${theme.spacing.sm};\n    border-radius: ${theme.borderRadius.lg};\n  }\n`;\n\nconst GalleryItem = styled.div.withConfig({\n  shouldForwardProp: prop => !['image', 'span'].includes(prop),\n})`\n  background-image: url(${props => props.image});\n  background-size: cover;\n  background-position: center;\n  position: relative;\n  cursor: pointer;\n  transition: transform 0.3s ease;\n  ${props => props.span && `grid-row: span ${props.span};`}\n\n  &:hover {\n    transform: scale(1.02);\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.1);\n    transition: background 0.3s ease;\n  }\n\n  &:hover::before {\n    background: rgba(0, 0, 0, 0.3);\n  }\n\n  &:first-child {\n    grid-row: span 2;\n  }\n`;\n\nconst GalleryOverlay = styled.div`\n  position: absolute;\n  bottom: ${theme.spacing.md};\n  left: ${theme.spacing.md};\n  color: ${theme.colors.white};\n  font-weight: 500;\n  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.7);\n`;\n\nconst TestimonialsSection = styled.div`\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary},\n    ${theme.colors.primaryDark}\n  );\n  border-radius: ${theme.borderRadius.xl};\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.white};\n  text-align: center;\n  position: relative;\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 1000\"><defs><pattern id=\"testimonial-pattern\" width=\"100\" height=\"100\" patternUnits=\"userSpaceOnUse\"><circle fill=\"%23ffffff05\" cx=\"50\" cy=\"50\" r=\"25\"/></pattern></defs><rect width=\"100%\" height=\"100%\" fill=\"url(%23testimonial-pattern)\"/></svg>');\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.xl};\n    border-radius: ${theme.borderRadius.lg};\n    margin: 0 -${theme.spacing.sm};\n  }\n`;\n\nconst TestimonialCard = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n`;\n\nconst TestimonialQuote = styled.blockquote`\n  font-size: 1.3rem;\n  line-height: 1.7;\n  margin: ${theme.spacing.xl} 0;\n  font-style: italic;\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: -20px;\n    left: 50%;\n    transform: translateX(-50%);\n    font-size: 3rem;\n    color: rgba(255, 255, 255, 0.3);\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.4rem;\n    line-height: 1.8;\n    margin: ${theme.spacing.lg} 0;\n    padding: 0 ${theme.spacing.sm};\n  }\n`;\n\nconst TestimonialAuthor = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.md};\n  margin-top: ${theme.spacing.lg};\n\n  .avatar {\n    width: 60px;\n    height: 60px;\n    border-radius: 50%;\n    background: rgba(255, 255, 255, 0.2);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 1.5rem;\n  }\n\n  .info {\n    text-align: left;\n\n    .name {\n      font-weight: 600;\n      font-size: 1.1rem;\n    }\n    .details {\n      font-size: 0.9rem;\n      opacity: 0.8;\n    }\n  }\n`;\n\nconst LocationSection = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  padding: ${theme.spacing.xxl};\n  box-shadow: ${theme.shadows.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.xl};\n    border-radius: ${theme.borderRadius.lg};\n    margin: 0 -${theme.spacing.sm};\n  }\n`;\n\nconst LocationGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.xl};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    gap: ${theme.spacing.xxl};\n  }\n`;\n\nconst ContactInfo = styled.div`\n  h4 {\n    font-size: 1.3rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst ContactItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  padding: ${theme.spacing.md} 0;\n  border-bottom: 1px solid ${theme.colors.gray100};\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  .icon {\n    color: ${theme.colors.primary};\n    font-size: 1.1rem;\n    width: 20px;\n  }\n\n  .content {\n    .label {\n      font-size: 0.9rem;\n      color: ${theme.colors.gray500};\n      margin-bottom: 2px;\n    }\n    .value {\n      font-weight: 500;\n      color: ${theme.colors.gray900};\n    }\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg} 0;\n\n    .icon {\n      font-size: 1.3rem;\n      width: 24px;\n    }\n\n    .content {\n      .label {\n        font-size: 1rem;\n        margin-bottom: 4px;\n      }\n      .value {\n        font-size: 1.1rem;\n        font-weight: 600;\n      }\n    }\n  }\n`;\n\nconst MapPlaceholder = styled.div`\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.gray100},\n    ${theme.colors.gray200}\n  );\n  border-radius: ${theme.borderRadius.lg};\n  height: 300px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.gray500};\n  font-size: 1.1rem;\n  text-align: center;\n  border: 1px solid ${theme.colors.gray200};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    height: 250px;\n    font-size: 1rem;\n  }\n`;\n\nconst BackToTop = styled.button`\n  position: fixed;\n  bottom: ${theme.spacing.xl};\n  right: ${theme.spacing.xl};\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  border: none;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  cursor: pointer;\n  box-shadow: ${theme.shadows.lg};\n  transition: all 0.3s ease;\n  z-index: 50;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: ${theme.shadows.xl};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    bottom: ${theme.spacing.lg};\n    right: ${theme.spacing.lg};\n  }\n`;\n\nconst HotelDetail = () => {\n  const { hotelSlug, slug } = useParams();\n  const slugParam = hotelSlug || slug;\n  const navigate = useNavigate();\n  const [hotel, setHotel] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Get hotels from Redux store (includes any admin updates)\n  const hotelsFromStore = useSelector(state => state.hotelManagement?.hotels);\n\n  useEffect(() => {\n    let foundHotel;\n\n    // Try to get hotel from Redux store first (for updated data)\n    if (hotelsFromStore && hotelsFromStore.length > 0) {\n      foundHotel = hotelsFromStore.find(\n        h => h.slug === slugParam || h.id === parseInt(slugParam)\n      );\n    }\n\n    // Fallback to original data if not found in store\n    if (!foundHotel) {\n      foundHotel = getHotelByIdOrSlug(slugParam);\n    }\n\n    setHotel(foundHotel);\n    setLoading(false);\n  }, [slugParam, hotelsFromStore]);\n\n  // Re-render when Redux store updates (for live preview)\n  useEffect(() => {\n    if (hotelsFromStore && hotel) {\n      const updatedHotel = hotelsFromStore.find(h => h.id === hotel.id);\n      if (\n        updatedHotel &&\n        JSON.stringify(updatedHotel) !== JSON.stringify(hotel)\n      ) {\n        setHotel(updatedHotel);\n      }\n    }\n  }, [hotelsFromStore, hotel]);\n\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  if (loading) {\n    return (\n      <PageContainer>\n        <HotelNavbar />\n        <div style={{ padding: '4rem', textAlign: 'center' }}>\n          <h2>Loading...</h2>\n        </div>\n        <HotelFooter />\n      </PageContainer>\n    );\n  }\n\n  if (!hotel) {\n    return (\n      <PageContainer>\n        <HotelNavbar />\n        <div style={{ padding: '4rem', textAlign: 'center' }}>\n          <h2>Hotel not found</h2>\n          <p>The hotel you're looking for doesn't exist.</p>\n        </div>\n        <HotelFooter />\n      </PageContainer>\n    );\n  }\n\n  // Use dynamic features from hotel data or fallback to defaults\n  const features = hotel.features || [\n    {\n      icon: FaConciergeBell,\n      title: '24/7 Concierge',\n      description:\n        'Our dedicated concierge team is available round-the-clock to assist with all your needs.',\n    },\n    {\n      icon: FaUmbrellaBeach,\n      title: 'Luxury Amenities',\n      description:\n        'Enjoy world-class facilities including spa, pool, and fine dining restaurants.',\n    },\n    {\n      icon: FaBusinessTime,\n      title: 'Business Center',\n      description:\n        'Fully equipped business facilities for meetings and corporate events.',\n    },\n    {\n      icon: FaTaxi,\n      title: 'Airport Transfer',\n      description: 'Complimentary airport shuttle service for all our guests.',\n    },\n  ];\n\n  // Use dynamic amenity categories from hotel data or fallback to defaults\n  const amenityCategories = hotel.amenityCategories || [\n    {\n      title: 'Recreation',\n      icon: FaSwimmingPool,\n      items: [\n        'Swimming Pool',\n        'Fitness Center',\n        'Spa & Wellness',\n        'Game Room',\n        'Tennis Court',\n      ],\n    },\n    {\n      title: 'Dining',\n      icon: FaUtensils,\n      items: [\n        'Fine Dining Restaurant',\n        'Rooftop Bar',\n        'Room Service',\n        'Breakfast Buffet',\n        'Coffee Shop',\n      ],\n    },\n    {\n      title: 'Business',\n      icon: FaBusinessTime,\n      items: [\n        'Business Center',\n        'Meeting Rooms',\n        'Conference Hall',\n        'Free WiFi',\n        'Printing Services',\n      ],\n    },\n    {\n      title: 'Services',\n      icon: FaConciergeBell,\n      items: [\n        '24/7 Concierge',\n        'Valet Parking',\n        'Laundry Service',\n        'Airport Transfer',\n        'Tour Desk',\n      ],\n    },\n  ];\n\n  // Get the appropriate icon for categories (fallback icons)\n  const getCategoryIcon = title => {\n    const iconMap = {\n      Recreation: FaSwimmingPool,\n      Dining: FaUtensils,\n      Business: FaBusinessTime,\n      Services: FaConciergeBell,\n    };\n    return iconMap[title] || FaConciergeBell;\n  };\n\n  return (\n    <PageContainer>\n      <HotelNavbar />\n\n      <HeroBanner image={hotel.image}>\n        <HeroContent>\n          <HeroTitle>{hotel.name}</HeroTitle>\n          <HeroSubtitle>\n            Experience luxury hospitality in the heart of {hotel.city}\n          </HeroSubtitle>\n          <HeroActions>\n            <MobileQuickInfoContainer>\n              <QuickInfoCard>\n                <QuickInfoIcon>\n                  <FaStar />\n                </QuickInfoIcon>\n                <QuickInfoText>\n                  <div className=\"label\">Rating</div>\n                  <div className=\"value\">{hotel.rating}/5</div>\n                </QuickInfoText>\n              </QuickInfoCard>\n              <QuickInfoCard>\n                <QuickInfoIcon>\n                  <FaMapMarkerAlt />\n                </QuickInfoIcon>\n                <QuickInfoText>\n                  <div className=\"label\">Location</div>\n                  <div className=\"value\">{hotel.city}</div>\n                </QuickInfoText>\n              </QuickInfoCard>\n            </MobileQuickInfoContainer>\n            <CTAButton onClick={() => navigate(`/${slug}/rooms`)}>\n              Book Your Stay\n            </CTAButton>\n          </HeroActions>\n        </HeroContent>\n      </HeroBanner>\n\n      {/* Render sections in custom order - only if visible */}\n      {(\n        hotel.sectionOrder ||\n        ['about', 'features', 'gallery', 'amenities', 'contact'].concat(\n          (hotel.customSections || []).map(cs => cs.id)\n        )\n      )\n        .filter(sectionId => {\n          // Check if section is visible (from Redux state or default to true)\n          const sectionVisibility = hotel.sectionVisibility || {\n            hero: true,\n            about: true,\n            features: true,\n            gallery: true,\n            amenities: true,\n            contact: true,\n          };\n          return sectionVisibility[sectionId] !== false;\n        })\n        .map((sectionId, index) => {\n          const isAlt = index % 2 === 1; // Alternate background colors\n\n          switch (sectionId) {\n            case 'about':\n              return (\n                <ContentSection key={sectionId} className={isAlt ? 'alt' : ''}>\n                  <Container>\n                    <SectionHeader>\n                      <SectionTitle>About {hotel.name}</SectionTitle>\n                      <SectionSubtitle>\n                        Learn more about our heritage, mission, and commitment\n                        to excellence\n                      </SectionSubtitle>\n                    </SectionHeader>\n                    <Description\n                      style={{\n                        fontSize: '1.1rem',\n                        lineHeight: '1.8',\n                        textAlign: 'center',\n                        maxWidth: '800px',\n                        margin: '0 auto',\n                      }}\n                    >\n                      {hotel.description ||\n                        `${hotel.name} stands as a beacon of luxury and elegance in the heart of ${hotel.city}. With our rich heritage of hospitality excellence spanning decades, we have been creating unforgettable experiences for discerning travelers from around the world.`}\n                    </Description>\n                  </Container>\n                </ContentSection>\n              );\n\n            case 'features':\n              return (\n                <ContentSection key={sectionId} className={isAlt ? 'alt' : ''}>\n                  <Container>\n                    <SectionHeader>\n                      <SectionTitle>Why Choose {hotel.name}?</SectionTitle>\n                      <SectionSubtitle>\n                        Discover the perfect blend of luxury, comfort, and\n                        exceptional service\n                      </SectionSubtitle>\n                    </SectionHeader>\n                    <FeaturesGrid>\n                      {features.map((feature, index) => (\n                        <FeatureCard key={index}>\n                          <FeatureIcon>\n                            {feature.icon ? (\n                              <feature.icon />\n                            ) : (\n                              <FaConciergeBell />\n                            )}\n                          </FeatureIcon>\n                          <FeatureTitle>{feature.title}</FeatureTitle>\n                          <FeatureDescription>\n                            {feature.description}\n                          </FeatureDescription>\n                        </FeatureCard>\n                      ))}\n                    </FeaturesGrid>\n                  </Container>\n                </ContentSection>\n              );\n\n            case 'gallery':\n              return (\n                <ContentSection key={sectionId} className={isAlt ? 'alt' : ''}>\n                  <Container>\n                    <SectionHeader>\n                      <SectionTitle>Hotel Gallery</SectionTitle>\n                      <SectionSubtitle>\n                        Take a virtual tour of our stunning property and\n                        amenities\n                      </SectionSubtitle>\n                    </SectionHeader>\n                    <GallerySection>\n                      <GalleryGrid>\n                        {(\n                          hotel.gallery || [\n                            {\n                              title: 'Hotel Exterior',\n                              image: hotel.images?.[0],\n                            },\n                            { title: 'Luxury Rooms', image: hotel.images?.[1] },\n                            {\n                              title: 'Dining Experience',\n                              image: hotel.images?.[2],\n                            },\n                            {\n                              title: 'Swimming Pool',\n                              image:\n                                'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3',\n                            },\n                            {\n                              title: 'Spa & Wellness',\n                              image:\n                                'https://images.unsplash.com/photo-1578645510447-e20b4311e3ce?ixlib=rb-4.0.3',\n                            },\n                          ]\n                        )\n                          .slice(0, 5)\n                          .map((item, index) => (\n                            <GalleryItem key={index} image={item.image}>\n                              <GalleryOverlay>{item.title}</GalleryOverlay>\n                            </GalleryItem>\n                          ))}\n                      </GalleryGrid>\n                    </GallerySection>\n                  </Container>\n                </ContentSection>\n              );\n\n            case 'amenities':\n              return (\n                <ContentSection key={sectionId} className={isAlt ? 'alt' : ''}>\n                  <Container>\n                    <SectionHeader>\n                      <SectionTitle>World-Class Amenities</SectionTitle>\n                      <SectionSubtitle>\n                        Everything you need for a perfect stay, all under one\n                        roof\n                      </SectionSubtitle>\n                    </SectionHeader>\n                    <AmenitiesSection>\n                      <AmenitiesGrid>\n                        {amenityCategories.map((category, index) => {\n                          const CategoryIcon =\n                            category.icon || getCategoryIcon(category.title);\n                          return (\n                            <AmenityCategory key={index}>\n                              <h4>\n                                <CategoryIcon />\n                                {category.title}\n                              </h4>\n                              <AmenityList>\n                                {category.items.map((item, itemIndex) => (\n                                  <AmenityItem key={itemIndex}>\n                                    <FaCheckCircle className=\"icon\" />\n                                    {item}\n                                  </AmenityItem>\n                                ))}\n                              </AmenityList>\n                            </AmenityCategory>\n                          );\n                        })}\n                      </AmenitiesGrid>\n                    </AmenitiesSection>\n                  </Container>\n                </ContentSection>\n              );\n\n            case 'contact':\n              return (\n                <ContentSection key={sectionId} className={isAlt ? 'alt' : ''}>\n                  <Container>\n                    <SectionHeader>\n                      <SectionTitle>Location & Contact</SectionTitle>\n                      <SectionSubtitle>\n                        Perfectly situated in the heart of {hotel.city}\n                      </SectionSubtitle>\n                    </SectionHeader>\n                    <LocationSection>\n                      <LocationGrid>\n                        <ContactInfo>\n                          <h4>Get in Touch</h4>\n                          {(\n                            hotel.contactFields || [\n                              { label: 'Address', value: hotel.address },\n                              {\n                                label: 'Phone',\n                                value: hotel.phone || '+91 22 6601 1825',\n                              },\n                              {\n                                label: 'Email',\n                                value:\n                                  hotel.email ||\n                                  `reservations@${hotel.slug}.com`,\n                              },\n                              {\n                                label: 'Check-in / Check-out',\n                                value: `${hotel.checkInTime} / ${hotel.checkOutTime}`,\n                              },\n                            ]\n                          ).map((field, index) => {\n                            const getIcon = label => {\n                              const iconMap = {\n                                Address: FaMapMarkerAlt,\n                                Phone: FaPhone,\n                                Email: FaEnvelope,\n                                'Check-in / Check-out': FaClock,\n                              };\n                              return iconMap[label] || FaMapMarkerAlt;\n                            };\n                            const IconComponent = getIcon(field.label);\n\n                            return (\n                              <ContactItem key={index}>\n                                <IconComponent className=\"icon\" />\n                                <div className=\"content\">\n                                  <div className=\"label\">{field.label}</div>\n                                  <div className=\"value\">{field.value}</div>\n                                </div>\n                              </ContactItem>\n                            );\n                          })}\n                        </ContactInfo>\n                        <MapPlaceholder>\n                          <div>\n                            <FaMapMarkerAlt\n                              style={{ fontSize: '2rem', marginBottom: '1rem' }}\n                            />\n                            <div>Interactive Map View</div>\n                            <div\n                              style={{\n                                fontSize: '0.9rem',\n                                opacity: 0.7,\n                                marginTop: '0.5rem',\n                              }}\n                            >\n                              Prime location in {hotel.city}\n                            </div>\n                          </div>\n                        </MapPlaceholder>\n                      </LocationGrid>\n                    </LocationSection>\n                  </Container>\n                </ContentSection>\n              );\n\n            default:\n              // Handle custom sections\n              const customSection = hotel.customSections?.find(\n                cs => cs.id === sectionId\n              );\n              if (customSection && customSection.isVisible) {\n                return (\n                  <ContentSection\n                    key={sectionId}\n                    className={isAlt ? 'alt' : ''}\n                  >\n                    <Container>\n                      <SectionHeader>\n                        <SectionTitle>{customSection.title}</SectionTitle>\n                      </SectionHeader>\n                      {customSection.type === 'text' && (\n                        <div>\n                          {customSection.content?.map((item, idx) => (\n                            <Description\n                              key={idx}\n                              style={{\n                                textAlign: 'center',\n                                maxWidth: '800px',\n                                margin: '0 auto',\n                              }}\n                            >\n                              {item.content}\n                            </Description>\n                          ))}\n                        </div>\n                      )}\n                      {customSection.type === 'cards' && (\n                        <FeaturesGrid>\n                          {customSection.content?.map((card, idx) => (\n                            <FeatureCard key={idx}>\n                              {card.image && (\n                                <img\n                                  src={card.image}\n                                  alt={card.title}\n                                  style={{\n                                    width: '100%',\n                                    height: '200px',\n                                    objectFit: 'cover',\n                                    borderRadius: '8px',\n                                    marginBottom: '1rem',\n                                  }}\n                                />\n                              )}\n                              <FeatureTitle>{card.title}</FeatureTitle>\n                              <FeatureDescription>\n                                {card.description}\n                              </FeatureDescription>\n                              {card.link && (\n                                <a\n                                  href={card.link}\n                                  style={{\n                                    color: theme.colors.primary,\n                                    textDecoration: 'none',\n                                    fontWeight: '600',\n                                    marginTop: '1rem',\n                                    display: 'inline-block',\n                                  }}\n                                >\n                                  Learn More →\n                                </a>\n                              )}\n                            </FeatureCard>\n                          ))}\n                        </FeaturesGrid>\n                      )}\n                      {customSection.type === 'gallery' && (\n                        <GallerySection>\n                          <GalleryGrid>\n                            {customSection.content\n                              ?.slice(0, 5)\n                              .map((item, idx) => (\n                                <GalleryItem key={idx} image={item.image}>\n                                  <GalleryOverlay>{item.title}</GalleryOverlay>\n                                </GalleryItem>\n                              ))}\n                          </GalleryGrid>\n                        </GallerySection>\n                      )}\n                      {customSection.type === 'list' && (\n                        <AmenityList\n                          style={{ maxWidth: '600px', margin: '0 auto' }}\n                        >\n                          {customSection.content?.map((item, idx) => (\n                            <AmenityItem key={idx}>\n                              <FaCheckCircle className=\"icon\" />\n                              {item.text}\n                            </AmenityItem>\n                          ))}\n                        </AmenityList>\n                      )}\n                    </Container>\n                  </ContentSection>\n                );\n              }\n              return null;\n          }\n        })}\n\n      {/* Always show testimonials section */}\n      <ContentSection>\n        <Container>\n          <TestimonialsSection>\n            <SectionHeader>\n              <SectionTitle style={{ color: 'white' }}>\n                Guest Reviews\n              </SectionTitle>\n              <SectionSubtitle style={{ color: 'rgba(255,255,255,0.8)' }}>\n                Hear what our valued guests have to say about their experience\n              </SectionSubtitle>\n            </SectionHeader>\n            <TestimonialCard>\n              <TestimonialQuote>\n                \"Absolutely exceptional service and stunning accommodations. The\n                staff went above and beyond to make our anniversary celebration\n                truly memorable. The attention to detail and luxury amenities\n                exceeded all our expectations.\"\n              </TestimonialQuote>\n              <TestimonialAuthor>\n                <div className=\"avatar\">RS</div>\n                <div className=\"info\">\n                  <div className=\"name\">Raj & Priya Sharma</div>\n                  <div className=\"details\">\n                    Anniversary Celebration • Mumbai\n                  </div>\n                </div>\n              </TestimonialAuthor>\n            </TestimonialCard>\n          </TestimonialsSection>\n        </Container>\n      </ContentSection>\n\n      <BackToTop onClick={scrollToTop}>↑</BackToTop>\n\n      <HotelFooter />\n    </PageContainer>\n  );\n};\n\nexport default HotelDetail;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/hotel/pages/HotelHome.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { theme, media } from '../../styles/GlobalStyle';\nimport HotelNavbar from '../components/HotelNavbar';\nimport HotelFooter from '../components/HotelFooter';\nimport HotelCard from '../components/HotelCard';\nimport SearchForm from '../components/SearchForm';\nimport { hotels } from '../data/hotels';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst HeroSection = styled.section`\n  background:\n    linear-gradient(135deg, rgba(30, 64, 175, 0.9), rgba(59, 130, 246, 0.8)),\n    url('https://images.unsplash.com/photo-1564501049412-61c2a3083791?ixlib=rb-4.0.3')\n      center/cover;\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xxl} 0;\n  text-align: center;\n  position: relative;\n  min-height: 80vh;\n  display: flex;\n  align-items: center;\n\n  ${media.mobile} {\n    padding: ${theme.spacing.xl} 0;\n    min-height: 70vh;\n  }\n\n  ${media.tablet} {\n    min-height: 75vh;\n  }\n`;\n\nconst HeroContent = styled.div`\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n\n  ${media.mobile} {\n    padding: 0 ${theme.spacing.sm};\n  }\n\n  ${media.tablet} {\n    padding: 0 ${theme.spacing.lg};\n  }\n\n  ${media.desktop} {\n    padding: 0 ${theme.spacing.xl};\n  }\n`;\n\nconst HeroTitle = styled.h1`\n  font-size: 3.5rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.md};\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n  line-height: 1.1;\n\n  ${media.mobile} {\n    font-size: 2.5rem;\n    margin-bottom: ${theme.spacing.sm};\n  }\n\n  ${media.tablet} {\n    font-size: 3rem;\n  }\n\n  ${media.desktop} {\n    font-size: 4rem;\n  }\n`;\n\nconst HeroSubtitle = styled.p`\n  font-size: 1.3rem;\n  margin-bottom: ${theme.spacing.xxl};\n  opacity: 0.95;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);\n  line-height: 1.4;\n  max-width: 50rem;\n  margin-left: auto;\n  margin-right: auto;\n\n  ${media.mobile} {\n    font-size: 1.1rem;\n    margin-bottom: ${theme.spacing.xl};\n    max-width: 90%;\n  }\n\n  ${media.tablet} {\n    font-size: 1.2rem;\n  }\n`;\n\nconst HotelsSection = styled.section`\n  padding: ${theme.spacing.xxl} 0;\n  flex: 1;\n\n  ${media.mobile} {\n    padding: ${theme.spacing.xl} 0;\n  }\n\n  ${media.tablet} {\n    padding: ${theme.spacing.xxl} 0;\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 2.5rem;\n  font-weight: 600;\n  text-align: center;\n  margin-bottom: ${theme.spacing.xl};\n  color: ${theme.colors.gray900};\n`;\n\nconst HotelsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  gap: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray900};\n  }\n\n  p {\n    font-size: 1rem;\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst ClearButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.sm} ${theme.spacing.lg};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n  }\n`;\n\nconst HotelHome = () => {\n  const [filteredHotels, setFilteredHotels] = useState(hotels);\n  const [searchCriteria, setSearchCriteria] = useState(null);\n\n  const handleSearch = searchData => {\n    const { destination } = searchData;\n\n    if (!destination.trim()) {\n      setFilteredHotels(hotels);\n      setSearchCriteria(null);\n      return;\n    }\n\n    const filtered = hotels.filter(\n      hotel =>\n        hotel.name.toLowerCase().includes(destination.toLowerCase()) ||\n        hotel.location.toLowerCase().includes(destination.toLowerCase()) ||\n        hotel.city.toLowerCase().includes(destination.toLowerCase())\n    );\n\n    setFilteredHotels(filtered);\n    setSearchCriteria(searchData);\n  };\n\n  const clearSearch = () => {\n    setFilteredHotels(hotels);\n    setSearchCriteria(null);\n  };\n\n  return (\n    <PageContainer>\n      <HotelNavbar />\n\n      <HeroSection>\n        <HeroContent>\n          <HeroTitle>Find Your Perfect Stay</HeroTitle>\n          <HeroSubtitle>\n            Discover amazing hotels and book your next adventure with ease\n          </HeroSubtitle>\n        </HeroContent>\n      </HeroSection>\n\n      <Container>\n        <SearchForm onSearch={handleSearch} />\n      </Container>\n\n      <HotelsSection>\n        <Container>\n          <SectionTitle>\n            {searchCriteria ? 'Search Results' : 'Popular Hotels'}\n          </SectionTitle>\n\n          {filteredHotels.length > 0 ? (\n            <HotelsGrid>\n              {filteredHotels.map(hotel => (\n                <HotelCard key={hotel.id} hotel={hotel} />\n              ))}\n            </HotelsGrid>\n          ) : (\n            <EmptyState>\n              <h3>No hotels found</h3>\n              <p>\n                We couldn't find any hotels matching your search criteria. Try\n                adjusting your search terms.\n              </p>\n              <ClearButton onClick={clearSearch}>View All Hotels</ClearButton>\n            </EmptyState>\n          )}\n        </Container>\n      </HotelsSection>\n\n      <HotelFooter />\n    </PageContainer>\n  );\n};\n\nexport default HotelHome;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/hotel/pages/MyBookings.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":315,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":317,"endColumn":6},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":321,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":323,"endColumn":6}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaCalendarAlt,\n  FaUsers,\n  FaClock,\n  FaCheckCircle,\n  FaExclamationTriangle,\n  FaTimesCircle,\n  FaEye,\n  FaPhone,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport HotelNavbar from '../components/HotelNavbar';\nimport HotelFooter from '../components/HotelFooter';\nimport { bookings } from '../data/hotels';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n  flex: 1;\n`;\n\nconst PageHeader = styled.div`\n  text-align: center;\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst PageSubtitle = styled.p`\n  font-size: 1.1rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst FilterTabs = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.xxl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n`;\n\nconst FilterTab = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  background: none;\n  border: none;\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  font-weight: 600;\n  color: ${props =>\n    props.active ? theme.colors.primary : theme.colors.gray600};\n  border-bottom: 3px solid\n    ${props => (props.active ? theme.colors.primary : 'transparent')};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst BookingsGrid = styled.div`\n  display: grid;\n  gap: ${theme.spacing.xl};\n`;\n\nconst BookingCard = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'status',\n})`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xl};\n  box-shadow: ${theme.shadows.md};\n  border-left: 4px solid\n    ${props =>\n      props.status === 'confirmed'\n        ? theme.colors.success\n        : props.status === 'pending'\n          ? theme.colors.warning\n          : theme.colors.error};\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: ${theme.shadows.lg};\n  }\n`;\n\nconst BookingHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst BookingInfo = styled.div`\n  flex: 1;\n`;\n\nconst BookingActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    width: 100%;\n    justify-content: flex-end;\n  }\n`;\n\nconst HotelName = styled.h3`\n  font-size: 1.3rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst RoomName = styled.p`\n  color: ${theme.colors.gray600};\n  font-size: 1rem;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst StatusBadge = styled.span.withConfig({\n  shouldForwardProp: prop => prop !== 'status',\n})`\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.8rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  background: ${props =>\n    props.status === 'confirmed'\n      ? theme.colors.success\n      : props.status === 'pending'\n        ? theme.colors.warning\n        : theme.colors.error};\n  color: ${theme.colors.white};\n`;\n\nconst BookingDetails = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst DetailItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.gray700};\n\n  .icon {\n    color: ${theme.colors.primary};\n  }\n\n  .label {\n    font-weight: 600;\n    margin-right: ${theme.spacing.xs};\n  }\n`;\n\nconst BookingFooter = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: ${theme.spacing.lg};\n  border-top: 1px solid ${theme.colors.gray200};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst TotalPrice = styled.div`\n  font-size: 1.2rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n`;\n\nconst ActionButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'variant',\n})`\n  background: ${props =>\n    props.variant === 'primary' ? theme.colors.primary : theme.colors.white};\n  color: ${props =>\n    props.variant === 'primary' ? theme.colors.white : theme.colors.gray700};\n  border: 2px solid\n    ${props =>\n      props.variant === 'primary'\n        ? theme.colors.primary\n        : theme.colors.gray200};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: ${theme.shadows.md};\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n\n  .icon {\n    font-size: 4rem;\n    color: ${theme.colors.gray300};\n    margin-bottom: ${theme.spacing.lg};\n  }\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray900};\n  }\n\n  p {\n    font-size: 1rem;\n    margin-bottom: ${theme.spacing.xl};\n  }\n`;\n\nconst BrowseButton = styled(Link)`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.md};\n  text-decoration: none;\n  font-weight: 600;\n  transition: all 0.2s ease;\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-2px);\n  }\n`;\n\nconst MyBookings = () => {\n  const [activeFilter, setActiveFilter] = useState('all');\n\n  // Mock user bookings - in real app, this would come from API\n  const userBookings = bookings;\n\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'confirmed':\n        return <FaCheckCircle />;\n      case 'pending':\n        return <FaExclamationTriangle />;\n      case 'cancelled':\n        return <FaTimesCircle />;\n      default:\n        return <FaClock />;\n    }\n  };\n\n  const filteredBookings = userBookings.filter(booking => {\n    if (activeFilter === 'all') return true;\n    return booking.status === activeFilter;\n  });\n\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    });\n  };\n\n  const calculateNights = (checkIn, checkOut) => {\n    const start = new Date(checkIn);\n    const end = new Date(checkOut);\n    const diffTime = Math.abs(end - start);\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  };\n\n  const handleContactHotel = booking => {\n    alert(\n      `Contact information for ${booking.hotelName}:\\nPhone: +91 1800-HOTELS\\nEmail: info@${booking.hotelName.toLowerCase().replace(/\\s+/g, '')}.com`\n    );\n  };\n\n  const handleViewDetails = booking => {\n    alert(\n      `Booking Details:\\nBooking ID: ${booking.id}\\nGuest: ${booking.guestName}\\nEmail: ${booking.guestEmail}\\nPhone: ${booking.guestPhone}\\nSpecial Requests: ${booking.specialRequests || 'None'}`\n    );\n  };\n\n  if (filteredBookings.length === 0) {\n    return (\n      <PageContainer>\n        <HotelNavbar />\n\n        <Container>\n          <PageHeader>\n            <PageTitle>My Bookings</PageTitle>\n            <PageSubtitle>Manage your hotel reservations</PageSubtitle>\n          </PageHeader>\n\n          <FilterTabs>\n            <FilterTab\n              active={activeFilter === 'all'}\n              onClick={() => setActiveFilter('all')}\n            >\n              All Bookings\n            </FilterTab>\n            <FilterTab\n              active={activeFilter === 'confirmed'}\n              onClick={() => setActiveFilter('confirmed')}\n            >\n              Confirmed\n            </FilterTab>\n            <FilterTab\n              active={activeFilter === 'pending'}\n              onClick={() => setActiveFilter('pending')}\n            >\n              Pending\n            </FilterTab>\n            <FilterTab\n              active={activeFilter === 'cancelled'}\n              onClick={() => setActiveFilter('cancelled')}\n            >\n              Cancelled\n            </FilterTab>\n          </FilterTabs>\n\n          <EmptyState>\n            <FaCalendarAlt className=\"icon\" />\n            <h3>No bookings found</h3>\n            <p>\n              {activeFilter === 'all'\n                ? \"You haven't made any hotel bookings yet. Start exploring amazing hotels!\"\n                : `No ${activeFilter} bookings found. Try a different filter.`}\n            </p>\n            {activeFilter === 'all' && (\n              <BrowseButton to=\"/hotels\">Browse Hotels</BrowseButton>\n            )}\n          </EmptyState>\n        </Container>\n\n        <HotelFooter />\n      </PageContainer>\n    );\n  }\n\n  return (\n    <PageContainer>\n      <HotelNavbar />\n\n      <Container>\n        <PageHeader>\n          <PageTitle>My Bookings</PageTitle>\n          <PageSubtitle>Manage your hotel reservations</PageSubtitle>\n        </PageHeader>\n\n        <FilterTabs>\n          <FilterTab\n            active={activeFilter === 'all'}\n            onClick={() => setActiveFilter('all')}\n          >\n            All Bookings ({userBookings.length})\n          </FilterTab>\n          <FilterTab\n            active={activeFilter === 'confirmed'}\n            onClick={() => setActiveFilter('confirmed')}\n          >\n            Confirmed (\n            {userBookings.filter(b => b.status === 'confirmed').length})\n          </FilterTab>\n          <FilterTab\n            active={activeFilter === 'pending'}\n            onClick={() => setActiveFilter('pending')}\n          >\n            Pending ({userBookings.filter(b => b.status === 'pending').length})\n          </FilterTab>\n          <FilterTab\n            active={activeFilter === 'cancelled'}\n            onClick={() => setActiveFilter('cancelled')}\n          >\n            Cancelled (\n            {userBookings.filter(b => b.status === 'cancelled').length})\n          </FilterTab>\n        </FilterTabs>\n\n        <BookingsGrid>\n          {filteredBookings.map(booking => (\n            <BookingCard key={booking.id} status={booking.status}>\n              <BookingHeader>\n                <BookingInfo>\n                  <HotelName>{booking.hotelName}</HotelName>\n                  <RoomName>{booking.roomName}</RoomName>\n                </BookingInfo>\n                <BookingActions>\n                  <StatusBadge status={booking.status}>\n                    {getStatusIcon(booking.status)}\n                    {booking.status}\n                  </StatusBadge>\n                </BookingActions>\n              </BookingHeader>\n\n              <BookingDetails>\n                <DetailItem>\n                  <FaCalendarAlt className=\"icon\" />\n                  <span>\n                    <span className=\"label\">Check-in:</span>\n                    {formatDate(booking.checkIn)}\n                  </span>\n                </DetailItem>\n\n                <DetailItem>\n                  <FaCalendarAlt className=\"icon\" />\n                  <span>\n                    <span className=\"label\">Check-out:</span>\n                    {formatDate(booking.checkOut)}\n                  </span>\n                </DetailItem>\n\n                <DetailItem>\n                  <FaUsers className=\"icon\" />\n                  <span>\n                    <span className=\"label\">Guests:</span>\n                    {booking.guests}\n                  </span>\n                </DetailItem>\n\n                <DetailItem>\n                  <FaClock className=\"icon\" />\n                  <span>\n                    <span className=\"label\">Nights:</span>\n                    {calculateNights(booking.checkIn, booking.checkOut)}\n                  </span>\n                </DetailItem>\n              </BookingDetails>\n\n              <BookingFooter>\n                <TotalPrice>\n                  Total: ₹{booking.totalPrice.toLocaleString()}\n                </TotalPrice>\n\n                <div style={{ display: 'flex', gap: theme.spacing.md }}>\n                  <ActionButton onClick={() => handleViewDetails(booking)}>\n                    <FaEye />\n                    View Details\n                  </ActionButton>\n\n                  <ActionButton onClick={() => handleContactHotel(booking)}>\n                    <FaPhone />\n                    Contact Hotel\n                  </ActionButton>\n                </div>\n              </BookingFooter>\n            </BookingCard>\n          ))}\n        </BookingsGrid>\n      </Container>\n\n      <HotelFooter />\n    </PageContainer>\n  );\n};\n\nexport default MyBookings;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/hotel/pages/RoomDetail.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":544,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":544,"endColumn":46}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaArrowLeft,\n  FaUsers,\n  FaBed,\n  FaWifi,\n  FaTv,\n  FaSnowflake,\n  FaShareAlt,\n  FaHeart,\n  FaCheckCircle,\n  FaCoffee,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport HotelNavbar from '../components/HotelNavbar';\nimport HotelFooter from '../components/HotelFooter';\nimport { getHotelByIdOrSlug, getRoomById } from '../../DummyData';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n  flex: 1;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg} ${theme.spacing.sm};\n  }\n`;\n\nconst BackButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  background: none;\n  border: none;\n  color: ${theme.colors.primary};\n  font-weight: 500;\n  margin-bottom: ${theme.spacing.xl};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 1rem;\n\n  &:hover {\n    transform: translateX(-4px);\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.1rem;\n    font-weight: 600;\n    margin-bottom: ${theme.spacing.lg};\n    padding: ${theme.spacing.sm} 0;\n  }\n`;\n\nconst RoomGrid = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.xl};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst RoomContent = styled.div``;\n\nconst BookingCard = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xl};\n  box-shadow: ${theme.shadows.lg};\n  position: sticky;\n  top: ${theme.spacing.xl};\n  height: fit-content;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    position: static;\n    padding: ${theme.spacing.xl};\n    margin: 0 -${theme.spacing.xs};\n    order: -1;\n    border-radius: ${theme.borderRadius.lg};\n    box-shadow: ${theme.shadows.xl};\n  }\n`;\n\nconst ImageGallery = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst MainImage = styled.img`\n  width: 100%;\n  height: 400px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.lg};\n  margin-bottom: ${theme.spacing.md};\n  box-shadow: ${theme.shadows.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    height: 300px;\n    border-radius: ${theme.borderRadius.xl};\n    box-shadow: ${theme.shadows.lg};\n    margin: 0 -${theme.spacing.xs} ${theme.spacing.lg};\n  }\n`;\n\nconst ThumbnailGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    display: flex;\n    overflow-x: auto;\n    scroll-snap-type: x mandatory;\n    gap: ${theme.spacing.sm};\n    padding: 0 ${theme.spacing.xs};\n    scrollbar-width: none;\n    -ms-overflow-style: none;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n`;\n\nconst Thumbnail = styled.img.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  width: 100%;\n  height: 80px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  border: 2px solid\n    ${props => (props.active ? theme.colors.primary : 'transparent')};\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    min-width: 80px;\n    width: 80px;\n    height: 60px;\n    border-radius: ${theme.borderRadius.lg};\n    border-width: 3px;\n    scroll-snap-align: center;\n  }\n`;\n\nconst RoomHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.lg};\n    align-items: center;\n    text-align: center;\n  }\n`;\n\nconst RoomInfo = styled.div`\n  flex: 1;\n`;\n\nconst RoomActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst ActionButton = styled.button`\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1.1rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  box-shadow: ${theme.shadows.sm};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n    transform: translateY(-1px);\n    box-shadow: ${theme.shadows.md};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.md};\n    font-size: 1.3rem;\n    border-radius: ${theme.borderRadius.lg};\n    border-width: 3px;\n    box-shadow: ${theme.shadows.md};\n  }\n`;\n\nconst RoomName = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2.2rem;\n    line-height: 1.3;\n    text-align: center;\n  }\n`;\n\nconst RoomType = styled.div`\n  display: inline-block;\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xs} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst RoomDetails = styled.div`\n  display: flex;\n  gap: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.lg};\n  flex-wrap: wrap;\n`;\n\nconst Detail = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.gray600};\n  font-size: 1rem;\n`;\n\nconst Price = styled.div`\n  font-size: 2rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst Description = styled.p`\n  font-size: 1.1rem;\n  line-height: 1.7;\n  color: ${theme.colors.gray700};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst Section = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst AmenitiesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: repeat(2, 1fr);\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst AmenityItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  padding: ${theme.spacing.md};\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.md};\n  box-shadow: ${theme.shadows.sm};\n  border: 1px solid ${theme.colors.gray100};\n  transition: all 0.2s ease;\n\n  &:hover {\n    box-shadow: ${theme.shadows.md};\n    transform: translateY(-1px);\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.sm};\n    gap: ${theme.spacing.sm};\n    font-size: 0.9rem;\n  }\n`;\n\nconst AmenityIcon = styled.div`\n  color: ${theme.colors.primary};\n  font-size: 1.2rem;\n`;\n\nconst PoliciesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst PolicyCard = styled.div`\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.lg};\n  box-shadow: ${theme.shadows.sm};\n  transition: all 0.2s ease;\n\n  &:hover {\n    box-shadow: ${theme.shadows.md};\n    transform: translateY(-2px);\n  }\n\n  h4 {\n    font-size: 1.1rem;\n    font-weight: 600;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.md};\n    display: flex;\n    align-items: center;\n    gap: ${theme.spacing.sm};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.md};\n  }\n`;\n\nconst PolicyItem = styled.div`\n  display: flex;\n  align-items: flex-start;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.sm};\n  font-size: 0.95rem;\n  color: ${theme.colors.gray700};\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  .icon {\n    color: ${theme.colors.success};\n    font-size: 0.8rem;\n    margin-top: 2px;\n    flex-shrink: 0;\n  }\n\n  .text {\n    line-height: 1.5;\n  }\n`;\n\nconst BookingForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.lg};\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n`;\n\nconst Label = styled.label`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  font-size: 0.9rem;\n`;\n\nconst Input = styled.input`\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst Select = styled.select`\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  background: ${theme.colors.white};\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst PriceSummary = styled.div`\n  background: ${theme.colors.gray50};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst SummaryRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${theme.spacing.sm};\n\n  &.total {\n    font-weight: 600;\n    font-size: 1.1rem;\n    border-top: 1px solid ${theme.colors.gray300};\n    padding-top: ${theme.spacing.sm};\n    margin-top: ${theme.spacing.sm};\n  }\n`;\n\nconst BookButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1.1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-2px);\n  }\n`;\n\nconst RoomDetail = () => {\n  const { slug, roomId } = useParams();\n  const navigate = useNavigate();\n  const [hotel, setHotel] = useState(null);\n  const [room, setRoom] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(0);\n  const [bookingData, setBookingData] = useState({\n    checkIn: '',\n    checkOut: '',\n    guests: '2',\n  });\n\n  useEffect(() => {\n    const foundHotel = getHotelByIdOrSlug(slug);\n\n    const foundRoom = foundHotel ? getRoomById(foundHotel.id, roomId) : null;\n    setHotel(foundHotel);\n    setRoom(foundRoom);\n  }, [slug, roomId]);\n\n  const getAmenityIcon = amenity => {\n    const iconMap = {\n      WiFi: FaWifi,\n      TV: FaTv,\n      AC: FaSnowflake,\n      'Mini Bar': FaCoffee,\n      'Room Service': FaCoffee,\n    };\n    const IconComponent = iconMap[amenity] || FaCheckCircle;\n    return <IconComponent />;\n  };\n\n  const handleInputChange = e => {\n    setBookingData({\n      ...bookingData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const calculateNights = () => {\n    if (bookingData.checkIn && bookingData.checkOut) {\n      const checkIn = new Date(bookingData.checkIn);\n      const checkOut = new Date(bookingData.checkOut);\n      const diffTime = Math.abs(checkOut - checkIn);\n      return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    }\n    return 1;\n  };\n\n  const calculateTotal = () => {\n    const nights = calculateNights();\n    return room ? room.price * nights : 0;\n  };\n\n  const handleBooking = e => {\n    e.preventDefault();\n    navigate(`/${slug}/rooms/booking/${roomId}`, {\n      state: { bookingData },\n    });\n  };\n\n  const handleShare = () => {\n    if (navigator.share) {\n      navigator.share({\n        title: `${room?.name} at ${hotel?.name}`,\n        text: room?.description,\n        url: window.location.href,\n      });\n    } else {\n      navigator.clipboard.writeText(window.location.href);\n      alert('Room link copied to clipboard!');\n    }\n  };\n\n  if (!hotel || !room) {\n    return (\n      <PageContainer>\n        <HotelNavbar />\n        <Container>\n          <div style={{ textAlign: 'center', padding: '4rem 0' }}>\n            <h2>Room not found</h2>\n            <p>The room you're looking for doesn't exist.</p>\n            <Link to=\"/hotels\" style={{ color: theme.colors.primary }}>\n              Back to Hotels\n            </Link>\n          </div>\n        </Container>\n        <HotelFooter />\n      </PageContainer>\n    );\n  }\n\n  const images = room.images || [room.image];\n\n  return (\n    <PageContainer>\n      <HotelNavbar />\n      <Container>\n        <BackButton onClick={() => navigate(-1)}>\n          <FaArrowLeft />\n          Back to Hotel\n        </BackButton>\n\n        <RoomGrid>\n          <RoomContent>\n            <ImageGallery>\n              <MainImage src={images[selectedImage]} alt={room.name} />\n              {images.length > 1 && (\n                <ThumbnailGrid>\n                  {images.map((image, index) => (\n                    <Thumbnail\n                      key={index}\n                      src={image}\n                      alt={`${room.name} ${index + 1}`}\n                      active={selectedImage === index}\n                      onClick={() => setSelectedImage(index)}\n                    />\n                  ))}\n                </ThumbnailGrid>\n              )}\n            </ImageGallery>\n\n            <RoomHeader>\n              <RoomInfo>\n                <RoomName>{room.name}</RoomName>\n                <RoomType>{room.type}</RoomType>\n                <RoomDetails>\n                  <Detail>\n                    <FaBed />\n                    {room.bedType}\n                  </Detail>\n                  <Detail>\n                    <FaUsers />\n                    Up to {room.maxGuests} guests\n                  </Detail>\n                </RoomDetails>\n                <Price>\n                  ₹{room.price.toLocaleString()}{' '}\n                  <span\n                    style={{ fontSize: '1rem', color: theme.colors.gray600 }}\n                  >\n                    per night\n                  </span>\n                </Price>\n              </RoomInfo>\n\n              <RoomActions>\n                <ActionButton onClick={handleShare} title=\"Share Room\">\n                  <FaShareAlt />\n                </ActionButton>\n                <ActionButton title=\"Add to Wishlist\">\n                  <FaHeart />\n                </ActionButton>\n              </RoomActions>\n            </RoomHeader>\n\n            <Description>{room.description}</Description>\n\n            <Section>\n              <SectionTitle>Room Amenities</SectionTitle>\n              <AmenitiesGrid>\n                {room.amenities?.map((amenity, index) => (\n                  <AmenityItem key={index}>\n                    <AmenityIcon>{getAmenityIcon(amenity)}</AmenityIcon>\n                    <span>{amenity}</span>\n                  </AmenityItem>\n                ))}\n              </AmenitiesGrid>\n            </Section>\n\n            <Section>\n              <SectionTitle>Room Policies & Details</SectionTitle>\n              <PoliciesGrid>\n                <PolicyCard>\n                  <h4>\n                    <FaCheckCircle style={{ color: theme.colors.success }} />\n                    Guest Policies\n                  </h4>\n                  <PolicyItem>\n                    <FaCheckCircle className=\"icon\" />\n                    <span className=\"text\">\n                      Couple Friendly - Unmarried couples welcome\n                    </span>\n                  </PolicyItem>\n                  <PolicyItem>\n                    <FaCheckCircle className=\"icon\" />\n                    <span className=\"text\">Local ID accepted for check-in</span>\n                  </PolicyItem>\n                  <PolicyItem>\n                    <FaCheckCircle className=\"icon\" />\n                    <span className=\"text\">\n                      Pet friendly (additional charges apply)\n                    </span>\n                  </PolicyItem>\n                  <PolicyItem>\n                    <FaCheckCircle className=\"icon\" />\n                    <span className=\"text\">24/7 front desk assistance</span>\n                  </PolicyItem>\n                </PolicyCard>\n\n                <PolicyCard>\n                  <h4>\n                    <FaCoffee style={{ color: theme.colors.primary }} />\n                    Services & Facilities\n                  </h4>\n                  <PolicyItem>\n                    <FaCheckCircle className=\"icon\" />\n                    <span className=\"text\">\n                      Complimentary breakfast included\n                    </span>\n                  </PolicyItem>\n                  <PolicyItem>\n                    <FaCheckCircle className=\"icon\" />\n                    <span className=\"text\">Free high-speed WiFi</span>\n                  </PolicyItem>\n                  <PolicyItem>\n                    <FaCheckCircle className=\"icon\" />\n                    <span className=\"text\">24/7 room service available</span>\n                  </PolicyItem>\n                  <PolicyItem>\n                    <FaCheckCircle className=\"icon\" />\n                    <span className=\"text\">Daily housekeeping service</span>\n                  </PolicyItem>\n                </PolicyCard>\n\n                <PolicyCard>\n                  <h4>\n                    <FaUsers style={{ color: theme.colors.primary }} />\n                    Check-in Policies\n                  </h4>\n                  <PolicyItem>\n                    <FaCheckCircle className=\"icon\" />\n                    <span className=\"text\">Check-in: 2:00 PM onwards</span>\n                  </PolicyItem>\n                  <PolicyItem>\n                    <FaCheckCircle className=\"icon\" />\n                    <span className=\"text\">Check-out: 12:00 PM</span>\n                  </PolicyItem>\n                  <PolicyItem>\n                    <FaCheckCircle className=\"icon\" />\n                    <span className=\"text\">\n                      Early check-in subject to availability\n                    </span>\n                  </PolicyItem>\n                  <PolicyItem>\n                    <FaCheckCircle className=\"icon\" />\n                    <span className=\"text\">Valid ID required at check-in</span>\n                  </PolicyItem>\n                </PolicyCard>\n\n                <PolicyCard>\n                  <h4>\n                    <FaSnowflake style={{ color: theme.colors.primary }} />\n                    Cancellation Policy\n                  </h4>\n                  <PolicyItem>\n                    <FaCheckCircle className=\"icon\" />\n                    <span className=\"text\">\n                      Free cancellation up to 24 hours before check-in\n                    </span>\n                  </PolicyItem>\n                  <PolicyItem>\n                    <FaCheckCircle className=\"icon\" />\n                    <span className=\"text\">\n                      No-show charges: 100% of first night\n                    </span>\n                  </PolicyItem>\n                  <PolicyItem>\n                    <FaCheckCircle className=\"icon\" />\n                    <span className=\"text\">\n                      Flexible booking options available\n                    </span>\n                  </PolicyItem>\n                  <PolicyItem>\n                    <FaCheckCircle className=\"icon\" />\n                    <span className=\"text\">Refundable security deposit</span>\n                  </PolicyItem>\n                </PolicyCard>\n              </PoliciesGrid>\n            </Section>\n          </RoomContent>\n\n          <BookingCard>\n            <h3\n              style={{\n                marginBottom: theme.spacing.lg,\n                fontSize: '1.3rem',\n                fontWeight: '600',\n              }}\n            >\n              Book This Room\n            </h3>\n\n            <BookingForm onSubmit={handleBooking}>\n              <FormGroup>\n                <Label htmlFor=\"checkIn\">Check-in Date</Label>\n                <Input\n                  type=\"date\"\n                  id=\"checkIn\"\n                  name=\"checkIn\"\n                  value={bookingData.checkIn}\n                  onChange={handleInputChange}\n                  min={new Date().toISOString().split('T')[0]}\n                  required\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <Label htmlFor=\"checkOut\">Check-out Date</Label>\n                <Input\n                  type=\"date\"\n                  id=\"checkOut\"\n                  name=\"checkOut\"\n                  value={bookingData.checkOut}\n                  onChange={handleInputChange}\n                  min={\n                    bookingData.checkIn ||\n                    new Date().toISOString().split('T')[0]\n                  }\n                  required\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <Label htmlFor=\"guests\">Number of Guests</Label>\n                <Select\n                  id=\"guests\"\n                  name=\"guests\"\n                  value={bookingData.guests}\n                  onChange={handleInputChange}\n                >\n                  {Array.from({ length: room.maxGuests }, (_, i) => (\n                    <option key={i + 1} value={i + 1}>\n                      {i + 1} Guest{i > 0 ? 's' : ''}\n                    </option>\n                  ))}\n                </Select>\n              </FormGroup>\n\n              {bookingData.checkIn && bookingData.checkOut && (\n                <PriceSummary>\n                  <SummaryRow>\n                    <span>\n                      ₹{room.price.toLocaleString()} × {calculateNights()} night\n                      {calculateNights() > 1 ? 's' : ''}\n                    </span>\n                    <span>₹{calculateTotal().toLocaleString()}</span>\n                  </SummaryRow>\n                  <SummaryRow className=\"total\">\n                    <span>Total</span>\n                    <span>₹{calculateTotal().toLocaleString()}</span>\n                  </SummaryRow>\n                </PriceSummary>\n              )}\n\n              <BookButton type=\"submit\">Book Now</BookButton>\n            </BookingForm>\n\n            <p\n              style={{\n                fontSize: '0.8rem',\n                color: theme.colors.gray500,\n                textAlign: 'center',\n                marginTop: theme.spacing.md,\n              }}\n            >\n              You won't be charged yet\n            </p>\n          </BookingCard>\n        </RoomGrid>\n      </Container>\n\n      <HotelFooter />\n    </PageContainer>\n  );\n};\n\nexport default RoomDetail;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/hotel/pages/RoomList.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":599,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":599,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[13911,13930],"text":""},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport {\n  FaArrowLeft,\n  FaFilter,\n  FaMapMarkerAlt,\n  FaStar,\n  FaSearch,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport HotelNavbar from '../components/HotelNavbar';\nimport HotelFooter from '../components/HotelFooter';\nimport RoomCard from '../components/RoomCard';\nimport { getHotelByIdOrSlug } from '../../DummyData';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst Container = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n  flex: 1;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg} ${theme.spacing.sm};\n  }\n`;\n\nconst BackButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  background: none;\n  border: none;\n  color: ${theme.colors.primary};\n  font-weight: 500;\n  margin-bottom: ${theme.spacing.xl};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 1rem;\n\n  &:hover {\n    transform: translateX(-4px);\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.1rem;\n    font-weight: 600;\n    margin-bottom: ${theme.spacing.lg};\n    padding: ${theme.spacing.sm} 0;\n  }\n`;\n\nconst PageHeader = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  padding: ${theme.spacing.xxl};\n  margin-bottom: ${theme.spacing.xl};\n  box-shadow: ${theme.shadows.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.xl};\n    margin-bottom: ${theme.spacing.lg};\n    border-radius: ${theme.borderRadius.lg};\n    margin: 0 -${theme.spacing.xs} ${theme.spacing.lg};\n  }\n`;\n\nconst HotelInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    flex-direction: column;\n    gap: ${theme.spacing.lg};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    gap: ${theme.spacing.xl};\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst HotelDetails = styled.div`\n  flex: 1;\n`;\n\nconst HotelName = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2.2rem;\n    text-align: center;\n    line-height: 1.3;\n  }\n`;\n\nconst HotelLocation = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.gray600};\n  font-size: 1.1rem;\n  margin-bottom: ${theme.spacing.sm};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    justify-content: center;\n    font-size: 1.2rem;\n    margin-bottom: ${theme.spacing.md};\n  }\n`;\n\nconst HotelRating = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.gray700};\n  font-size: 1rem;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    justify-content: center;\n    font-size: 1.1rem;\n    font-weight: 600;\n  }\n`;\n\nconst HotelImage = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'image',\n})`\n  width: 200px;\n  height: 150px;\n  background-image: url(${props => props.image});\n  background-size: cover;\n  background-position: center;\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    width: 100%;\n    height: 200px;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    height: 250px;\n    border-radius: ${theme.borderRadius.xl};\n    box-shadow: ${theme.shadows.lg};\n  }\n`;\n\nconst BookingControls = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.xl};\n  padding: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xl};\n  box-shadow: ${theme.shadows.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg};\n    margin: 0 -${theme.spacing.xs} ${theme.spacing.lg};\n    border-radius: ${theme.borderRadius.lg};\n    box-shadow: ${theme.shadows.lg};\n  }\n`;\n\nconst ControlsGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr auto auto;\n  gap: ${theme.spacing.lg};\n  align-items: end;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n\n    & > * {\n      width: 100%;\n    }\n  }\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst Label = styled.label`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  font-size: 0.9rem;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1rem;\n    font-weight: 700;\n  }\n`;\n\nconst Input = styled.input`\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg};\n    font-size: 1.1rem;\n    border-radius: ${theme.borderRadius.lg};\n    border-width: 2px;\n\n    &:focus {\n      border-width: 3px;\n    }\n  }\n`;\n\nconst Select = styled.select`\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  background: ${theme.colors.white};\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg};\n    font-size: 1.1rem;\n    border-radius: ${theme.borderRadius.lg};\n    border-width: 2px;\n\n    &:focus {\n      border-width: 3px;\n    }\n  }\n`;\n\nconst FilterButton = styled.button`\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  min-height: 50px;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n  }\n\n  &.active {\n    background: ${theme.colors.primary};\n    color: ${theme.colors.white};\n    border-color: ${theme.colors.primary};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg};\n    font-size: 1.1rem;\n    font-weight: 600;\n    border-radius: ${theme.borderRadius.lg};\n    min-height: 56px;\n    justify-content: center;\n\n    &:hover {\n      transform: translateY(-1px);\n      box-shadow: ${theme.shadows.md};\n    }\n\n    &.active {\n      box-shadow: ${theme.shadows.lg};\n    }\n  }\n`;\n\nconst SearchButton = styled.button`\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary},\n    ${theme.colors.primaryDark}\n  );\n  color: ${theme.colors.white};\n  border: none;\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  min-height: 50px;\n  box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);\n  position: relative;\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      90deg,\n      transparent,\n      rgba(255, 255, 255, 0.2),\n      transparent\n    );\n    transition: left 0.5s;\n  }\n\n  &:hover::before {\n    left: 100%;\n  }\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(59, 130, 246, 0.4);\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg} ${theme.spacing.xl};\n    font-size: 1.1rem;\n    font-weight: 700;\n    border-radius: ${theme.borderRadius.lg};\n    min-height: 56px;\n    width: 100%;\n    justify-content: center;\n    box-shadow: 0 6px 20px rgba(59, 130, 246, 0.4);\n\n    &:hover {\n      transform: translateY(-1px);\n    }\n  }\n`;\n\nconst ResultsHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.xl};\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.lg} ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.lg};\n    align-items: stretch;\n    padding: ${theme.spacing.xl};\n    margin: 0 -${theme.spacing.xs} ${theme.spacing.lg};\n    border-radius: ${theme.borderRadius.lg};\n  }\n`;\n\nconst ResultsCount = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0;\n\n  .count {\n    color: ${theme.colors.primary};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.7rem;\n    font-weight: 700;\n    text-align: center;\n  }\n`;\n\nconst SortControls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst SortLabel = styled.span`\n  color: ${theme.colors.gray600};\n  font-weight: 500;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.1rem;\n    font-weight: 600;\n  }\n`;\n\nconst RoomsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(450px, 1fr));\n  gap: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.xl};\n    padding: 0 ${theme.spacing.xs};\n  }\n`;\n\nconst NoRoomsMessage = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n\n  h3 {\n    font-size: 1.5rem;\n    color: ${theme.colors.gray900};\n    margin-bottom: ${theme.spacing.md};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.xl};\n    margin: 0 ${theme.spacing.xs};\n\n    h3 {\n      font-size: 1.7rem;\n      font-weight: 700;\n    }\n  }\n\n  p {\n    color: ${theme.colors.gray600};\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst ClearFiltersButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  border: none;\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n  }\n`;\n\nconst RoomList = () => {\n  const { slug } = useParams();\n  const navigate = useNavigate();\n  const [hotel, setHotel] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Get updated hotel data from Redux if available\n  const { hotels } = useSelector(state => state.hotelManagement);\n  const [searchParams, setSearchParams] = useState({\n    checkIn: '',\n    checkOut: '',\n    guests: '2',\n  });\n  const [sortBy, setSortBy] = useState('price-low');\n  const [filterBy, setFilterBy] = useState('all');\n\n  useEffect(() => {\n    // First check if we have updated hotel data in Redux state\n    const updatedHotel = hotels.find(h => h.slug === slug);\n\n    if (updatedHotel) {\n      // Use updated hotel data from Redux (includes admin changes)\n      setHotel(updatedHotel);\n    } else {\n      // Fallback to original dummy data\n      const foundHotel = getHotelByIdOrSlug(slug);\n      setHotel(foundHotel);\n    }\n\n    setLoading(false);\n  }, [slug, hotels]);\n\n  const handleSearchChange = e => {\n    const { name, value } = e.target;\n    setSearchParams(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const getSortedRooms = () => {\n    if (!hotel?.rooms) return [];\n\n    let rooms = [...hotel.rooms];\n\n    // Filter rooms\n    if (filterBy !== 'all') {\n      rooms = rooms.filter(\n        room => room.type.toLowerCase() === filterBy.toLowerCase()\n      );\n    }\n\n    // Sort rooms\n    switch (sortBy) {\n      case 'price-low':\n        return rooms.sort((a, b) => a.price - b.price);\n      case 'price-high':\n        return rooms.sort((a, b) => b.price - a.price);\n      case 'guests':\n        return rooms.sort((a, b) => b.maxGuests - a.maxGuests);\n      case 'name':\n        return rooms.sort((a, b) => a.name.localeCompare(b.name));\n      default:\n        return rooms;\n    }\n  };\n\n  const handleSearch = () => {\n    // Here you could implement availability checking\n  };\n\n  const clearFilters = () => {\n    setFilterBy('all');\n    setSortBy('price-low');\n  };\n\n  if (loading) {\n    return (\n      <PageContainer>\n        <HotelNavbar />\n        <Container>\n          <div style={{ textAlign: 'center', padding: '4rem 0' }}>\n            <h2>Loading...</h2>\n          </div>\n        </Container>\n        <HotelFooter />\n      </PageContainer>\n    );\n  }\n\n  if (!hotel) {\n    return (\n      <PageContainer>\n        <HotelNavbar />\n        <Container>\n          <div style={{ textAlign: 'center', padding: '4rem 0' }}>\n            <h2>Hotel not found</h2>\n            <p>The hotel you're looking for doesn't exist.</p>\n          </div>\n        </Container>\n        <HotelFooter />\n      </PageContainer>\n    );\n  }\n\n  const sortedRooms = getSortedRooms();\n  const uniqueRoomTypes = [\n    ...new Set(hotel.rooms?.map(room => room.type) || []),\n  ];\n  console.log(hotel);\n\n  return (\n    <PageContainer>\n      <HotelNavbar />\n\n      <Container>\n        <BackButton onClick={() => navigate(`/${hotel.slug}`)}>\n          <FaArrowLeft />\n          Back to Hotel\n        </BackButton>\n\n        <PageHeader>\n          <HotelInfo>\n            <HotelDetails>\n              <HotelName>{hotel.name}</HotelName>\n              <HotelLocation>\n                <FaMapMarkerAlt />\n                {hotel.location}\n              </HotelLocation>\n              <HotelRating>\n                <FaStar style={{ color: '#fbbf24' }} />\n                {hotel.rating}/5 ({hotel.starRating} Star Hotel)\n              </HotelRating>\n            </HotelDetails>\n            <HotelImage image={hotel.image} />\n          </HotelInfo>\n        </PageHeader>\n\n        <BookingControls>\n          <ControlsGrid>\n            <FormGroup>\n              <Label htmlFor=\"checkIn\">Check-in Date</Label>\n              <Input\n                type=\"date\"\n                id=\"checkIn\"\n                name=\"checkIn\"\n                value={searchParams.checkIn}\n                onChange={handleSearchChange}\n                min={new Date().toISOString().split('T')[0]}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <Label htmlFor=\"checkOut\">Check-out Date</Label>\n              <Input\n                type=\"date\"\n                id=\"checkOut\"\n                name=\"checkOut\"\n                value={searchParams.checkOut}\n                onChange={handleSearchChange}\n                min={\n                  searchParams.checkIn || new Date().toISOString().split('T')[0]\n                }\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <Label htmlFor=\"guests\">Guests</Label>\n              <Select\n                id=\"guests\"\n                name=\"guests\"\n                value={searchParams.guests}\n                onChange={handleSearchChange}\n              >\n                {[1, 2, 3, 4, 5, 6, 7, 8].map(num => (\n                  <option key={num} value={num}>\n                    {num} Guest{num > 1 ? 's' : ''}\n                  </option>\n                ))}\n              </Select>\n            </FormGroup>\n\n            <FilterButton\n              className={filterBy !== 'all' ? 'active' : ''}\n              onClick={() =>\n                setFilterBy(\n                  filterBy === 'all'\n                    ? uniqueRoomTypes[0]?.toLowerCase() || 'all'\n                    : 'all'\n                )\n              }\n            >\n              <FaFilter />\n              Filter\n            </FilterButton>\n\n            <SearchButton onClick={handleSearch}>\n              <FaSearch />\n              Search\n            </SearchButton>\n          </ControlsGrid>\n        </BookingControls>\n\n        <ResultsHeader>\n          <ResultsCount>\n            <span className=\"count\">{sortedRooms.length}</span> Room\n            {sortedRooms.length !== 1 ? 's' : ''} Available\n          </ResultsCount>\n\n          <SortControls>\n            <SortLabel>Sort by:</SortLabel>\n            <Select value={sortBy} onChange={e => setSortBy(e.target.value)}>\n              <option value=\"price-low\">Price: Low to High</option>\n              <option value=\"price-high\">Price: High to Low</option>\n              <option value=\"guests\">Max Guests</option>\n              <option value=\"name\">Room Name</option>\n            </Select>\n\n            {uniqueRoomTypes.length > 1 && (\n              <>\n                <SortLabel>Filter:</SortLabel>\n                <Select\n                  value={filterBy}\n                  onChange={e => setFilterBy(e.target.value)}\n                >\n                  <option value=\"all\">All Room Types</option>\n                  {uniqueRoomTypes.map(type => (\n                    <option key={type} value={type.toLowerCase()}>\n                      {type} Rooms\n                    </option>\n                  ))}\n                </Select>\n              </>\n            )}\n          </SortControls>\n        </ResultsHeader>\n\n        {sortedRooms.length > 0 ? (\n          <RoomsGrid>\n            {sortedRooms.map(room => (\n              <RoomCard\n                key={room.id}\n                room={room}\n                hotelId={hotel.id}\n                hotelSlug={hotel.slug}\n              />\n            ))}\n          </RoomsGrid>\n        ) : (\n          <NoRoomsMessage>\n            <h3>No rooms found</h3>\n            <p>\n              No rooms match your current search criteria. Try adjusting your\n              filters or dates.\n            </p>\n            <ClearFiltersButton onClick={clearFilters}>\n              Clear Filters\n            </ClearFiltersButton>\n          </NoRoomsMessage>\n        )}\n      </Container>\n\n      <HotelFooter />\n    </PageContainer>\n  );\n};\n\nexport default RoomList;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/store/index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/store/slices/businessManagementSlice.js","messages":[{"ruleId":"prefer-const","severity":1,"message":"'business' is never reassigned. Use 'const' instead.","line":31,"column":11,"nodeType":"Identifier","messageId":"useConst","endLine":31,"endColumn":19,"fix":{"range":[652,715],"text":"const business = state.businesses.find(b => b.id === businessId);"}},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":36,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":36,"endColumn":21,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"warn"},"fix":{"range":[892,964],"text":""},"desc":"Remove the console.warn()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  businesses: [],\n  editingBusiness: null,\n  originalBusiness: null,\n  changes: {},\n  hasUnsavedChanges: false,\n  activeBusinessId: null,\n  sectionVisibility: {\n    hero: true,\n    about: true,\n    services: true,\n    portfolio: true,\n    skills: true,\n    experience: true,\n    team: true,\n    gallery: true,\n    contact: true,\n    packages: true,\n    testimonials: true,\n  },\n};\n\nconst businessManagementSlice = createSlice({\n  name: 'businessManagement',\n  initialState,\n  reducers: {\n    setEditingBusiness: (state, action) => {\n      const businessId = action.payload;\n      let business = state.businesses.find(b => b.id === businessId);\n\n      // If business is not found in Redux state, we'll initialize with null\n      // and let the component handle fetching from the dummy data\n      if (!business) {\n        console.warn(`Business with id ${businessId} not found in Redux state`);\n        state.editingBusiness = null;\n        state.originalBusiness = null;\n      } else {\n        state.editingBusiness = { ...business };\n        state.originalBusiness = { ...business };\n      }\n\n      state.activeBusinessId = businessId;\n      state.changes = {};\n      state.hasUnsavedChanges = false;\n    },\n\n    updateBusinessField: (state, action) => {\n      const { field, value } = action.payload;\n      if (state.editingBusiness) {\n        state.editingBusiness[field] = value;\n        state.changes[field] = {\n          old: state.originalBusiness[field],\n          new: value,\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    updateBusinessImage: (state, action) => {\n      const { field, url } = action.payload;\n      if (state.editingBusiness) {\n        state.editingBusiness[field] = url;\n        state.changes[field] = {\n          old: state.originalBusiness[field],\n          new: url,\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    updateBusinessGallery: (state, action) => {\n      if (state.editingBusiness) {\n        state.editingBusiness.gallery = action.payload;\n        state.changes.gallery = {\n          old: state.originalBusiness.gallery,\n          new: action.payload,\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    updateBusinessServices: (state, action) => {\n      if (state.editingBusiness) {\n        state.editingBusiness.services = action.payload;\n        state.changes.services = {\n          old: state.originalBusiness.services,\n          new: action.payload,\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    updateBusinessTestimonials: (state, action) => {\n      if (state.editingBusiness) {\n        state.editingBusiness.testimonials = action.payload;\n        state.changes.testimonials = {\n          old: state.originalBusiness.testimonials,\n          new: action.payload,\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    updateBusinessPackages: (state, action) => {\n      if (state.editingBusiness) {\n        state.editingBusiness.packages = action.payload;\n        state.changes.packages = {\n          old: state.originalBusiness.packages,\n          new: action.payload,\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    updateBusinessPortfolio: (state, action) => {\n      if (state.editingBusiness) {\n        state.editingBusiness.portfolio = action.payload;\n        state.changes.portfolio = {\n          old: state.originalBusiness.portfolio,\n          new: action.payload,\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    updateBusinessSkills: (state, action) => {\n      if (state.editingBusiness) {\n        state.editingBusiness.skills = action.payload;\n        state.changes.skills = {\n          old: state.originalBusiness.skills,\n          new: action.payload,\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    updateBusinessExperience: (state, action) => {\n      if (state.editingBusiness) {\n        state.editingBusiness.experience = action.payload;\n        state.changes.experience = {\n          old: state.originalBusiness.experience,\n          new: action.payload,\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    updateBusinessTeam: (state, action) => {\n      if (state.editingBusiness) {\n        state.editingBusiness.team = action.payload;\n        state.changes.team = {\n          old: state.originalBusiness.team,\n          new: action.payload,\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    updateBusinessCustomSections: (state, action) => {\n      if (state.editingBusiness) {\n        state.editingBusiness.customSections = action.payload;\n        state.changes.customSections = {\n          old: state.originalBusiness.customSections || [],\n          new: action.payload,\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    saveBusinessChanges: state => {\n      if (state.editingBusiness && state.hasUnsavedChanges) {\n        const businessIndex = state.businesses.findIndex(\n          b => b.id === state.editingBusiness.id\n        );\n        if (businessIndex !== -1) {\n          state.businesses[businessIndex] = { ...state.editingBusiness };\n        } else {\n          // Add new business if it doesn't exist\n          state.businesses.push({ ...state.editingBusiness });\n        }\n        state.originalBusiness = { ...state.editingBusiness };\n        state.changes = {};\n        state.hasUnsavedChanges = false;\n      }\n    },\n\n    discardBusinessChanges: state => {\n      if (state.originalBusiness) {\n        state.editingBusiness = { ...state.originalBusiness };\n        state.changes = {};\n        state.hasUnsavedChanges = false;\n      }\n    },\n\n    initializeBusiness: (state, action) => {\n      const business = action.payload;\n      const existingBusiness = state.businesses.find(b => b.id === business.id);\n\n      if (!existingBusiness) {\n        state.businesses.push(business);\n      }\n    },\n\n    clearEditingBusiness: state => {\n      state.editingBusiness = null;\n      state.originalBusiness = null;\n      state.changes = {};\n      state.hasUnsavedChanges = false;\n      state.activeBusinessId = null;\n    },\n\n    toggleBusinessSectionVisibility: (state, action) => {\n      const { section } = action.payload;\n      state.sectionVisibility[section] = !state.sectionVisibility[section];\n\n      // Also update the editing business's sectionVisibility\n      if (state.editingBusiness) {\n        if (!state.editingBusiness.sectionVisibility) {\n          state.editingBusiness.sectionVisibility = {\n            ...state.sectionVisibility,\n          };\n        }\n        state.editingBusiness.sectionVisibility[section] =\n          state.sectionVisibility[section];\n        state.changes.sectionVisibility = {\n          old: state.originalBusiness?.sectionVisibility || {},\n          new: state.editingBusiness.sectionVisibility,\n        };\n      }\n\n      state.hasUnsavedChanges = true;\n    },\n  },\n});\n\nexport const {\n  setEditingBusiness,\n  initializeBusiness,\n  updateBusinessField,\n  updateBusinessImage,\n  updateBusinessGallery,\n  updateBusinessServices,\n  updateBusinessTestimonials,\n  updateBusinessPackages,\n  updateBusinessPortfolio,\n  updateBusinessSkills,\n  updateBusinessExperience,\n  updateBusinessTeam,\n  updateBusinessCustomSections,\n  saveBusinessChanges,\n  discardBusinessChanges,\n  clearEditingBusiness,\n  toggleBusinessSectionVisibility,\n} = businessManagementSlice.actions;\n\nexport default businessManagementSlice.reducer;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/store/slices/hotelManagementSlice.js","messages":[{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":33,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":33,"endColumn":5,"fix":{"range":[834,838],"text":""}},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":45,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":45,"endColumn":5,"fix":{"range":[1167,1171],"text":""}},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":67,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":67,"endColumn":5,"fix":{"range":[1823,1827],"text":""}},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":79,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":79,"endColumn":5,"fix":{"range":[2188,2192],"text":""}},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":91,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":91,"endColumn":5,"fix":{"range":[2582,2586],"text":""}},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":102,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":102,"endColumn":5,"fix":{"range":[2894,2898],"text":""}},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":113,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":113,"endColumn":5,"fix":{"range":[3202,3206],"text":""}},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":125,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":125,"endColumn":5,"fix":{"range":[3554,3558],"text":""}},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":143,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":143,"endColumn":5,"fix":{"range":[4138,4142],"text":""}},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":155,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":155,"endColumn":5,"fix":{"range":[4515,4519],"text":""}},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":167,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":167,"endColumn":5,"fix":{"range":[4945,4949],"text":""}},{"ruleId":"no-trailing-spaces","severity":1,"message":"Trailing spaces not allowed.","line":175,"column":1,"nodeType":"Program","messageId":"trailingSpace","endLine":175,"endColumn":5,"fix":{"range":[5157,5161],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":12,"source":"import { createSlice } from '@reduxjs/toolkit';\nimport { hotels } from '../../DummyData/hotels';\n\nconst initialState = {\n  hotels: hotels,\n  editingHotel: null,\n  originalHotel: null,\n  changes: {},\n  hasUnsavedChanges: false,\n  activeHotelId: null,\n  sectionVisibility: {\n    hero: true,\n    about: true,\n    features: true,\n    gallery: true,\n    amenities: true,\n    contact: true,\n  },\n};\n\nconst hotelManagementSlice = createSlice({\n  name: 'hotelManagement',\n  initialState,\n  reducers: {\n    setEditingHotel: (state, action) => {\n      const hotel = state.hotels.find(h => h.id === action.payload);\n      state.editingHotel = hotel ? { ...hotel } : null;\n      state.originalHotel = hotel ? { ...hotel } : null;\n      state.activeHotelId = action.payload;\n      state.changes = {};\n      state.hasUnsavedChanges = false;\n    },\n    \n    updateHotelField: (state, action) => {\n      const { field, value } = action.payload;\n      if (state.editingHotel) {\n        state.editingHotel[field] = value;\n        state.changes[field] = {\n          old: state.originalHotel[field],\n          new: value\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n    \n    updateHotelImage: (state, action) => {\n      const { index, url } = action.payload;\n      if (state.editingHotel) {\n        if (index === 'main') {\n          state.editingHotel.image = url;\n          state.changes.image = {\n            old: state.originalHotel.image,\n            new: url\n          };\n        } else {\n          const newImages = [...state.editingHotel.images];\n          newImages[index] = url;\n          state.editingHotel.images = newImages;\n          state.changes.images = {\n            old: state.originalHotel.images,\n            new: newImages\n          };\n        }\n        state.hasUnsavedChanges = true;\n      }\n    },\n    \n    addHotelImage: (state, action) => {\n      if (state.editingHotel) {\n        const newImages = [...state.editingHotel.images, action.payload];\n        state.editingHotel.images = newImages;\n        state.changes.images = {\n          old: state.originalHotel.images,\n          new: newImages\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n    \n    removeHotelImage: (state, action) => {\n      if (state.editingHotel) {\n        const newImages = state.editingHotel.images.filter((_, index) => index !== action.payload);\n        state.editingHotel.images = newImages;\n        state.changes.images = {\n          old: state.originalHotel.images,\n          new: newImages\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n    \n    updateAmenities: (state, action) => {\n      if (state.editingHotel) {\n        state.editingHotel.amenities = action.payload;\n        state.changes.amenities = {\n          old: state.originalHotel.amenities,\n          new: action.payload\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n    \n    updatePolicies: (state, action) => {\n      if (state.editingHotel) {\n        state.editingHotel.policies = action.payload;\n        state.changes.policies = {\n          old: state.originalHotel.policies,\n          new: action.payload\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n    \n    addRoom: (state, action) => {\n      if (state.editingHotel) {\n        const newRooms = [...state.editingHotel.rooms, action.payload];\n        state.editingHotel.rooms = newRooms;\n        state.changes.rooms = {\n          old: state.originalHotel.rooms,\n          new: newRooms\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n    \n    updateRoom: (state, action) => {\n      const { roomId, updates } = action.payload;\n      if (state.editingHotel) {\n        const roomIndex = state.editingHotel.rooms.findIndex(room => room.id === roomId);\n        if (roomIndex !== -1) {\n          state.editingHotel.rooms[roomIndex] = {\n            ...state.editingHotel.rooms[roomIndex],\n            ...updates\n          };\n          state.changes.rooms = {\n            old: state.originalHotel.rooms,\n            new: state.editingHotel.rooms\n          };\n          state.hasUnsavedChanges = true;\n        }\n      }\n    },\n    \n    removeRoom: (state, action) => {\n      if (state.editingHotel) {\n        const newRooms = state.editingHotel.rooms.filter(room => room.id !== action.payload);\n        state.editingHotel.rooms = newRooms;\n        state.changes.rooms = {\n          old: state.originalHotel.rooms,\n          new: newRooms\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n    \n    saveChanges: (state) => {\n      if (state.editingHotel && state.hasUnsavedChanges) {\n        const hotelIndex = state.hotels.findIndex(h => h.id === state.editingHotel.id);\n        if (hotelIndex !== -1) {\n          state.hotels[hotelIndex] = { ...state.editingHotel };\n        }\n        state.originalHotel = { ...state.editingHotel };\n        state.changes = {};\n        state.hasUnsavedChanges = false;\n      }\n    },\n    \n    discardChanges: (state) => {\n      if (state.originalHotel) {\n        state.editingHotel = { ...state.originalHotel };\n        state.changes = {};\n        state.hasUnsavedChanges = false;\n      }\n    },\n    \n    clearEditingHotel: (state) => {\n      state.editingHotel = null;\n      state.originalHotel = null;\n      state.changes = {};\n      state.hasUnsavedChanges = false;\n      state.activeHotelId = null;\n    },\n\n    toggleSectionVisibility: (state, action) => {\n      const { section } = action.payload;\n      state.sectionVisibility[section] = !state.sectionVisibility[section];\n\n      // Also update the editing hotel's sectionVisibility\n      if (state.editingHotel) {\n        if (!state.editingHotel.sectionVisibility) {\n          state.editingHotel.sectionVisibility = { ...state.sectionVisibility };\n        }\n        state.editingHotel.sectionVisibility[section] = state.sectionVisibility[section];\n        state.changes.sectionVisibility = {\n          old: state.originalHotel?.sectionVisibility || {},\n          new: state.editingHotel.sectionVisibility\n        };\n      }\n\n      state.hasUnsavedChanges = true;\n    },\n\n    updateFeatures: (state, action) => {\n      if (state.editingHotel) {\n        state.editingHotel.features = action.payload;\n        state.changes.features = {\n          old: state.originalHotel.features || [],\n          new: action.payload\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    addFeature: (state, action) => {\n      if (state.editingHotel) {\n        const newFeatures = [...(state.editingHotel.features || []), action.payload];\n        state.editingHotel.features = newFeatures;\n        state.changes.features = {\n          old: state.originalHotel.features || [],\n          new: newFeatures\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    removeFeature: (state, action) => {\n      if (state.editingHotel) {\n        const newFeatures = state.editingHotel.features.filter((_, index) => index !== action.payload);\n        state.editingHotel.features = newFeatures;\n        state.changes.features = {\n          old: state.originalHotel.features || [],\n          new: newFeatures\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    updateAmenityCategories: (state, action) => {\n      if (state.editingHotel) {\n        state.editingHotel.amenityCategories = action.payload;\n        state.changes.amenityCategories = {\n          old: state.originalHotel.amenityCategories || [],\n          new: action.payload\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    addAmenityCategory: (state, action) => {\n      if (state.editingHotel) {\n        const newCategories = [...(state.editingHotel.amenityCategories || []), action.payload];\n        state.editingHotel.amenityCategories = newCategories;\n        state.changes.amenityCategories = {\n          old: state.originalHotel.amenityCategories || [],\n          new: newCategories\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    addAmenityToCategory: (state, action) => {\n      const { categoryIndex, amenity } = action.payload;\n      if (state.editingHotel && state.editingHotel.amenityCategories) {\n        const newCategories = [...state.editingHotel.amenityCategories];\n        newCategories[categoryIndex].items.push(amenity);\n        state.editingHotel.amenityCategories = newCategories;\n        state.changes.amenityCategories = {\n          old: state.originalHotel.amenityCategories || [],\n          new: newCategories\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    removeAmenityFromCategory: (state, action) => {\n      const { categoryIndex, amenityIndex } = action.payload;\n      if (state.editingHotel && state.editingHotel.amenityCategories) {\n        const newCategories = [...state.editingHotel.amenityCategories];\n        newCategories[categoryIndex].items.splice(amenityIndex, 1);\n        state.editingHotel.amenityCategories = newCategories;\n        state.changes.amenityCategories = {\n          old: state.originalHotel.amenityCategories || [],\n          new: newCategories\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n  },\n});\n\nexport const {\n  setEditingHotel,\n  updateHotelField,\n  updateHotelImage,\n  addHotelImage,\n  removeHotelImage,\n  updateAmenities,\n  updatePolicies,\n  addRoom,\n  updateRoom,\n  removeRoom,\n  saveChanges,\n  discardChanges,\n  clearEditingHotel,\n  toggleSectionVisibility,\n  updateFeatures,\n  addFeature,\n  removeFeature,\n  updateAmenityCategories,\n  addAmenityCategory,\n  addAmenityToCategory,\n  removeAmenityFromCategory,\n} = hotelManagementSlice.actions;\n\nexport default hotelManagementSlice.reducer;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/store/slices/vendorManagementSlice.js","messages":[{"ruleId":"prefer-const","severity":1,"message":"'vendor' is never reassigned. Use 'const' instead.","line":29,"column":11,"nodeType":"Identifier","messageId":"useConst","endLine":29,"endColumn":17,"fix":{"range":[662,718],"text":"const vendor = state.vendors.find(v => v.id === vendorId);"}},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":34,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":34,"endColumn":21,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"warn"},"fix":{"range":[891,959],"text":""},"desc":"Remove the console.warn()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import { createSlice } from '@reduxjs/toolkit';\nimport { weddingVendors } from '../../DummyData/weddings';\n\nconst initialState = {\n  vendors: weddingVendors,\n  editingVendor: null,\n  originalVendor: null,\n  changes: {},\n  hasUnsavedChanges: false,\n  activeVendorId: null,\n  sectionVisibility: {\n    hero: true,\n    about: true,\n    services: true,\n    recentWork: true,\n    photosMedia: true,\n    testimonials: true,\n    packages: true,\n    customSections: true,\n  },\n};\n\nconst vendorManagementSlice = createSlice({\n  name: 'vendorManagement',\n  initialState,\n  reducers: {\n    setEditingVendor: (state, action) => {\n      const vendorId = action.payload;\n      let vendor = state.vendors.find(v => v.id === vendorId);\n\n      // If vendor is not found in Redux state, we'll initialize with null\n      // and let the component handle fetching from the dummy data\n      if (!vendor) {\n        console.warn(`Vendor with id ${vendorId} not found in Redux state`);\n        state.editingVendor = null;\n        state.originalVendor = null;\n      } else {\n        state.editingVendor = { ...vendor };\n        state.originalVendor = { ...vendor };\n      }\n\n      state.activeVendorId = vendorId;\n      state.changes = {};\n      state.hasUnsavedChanges = false;\n    },\n\n    updateVendorField: (state, action) => {\n      const { field, value } = action.payload;\n      if (state.editingVendor) {\n        state.editingVendor[field] = value;\n        state.changes[field] = {\n          old: state.originalVendor[field],\n          new: value,\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    updateVendorImage: (state, action) => {\n      const { field, url } = action.payload;\n      if (state.editingVendor) {\n        state.editingVendor[field] = url;\n        state.changes[field] = {\n          old: state.originalVendor[field],\n          new: url,\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    updateVendorGallery: (state, action) => {\n      if (state.editingVendor) {\n        state.editingVendor.gallery = action.payload;\n        state.changes.gallery = {\n          old: state.originalVendor.gallery,\n          new: action.payload,\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    updateServices: (state, action) => {\n      if (state.editingVendor) {\n        state.editingVendor.services = action.payload;\n        state.changes.services = {\n          old: state.originalVendor.services,\n          new: action.payload,\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    updateTestimonials: (state, action) => {\n      if (state.editingVendor) {\n        state.editingVendor.testimonials = action.payload;\n        state.changes.testimonials = {\n          old: state.originalVendor.testimonials,\n          new: action.payload,\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    updatePackages: (state, action) => {\n      if (state.editingVendor) {\n        state.editingVendor.packages = action.payload;\n        state.changes.packages = {\n          old: state.originalVendor.packages,\n          new: action.payload,\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    updateRecentWork: (state, action) => {\n      if (state.editingVendor) {\n        state.editingVendor.locationPortfolio = action.payload;\n        state.changes.locationPortfolio = {\n          old: state.originalVendor.locationPortfolio,\n          new: action.payload,\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    updateCustomSections: (state, action) => {\n      if (state.editingVendor) {\n        state.editingVendor.customSections = action.payload;\n        state.changes.customSections = {\n          old: state.originalVendor.customSections || [],\n          new: action.payload,\n        };\n        state.hasUnsavedChanges = true;\n      }\n    },\n\n    saveChanges: state => {\n      if (state.editingVendor && state.hasUnsavedChanges) {\n        const vendorIndex = state.vendors.findIndex(\n          v => v.id === state.editingVendor.id\n        );\n        if (vendorIndex !== -1) {\n          state.vendors[vendorIndex] = { ...state.editingVendor };\n        }\n        state.originalVendor = { ...state.editingVendor };\n        state.changes = {};\n        state.hasUnsavedChanges = false;\n      }\n    },\n\n    discardChanges: state => {\n      if (state.originalVendor) {\n        state.editingVendor = { ...state.originalVendor };\n        state.changes = {};\n        state.hasUnsavedChanges = false;\n      }\n    },\n\n    initializeVendor: (state, action) => {\n      const vendor = action.payload;\n      const existingVendor = state.vendors.find(v => v.id === vendor.id);\n\n      if (!existingVendor) {\n        state.vendors.push(vendor);\n      }\n    },\n\n    clearEditingVendor: state => {\n      state.editingVendor = null;\n      state.originalVendor = null;\n      state.changes = {};\n      state.hasUnsavedChanges = false;\n      state.activeVendorId = null;\n    },\n\n    toggleSectionVisibility: (state, action) => {\n      const { section } = action.payload;\n      state.sectionVisibility[section] = !state.sectionVisibility[section];\n\n      // Also update the editing vendor's sectionVisibility\n      if (state.editingVendor) {\n        if (!state.editingVendor.sectionVisibility) {\n          state.editingVendor.sectionVisibility = {\n            ...state.sectionVisibility,\n          };\n        }\n        state.editingVendor.sectionVisibility[section] =\n          state.sectionVisibility[section];\n        state.changes.sectionVisibility = {\n          old: state.originalVendor?.sectionVisibility || {},\n          new: state.editingVendor.sectionVisibility,\n        };\n      }\n\n      state.hasUnsavedChanges = true;\n    },\n  },\n});\n\nexport const {\n  setEditingVendor,\n  initializeVendor,\n  updateVendorField,\n  updateVendorImage,\n  updateVendorGallery,\n  updateServices,\n  updateTestimonials,\n  updatePackages,\n  updateRecentWork,\n  updateCustomSections,\n  saveChanges,\n  discardChanges,\n  clearEditingVendor,\n  toggleSectionVisibility,\n} = vendorManagementSlice.actions;\n\nexport default vendorManagementSlice.reducer;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/styles/GlobalStyle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/utils/businessAPI.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":31,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":31,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[833,903],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":42,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":42,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1139,1244],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":53,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":53,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1382,1447],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":66,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":66,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1844,1945],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":83,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":83,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2228,2336],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":94,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":94,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2477,2542],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":110,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":110,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2960,3062],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":131,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":131,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3533,3607],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":139,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":139,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[3743,3807],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":157,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":157,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4287,4408],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":175,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":175,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4738,4859],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":186,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":186,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[5024,5088],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":198,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":198,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5446,5520],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":208,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":208,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5779,5884],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":219,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":219,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[6033,6107],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":231,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":231,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6438,6504],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":269,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":269,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[7303,7366],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":273,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":273,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[7473,7540],"text":""},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Fake API service to simulate API calls for business data\n// This mimics what would be real API calls to a backend service\n\nimport {\n  getBusinessWebsiteData,\n  updateBusinessWebsiteData,\n} from '../DummyData/businessWebsiteData';\n\n// Simulate network delay for realistic API behavior\nconst simulateDelay = (ms = 500) => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\n\n// Simulate API response structure\nconst createAPIResponse = (data, success = true, message = '') => {\n  return {\n    success,\n    data,\n    message,\n    timestamp: new Date().toISOString(),\n  };\n};\n\n/**\n * Fake API to fetch business website data\n * @param {string} businessSlug - The business slug/identifier\n * @returns {Promise} - Promise that resolves to business data\n */\nexport const fetchBusinessData = async businessSlug => {\n  try {\n    console.log(`[FAKE API] Fetching business data for: ${businessSlug}`);\n\n    // Simulate network delay\n    await simulateDelay(300);\n\n    const businessData = getBusinessWebsiteData(businessSlug);\n\n    if (!businessData) {\n      throw new Error(`Business with slug \"${businessSlug}\" not found`);\n    }\n\n    console.log(\n      `[FAKE API] Successfully fetched data for: ${businessSlug}`,\n      businessData\n    );\n\n    return createAPIResponse(\n      businessData,\n      true,\n      'Business data fetched successfully'\n    );\n  } catch (error) {\n    console.error(`[FAKE API] Error fetching business data:`, error);\n    return createAPIResponse(null, false, error.message);\n  }\n};\n\n/**\n * Fake API to update business website data\n * @param {string} businessSlug - The business slug/identifier\n * @param {object} updatedData - The updated business data\n * @returns {Promise} - Promise that resolves to updated business data\n */\nexport const updateBusinessData = async (businessSlug, updatedData) => {\n  try {\n    console.log(\n      `[FAKE API] Updating business data for: ${businessSlug}`,\n      updatedData\n    );\n\n    // Simulate network delay\n    await simulateDelay(400);\n\n    const updatedBusiness = updateBusinessWebsiteData(\n      businessSlug,\n      updatedData\n    );\n\n    if (!updatedBusiness) {\n      throw new Error(`Failed to update business with slug \"${businessSlug}\"`);\n    }\n\n    console.log(\n      `[FAKE API] Successfully updated data for: ${businessSlug}`,\n      updatedBusiness\n    );\n\n    return createAPIResponse(\n      updatedBusiness,\n      true,\n      'Business data updated successfully'\n    );\n  } catch (error) {\n    console.error(`[FAKE API] Error updating business data:`, error);\n    return createAPIResponse(null, false, error.message);\n  }\n};\n\n/**\n * Fake API to fetch business sections data\n * @param {string} businessSlug - The business slug/identifier\n * @param {string} sectionName - The specific section to fetch (optional)\n * @returns {Promise} - Promise that resolves to section data\n */\nexport const fetchBusinessSection = async (\n  businessSlug,\n  sectionName = null\n) => {\n  try {\n    console.log(\n      `[FAKE API] Fetching section \"${sectionName}\" for business: ${businessSlug}`\n    );\n\n    // Simulate network delay\n    await simulateDelay(200);\n\n    const businessData = getBusinessWebsiteData(businessSlug);\n\n    if (!businessData) {\n      throw new Error(`Business with slug \"${businessSlug}\" not found`);\n    }\n\n    const sectionData = sectionName ? businessData[sectionName] : businessData;\n\n    if (sectionName && !sectionData) {\n      throw new Error(\n        `Section \"${sectionName}\" not found for business \"${businessSlug}\"`\n      );\n    }\n\n    console.log(`[FAKE API] Successfully fetched section data:`, sectionData);\n\n    return createAPIResponse(\n      sectionData,\n      true,\n      `Section data fetched successfully`\n    );\n  } catch (error) {\n    console.error(`[FAKE API] Error fetching section data:`, error);\n    return createAPIResponse(null, false, error.message);\n  }\n};\n\n/**\n * Fake API to update a specific business section\n * @param {string} businessSlug - The business slug/identifier\n * @param {string} sectionName - The section to update\n * @param {object} sectionData - The updated section data\n * @returns {Promise} - Promise that resolves to updated section data\n */\nexport const updateBusinessSection = async (\n  businessSlug,\n  sectionName,\n  sectionData\n) => {\n  try {\n    console.log(\n      `[FAKE API] Updating section \"${sectionName}\" for business: ${businessSlug}`,\n      sectionData\n    );\n\n    // Simulate network delay\n    await simulateDelay(350);\n\n    const updatedBusiness = updateBusinessWebsiteData(businessSlug, {\n      [sectionName]: sectionData,\n    });\n\n    if (!updatedBusiness) {\n      throw new Error(\n        `Failed to update section \"${sectionName}\" for business \"${businessSlug}\"`\n      );\n    }\n\n    console.log(\n      `[FAKE API] Successfully updated section \"${sectionName}\":`,\n      updatedBusiness[sectionName]\n    );\n\n    return createAPIResponse(\n      updatedBusiness[sectionName],\n      true,\n      `Section \"${sectionName}\" updated successfully`\n    );\n  } catch (error) {\n    console.error(`[FAKE API] Error updating section data:`, error);\n    return createAPIResponse(null, false, error.message);\n  }\n};\n\n/**\n * Fake API to fetch multiple business data (for admin dashboard)\n * @param {array} businessSlugs - Array of business slugs to fetch\n * @returns {Promise} - Promise that resolves to array of business data\n */\nexport const fetchMultipleBusinessData = async businessSlugs => {\n  try {\n    console.log(`[FAKE API] Fetching multiple business data:`, businessSlugs);\n\n    // Simulate network delay\n    await simulateDelay(600);\n\n    const businessesData = businessSlugs.map(slug => {\n      const data = getBusinessWebsiteData(slug);\n      return data ? { slug, data } : { slug, data: null, error: 'Not found' };\n    });\n\n    console.log(\n      `[FAKE API] Successfully fetched multiple business data:`,\n      businessesData\n    );\n\n    return createAPIResponse(\n      businessesData,\n      true,\n      'Multiple business data fetched successfully'\n    );\n  } catch (error) {\n    console.error(`[FAKE API] Error fetching multiple business data:`, error);\n    return createAPIResponse(null, false, error.message);\n  }\n};\n\n/**\n * Fake API to validate business data before saving\n * @param {object} businessData - The business data to validate\n * @returns {Promise} - Promise that resolves to validation results\n */\nexport const validateBusinessData = async businessData => {\n  try {\n    console.log(`[FAKE API] Validating business data:`, businessData);\n\n    // Simulate network delay\n    await simulateDelay(150);\n\n    const errors = [];\n    const warnings = [];\n\n    // Basic validation rules\n    if (!businessData.hero?.title) {\n      errors.push('Hero title is required');\n    }\n\n    if (!businessData.about?.description) {\n      errors.push('About description is required');\n    }\n\n    if (!businessData.contact?.email) {\n      warnings.push('Contact email is missing');\n    }\n\n    if (!businessData.contact?.phone) {\n      warnings.push('Contact phone is missing');\n    }\n\n    if (businessData.services?.length === 0) {\n      warnings.push('No services defined');\n    }\n\n    const isValid = errors.length === 0;\n\n    const validationResult = {\n      isValid,\n      errors,\n      warnings,\n      validatedAt: new Date().toISOString(),\n    };\n\n    console.log(`[FAKE API] Validation result:`, validationResult);\n\n    return createAPIResponse(validationResult, true, 'Business data validated');\n  } catch (error) {\n    console.error(`[FAKE API] Error validating business data:`, error);\n    return createAPIResponse(null, false, error.message);\n  }\n};\n\n/**\n * Utility function to check if API is available (for loading states)\n * @returns {Promise} - Promise that resolves to API status\n */\nexport const checkAPIStatus = async () => {\n  try {\n    // Simulate API health check\n    await simulateDelay(100);\n\n    return createAPIResponse(\n      { status: 'healthy', uptime: '99.9%' },\n      true,\n      'API is available'\n    );\n  } catch (error) {\n    return createAPIResponse(null, false, 'API is unavailable');\n  }\n};\n\n// Export an object with all API methods for easier importing\nexport const BusinessAPI = {\n  fetchBusinessData,\n  updateBusinessData,\n  fetchBusinessSection,\n  updateBusinessSection,\n  fetchMultipleBusinessData,\n  validateBusinessData,\n  checkAPIStatus,\n};\n\n// Default export\nexport default BusinessAPI;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/utils/location.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used. Allowed unused args must match /^_/u.","line":18,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":18,"endColumn":12}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Location utilities for getting user location and searching\n\nexport const getCurrentLocation = () => {\n  return new Promise((resolve, reject) => {\n    if (!navigator.geolocation) {\n      reject(new Error('Geolocation is not supported by this browser.'));\n      return;\n    }\n\n    navigator.geolocation.getCurrentPosition(\n      position => {\n        resolve({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n          accuracy: position.coords.accuracy,\n        });\n      },\n      error => {\n        // Fallback to default location (San Francisco)\n\n        resolve({\n          lat: 37.7749,\n          lng: -122.4194,\n          accuracy: null,\n          isDefault: true,\n        });\n      },\n      {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 300000, // 5 minutes\n      }\n    );\n  });\n};\n\nexport const getLocationFromZip = async zipCode => {\n  // Mock implementation - in a real app, you'd use a geocoding API\n  const zipToLocation = {\n    94102: { city: 'San Francisco', state: 'CA', lat: 37.7749, lng: -122.4194 },\n    94103: { city: 'San Francisco', state: 'CA', lat: 37.7849, lng: -122.4094 },\n    94104: { city: 'San Francisco', state: 'CA', lat: 37.7749, lng: -122.4194 },\n    94105: { city: 'San Francisco', state: 'CA', lat: 37.7949, lng: -122.3994 },\n    94106: { city: 'San Francisco', state: 'CA', lat: 37.7649, lng: -122.4294 },\n    94107: { city: 'San Francisco', state: 'CA', lat: 37.7649, lng: -122.4294 },\n    10001: { city: 'New York', state: 'NY', lat: 40.7128, lng: -74.006 },\n    90210: { city: 'Los Angeles', state: 'CA', lat: 34.0522, lng: -118.2437 },\n    60601: { city: 'Chicago', state: 'IL', lat: 41.8781, lng: -87.6298 },\n    33101: { city: 'Miami', state: 'FL', lat: 25.7617, lng: -80.1918 },\n  };\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const location = zipToLocation[zipCode];\n      if (location) {\n        resolve(location);\n      } else {\n        reject(new Error('Zip code not found'));\n      }\n    }, 500); // Simulate API delay\n  });\n};\n\nexport const searchLocationByCity = async cityName => {\n  // Mock implementation - in a real app, you'd use a geocoding API\n  const cityToLocation = {\n    'san francisco': {\n      city: 'San Francisco',\n      state: 'CA',\n      lat: 37.7749,\n      lng: -122.4194,\n    },\n    'new york': { city: 'New York', state: 'NY', lat: 40.7128, lng: -74.006 },\n    'los angeles': {\n      city: 'Los Angeles',\n      state: 'CA',\n      lat: 34.0522,\n      lng: -118.2437,\n    },\n    chicago: { city: 'Chicago', state: 'IL', lat: 41.8781, lng: -87.6298 },\n    miami: { city: 'Miami', state: 'FL', lat: 25.7617, lng: -80.1918 },\n    seattle: { city: 'Seattle', state: 'WA', lat: 47.6062, lng: -122.3321 },\n    denver: { city: 'Denver', state: 'CO', lat: 39.7392, lng: -104.9903 },\n  };\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const location = cityToLocation[cityName.toLowerCase()];\n      if (location) {\n        resolve(location);\n      } else {\n        reject(new Error('City not found'));\n      }\n    }, 500); // Simulate API delay\n  });\n};\n\nexport const calculateDistance = (lat1, lng1, lat2, lng2) => {\n  const R = 3959; // Radius of the Earth in miles\n  const dLat = ((lat2 - lat1) * Math.PI) / 180;\n  const dLng = ((lng2 - lng1) * Math.PI) / 180;\n  const a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos((lat1 * Math.PI) / 180) *\n      Math.cos((lat2 * Math.PI) / 180) *\n      Math.sin(dLng / 2) *\n      Math.sin(dLng / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  const distance = R * c; // Distance in miles\n  return Math.round(distance * 10) / 10; // Round to 1 decimal place\n};\n\nexport const updateVendorsWithDistance = (vendors, userLocation) => {\n  return vendors\n    .map(vendor => ({\n      ...vendor,\n      distance: calculateDistance(\n        userLocation.lat,\n        userLocation.lng,\n        vendor.coordinates.lat,\n        vendor.coordinates.lng\n      ),\n    }))\n    .sort((a, b) => a.distance - b.distance);\n};\n\nexport const getDefaultLocation = () => ({\n  city: 'San Francisco',\n  state: 'CA',\n  lat: 37.7749,\n  lng: -122.4194,\n  isDefault: true,\n});\n\n// Utility function to generate URL-friendly slugs from text\nexport const generateSlug = text => {\n  return text\n    .toLowerCase()\n    .trim()\n    .replace(/[\\s\\W-]+/g, '-') // Replace spaces and special characters with hyphens\n    .replace(/^-+|-+$/g, ''); // Remove leading/trailing hyphens\n};\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/utils/security.js","messages":[{"ruleId":"no-useless-escape","severity":1,"message":"Unnecessary escape character: \\+.","line":38,"column":25,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":38,"endColumn":26,"suggestions":[{"messageId":"removeEscape","fix":{"range":[757,758],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[757,757],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":1,"message":"Unnecessary escape character: \\(.","line":39,"column":46,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":39,"endColumn":47,"suggestions":[{"messageId":"removeEscape","fix":{"range":[825,826],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[825,825],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":1,"message":"Unnecessary escape character: \\).","line":39,"column":48,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":39,"endColumn":49,"suggestions":[{"messageId":"removeEscape","fix":{"range":[827,828],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[827,827],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'properties' is assigned a value but never used.","line":356,"column":27,"nodeType":"Identifier","messageId":"unusedVar","endLine":356,"endColumn":37},{"ruleId":"no-unused-vars","severity":1,"message":"'enquiryData' is defined but never used. Allowed unused args must match /^_/u.","line":372,"column":29,"nodeType":"Identifier","messageId":"unusedVar","endLine":372,"endColumn":40},{"ruleId":"import/no-anonymous-default-export","severity":1,"message":"Assign object to a variable before exporting as module default","line":389,"column":1,"nodeType":"ExportDefaultDeclaration","endLine":404,"endColumn":3}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Security utilities for production-ready ecommerce\n\n/**\n * Sanitize HTML content to prevent XSS attacks\n */\nexport const sanitizeHtml = html => {\n  const div = document.createElement('div');\n  div.textContent = html;\n  return div.innerHTML;\n};\n\n/**\n * Escape special characters in strings\n */\nexport const escapeHtml = text => {\n  const map = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#039;',\n  };\n  return text.replace(/[&<>\"']/g, m => map[m]);\n};\n\n/**\n * Validate email format\n */\nexport const isValidEmail = email => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\n/**\n * Validate phone number format\n */\nexport const isValidPhone = phone => {\n  const phoneRegex = /^[\\+]?[1-9][\\d]{0,15}$/;\n  return phoneRegex.test(phone.replace(/[\\s\\-\\(\\)]/g, ''));\n};\n\n/**\n * Validate URL format\n */\nexport const isValidUrl = url => {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n};\n\n/**\n * Generate secure random string\n */\nexport const generateSecureId = (length = 16) => {\n  const chars =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let result = '';\n  for (let i = 0; i < length; i++) {\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return result;\n};\n\n/**\n * Rate limiting for API calls\n */\nclass RateLimiter {\n  constructor(maxRequests = 100, windowMs = 60000) {\n    this.maxRequests = maxRequests;\n    this.windowMs = windowMs;\n    this.requests = new Map();\n  }\n\n  isAllowed(identifier) {\n    const now = Date.now();\n    const windowStart = now - this.windowMs;\n\n    if (!this.requests.has(identifier)) {\n      this.requests.set(identifier, []);\n    }\n\n    const userRequests = this.requests.get(identifier);\n\n    // Remove old requests outside the window\n    const recentRequests = userRequests.filter(time => time > windowStart);\n    this.requests.set(identifier, recentRequests);\n\n    if (recentRequests.length >= this.maxRequests) {\n      return false;\n    }\n\n    recentRequests.push(now);\n    return true;\n  }\n}\n\nexport const rateLimiter = new RateLimiter();\n\n/**\n * Content Security Policy headers\n */\nexport const getCSPHeaders = () => {\n  return {\n    'Content-Security-Policy': [\n      \"default-src 'self'\",\n      \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://apis.google.com\",\n      \"style-src 'self' 'unsafe-inline' https://fonts.googleapis.com\",\n      \"img-src 'self' data: https: blob:\",\n      \"font-src 'self' https://fonts.gstatic.com\",\n      \"connect-src 'self' https://api.unsplash.com https://images.unsplash.com\",\n      \"frame-src 'self' https://www.google.com\",\n      \"object-src 'none'\",\n      \"base-uri 'self'\",\n      \"form-action 'self'\",\n    ].join('; '),\n  };\n};\n\n/**\n * Input validation utilities\n */\nexport const validators = {\n  required: (value, fieldName = 'Field') => {\n    if (!value || (typeof value === 'string' && !value.trim())) {\n      return `${fieldName} is required`;\n    }\n    return null;\n  },\n\n  minLength: (value, min, fieldName = 'Field') => {\n    if (value && value.length < min) {\n      return `${fieldName} must be at least ${min} characters`;\n    }\n    return null;\n  },\n\n  maxLength: (value, max, fieldName = 'Field') => {\n    if (value && value.length > max) {\n      return `${fieldName} must not exceed ${max} characters`;\n    }\n    return null;\n  },\n\n  email: value => {\n    if (value && !isValidEmail(value)) {\n      return 'Please enter a valid email address';\n    }\n    return null;\n  },\n\n  phone: value => {\n    if (value && !isValidPhone(value)) {\n      return 'Please enter a valid phone number';\n    }\n    return null;\n  },\n\n  url: value => {\n    if (value && !isValidUrl(value)) {\n      return 'Please enter a valid URL';\n    }\n    return null;\n  },\n\n  price: value => {\n    const price = parseFloat(value);\n    if (isNaN(price) || price < 0) {\n      return 'Please enter a valid price';\n    }\n    return null;\n  },\n\n  positiveInteger: (value, fieldName = 'Field') => {\n    const num = parseInt(value);\n    if (isNaN(num) || num < 0) {\n      return `${fieldName} must be a positive number`;\n    }\n    return null;\n  },\n};\n\n/**\n * Validate form data against schema\n */\nexport const validateForm = (data, schema) => {\n  const errors = {};\n\n  for (const [field, rules] of Object.entries(schema)) {\n    const value = data[field];\n\n    for (const rule of rules) {\n      const error = rule(value, field);\n      if (error) {\n        errors[field] = error;\n        break; // Stop at first error for this field\n      }\n    }\n  }\n\n  return {\n    isValid: Object.keys(errors).length === 0,\n    errors,\n  };\n};\n\n/**\n * Common validation schemas\n */\nexport const validationSchemas = {\n  userRegistration: {\n    name: [\n      value => validators.required(value, 'Name'),\n      value => validators.minLength(value, 2, 'Name'),\n      value => validators.maxLength(value, 50, 'Name'),\n    ],\n    email: [\n      value => validators.required(value, 'Email'),\n      value => validators.email(value),\n    ],\n    phone: [\n      value => validators.required(value, 'Phone'),\n      value => validators.phone(value),\n    ],\n    password: [\n      value => validators.required(value, 'Password'),\n      value => validators.minLength(value, 6, 'Password'),\n    ],\n  },\n\n  productEnquiry: {\n    name: [\n      value => validators.required(value, 'Name'),\n      value => validators.minLength(value, 2, 'Name'),\n    ],\n    email: [\n      value => validators.required(value, 'Email'),\n      value => validators.email(value),\n    ],\n    phone: [\n      value => validators.required(value, 'Phone'),\n      value => validators.phone(value),\n    ],\n    message: [value => validators.maxLength(value, 1000, 'Message')],\n  },\n\n  productCreation: {\n    name: [\n      value => validators.required(value, 'Product name'),\n      value => validators.minLength(value, 3, 'Product name'),\n      value => validators.maxLength(value, 100, 'Product name'),\n    ],\n    description: [\n      value => validators.required(value, 'Description'),\n      value => validators.minLength(value, 10, 'Description'),\n      value => validators.maxLength(value, 2000, 'Description'),\n    ],\n    price: [\n      value => validators.required(value, 'Price'),\n      value => validators.price(value),\n    ],\n    stock: [\n      value => validators.required(value, 'Stock'),\n      value => validators.positiveInteger(value, 'Stock'),\n    ],\n  },\n};\n\n/**\n * Secure localStorage wrapper\n */\nexport const secureStorage = {\n  set: (key, value) => {\n    try {\n      const serialized = JSON.stringify({\n        data: value,\n        timestamp: Date.now(),\n        checksum: btoa(JSON.stringify(value)).slice(0, 10),\n      });\n      localStorage.setItem(key, serialized);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  },\n\n  get: key => {\n    try {\n      const serialized = localStorage.getItem(key);\n      if (!serialized) return null;\n\n      const parsed = JSON.parse(serialized);\n      const expectedChecksum = btoa(JSON.stringify(parsed.data)).slice(0, 10);\n\n      if (parsed.checksum !== expectedChecksum) {\n        localStorage.removeItem(key);\n        return null;\n      }\n\n      return parsed.data;\n    } catch (error) {\n      localStorage.removeItem(key);\n      return null;\n    }\n  },\n\n  remove: key => {\n    localStorage.removeItem(key);\n  },\n\n  clear: () => {\n    localStorage.clear();\n  },\n};\n\n/**\n * Privacy utilities\n */\nexport const privacy = {\n  maskEmail: email => {\n    const [username, domain] = email.split('@');\n    const maskedUsername =\n      username.slice(0, 2) + '*'.repeat(username.length - 2);\n    return `${maskedUsername}@${domain}`;\n  },\n\n  maskPhone: phone => {\n    const cleaned = phone.replace(/\\D/g, '');\n    if (cleaned.length >= 10) {\n      return (\n        cleaned.slice(0, 3) + '*'.repeat(cleaned.length - 6) + cleaned.slice(-3)\n      );\n    }\n    return phone;\n  },\n\n  generateUserHash: userData => {\n    // Simple hash for user identification without exposing PII\n    const str = `${userData.email}${userData.id}${Date.now()}`;\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = (hash << 5) - hash + char;\n      hash = hash & hash; // Convert to 32-bit integer\n    }\n    return Math.abs(hash).toString(36);\n  },\n};\n\n/**\n * Analytics and tracking utilities (privacy-focused)\n */\nexport const analytics = {\n  trackEvent: (eventName, properties = {}) => {\n    // In production, integrate with privacy-focused analytics\n    if (process.env.NODE_ENV === 'development') {\n    }\n\n    // Example: Send to analytics service with user consent\n    const hasConsent = secureStorage.get('analytics_consent');\n    if (hasConsent) {\n      // Send to analytics service\n    }\n  },\n\n  trackPageView: page => {\n    analytics.trackEvent('page_view', { page });\n  },\n\n  trackEnquiry: (productId, enquiryData) => {\n    analytics.trackEvent('enquiry_submitted', {\n      product_id: productId,\n      enquiry_type: 'product_interest',\n      // Don't track PII\n      timestamp: Date.now(),\n    });\n  },\n\n  trackProductView: productId => {\n    analytics.trackEvent('product_viewed', {\n      product_id: productId,\n      timestamp: Date.now(),\n    });\n  },\n};\n\nexport default {\n  sanitizeHtml,\n  escapeHtml,\n  isValidEmail,\n  isValidPhone,\n  isValidUrl,\n  generateSecureId,\n  rateLimiter,\n  getCSPHeaders,\n  validators,\n  validateForm,\n  validationSchemas,\n  secureStorage,\n  privacy,\n  analytics,\n};\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/utils/testDataConsistency.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":11,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":11,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[424,476],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":25,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":25,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[768,815],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":32,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":32,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1027,1084],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":44,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":44,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1499,1562],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":51,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":51,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1785,1847],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":73,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":73,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2486,2551],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":75,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":75,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2583,2701],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":86,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":86,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2939,3040],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":97,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":97,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3292,3357],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":108,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":108,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3587,3636],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":114,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":114,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3796,3861],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":116,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":116,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3881,3941],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":120,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":120,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3974,4016],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":121,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":121,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4021,4049],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":122,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":122,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4054,4146],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":125,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":125,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4151,4294],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":128,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":128,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4299,4479],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":131,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":131,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4484,4536],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":134,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":134,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4585,4618],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":136,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":136,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4671,4764],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":144,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":144,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[4830,4875],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":158,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":158,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5142,5194],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":162,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":162,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5260,5328],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":166,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":166,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5433,5500],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":168,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":168,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5520,5580],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":172,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":172,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5643,5705],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":176,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":176,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5816,5877],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":178,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":178,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5897,5951],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":188,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":188,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6232,6283],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":190,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":190,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6307,6353],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":195,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":195,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6421,6485],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":199,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":199,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6594,6652],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":201,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":201,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6672,6723],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":204,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":204,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6735,6793],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":206,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":206,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[6818,6878],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":216,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":216,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[7163,7215],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":217,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":217,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[7218,7264],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":218,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":218,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[7267,7316],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"import/no-anonymous-default-export","severity":1,"message":"Assign object to a variable before exporting as module default","line":221,"column":1,"nodeType":"ExportDefaultDeclaration","endLine":224,"endColumn":3}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Test script to verify that both pages use the same data source\n// This simulates the API calls that both pages make to ensure data consistency\n\nimport { fetchBusinessData } from './businessAPI';\nimport { getBusinessWebsiteData } from '../DummyData/businessWebsiteData';\n\n/**\n * Test function to verify data consistency between BusinessWebsitePage and AdminDashboard\n */\nexport const testDataConsistency = async () => {\n  console.log('🧪 Starting data consistency test...');\n\n  const testResults = {\n    apiTests: [],\n    dataConsistencyTests: [],\n    errors: [],\n    success: true,\n  };\n\n  // Test data for different business types\n  const businessTypes = ['salon', 'gym', 'restaurant', 'freelancer'];\n\n  try {\n    for (const businessType of businessTypes) {\n      console.log(`\\n📋 Testing ${businessType}...`);\n\n      // Test 1: Verify API call returns expected data structure\n      try {\n        const apiResponse = await fetchBusinessData(businessType);\n\n        if (apiResponse.success && apiResponse.data) {\n          console.log(`✅ API call successful for ${businessType}`);\n          testResults.apiTests.push({\n            businessType,\n            status: 'success',\n            message: 'API call returned valid data',\n          });\n\n          // Test 2: Verify data structure consistency\n          const apiData = apiResponse.data;\n          const directData = getBusinessWebsiteData(businessType);\n\n          if (JSON.stringify(apiData) === JSON.stringify(directData)) {\n            console.log(`✅ Data consistency verified for ${businessType}`);\n            testResults.dataConsistencyTests.push({\n              businessType,\n              status: 'success',\n              message: 'API data matches direct data access',\n            });\n          } else {\n            console.log(`❌ Data inconsistency found for ${businessType}`);\n            testResults.dataConsistencyTests.push({\n              businessType,\n              status: 'error',\n              message: 'API data does not match direct data access',\n            });\n            testResults.success = false;\n          }\n\n          // Test 3: Verify required fields are present\n          const requiredFields = [\n            'id',\n            'name',\n            'slug',\n            'hero',\n            'about',\n            'services',\n            'contact',\n          ];\n          const missingFields = requiredFields.filter(field => !apiData[field]);\n\n          if (missingFields.length === 0) {\n            console.log(`✅ All required fields present for ${businessType}`);\n          } else {\n            console.log(\n              `❌ Missing required fields for ${businessType}: ${missingFields.join(', ')}`\n            );\n            testResults.errors.push({\n              businessType,\n              type: 'missing_fields',\n              fields: missingFields,\n            });\n            testResults.success = false;\n          }\n        } else {\n          console.log(\n            `❌ API call failed for ${businessType}: ${apiResponse.message}`\n          );\n          testResults.apiTests.push({\n            businessType,\n            status: 'error',\n            message: apiResponse.message || 'API call failed',\n          });\n          testResults.success = false;\n        }\n      } catch (error) {\n        console.log(`❌ Error testing ${businessType}: ${error.message}`);\n        testResults.errors.push({\n          businessType,\n          type: 'exception',\n          message: error.message,\n        });\n        testResults.success = false;\n      }\n    }\n\n    // Test 4: Verify API response time\n    console.log('\\n⏱️ Testing API response time...');\n    const startTime = Date.now();\n    await fetchBusinessData('salon');\n    const responseTime = Date.now() - startTime;\n\n    if (responseTime < 1000) {\n      console.log(`✅ API response time acceptable: ${responseTime}ms`);\n    } else {\n      console.log(`⚠️ API response time slow: ${responseTime}ms`);\n    }\n\n    // Final results\n    console.log('\\n📊 Test Results Summary:');\n    console.log('='.repeat(50));\n    console.log(\n      `Overall Status: ${testResults.success ? '✅ PASSED' : '❌ FAILED'}`\n    );\n    console.log(\n      `API Tests: ${testResults.apiTests.filter(t => t.status === 'success').length}/${testResults.apiTests.length} passed`\n    );\n    console.log(\n      `Data Consistency Tests: ${testResults.dataConsistencyTests.filter(t => t.status === 'success').length}/${testResults.dataConsistencyTests.length} passed`\n    );\n    console.log(`Errors: ${testResults.errors.length}`);\n\n    if (testResults.errors.length > 0) {\n      console.log('\\n❌ Errors found:');\n      testResults.errors.forEach(error => {\n        console.log(\n          `  - ${error.businessType}: ${error.message || error.type}`\n        );\n      });\n    }\n\n    return testResults;\n  } catch (error) {\n    console.error('❌ Test suite failed:', error);\n    testResults.success = false;\n    testResults.errors.push({\n      type: 'test_suite_error',\n      message: error.message,\n    });\n    return testResults;\n  }\n};\n\n/**\n * Simulate real-world usage scenarios\n */\nexport const testRealWorldScenarios = async () => {\n  console.log('\\n🌍 Testing real-world scenarios...');\n\n  try {\n    // Scenario 1: Business Website Page loads data\n    console.log('📱 Scenario 1: Business Website Page data loading...');\n    const websitePageData = await fetchBusinessData('salon');\n\n    if (websitePageData.success) {\n      console.log('✅ Business Website Page can fetch data successfully');\n    } else {\n      console.log('❌ Business Website Page failed to fetch data');\n    }\n\n    // Scenario 2: Admin Dashboard loads same data\n    console.log('🔧 Scenario 2: Admin Dashboard data loading...');\n    const adminDashboardData = await fetchBusinessData('salon');\n\n    if (adminDashboardData.success) {\n      console.log('✅ Admin Dashboard can fetch data successfully');\n    } else {\n      console.log('❌ Admin Dashboard failed to fetch data');\n    }\n\n    // Scenario 3: Data consistency between pages\n    if (websitePageData.success && adminDashboardData.success) {\n      const dataMatches =\n        JSON.stringify(websitePageData.data) ===\n        JSON.stringify(adminDashboardData.data);\n\n      if (dataMatches) {\n        console.log('✅ Both pages receive identical data');\n      } else {\n        console.log('❌ Pages receive different data');\n      }\n    }\n\n    // Scenario 4: Handle invalid business type\n    console.log('🚫 Scenario 4: Invalid business type handling...');\n    const invalidData = await fetchBusinessData('invalid-business');\n\n    if (!invalidData.success) {\n      console.log('✅ Invalid business type handled gracefully');\n    } else {\n      console.log('❌ Invalid business type should fail');\n    }\n\n    console.log('\\n✅ Real-world scenarios testing completed');\n  } catch (error) {\n    console.error('❌ Real-world scenarios test failed:', error);\n  }\n};\n\n// Run tests if called directly\nif (typeof window !== 'undefined' && window.location?.pathname) {\n  // Browser environment - tests can be run from browser console\n  window.testDataConsistency = testDataConsistency;\n  window.testRealWorldScenarios = testRealWorldScenarios;\n\n  console.log('🧪 Data consistency tests available:');\n  console.log('  - Run: testDataConsistency()');\n  console.log('  - Run: testRealWorldScenarios()');\n}\n\nexport default {\n  testDataConsistency,\n  testRealWorldScenarios,\n};\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/weddings/index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nimport VendorPage from './pages/VendorPage';\n\nconst WeddingModule = () => {\n  return <VendorPage />;\n};\n\nexport default WeddingModule;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/weddings/pages/BookingConfirmation.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":371,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":371,"endColumn":41}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaCheck,\n  FaCalendarAlt,\n  FaUser,\n  FaMapMarkerAlt,\n  FaPhoneAlt,\n  FaEnvelope,\n  FaRing,\n  FaHeart,\n  FaHome,\n  FaShare,\n  FaPrint,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport { getVendorById } from '../data/vendors';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n`;\n\nconst NavHeader = styled.div`\n  background: ${theme.colors.white};\n  box-shadow: ${theme.shadows.sm};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  position: sticky;\n  top: 0;\n  z-index: 100;\n`;\n\nconst NavContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.lg} ${theme.spacing.md};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Logo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n`;\n\nconst ActionButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'primary',\n})`\n  background: ${props =>\n    props.primary ? theme.colors.primary : theme.colors.white};\n  color: ${props =>\n    props.primary ? theme.colors.white : theme.colors.gray700};\n  border: 2px solid\n    ${props => (props.primary ? theme.colors.primary : theme.colors.gray200)};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    transform: translateY(-1px);\n    background: ${props =>\n      props.primary ? theme.colors.primaryDark : theme.colors.gray50};\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n`;\n\nconst ConfirmationCard = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  overflow: hidden;\n`;\n\nconst SuccessHeader = styled.div`\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.success} 0%,\n    ${theme.colors.primary} 100%\n  );\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xxl};\n  text-align: center;\n`;\n\nconst SuccessIcon = styled.div`\n  font-size: 4rem;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst SuccessTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst SuccessSubtitle = styled.p`\n  font-size: 1.2rem;\n  opacity: 0.9;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst BookingNumber = styled.div`\n  background: rgba(255, 255, 255, 0.2);\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  font-family: monospace;\n  font-size: 1.1rem;\n  font-weight: 600;\n  letter-spacing: 1px;\n`;\n\nconst ContentSection = styled.div`\n  padding: ${theme.spacing.xl};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.lg};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst InfoGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst InfoCard = styled.div`\n  background: ${theme.colors.gray50};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  border-left: 4px solid ${theme.colors.primary};\n`;\n\nconst InfoLabel = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst InfoValue = styled.div`\n  color: ${theme.colors.gray700};\n  font-size: 0.95rem;\n  line-height: 1.4;\n`;\n\nconst VendorCard = styled.div`\n  background: ${theme.colors.gray50};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst VendorHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst VendorImage = styled.img`\n  width: 80px;\n  height: 80px;\n  border-radius: ${theme.borderRadius.md};\n  object-fit: cover;\n`;\n\nconst VendorInfo = styled.div`\n  flex: 1;\n`;\n\nconst VendorName = styled.h3`\n  font-size: 1.3rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst VendorMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.xs};\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n`;\n\nconst MetaItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst NextStepsCard = styled.div`\n  background: ${theme.colors.info}10;\n  border: 2px solid ${theme.colors.info}30;\n  border-radius: ${theme.borderRadius.md};\n  padding: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst NextStepsTitle = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst StepsList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst StepItem = styled.li`\n  display: flex;\n  align-items: flex-start;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.md};\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst StepNumber = styled.div`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.8rem;\n  font-weight: 600;\n  flex-shrink: 0;\n  margin-top: 2px;\n`;\n\nconst StepText = styled.div`\n  color: ${theme.colors.gray700};\n  line-height: 1.4;\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst Button = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'primary' && prop !== 'outline',\n})`\n  background: ${props =>\n    props.primary\n      ? theme.colors.primary\n      : props.outline\n        ? theme.colors.white\n        : theme.colors.gray100};\n  color: ${props =>\n    props.primary\n      ? theme.colors.white\n      : props.outline\n        ? theme.colors.primary\n        : theme.colors.gray700};\n  border: 2px solid\n    ${props =>\n      props.primary\n        ? theme.colors.primary\n        : props.outline\n          ? theme.colors.primary\n          : theme.colors.gray200};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    transform: translateY(-1px);\n    background: ${props =>\n      props.primary\n        ? theme.colors.primaryDark\n        : props.outline\n          ? theme.colors.primary + '10'\n          : theme.colors.gray200};\n  }\n`;\n\nconst BookingConfirmation = () => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const [vendor, setVendor] = useState(null);\n  const [bookingDetails, setBookingDetails] = useState(null);\n\n  useEffect(() => {\n    const vendorId = searchParams.get('vendor');\n    const bookingId = searchParams.get('booking');\n\n    if (vendorId) {\n      const vendorData = getVendorById(vendorId);\n      setVendor(vendorData);\n    }\n\n    // Mock booking details - in real app this would come from API\n    setBookingDetails({\n      bookingNumber: bookingId || 'WED-' + Date.now().toString().slice(-6),\n      contactName: searchParams.get('name') || 'John & Sarah Doe',\n      email: searchParams.get('email') || 'john.sarah@example.com',\n      phone: searchParams.get('phone') || '+1 (555) 123-4567',\n      eventDate: searchParams.get('date') || '2024-06-15',\n      eventTime: searchParams.get('time') || '3:00 PM',\n      guestCount: searchParams.get('guests') || '150',\n      eventType: searchParams.get('type') || 'Wedding',\n      services: searchParams.get('services')?.split(',') || [\n        'Wedding Planning',\n        'Photography',\n      ],\n      message:\n        searchParams.get('message') ||\n        'Looking forward to making our special day perfect!',\n    });\n  }, [searchParams]);\n\n  const handlePrint = () => {\n    window.print();\n  };\n\n  const handleShare = () => {\n    if (navigator.share) {\n      navigator.share({\n        title: 'Wedding Booking Confirmation',\n        text: `Booking confirmed with ${vendor?.name}`,\n        url: window.location.href,\n      });\n    } else {\n      navigator.clipboard.writeText(window.location.href);\n      alert('Link copied to clipboard!');\n    }\n  };\n\n  if (!vendor || !bookingDetails) {\n    return (\n      <PageContainer>\n        <NavHeader>\n          <NavContent>\n            <Logo>\n              <FaRing /> Wedding Bookings\n            </Logo>\n            <ActionButton primary onClick={() => navigate('/weddings')}>\n              <FaHome />\n              Back to Vendors\n            </ActionButton>\n          </NavContent>\n        </NavHeader>\n        <Container>\n          <div style={{ textAlign: 'center', padding: '4rem' }}>\n            <h2>Loading confirmation...</h2>\n          </div>\n        </Container>\n      </PageContainer>\n    );\n  }\n\n  return (\n    <PageContainer>\n      <NavHeader>\n        <NavContent>\n          <Logo>\n            <FaRing /> Wedding Bookings\n          </Logo>\n          <ActionButtons>\n            <ActionButton onClick={handleShare}>\n              <FaShare />\n              Share\n            </ActionButton>\n            <ActionButton onClick={handlePrint}>\n              <FaPrint />\n              Print\n            </ActionButton>\n            <ActionButton primary onClick={() => navigate('/weddings')}>\n              <FaHome />\n              Back to Vendors\n            </ActionButton>\n          </ActionButtons>\n        </NavContent>\n      </NavHeader>\n\n      <Container>\n        <ConfirmationCard>\n          <SuccessHeader>\n            <SuccessIcon>\n              <FaCheck />\n            </SuccessIcon>\n            <SuccessTitle>Booking Request Confirmed!</SuccessTitle>\n            <SuccessSubtitle>\n              Your consultation request has been sent successfully\n            </SuccessSubtitle>\n            <BookingNumber>\n              Booking #: {bookingDetails.bookingNumber}\n            </BookingNumber>\n          </SuccessHeader>\n\n          <ContentSection>\n            <VendorCard>\n              <VendorHeader>\n                <VendorImage src={vendor.image} alt={vendor.name} />\n                <VendorInfo>\n                  <VendorName>{vendor.name}</VendorName>\n                  <VendorMeta>\n                    <MetaItem>\n                      <FaMapMarkerAlt />\n                      {vendor.city}, {vendor.state}\n                    </MetaItem>\n                    <MetaItem>\n                      <FaPhoneAlt />\n                      {vendor.phone}\n                    </MetaItem>\n                    <MetaItem>\n                      <FaEnvelope />\n                      {vendor.email}\n                    </MetaItem>\n                  </VendorMeta>\n                </VendorInfo>\n              </VendorHeader>\n            </VendorCard>\n\n            <SectionTitle>\n              <FaCalendarAlt />\n              Booking Details\n            </SectionTitle>\n            <InfoGrid>\n              <InfoCard>\n                <InfoLabel>\n                  <FaUser />\n                  Contact Information\n                </InfoLabel>\n                <InfoValue>\n                  <div>{bookingDetails.contactName}</div>\n                  <div>{bookingDetails.email}</div>\n                  <div>{bookingDetails.phone}</div>\n                </InfoValue>\n              </InfoCard>\n              <InfoCard>\n                <InfoLabel>\n                  <FaCalendarAlt />\n                  Event Details\n                </InfoLabel>\n                <InfoValue>\n                  <div>\n                    {new Date(bookingDetails.eventDate).toLocaleDateString(\n                      'en-US',\n                      {\n                        weekday: 'long',\n                        year: 'numeric',\n                        month: 'long',\n                        day: 'numeric',\n                      }\n                    )}\n                  </div>\n                  <div>{bookingDetails.eventTime}</div>\n                  <div>{bookingDetails.guestCount} guests</div>\n                  <div>{bookingDetails.eventType}</div>\n                </InfoValue>\n              </InfoCard>\n            </InfoGrid>\n\n            {bookingDetails.services.length > 0 && (\n              <>\n                <SectionTitle>\n                  <FaHeart />\n                  Requested Services\n                </SectionTitle>\n                <InfoCard style={{ marginBottom: theme.spacing.xl }}>\n                  <InfoValue>{bookingDetails.services.join(', ')}</InfoValue>\n                </InfoCard>\n              </>\n            )}\n\n            {bookingDetails.message && (\n              <>\n                <SectionTitle>Additional Information</SectionTitle>\n                <InfoCard style={{ marginBottom: theme.spacing.xl }}>\n                  <InfoValue>{bookingDetails.message}</InfoValue>\n                </InfoCard>\n              </>\n            )}\n\n            <NextStepsCard>\n              <NextStepsTitle>What happens next?</NextStepsTitle>\n              <StepsList>\n                <StepItem>\n                  <StepNumber>1</StepNumber>\n                  <StepText>\n                    <strong>{vendor.name}</strong> will review your request\n                    within 24 hours\n                  </StepText>\n                </StepItem>\n                <StepItem>\n                  <StepNumber>2</StepNumber>\n                  <StepText>\n                    They'll contact you to schedule a consultation at your\n                    convenience\n                  </StepText>\n                </StepItem>\n                <StepItem>\n                  <StepNumber>3</StepNumber>\n                  <StepText>\n                    During the consultation, you'll discuss your vision,\n                    requirements, and budget\n                  </StepText>\n                </StepItem>\n                <StepItem>\n                  <StepNumber>4</StepNumber>\n                  <StepText>\n                    You'll receive a customized proposal and quote for your\n                    wedding\n                  </StepText>\n                </StepItem>\n              </StepsList>\n            </NextStepsCard>\n\n            <ButtonGroup>\n              <Button primary onClick={() => navigate(`/${vendor.id}`)}>\n                <FaRing />\n                View Vendor Details\n              </Button>\n              <Button outline onClick={() => navigate('/weddings')}>\n                <FaHome />\n                Browse More Vendors\n              </Button>\n            </ButtonGroup>\n          </ContentSection>\n        </ConfirmationCard>\n      </Container>\n    </PageContainer>\n  );\n};\n\nexport default BookingConfirmation;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/weddings/pages/BookingPage.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-useless-escape","severity":1,"message":"Unnecessary escape character: \\(.","line":524,"column":40,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":524,"endColumn":41,"suggestions":[{"messageId":"removeEscape","fix":{"range":[11619,11620],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[11619,11619],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":1,"message":"Unnecessary escape character: \\).","line":524,"column":42,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":524,"endColumn":43,"suggestions":[{"messageId":"removeEscape","fix":{"range":[11621,11622],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[11621,11621],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":584,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":584,"endColumn":67}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaArrowLeft,\n  FaCalendarAlt,\n  FaMapMarkerAlt,\n  FaEnvelope,\n  FaPhoneAlt,\n  FaRing,\n  FaCheck,\n  FaExclamationTriangle,\n  FaInfoCircle,\n  FaClock,\n  FaUser,\n  FaComment,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport { getVendorById } from '../data/vendors';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n`;\n\nconst NavHeader = styled.div`\n  background: ${theme.colors.white};\n  box-shadow: ${theme.shadows.sm};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  position: sticky;\n  top: 0;\n  z-index: 100;\n`;\n\nconst NavContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.lg} ${theme.spacing.md};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst BackButton = styled.button`\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n`;\n\nconst ContentGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 400px;\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst FormSection = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.lg};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst FormRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.lg};\n\n  &.single {\n    grid-template-columns: 1fr;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.label`\n  font-weight: 600;\n  color: ${theme.colors.gray700};\n  margin-bottom: ${theme.spacing.sm};\n  font-size: 0.9rem;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n\n  .required {\n    color: ${theme.colors.error};\n  }\n`;\n\nconst Input = styled.input.withConfig({\n  shouldForwardProp: prop => prop !== 'hasError',\n})`\n  padding: ${theme.spacing.md};\n  border: 2px solid\n    ${props => (props.hasError ? theme.colors.error : theme.colors.gray200)};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: border-color 0.2s ease;\n  background: ${theme.colors.white};\n\n  &:focus {\n    outline: none;\n    border-color: ${props =>\n      props.hasError ? theme.colors.error : theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray500};\n  }\n`;\n\nconst Select = styled.select.withConfig({\n  shouldForwardProp: prop => prop !== 'hasError',\n})`\n  padding: ${theme.spacing.md};\n  border: 2px solid\n    ${props => (props.hasError ? theme.colors.error : theme.colors.gray200)};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: border-color 0.2s ease;\n  background: ${theme.colors.white};\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n    border-color: ${props =>\n      props.hasError ? theme.colors.error : theme.colors.primary};\n  }\n`;\n\nconst TextArea = styled.textarea.withConfig({\n  shouldForwardProp: prop => prop !== 'hasError',\n})`\n  padding: ${theme.spacing.md};\n  border: 2px solid\n    ${props => (props.hasError ? theme.colors.error : theme.colors.gray200)};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: border-color 0.2s ease;\n  background: ${theme.colors.white};\n  resize: vertical;\n  min-height: 120px;\n  font-family: inherit;\n\n  &:focus {\n    outline: none;\n    border-color: ${props =>\n      props.hasError ? theme.colors.error : theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray500};\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: ${theme.colors.error};\n  font-size: 0.8rem;\n  margin-top: ${theme.spacing.xs};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst HelpText = styled.div`\n  color: ${theme.colors.gray500};\n  font-size: 0.8rem;\n  margin-top: ${theme.spacing.xs};\n`;\n\nconst CheckboxGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n`;\n\nconst CheckboxItem = styled.label`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  cursor: pointer;\n  padding: ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray50};\n  }\n`;\n\nconst Checkbox = styled.input`\n  width: 18px;\n  height: 18px;\n  accent-color: ${theme.colors.primary};\n`;\n\nconst CheckboxLabel = styled.span`\n  color: ${theme.colors.gray700};\n  font-size: 0.9rem;\n`;\n\nconst SubmitButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n  width: 100%;\n  margin-top: ${theme.spacing.xl};\n\n  &:hover:not(:disabled) {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-1px);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst Sidebar = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.lg};\n`;\n\nconst VendorCard = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  border: 2px solid ${theme.colors.primary}20;\n`;\n\nconst VendorImage = styled.img`\n  width: 100%;\n  height: 150px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.md};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst VendorName = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst VendorMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst MetaItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n`;\n\nconst SpecialtiesGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.xs};\n`;\n\nconst SpecialtyTag = styled.span`\n  background: ${theme.colors.primary}15;\n  color: ${theme.colors.primary};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 600;\n`;\n\nconst InfoCard = styled.div`\n  background: ${theme.colors.info}10;\n  border: 2px solid ${theme.colors.info}30;\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.lg};\n`;\n\nconst InfoTitle = styled.h4`\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst InfoList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst InfoItem = styled.li`\n  display: flex;\n  align-items: flex-start;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.sm};\n  color: ${theme.colors.gray700};\n  font-size: 0.9rem;\n  line-height: 1.4;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst CheckIcon = styled.div`\n  color: ${theme.colors.success};\n  font-size: 0.8rem;\n  margin-top: 2px;\n  flex-shrink: 0;\n`;\n\nconst SuccessMessage = styled.div`\n  background: ${theme.colors.success}10;\n  border: 2px solid ${theme.colors.success}30;\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xl};\n  text-align: center;\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst SuccessIcon = styled.div`\n  font-size: 3rem;\n  color: ${theme.colors.success};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst SuccessTitle = styled.h3`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst SuccessText = styled.p`\n  color: ${theme.colors.gray600};\n  line-height: 1.5;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst LoadingState = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 50vh;\n  color: ${theme.colors.gray600};\n  font-size: 1.2rem;\n`;\n\nconst BookingPage = () => {\n  const { vendorSlug } = useParams();\n  const navigate = useNavigate();\n  const [vendor, setVendor] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [submitted] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  const [formData, setFormData] = useState({\n    // Contact Information\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n\n    // Event Details\n    eventDate: '',\n    eventTime: '',\n    guestCount: '',\n    eventType: 'wedding',\n    venue: '',\n    budget: '',\n\n    // Services\n    services: [],\n\n    // Additional Information\n    message: '',\n    contactPreference: 'email',\n    timeline: '',\n  });\n\n  const serviceOptions = [\n    'Wedding Planning',\n    'Venue Decoration',\n    'Floral Arrangements',\n    'Photography',\n    'Videography',\n    'Catering',\n    'Music & DJ',\n    'Transportation',\n    'Cake & Desserts',\n    'Hair & Makeup',\n  ];\n\n  useEffect(() => {\n    const vendorData = getVendorById(vendorSlug);\n    setVendor(vendorData);\n    setLoading(false);\n  }, [vendorSlug]);\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: '',\n      }));\n    }\n  };\n\n  const handleCheckboxChange = service => {\n    setFormData(prev => ({\n      ...prev,\n      services: prev.services.includes(service)\n        ? prev.services.filter(s => s !== service)\n        : [...prev.services, service],\n    }));\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    // Required fields\n    const requiredFields = [\n      'firstName',\n      'lastName',\n      'email',\n      'phone',\n      'eventDate',\n      'guestCount',\n    ];\n\n    requiredFields.forEach(field => {\n      if (!formData[field]) {\n        newErrors[field] = 'This field is required';\n      }\n    });\n\n    // Email validation\n    if (formData.email && !/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    // Phone validation\n    if (formData.phone && !/^\\+?[\\d\\s\\-\\(\\)]{10,}$/.test(formData.phone)) {\n      newErrors.phone = 'Please enter a valid phone number';\n    }\n\n    // Date validation\n    if (formData.eventDate) {\n      const eventDate = new Date(formData.eventDate);\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n\n      if (eventDate < today) {\n        newErrors.eventDate = 'Event date must be in the future';\n      }\n    }\n\n    // Guest count validation\n    if (\n      formData.guestCount &&\n      (formData.guestCount < 1 || formData.guestCount > 1000)\n    ) {\n      newErrors.guestCount = 'Guest count must be between 1 and 1000';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    setSubmitting(true);\n\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      // Generate booking ID and redirect to confirmation\n      const bookingId = 'WED-' + Date.now().toString().slice(-6);\n      const confirmationParams = new URLSearchParams({\n        booking: bookingId,\n        vendor: vendor.id,\n        name: `${formData.firstName} ${formData.lastName}`,\n        email: formData.email,\n        phone: formData.phone,\n        date: formData.eventDate,\n        time: formData.eventTime,\n        guests: formData.guestCount,\n        type: formData.eventType,\n        services: formData.services.join(','),\n        message: formData.message,\n      });\n\n      navigate(\n        `/weddings/booking-confirmation?${confirmationParams.toString()}`\n      );\n    } catch (error) {\n      alert('Failed to submit booking request. Please try again.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <PageContainer>\n        <LoadingState>Loading booking form...</LoadingState>\n      </PageContainer>\n    );\n  }\n\n  if (!vendor) {\n    return (\n      <PageContainer>\n        <NavHeader>\n          <NavContent>\n            <BackButton onClick={() => navigate('/weddings')}>\n              <FaArrowLeft />\n              Back to Vendors\n            </BackButton>\n          </NavContent>\n        </NavHeader>\n        <Container>\n          <div style={{ textAlign: 'center', padding: '4rem' }}>\n            <h2>Vendor not found</h2>\n            <p>The vendor you're trying to book doesn't exist.</p>\n          </div>\n        </Container>\n      </PageContainer>\n    );\n  }\n\n  if (submitted) {\n    return (\n      <PageContainer>\n        <NavHeader>\n          <NavContent>\n            <BackButton onClick={() => navigate(`/${vendor.id}`)}>\n              <FaArrowLeft />\n              Back to Vendor\n            </BackButton>\n            <PageTitle>\n              <FaRing />\n              Booking Request Submitted\n            </PageTitle>\n          </NavContent>\n        </NavHeader>\n        <Container>\n          <SuccessMessage>\n            <SuccessIcon>\n              <FaCheck />\n            </SuccessIcon>\n            <SuccessTitle>Request Sent Successfully!</SuccessTitle>\n            <SuccessText>\n              Thank you for your booking request with {vendor.name}. They will\n              review your information and get back to you within 24 hours to\n              discuss your wedding plans and check availability.\n            </SuccessText>\n            <div\n              style={{\n                display: 'flex',\n                gap: theme.spacing.md,\n                justifyContent: 'center',\n              }}\n            >\n              <SubmitButton onClick={() => navigate(`/${vendor.id}`)}>\n                Back to Vendor\n              </SubmitButton>\n              <SubmitButton\n                onClick={() => navigate('/weddings')}\n                style={{\n                  background: theme.colors.white,\n                  color: theme.colors.primary,\n                  border: `2px solid ${theme.colors.primary}`,\n                }}\n              >\n                Browse More Vendors\n              </SubmitButton>\n            </div>\n          </SuccessMessage>\n        </Container>\n      </PageContainer>\n    );\n  }\n\n  return (\n    <PageContainer>\n      <NavHeader>\n        <NavContent>\n          <BackButton onClick={() => navigate(`/${vendor.id}`)}>\n            <FaArrowLeft />\n            Back to Vendor\n          </BackButton>\n          <PageTitle>\n            <FaCalendarAlt />\n            Book Consultation\n          </PageTitle>\n        </NavContent>\n      </NavHeader>\n\n      <Container>\n        <ContentGrid>\n          <FormSection>\n            <SectionTitle>\n              <FaUser />\n              Consultation Request\n            </SectionTitle>\n\n            <form onSubmit={handleSubmit}>\n              {/* Contact Information */}\n              <div style={{ marginBottom: theme.spacing.xl }}>\n                <h3\n                  style={{\n                    marginBottom: theme.spacing.lg,\n                    color: theme.colors.gray900,\n                  }}\n                >\n                  Contact Information\n                </h3>\n                <FormRow>\n                  <FormGroup>\n                    <Label>\n                      First Name <span className=\"required\">*</span>\n                    </Label>\n                    <Input\n                      type=\"text\"\n                      name=\"firstName\"\n                      value={formData.firstName}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter your first name\"\n                      hasError={!!errors.firstName}\n                    />\n                    {errors.firstName && (\n                      <ErrorMessage>\n                        <FaExclamationTriangle />\n                        {errors.firstName}\n                      </ErrorMessage>\n                    )}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>\n                      Last Name <span className=\"required\">*</span>\n                    </Label>\n                    <Input\n                      type=\"text\"\n                      name=\"lastName\"\n                      value={formData.lastName}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter your last name\"\n                      hasError={!!errors.lastName}\n                    />\n                    {errors.lastName && (\n                      <ErrorMessage>\n                        <FaExclamationTriangle />\n                        {errors.lastName}\n                      </ErrorMessage>\n                    )}\n                  </FormGroup>\n                </FormRow>\n\n                <FormRow>\n                  <FormGroup>\n                    <Label>\n                      Email Address <span className=\"required\">*</span>\n                    </Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      value={formData.email}\n                      onChange={handleInputChange}\n                      placeholder=\"your.email@example.com\"\n                      hasError={!!errors.email}\n                    />\n                    {errors.email && (\n                      <ErrorMessage>\n                        <FaExclamationTriangle />\n                        {errors.email}\n                      </ErrorMessage>\n                    )}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>\n                      Phone Number <span className=\"required\">*</span>\n                    </Label>\n                    <Input\n                      type=\"tel\"\n                      name=\"phone\"\n                      value={formData.phone}\n                      onChange={handleInputChange}\n                      placeholder=\"(555) 123-4567\"\n                      hasError={!!errors.phone}\n                    />\n                    {errors.phone && (\n                      <ErrorMessage>\n                        <FaExclamationTriangle />\n                        {errors.phone}\n                      </ErrorMessage>\n                    )}\n                  </FormGroup>\n                </FormRow>\n              </div>\n\n              {/* Event Details */}\n              <div style={{ marginBottom: theme.spacing.xl }}>\n                <h3\n                  style={{\n                    marginBottom: theme.spacing.lg,\n                    color: theme.colors.gray900,\n                  }}\n                >\n                  Event Details\n                </h3>\n                <FormRow>\n                  <FormGroup>\n                    <Label>\n                      Event Date <span className=\"required\">*</span>\n                    </Label>\n                    <Input\n                      type=\"date\"\n                      name=\"eventDate\"\n                      value={formData.eventDate}\n                      onChange={handleInputChange}\n                      hasError={!!errors.eventDate}\n                    />\n                    {errors.eventDate && (\n                      <ErrorMessage>\n                        <FaExclamationTriangle />\n                        {errors.eventDate}\n                      </ErrorMessage>\n                    )}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>Event Time</Label>\n                    <Input\n                      type=\"time\"\n                      name=\"eventTime\"\n                      value={formData.eventTime}\n                      onChange={handleInputChange}\n                    />\n                  </FormGroup>\n                </FormRow>\n\n                <FormRow>\n                  <FormGroup>\n                    <Label>\n                      Number of Guests <span className=\"required\">*</span>\n                    </Label>\n                    <Input\n                      type=\"number\"\n                      name=\"guestCount\"\n                      value={formData.guestCount}\n                      onChange={handleInputChange}\n                      placeholder=\"150\"\n                      min=\"1\"\n                      max=\"1000\"\n                      hasError={!!errors.guestCount}\n                    />\n                    {errors.guestCount && (\n                      <ErrorMessage>\n                        <FaExclamationTriangle />\n                        {errors.guestCount}\n                      </ErrorMessage>\n                    )}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>Event Type</Label>\n                    <Select\n                      name=\"eventType\"\n                      value={formData.eventType}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"wedding\">Wedding</option>\n                      <option value=\"engagement\">Engagement Party</option>\n                      <option value=\"reception\">Reception</option>\n                      <option value=\"rehearsal\">Rehearsal Dinner</option>\n                      <option value=\"bridal-shower\">Bridal Shower</option>\n                      <option value=\"bachelor-party\">\n                        Bachelor/Bachelorette Party\n                      </option>\n                    </Select>\n                  </FormGroup>\n                </FormRow>\n\n                <FormRow>\n                  <FormGroup>\n                    <Label>Venue Location</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"venue\"\n                      value={formData.venue}\n                      onChange={handleInputChange}\n                      placeholder=\"Enter venue name or location\"\n                    />\n                    <HelpText>\n                      If you already have a venue, please provide the name and\n                      address\n                    </HelpText>\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>Estimated Budget</Label>\n                    <Select\n                      name=\"budget\"\n                      value={formData.budget}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"\">Select budget range</option>\n                      <option value=\"under-5k\">Under $5,000</option>\n                      <option value=\"5k-10k\">$5,000 - $10,000</option>\n                      <option value=\"10k-20k\">$10,000 - $20,000</option>\n                      <option value=\"20k-50k\">$20,000 - $50,000</option>\n                      <option value=\"50k-100k\">$50,000 - $100,000</option>\n                      <option value=\"over-100k\">Over $100,000</option>\n                    </Select>\n                  </FormGroup>\n                </FormRow>\n              </div>\n\n              {/* Services Needed */}\n              <div style={{ marginBottom: theme.spacing.xl }}>\n                <h3\n                  style={{\n                    marginBottom: theme.spacing.lg,\n                    color: theme.colors.gray900,\n                  }}\n                >\n                  Services Needed\n                </h3>\n                <CheckboxGroup>\n                  {serviceOptions.map(service => (\n                    <CheckboxItem key={service}>\n                      <Checkbox\n                        type=\"checkbox\"\n                        checked={formData.services.includes(service)}\n                        onChange={() => handleCheckboxChange(service)}\n                      />\n                      <CheckboxLabel>{service}</CheckboxLabel>\n                    </CheckboxItem>\n                  ))}\n                </CheckboxGroup>\n              </div>\n\n              {/* Additional Information */}\n              <div style={{ marginBottom: theme.spacing.xl }}>\n                <h3\n                  style={{\n                    marginBottom: theme.spacing.lg,\n                    color: theme.colors.gray900,\n                  }}\n                >\n                  Additional Information\n                </h3>\n                <FormRow className=\"single\">\n                  <FormGroup>\n                    <Label>\n                      <FaComment />\n                      Tell us about your vision\n                    </Label>\n                    <TextArea\n                      name=\"message\"\n                      value={formData.message}\n                      onChange={handleInputChange}\n                      placeholder=\"Describe your dream wedding, style preferences, special requirements, or any questions you have...\"\n                    />\n                    <HelpText>\n                      Share any specific ideas, themes, or requirements to help\n                      us understand your vision better\n                    </HelpText>\n                  </FormGroup>\n                </FormRow>\n\n                <FormRow>\n                  <FormGroup>\n                    <Label>Preferred Contact Method</Label>\n                    <Select\n                      name=\"contactPreference\"\n                      value={formData.contactPreference}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"email\">Email</option>\n                      <option value=\"phone\">Phone Call</option>\n                      <option value=\"text\">Text Message</option>\n                    </Select>\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>Planning Timeline</Label>\n                    <Select\n                      name=\"timeline\"\n                      value={formData.timeline}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"\">Select timeline</option>\n                      <option value=\"asap\">As soon as possible</option>\n                      <option value=\"1-3-months\">1-3 months</option>\n                      <option value=\"3-6-months\">3-6 months</option>\n                      <option value=\"6-12-months\">6-12 months</option>\n                      <option value=\"over-1-year\">Over 1 year</option>\n                    </Select>\n                  </FormGroup>\n                </FormRow>\n              </div>\n\n              <SubmitButton type=\"submit\" disabled={submitting}>\n                {submitting ? (\n                  <>\n                    <FaClock />\n                    Sending Request...\n                  </>\n                ) : (\n                  <>\n                    <FaCalendarAlt />\n                    Request Consultation\n                  </>\n                )}\n              </SubmitButton>\n            </form>\n          </FormSection>\n\n          <Sidebar>\n            <VendorCard>\n              <VendorImage src={vendor.image} alt={vendor.name} />\n              <VendorName>{vendor.name}</VendorName>\n              <VendorMeta>\n                <MetaItem>\n                  <FaMapMarkerAlt />\n                  {vendor.city}, {vendor.state}\n                </MetaItem>\n                <MetaItem>\n                  <FaPhoneAlt />\n                  {vendor.phone}\n                </MetaItem>\n                <MetaItem>\n                  <FaEnvelope />\n                  {vendor.email}\n                </MetaItem>\n              </VendorMeta>\n              <SpecialtiesGrid>\n                {vendor.specialties.map((specialty, index) => (\n                  <SpecialtyTag key={index}>{specialty}</SpecialtyTag>\n                ))}\n              </SpecialtiesGrid>\n            </VendorCard>\n\n            <InfoCard>\n              <InfoTitle>\n                <FaInfoCircle />\n                What to Expect\n              </InfoTitle>\n              <InfoList>\n                <InfoItem>\n                  <CheckIcon>\n                    <FaCheck />\n                  </CheckIcon>\n                  We'll review your request within 24 hours\n                </InfoItem>\n                <InfoItem>\n                  <CheckIcon>\n                    <FaCheck />\n                  </CheckIcon>\n                  Schedule a consultation at your convenience\n                </InfoItem>\n                <InfoItem>\n                  <CheckIcon>\n                    <FaCheck />\n                  </CheckIcon>\n                  Discuss your vision and requirements in detail\n                </InfoItem>\n                <InfoItem>\n                  <CheckIcon>\n                    <FaCheck />\n                  </CheckIcon>\n                  Receive a customized proposal and quote\n                </InfoItem>\n                <InfoItem>\n                  <CheckIcon>\n                    <FaCheck />\n                  </CheckIcon>\n                  No obligation - free consultation\n                </InfoItem>\n              </InfoList>\n            </InfoCard>\n          </Sidebar>\n        </ContentGrid>\n      </Container>\n    </PageContainer>\n  );\n};\n\nexport default BookingPage;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/weddings/pages/MyBookings.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'FaPhoneAlt' is defined but never used.","line":8,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'FaEnvelope' is defined but never used.","line":9,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'FaHeart' is defined but never used.","line":17,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":17,"endColumn":10},{"ruleId":"no-unused-vars","severity":1,"message":"'FaHome' is defined but never used.","line":18,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":18,"endColumn":9},{"ruleId":"no-unused-vars","severity":1,"message":"'FaFilter' is defined but never used.","line":19,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":19,"endColumn":11},{"ruleId":"no-unused-vars","severity":1,"message":"'FaSearch' is defined but never used.","line":20,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":20,"endColumn":11},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'mockBookings'. Either include it or remove the dependency array.","line":466,"column":6,"nodeType":"ArrayExpression","endLine":466,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [mockBookings]","fix":{"range":[11176,11178],"text":"[mockBookings]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaArrowLeft,\n  FaCalendarAlt,\n  FaMapMarkerAlt,\n  FaPhoneAlt,\n  FaEnvelope,\n  FaRing,\n  FaUser,\n  FaClock,\n  FaCheckCircle,\n  FaExclamationCircle,\n  FaTimesCircle,\n  FaEye,\n  FaHeart,\n  FaHome,\n  FaFilter,\n  FaSearch,\n  FaStar,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport { weddingVendors } from '../data/vendors';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n`;\n\nconst NavHeader = styled.div`\n  background: ${theme.colors.white};\n  box-shadow: ${theme.shadows.sm};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  position: sticky;\n  top: 0;\n  z-index: 100;\n`;\n\nconst NavContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.lg} ${theme.spacing.md};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst BackButton = styled.button`\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst StatCard = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  text-align: center;\n  border-left: 4px solid ${props => props.color || theme.colors.primary};\n`;\n\nconst StatNumber = styled.div`\n  font-size: 2rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst StatLabel = styled.div`\n  color: ${theme.colors.gray600};\n  font-weight: 500;\n`;\n\nconst FiltersSection = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst FiltersRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: ${theme.spacing.lg};\n  flex-wrap: wrap;\n`;\n\nconst FilterGroup = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  flex-wrap: wrap;\n`;\n\nconst SearchInput = styled.input`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  min-width: 250px;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray500};\n  }\n`;\n\nconst FilterButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  background: ${props =>\n    props.active ? theme.colors.primary : theme.colors.white};\n  color: ${props => (props.active ? theme.colors.white : theme.colors.gray700)};\n  border: 2px solid\n    ${props => (props.active ? theme.colors.primary : theme.colors.gray200)};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst SortSelect = styled.select`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.white};\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst BookingsGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.lg};\n`;\n\nconst BookingCard = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  overflow: hidden;\n  border-left: 4px solid\n    ${props => {\n      switch (props.status) {\n        case 'confirmed':\n          return theme.colors.success;\n        case 'pending':\n          return theme.colors.warning;\n        case 'cancelled':\n          return theme.colors.error;\n        default:\n          return theme.colors.gray300;\n      }\n    }};\n`;\n\nconst BookingHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: ${theme.spacing.lg};\n  border-bottom: 1px solid ${theme.colors.gray200};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst BookingInfo = styled.div`\n  flex: 1;\n`;\n\nconst BookingMeta = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.lg};\n  flex-wrap: wrap;\n`;\n\nconst BookingNumber = styled.div`\n  font-family: monospace;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  font-size: 1.1rem;\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst BookingStatus = styled.span.withConfig({\n  shouldForwardProp: prop => prop !== 'status',\n})`\n  display: inline-flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  background: ${props => {\n    switch (props.status) {\n      case 'confirmed':\n        return theme.colors.success + '20';\n      case 'pending':\n        return theme.colors.warning + '20';\n      case 'cancelled':\n        return theme.colors.error + '20';\n      default:\n        return theme.colors.gray200;\n    }\n  }};\n  color: ${props => {\n    switch (props.status) {\n      case 'confirmed':\n        return theme.colors.success;\n      case 'pending':\n        return theme.colors.warning;\n      case 'cancelled':\n        return theme.colors.error;\n      default:\n        return theme.colors.gray600;\n    }\n  }};\n`;\n\nconst BookingContent = styled.div`\n  padding: ${theme.spacing.lg};\n`;\n\nconst VendorSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst VendorImage = styled.img`\n  width: 60px;\n  height: 60px;\n  border-radius: ${theme.borderRadius.md};\n  object-fit: cover;\n`;\n\nconst VendorInfo = styled.div`\n  flex: 1;\n`;\n\nconst VendorName = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst VendorMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.xs};\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n`;\n\nconst MetaItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst BookingDetails = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst DetailGroup = styled.div``;\n\nconst DetailLabel = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n  font-size: 0.9rem;\n`;\n\nconst DetailValue = styled.div`\n  color: ${theme.colors.gray700};\n  font-size: 0.9rem;\n`;\n\nconst BookingActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  justify-content: flex-end;\n  padding-top: ${theme.spacing.md};\n  border-top: 1px solid ${theme.colors.gray200};\n`;\n\nconst ActionButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'primary' && prop !== 'danger',\n})`\n  background: ${props =>\n    props.primary\n      ? theme.colors.primary\n      : props.danger\n        ? theme.colors.error\n        : theme.colors.white};\n  color: ${props =>\n    props.primary || props.danger ? theme.colors.white : theme.colors.gray700};\n  border: 2px solid\n    ${props =>\n      props.primary\n        ? theme.colors.primary\n        : props.danger\n          ? theme.colors.error\n          : theme.colors.gray200};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  font-size: 0.9rem;\n\n  &:hover {\n    transform: translateY(-1px);\n    background: ${props =>\n      props.primary\n        ? theme.colors.primaryDark\n        : props.danger\n          ? theme.colors.error + 'dd'\n          : theme.colors.gray50};\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray900};\n  }\n\n  p {\n    font-size: 1rem;\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst MyBookings = () => {\n  const navigate = useNavigate();\n  const [bookings, setBookings] = useState([]);\n  const [filteredBookings, setFilteredBookings] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [sortBy, setSortBy] = useState('date');\n\n  // Mock bookings data\n  const mockBookings = [\n    {\n      id: 'WED-123456',\n      vendorId: 'elegant-events',\n      status: 'confirmed',\n      date: '2024-06-15',\n      time: '3:00 PM',\n      guestCount: 150,\n      eventType: 'Wedding',\n      services: ['Wedding Planning', 'Photography', 'Catering'],\n      createdAt: '2024-01-15',\n      contactName: 'John & Sarah Doe',\n      email: 'john.sarah@example.com',\n      phone: '+1 (555) 123-4567',\n      message: 'Looking for a magical outdoor wedding experience',\n    },\n    {\n      id: 'WED-123457',\n      vendorId: 'capture-moments',\n      status: 'pending',\n      date: '2024-08-22',\n      time: '4:00 PM',\n      guestCount: 80,\n      eventType: 'Engagement Party',\n      services: ['Photography', 'Videography'],\n      createdAt: '2024-01-20',\n      contactName: 'Michael & Emma Smith',\n      email: 'michael.emma@example.com',\n      phone: '+1 (555) 234-5678',\n      message: 'Intimate engagement celebration with close family',\n    },\n    {\n      id: 'WED-123458',\n      vendorId: 'floral-dreams',\n      status: 'cancelled',\n      date: '2024-05-10',\n      time: '2:00 PM',\n      guestCount: 200,\n      eventType: 'Wedding',\n      services: ['Floral Arrangements', 'Venue Decoration'],\n      createdAt: '2024-01-10',\n      contactName: 'David & Lisa Johnson',\n      email: 'david.lisa@example.com',\n      phone: '+1 (555) 345-6789',\n      message: 'Traditional wedding with elegant floral arrangements',\n    },\n  ];\n\n  useEffect(() => {\n    setBookings(mockBookings);\n    setFilteredBookings(mockBookings);\n  }, []);\n\n  useEffect(() => {\n    let filtered = [...bookings];\n\n    // Filter by search term\n    if (searchTerm) {\n      filtered = filtered.filter(\n        booking =>\n          booking.id.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          booking.contactName\n            .toLowerCase()\n            .includes(searchTerm.toLowerCase()) ||\n          booking.eventType.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n\n    // Filter by status\n    if (statusFilter !== 'all') {\n      filtered = filtered.filter(booking => booking.status === statusFilter);\n    }\n\n    // Sort bookings\n    switch (sortBy) {\n      case 'date':\n        filtered.sort((a, b) => new Date(a.date) - new Date(b.date));\n        break;\n      case 'created':\n        filtered.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n        break;\n      case 'status':\n        filtered.sort((a, b) => a.status.localeCompare(b.status));\n        break;\n      default:\n        break;\n    }\n\n    setFilteredBookings(filtered);\n  }, [bookings, searchTerm, statusFilter, sortBy]);\n\n  const getVendorDetails = vendorId => {\n    return weddingVendors.find(vendor => vendor.id === vendorId);\n  };\n\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'confirmed':\n        return <FaCheckCircle />;\n      case 'pending':\n        return <FaExclamationCircle />;\n      case 'cancelled':\n        return <FaTimesCircle />;\n      default:\n        return <FaClock />;\n    }\n  };\n\n  const handleViewBooking = booking => {\n    const vendor = getVendorDetails(booking.vendorId);\n    if (vendor) {\n      navigate(\n        `/weddings/booking-confirmation?booking=${booking.id}&vendor=${booking.vendorId}&name=${booking.contactName}&email=${booking.email}&phone=${booking.phone}&date=${booking.date}&time=${booking.time}&guests=${booking.guestCount}&type=${booking.eventType}&services=${booking.services.join(',')}&message=${booking.message}`\n      );\n    }\n  };\n\n  const handleViewVendor = vendorId => {\n    navigate(`/${vendorId}`);\n  };\n\n  const stats = {\n    total: bookings.length,\n    confirmed: bookings.filter(b => b.status === 'confirmed').length,\n    pending: bookings.filter(b => b.status === 'pending').length,\n    cancelled: bookings.filter(b => b.status === 'cancelled').length,\n  };\n\n  return (\n    <PageContainer>\n      <NavHeader>\n        <NavContent>\n          <BackButton onClick={() => navigate('/weddings')}>\n            <FaArrowLeft />\n            Back to Vendors\n          </BackButton>\n          <PageTitle>\n            <FaCalendarAlt />\n            My Wedding Bookings\n          </PageTitle>\n        </NavContent>\n      </NavHeader>\n\n      <Container>\n        <StatsGrid>\n          <StatCard color={theme.colors.primary}>\n            <StatNumber>{stats.total}</StatNumber>\n            <StatLabel>Total Bookings</StatLabel>\n          </StatCard>\n          <StatCard color={theme.colors.success}>\n            <StatNumber>{stats.confirmed}</StatNumber>\n            <StatLabel>Confirmed</StatLabel>\n          </StatCard>\n          <StatCard color={theme.colors.warning}>\n            <StatNumber>{stats.pending}</StatNumber>\n            <StatLabel>Pending</StatLabel>\n          </StatCard>\n          <StatCard color={theme.colors.error}>\n            <StatNumber>{stats.cancelled}</StatNumber>\n            <StatLabel>Cancelled</StatLabel>\n          </StatCard>\n        </StatsGrid>\n\n        <FiltersSection>\n          <FiltersRow>\n            <FilterGroup>\n              <SearchInput\n                type=\"text\"\n                placeholder=\"Search bookings...\"\n                value={searchTerm}\n                onChange={e => setSearchTerm(e.target.value)}\n              />\n            </FilterGroup>\n\n            <FilterGroup>\n              <FilterButton\n                active={statusFilter === 'all'}\n                onClick={() => setStatusFilter('all')}\n              >\n                All Status\n              </FilterButton>\n              <FilterButton\n                active={statusFilter === 'confirmed'}\n                onClick={() => setStatusFilter('confirmed')}\n              >\n                Confirmed\n              </FilterButton>\n              <FilterButton\n                active={statusFilter === 'pending'}\n                onClick={() => setStatusFilter('pending')}\n              >\n                Pending\n              </FilterButton>\n              <FilterButton\n                active={statusFilter === 'cancelled'}\n                onClick={() => setStatusFilter('cancelled')}\n              >\n                Cancelled\n              </FilterButton>\n            </FilterGroup>\n\n            <FilterGroup>\n              <SortSelect\n                value={sortBy}\n                onChange={e => setSortBy(e.target.value)}\n              >\n                <option value=\"date\">Sort by Event Date</option>\n                <option value=\"created\">Sort by Created Date</option>\n                <option value=\"status\">Sort by Status</option>\n              </SortSelect>\n            </FilterGroup>\n          </FiltersRow>\n        </FiltersSection>\n\n        {filteredBookings.length > 0 ? (\n          <BookingsGrid>\n            {filteredBookings.map(booking => {\n              const vendor = getVendorDetails(booking.vendorId);\n              return (\n                <BookingCard key={booking.id} status={booking.status}>\n                  <BookingHeader>\n                    <BookingInfo>\n                      <BookingNumber>Booking #{booking.id}</BookingNumber>\n                      <BookingMeta>\n                        <BookingStatus status={booking.status}>\n                          {getStatusIcon(booking.status)}\n                          {booking.status}\n                        </BookingStatus>\n                        <MetaItem>\n                          <FaCalendarAlt />\n                          {new Date(booking.date).toLocaleDateString('en-US', {\n                            weekday: 'short',\n                            month: 'short',\n                            day: 'numeric',\n                            year: 'numeric',\n                          })}{' '}\n                          at {booking.time}\n                        </MetaItem>\n                        <MetaItem>\n                          <FaUser />\n                          {booking.guestCount} guests\n                        </MetaItem>\n                      </BookingMeta>\n                    </BookingInfo>\n                  </BookingHeader>\n\n                  <BookingContent>\n                    {vendor && (\n                      <VendorSection>\n                        <VendorImage src={vendor.image} alt={vendor.name} />\n                        <VendorInfo>\n                          <VendorName>{vendor.name}</VendorName>\n                          <VendorMeta>\n                            <MetaItem>\n                              <FaMapMarkerAlt />\n                              {vendor.city}, {vendor.state}\n                            </MetaItem>\n                            <MetaItem>\n                              <FaStar />\n                              {vendor.rating} ({vendor.reviewCount} reviews)\n                            </MetaItem>\n                          </VendorMeta>\n                        </VendorInfo>\n                      </VendorSection>\n                    )}\n\n                    <BookingDetails>\n                      <DetailGroup>\n                        <DetailLabel>Contact Information</DetailLabel>\n                        <DetailValue>\n                          <div>{booking.contactName}</div>\n                          <div>{booking.email}</div>\n                          <div>{booking.phone}</div>\n                        </DetailValue>\n                      </DetailGroup>\n                      <DetailGroup>\n                        <DetailLabel>Event Type</DetailLabel>\n                        <DetailValue>{booking.eventType}</DetailValue>\n                      </DetailGroup>\n                      <DetailGroup>\n                        <DetailLabel>Services Requested</DetailLabel>\n                        <DetailValue>{booking.services.join(', ')}</DetailValue>\n                      </DetailGroup>\n                      <DetailGroup>\n                        <DetailLabel>Booking Created</DetailLabel>\n                        <DetailValue>\n                          {new Date(booking.createdAt).toLocaleDateString(\n                            'en-US',\n                            {\n                              month: 'short',\n                              day: 'numeric',\n                              year: 'numeric',\n                            }\n                          )}\n                        </DetailValue>\n                      </DetailGroup>\n                    </BookingDetails>\n\n                    <BookingActions>\n                      <ActionButton onClick={() => handleViewBooking(booking)}>\n                        <FaEye />\n                        View Details\n                      </ActionButton>\n                      {vendor && (\n                        <ActionButton\n                          onClick={() => handleViewVendor(vendor.id)}\n                        >\n                          <FaRing />\n                          View Vendor\n                        </ActionButton>\n                      )}\n                      {booking.status === 'pending' && (\n                        <ActionButton danger>\n                          <FaTimesCircle />\n                          Cancel Booking\n                        </ActionButton>\n                      )}\n                    </BookingActions>\n                  </BookingContent>\n                </BookingCard>\n              );\n            })}\n          </BookingsGrid>\n        ) : (\n          <EmptyState>\n            <h3>No bookings found</h3>\n            <p>\n              {statusFilter !== 'all'\n                ? `No ${statusFilter} bookings match your criteria.`\n                : \"You haven't made any wedding bookings yet.\"}\n            </p>\n            <ActionButton primary onClick={() => navigate('/weddings')}>\n              <FaRing />\n              Browse Wedding Vendors\n            </ActionButton>\n          </EmptyState>\n        )}\n      </Container>\n    </PageContainer>\n  );\n};\n\nexport default MyBookings;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/weddings/pages/StoresListing.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":368,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":368,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[8783,8831],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":393,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":393,"endColumn":76},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":406,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":408,"endColumn":8}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaMapMarkerAlt,\n  FaSearch,\n  FaLocationArrow,\n  FaHome,\n  FaRing,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport StoreCard from '../../components/shared/StoreCard';\nimport { weddingVendors } from '../data/vendors';\nimport {\n  getCurrentLocation,\n  getLocationFromZip,\n  searchLocationByCity,\n  updateVendorsWithDistance,\n  getDefaultLocation,\n} from '../../utils/location';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst NavHeader = styled.div`\n  background: ${theme.colors.white};\n  box-shadow: ${theme.shadows.sm};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  position: sticky;\n  top: 0;\n  z-index: 100;\n`;\n\nconst NavContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.lg} ${theme.spacing.md};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.md} ${theme.spacing.sm};\n    flex-direction: column;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst Logo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n`;\n\nconst BackButton = styled.button`\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n  flex: 1;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg} ${theme.spacing.sm};\n  }\n`;\n\nconst PageHeader = styled.div`\n  text-align: center;\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2rem;\n  }\n`;\n\nconst PageSubtitle = styled.p`\n  font-size: 1.1rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst LocationDisplay = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.primary};\n  font-weight: 600;\n`;\n\nconst SearchSection = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  margin-bottom: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg};\n  }\n`;\n\nconst SearchForm = styled.form`\n  display: grid;\n  grid-template-columns: 1fr auto auto;\n  gap: ${theme.spacing.md};\n  align-items: end;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst SearchInputContainer = styled.div`\n  position: relative;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.md} 3rem;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray500};\n  }\n`;\n\nconst SearchIcon = styled.div`\n  position: absolute;\n  left: ${theme.spacing.md};\n  top: 50%;\n  transform: translateY(-50%);\n  color: ${theme.colors.gray400};\n  font-size: 1.1rem;\n`;\n\nconst LocationButton = styled.button`\n  background: ${theme.colors.gray100};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  white-space: nowrap;\n\n  &:hover {\n    background: ${theme.colors.gray200};\n    border-color: ${theme.colors.primary};\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst SearchButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  white-space: nowrap;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-1px);\n  }\n`;\n\nconst FiltersSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.xl};\n  flex-wrap: wrap;\n  gap: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    align-items: stretch;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst FilterGroup = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  flex-wrap: wrap;\n`;\n\nconst FilterButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  background: ${props =>\n    props.active ? theme.colors.primary : theme.colors.white};\n  color: ${props => (props.active ? theme.colors.white : theme.colors.gray700)};\n  border: 2px solid\n    ${props => (props.active ? theme.colors.primary : theme.colors.gray200)};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst SortSelect = styled.select`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.white};\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst ResultsInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.lg};\n  color: ${theme.colors.gray600};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst StoresGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst LoadingState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n\n  .spinner {\n    margin-bottom: ${theme.spacing.lg};\n    font-size: 2rem;\n    animation: spin 1s linear infinite;\n  }\n\n  @keyframes spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray900};\n  }\n\n  p {\n    font-size: 1rem;\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst WeddingStoresListing = () => {\n  const navigate = useNavigate();\n  const [stores, setStores] = useState([]);\n  const [filteredStores, setFilteredStores] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [activeFilter, setActiveFilter] = useState('all');\n  const [sortBy, setSortBy] = useState('distance');\n  const [locationLoading, setLocationLoading] = useState(false);\n\n  const loadStoresForLocation = useCallback(location => {\n    const vendorsWithDistance = updateVendorsWithDistance(\n      weddingVendors,\n      location\n    );\n    setStores(vendorsWithDistance);\n    setFilteredStores(vendorsWithDistance);\n    setLoading(false);\n  }, []);\n\n  const initializeLocation = useCallback(async () => {\n    setLoading(true);\n    try {\n      const location = await getCurrentLocation();\n      setCurrentLocation(location);\n      loadStoresForLocation(location);\n    } catch (error) {\n      console.error('Failed to get location:', error);\n      const defaultLocation = getDefaultLocation();\n      setCurrentLocation(defaultLocation);\n      loadStoresForLocation(defaultLocation);\n    }\n  }, [loadStoresForLocation]);\n\n  const handleLocationSearch = async e => {\n    e.preventDefault();\n    if (!searchTerm.trim()) return;\n\n    setLocationLoading(true);\n    try {\n      let newLocation;\n\n      if (/^\\d{5}$/.test(searchTerm.trim())) {\n        newLocation = await getLocationFromZip(searchTerm.trim());\n      } else {\n        newLocation = await searchLocationByCity(searchTerm.trim());\n      }\n\n      setCurrentLocation(newLocation);\n      loadStoresForLocation(newLocation);\n      setSearchTerm('');\n    } catch (error) {\n      alert('Location not found. Please try a different city or ZIP code.');\n    } finally {\n      setLocationLoading(false);\n    }\n  };\n\n  const handleUseCurrentLocation = async () => {\n    setLocationLoading(true);\n    try {\n      const location = await getCurrentLocation();\n      setCurrentLocation(location);\n      loadStoresForLocation(location);\n    } catch (error) {\n      alert(\n        'Unable to get your current location. Please check your browser settings.'\n      );\n    } finally {\n      setLocationLoading(false);\n    }\n  };\n\n  const applyFilters = useCallback(() => {\n    let filtered = [...stores];\n\n    if (activeFilter === 'featured') {\n      filtered = filtered.filter(store => store.featured);\n    }\n\n    switch (sortBy) {\n      case 'distance':\n        filtered.sort((a, b) => a.distance - b.distance);\n        break;\n      case 'rating':\n        filtered.sort((a, b) => b.rating - a.rating);\n        break;\n      case 'name':\n        filtered.sort((a, b) => a.name.localeCompare(b.name));\n        break;\n      default:\n        break;\n    }\n\n    setFilteredStores(filtered);\n  }, [stores, activeFilter, sortBy]);\n\n  useEffect(() => {\n    initializeLocation();\n  }, [initializeLocation]);\n\n  useEffect(() => {\n    applyFilters();\n  }, [applyFilters]);\n\n  if (loading) {\n    return (\n      <PageContainer>\n        <NavHeader>\n          <NavContent>\n            <Logo>\n              <FaRing /> Wedding Vendors\n            </Logo>\n            <BackButton onClick={() => navigate('/')}>\n              <FaHome />\n              Back to Home\n            </BackButton>\n          </NavContent>\n        </NavHeader>\n        <LoadingState>\n          <div className=\"spinner\">💍</div>\n          <h3>Finding wedding vendors near you...</h3>\n          <p>Please wait while we locate nearby wedding services.</p>\n        </LoadingState>\n      </PageContainer>\n    );\n  }\n\n  return (\n    <PageContainer>\n      <NavHeader>\n        <NavContent>\n          <Logo>\n            <FaRing /> Wedding Vendors\n          </Logo>\n          <BackButton onClick={() => navigate('/')}>\n            <FaHome />\n            Back to Home\n          </BackButton>\n        </NavContent>\n      </NavHeader>\n\n      <Container>\n        <PageHeader>\n          <PageTitle>Wedding Vendors Near You</PageTitle>\n          <PageSubtitle>\n            Find the perfect vendors to make your special day unforgettable\n          </PageSubtitle>\n          {currentLocation && (\n            <LocationDisplay>\n              <FaMapMarkerAlt />\n              <span>\n                {currentLocation.city}, {currentLocation.state}\n                {currentLocation.isDefault && ' (Default Location)'}\n              </span>\n            </LocationDisplay>\n          )}\n        </PageHeader>\n\n        <SearchSection>\n          <SearchForm onSubmit={handleLocationSearch}>\n            <SearchInputContainer>\n              <SearchIcon>\n                <FaSearch />\n              </SearchIcon>\n              <SearchInput\n                type=\"text\"\n                placeholder=\"Enter city name or ZIP code...\"\n                value={searchTerm}\n                onChange={e => setSearchTerm(e.target.value)}\n              />\n            </SearchInputContainer>\n\n            <LocationButton\n              type=\"button\"\n              onClick={handleUseCurrentLocation}\n              disabled={locationLoading}\n            >\n              <FaLocationArrow />\n              Use My Location\n            </LocationButton>\n\n            <SearchButton type=\"submit\" disabled={locationLoading}>\n              {locationLoading ? 'Searching...' : 'Search'}\n            </SearchButton>\n          </SearchForm>\n        </SearchSection>\n\n        <FiltersSection>\n          <FilterGroup>\n            <FilterButton\n              active={activeFilter === 'all'}\n              onClick={() => setActiveFilter('all')}\n            >\n              All Vendors\n            </FilterButton>\n            <FilterButton\n              active={activeFilter === 'featured'}\n              onClick={() => setActiveFilter('featured')}\n            >\n              Featured\n            </FilterButton>\n          </FilterGroup>\n\n          <FilterGroup>\n            <SortSelect\n              value={sortBy}\n              onChange={e => setSortBy(e.target.value)}\n            >\n              <option value=\"distance\">Sort by Distance</option>\n              <option value=\"rating\">Sort by Rating</option>\n              <option value=\"name\">Sort by Name</option>\n            </SortSelect>\n          </FilterGroup>\n        </FiltersSection>\n\n        <ResultsInfo>\n          <span>\n            {filteredStores.length} vendor\n            {filteredStores.length !== 1 ? 's' : ''} found\n          </span>\n        </ResultsInfo>\n\n        {filteredStores.length > 0 ? (\n          <StoresGrid>\n            {filteredStores.map(store => (\n              <StoreCard key={store.id} store={store} category=\"weddings\" />\n            ))}\n          </StoresGrid>\n        ) : (\n          <EmptyState>\n            <h3>No vendors found</h3>\n            <p>\n              Try searching for a different location or adjusting your filters.\n            </p>\n          </EmptyState>\n        )}\n      </Container>\n    </PageContainer>\n  );\n};\n\nexport default WeddingStoresListing;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/weddings/pages/VendorDashboard.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'FaAddressCard' is defined but never used.","line":12,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":12,"endColumn":16},{"ruleId":"no-unused-vars","severity":1,"message":"'FaQuestionCircle' is defined but never used.","line":13,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'FaExternalLinkAlt' is defined but never used.","line":22,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":22,"endColumn":20},{"ruleId":"no-unused-vars","severity":1,"message":"'FaGlobe' is defined but never used.","line":25,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":25,"endColumn":10},{"ruleId":"no-unused-vars","severity":1,"message":"'FaPhone' is defined but never used.","line":26,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":26,"endColumn":10},{"ruleId":"no-unused-vars","severity":1,"message":"'FaEnvelope' is defined but never used.","line":27,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":27,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'FaMapMarkerAlt' is defined but never used.","line":28,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":28,"endColumn":17},{"ruleId":"no-unused-vars","severity":1,"message":"'FaStar' is defined but never used.","line":29,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":29,"endColumn":9},{"ruleId":"no-unused-vars","severity":1,"message":"'FaCheck' is defined but never used.","line":31,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":31,"endColumn":10},{"ruleId":"no-unused-vars","severity":1,"message":"'FaTextHeight' is defined but never used.","line":35,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":35,"endColumn":15},{"ruleId":"no-unused-vars","severity":1,"message":"'FaQuoteLeft' is defined but never used.","line":37,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":37,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'FaCopy' is defined but never used.","line":44,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":44,"endColumn":9},{"ruleId":"no-unused-vars","severity":1,"message":"'updateVendorField' is defined but never used.","line":52,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":52,"endColumn":20},{"ruleId":"no-unused-vars","severity":1,"message":"'updateVendorImage' is defined but never used.","line":53,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":53,"endColumn":20},{"ruleId":"no-unused-vars","severity":1,"message":"'updateVendorGallery' is defined but never used.","line":54,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":54,"endColumn":22},{"ruleId":"no-unused-vars","severity":1,"message":"'updateServices' is defined but never used.","line":55,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":55,"endColumn":17},{"ruleId":"no-unused-vars","severity":1,"message":"'updateTestimonials' is defined but never used.","line":56,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":56,"endColumn":21},{"ruleId":"no-unused-vars","severity":1,"message":"'updatePackages' is defined but never used.","line":57,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":57,"endColumn":17},{"ruleId":"no-unused-vars","severity":1,"message":"'updateRecentWork' is defined but never used.","line":58,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":58,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'updateCustomSections' is defined but never used.","line":59,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":59,"endColumn":23},{"ruleId":"no-unused-vars","severity":1,"message":"'saveChanges' is defined but never used.","line":60,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":60,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'toggleSectionVisibility' is defined but never used.","line":62,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":62,"endColumn":26},{"ruleId":"no-unused-vars","severity":1,"message":"'user' is assigned a value but never used.","line":690,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":690,"endColumn":15},{"ruleId":"no-unused-vars","severity":1,"message":"'hasUnsavedChanges' is assigned a value but never used.","line":694,"column":26,"nodeType":"Identifier","messageId":"unusedVar","endLine":694,"endColumn":43},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":918,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":918,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[23322,23427],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":923,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":923,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[23456,23557],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1005,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1005,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[25336,25390],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1176,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1176,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[31813,31853],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1263,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":1265,"endColumn":8},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1266,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1266,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[35247,35347],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1271,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1271,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[35376,35434],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1272,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":1272,"endColumn":67},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1278,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1278,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[35620,35662],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1281,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":1281,"endColumn":74},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1350,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1350,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[38248,38298],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1373,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1373,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[39082,39126],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1420,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1420,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[40457,40490],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1424,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":1424,"endColumn":71},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1429,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1429,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[40744,40790],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1430,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":1430,"endColumn":55},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1588,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":1588,"endColumn":69},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1590,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1590,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[46842,46892],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1591,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":1591,"endColumn":59},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1779,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":1779,"endColumn":44},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used. Allowed unused args must match /^_/u.","line":3496,"column":31,"nodeType":"Identifier","messageId":"unusedVar","endLine":3496,"endColumn":32},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used. Allowed unused args must match /^_/u.","line":3505,"column":31,"nodeType":"Identifier","messageId":"unusedVar","endLine":3505,"endColumn":32},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used. Allowed unused args must match /^_/u.","line":3514,"column":31,"nodeType":"Identifier","messageId":"unusedVar","endLine":3514,"endColumn":32},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used. Allowed unused args must match /^_/u.","line":3522,"column":31,"nodeType":"Identifier","messageId":"unusedVar","endLine":3522,"endColumn":32},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":3565,"column":21,"nodeType":"CallExpression","messageId":"unexpected","endLine":3567,"endColumn":22},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":3598,"column":25,"nodeType":"CallExpression","messageId":"unexpected","endLine":3598,"endColumn":75},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":3600,"column":23,"nodeType":"CallExpression","messageId":"unexpected","endLine":3602,"endColumn":24},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":4398,"column":19,"nodeType":"CallExpression","messageId":"unexpected","endLine":4400,"endColumn":20}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":53,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport {\n  FaArrowLeft,\n  FaUser,\n  FaImages,\n  FaCog,\n  FaServicestack,\n  FaBriefcase,\n  FaAddressCard,\n  FaQuestionCircle,\n  FaComments,\n  FaDollarSign,\n  FaUpload,\n  FaTrash,\n  FaPlus,\n  FaEdit,\n  FaSave,\n  FaTimes,\n  FaExternalLinkAlt,\n  FaEye,\n  FaCamera,\n  FaGlobe,\n  FaPhone,\n  FaEnvelope,\n  FaMapMarkerAlt,\n  FaStar,\n  FaChevronRight,\n  FaCheck,\n  FaBars,\n  FaLock,\n  FaGripHorizontal,\n  FaTextHeight,\n  FaList,\n  FaQuoteLeft,\n  FaUndo,\n  FaCheckCircle,\n  FaVideo,\n  FaEyeSlash,\n  FaFileImage,\n  FaLink,\n  FaCopy,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport { getWeddingVendorById as getVendorById } from '../../DummyData';\nimport { useAuth } from '../../context/AuthContext';\nimport {\n  setEditingVendor,\n  initializeVendor,\n  updateVendorField,\n  updateVendorImage,\n  updateVendorGallery,\n  updateServices,\n  updateTestimonials,\n  updatePackages,\n  updateRecentWork,\n  updateCustomSections,\n  saveChanges,\n  discardChanges,\n  toggleSectionVisibility,\n} from '../../store/slices/vendorManagementSlice';\n\nconst DashboardContainer = styled.div`\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n  display: flex;\n`;\n\nconst MobileSidebarCloseButton = styled.button`\n  display: none;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    display: flex;\n    position: absolute;\n    top: ${theme.spacing.lg};\n    right: ${theme.spacing.lg};\n    background: none;\n    border: none;\n    color: white;\n    font-size: 1.5rem;\n    cursor: pointer;\n    z-index: 1001;\n    padding: ${theme.spacing.sm};\n    border-radius: ${theme.borderRadius.md};\n    align-items: center;\n    justify-content: center;\n    transition: all 0.2s ease;\n\n    &:hover {\n      background: rgba(255, 255, 255, 0.1);\n    }\n  }\n`;\n\nconst Sidebar = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'mobileOpen',\n})`\n  width: 280px;\n  background: ${theme.colors.white};\n  border-right: 1px solid ${theme.colors.gray200};\n  box-shadow: ${theme.shadows.md};\n  position: fixed;\n  height: 100vh;\n  overflow-y: auto;\n  z-index: 100;\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    width: 260px;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    width: 100%;\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 100vh;\n    z-index: 1000;\n    transform: translateX(${props => (props.mobileOpen ? '0' : '-100%')});\n    transition: transform 0.3s ease;\n    overflow-y: auto;\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst SidebarHeader = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.primary};\n  color: white;\n`;\n\nconst VendorName = styled.h2`\n  margin: 0 0 ${theme.spacing.xs} 0;\n  font-size: 1.3rem;\n  font-weight: 700;\n`;\n\nconst VendorRole = styled.p`\n  margin: 0;\n  font-size: 0.9rem;\n  opacity: 0.9;\n`;\n\nconst SidebarNav = styled.nav`\n  padding: ${theme.spacing.lg} 0;\n  flex: 1;\n  overflow-y: auto;\n`;\n\nconst NavSection = styled.div`\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst NavSectionTitle = styled.h3`\n  font-size: 0.8rem;\n  font-weight: 600;\n  color: ${theme.colors.gray500};\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  padding: 0 ${theme.spacing.lg};\n  margin: 0 0 ${theme.spacing.sm} 0;\n`;\n\nconst NavItem = styled.button.withConfig({\n  shouldForwardProp: prop => !['active'].includes(prop),\n})`\n  width: 100%;\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  background: none;\n  border: none;\n  text-align: left;\n  cursor: pointer;\n  font-size: 0.95rem;\n  color: ${props =>\n    props.active ? theme.colors.primary : theme.colors.gray700};\n  background: ${props =>\n    props.active ? theme.colors.primary + '10' : 'transparent'};\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  border-left: 3px solid\n    ${props => (props.active ? theme.colors.primary : 'transparent')};\n\n  &:hover {\n    background: ${theme.colors.gray50};\n    color: ${theme.colors.primary};\n  }\n\n  svg {\n    font-size: 1rem;\n  }\n`;\n\nconst SidebarFooter = styled.div`\n  padding: ${theme.spacing.lg};\n  border-top: 1px solid ${theme.colors.gray200};\n  background: ${theme.colors.gray50};\n  margin-top: auto;\n`;\n\nconst SaveActionsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.md};\n`;\n\nconst SaveButton = styled.button.withConfig({\n  shouldForwardProp: prop => !['variant', 'disabled', 'saved'].includes(prop),\n})`\n  background: ${props => {\n    if (props.disabled) {\n      return props.saved ? theme.colors.success : theme.colors.gray300;\n    }\n    return props.variant === 'primary'\n      ? `linear-gradient(135deg, ${theme.colors.primary}, ${theme.colors.primaryDark})`\n      : props.variant === 'secondary'\n        ? theme.colors.gray300\n        : theme.colors.white;\n  }};\n  color: ${props => {\n    if (props.disabled) {\n      return props.saved ? 'white' : theme.colors.gray500;\n    }\n    return props.variant === 'primary'\n      ? 'white'\n      : props.variant === 'secondary'\n        ? theme.colors.gray700\n        : theme.colors.gray700;\n  }};\n  border: ${props =>\n    props.variant === 'primary'\n      ? 'none'\n      : `2px solid ${props.disabled && props.saved ? theme.colors.success : theme.colors.gray300}`};\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: ${props => (props.disabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n  transition: all 0.3s ease;\n  font-size: 0.9rem;\n  white-space: nowrap;\n  width: 100%;\n\n  &:hover {\n    transform: ${props => (props.disabled ? 'none' : 'translateY(-1px)')};\n    box-shadow: ${props => (props.disabled ? 'none' : theme.shadows.md)};\n  }\n`;\n\nconst ChangesIndicator = styled.div`\n  color: ${theme.colors.warning};\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  font-size: 0.85rem;\n  margin-bottom: ${theme.spacing.sm};\n  justify-content: center;\n`;\n\nconst MobileMenuButton = styled.button`\n  display: none;\n  position: fixed;\n  top: ${theme.spacing.lg};\n  left: ${theme.spacing.lg};\n  z-index: 1001;\n  background: ${theme.colors.primary};\n  color: white;\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  padding: ${theme.spacing.sm};\n  font-size: 1.25rem;\n  cursor: pointer;\n  box-shadow: ${theme.shadows.md};\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: scale(1.05);\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nconst MobileSidebarOverlay = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  display: none;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    display: block;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.2);\n    z-index: 999;\n    opacity: ${props => (props.isOpen ? '1' : '0')};\n    visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n    transition:\n      opacity 0.3s ease,\n      visibility 0.3s ease;\n  }\n`;\n\nconst MainContent = styled.div`\n  flex: 1;\n  margin-left: 280px;\n  padding: ${theme.spacing.xl};\n  min-height: 100vh;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    margin-left: 260px;\n    padding: ${theme.spacing.lg};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    margin-left: 0;\n    padding: ${theme.spacing.md};\n    padding-top: 4rem;\n  }\n`;\n\nconst ContentHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.xxl};\n  padding-bottom: ${theme.spacing.lg};\n  border-bottom: 1px solid ${theme.colors.gray200};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin: 0;\n  flex: 1;\n`;\n\nconst PageActions = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  align-items: center;\n  flex-wrap: wrap;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    width: 100%;\n    justify-content: flex-start;\n  }\n`;\n\nconst ActionButton = styled.button.withConfig({\n  shouldForwardProp: prop => !['variant'].includes(prop),\n})`\n  background: ${props =>\n    props.variant === 'primary'\n      ? theme.colors.primary\n      : props.variant === 'success'\n        ? theme.colors.green500\n        : props.variant === 'danger'\n          ? theme.colors.error\n          : theme.colors.white};\n  color: ${props =>\n    props.variant === 'primary' ||\n    props.variant === 'success' ||\n    props.variant === 'danger'\n      ? 'white'\n      : theme.colors.gray700};\n  border: 2px solid\n    ${props =>\n      props.variant === 'primary'\n        ? theme.colors.primary\n        : props.variant === 'success'\n          ? theme.colors.green500\n          : props.variant === 'danger'\n            ? theme.colors.error\n            : theme.colors.gray200};\n  padding: ${theme.spacing.sm} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n\n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: ${theme.shadows.md};\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.xs} ${theme.spacing.md};\n    font-size: 0.9rem;\n    gap: ${theme.spacing.xs};\n    white-space: nowrap;\n\n    &:hover {\n      transform: none;\n    }\n  }\n`;\n\nconst ContentSection = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xxl};\n  box-shadow: ${theme.shadows.sm};\n  margin-bottom: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg};\n    margin-bottom: ${theme.spacing.lg};\n    border-radius: ${theme.borderRadius.md};\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin: 0 0 ${theme.spacing.lg} 0;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst VisibilityToggleContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  font-size: 0.9rem;\n  color: ${theme.colors.gray700};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    width: 100%;\n    justify-content: space-between;\n  }\n`;\n\nconst FormGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.md};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n`;\n\nconst FormLabel = styled.label`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  font-size: 0.95rem;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst FormInput = styled.input`\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n\nconst FormTextarea = styled.textarea`\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  min-height: 120px;\n  resize: vertical;\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n\nconst FileUploadContainer = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  align-items: flex-end;\n  flex-wrap: wrap;\n`;\n\nconst FileUploadBox = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 120px;\n  height: 120px;\n  border: 2px dashed ${theme.colors.gray300};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  background: ${theme.colors.gray50};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    background: ${theme.colors.primary}10;\n  }\n\n  input {\n    display: none;\n  }\n`;\n\nconst ImagePreview = styled.div`\n  position: relative;\n  width: 120px;\n  height: 120px;\n  border-radius: ${theme.borderRadius.md};\n  overflow: hidden;\n  box-shadow: ${theme.shadows.sm};\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nconst ImageOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0;\n  transition: opacity 0.2s ease;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst RemoveImageButton = styled.button`\n  background: ${theme.colors.error};\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nconst ToggleSwitch = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 50px;\n  height: 24px;\n  margin-left: auto;\n\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  span {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: ${theme.colors.gray300};\n    transition: 0.4s;\n    border-radius: 24px;\n\n    &:before {\n      position: absolute;\n      content: '';\n      height: 18px;\n      width: 18px;\n      left: 3px;\n      bottom: 3px;\n      background-color: white;\n      transition: 0.4s;\n      border-radius: 50%;\n    }\n  }\n\n  input:checked + span {\n    background-color: ${theme.colors.primary};\n  }\n\n  input:checked + span:before {\n    transform: translateX(26px);\n  }\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.lg};\n  flex-wrap: wrap;\n`;\n\nconst Tab = styled.button.withConfig({\n  shouldForwardProp: prop => !['active'].includes(prop),\n})`\n  background: ${props =>\n    props.active ? theme.colors.primary : theme.colors.gray100};\n  color: ${props => (props.active ? 'white' : theme.colors.gray700)};\n  border: none;\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${props =>\n      props.active ? theme.colors.primaryDark : theme.colors.gray200};\n  }\n`;\n\nconst VendorDashboard = () => {\n  const { vendorSlug } = useParams();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n\n  // Redux state\n  const { editingVendor, hasUnsavedChanges, originalVendor } = useSelector(\n    state => state.vendorManagement\n  );\n\n  // Get vendor ID from URL path\n  const currentPath = window.location.pathname;\n  const pathSegments = currentPath.split('/').filter(Boolean);\n  const vendorId = vendorSlug || pathSegments[0];\n\n  const [vendor, setVendor] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [activeSection, setActiveSection] = useState('hero');\n  const [mobileSidebarOpen, setMobileSidebarOpen] = useState(false);\n  const [saved, setSaved] = useState(false);\n\n  // Local form states - these hold temporary changes\n  const [heroData, setHeroData] = useState({\n    name: '',\n    tagline: '',\n    image: '',\n    imageFile: null,\n  });\n\n  const [aboutUsData, setAboutUsData] = useState({\n    description: '',\n    mission: '',\n    experience: '',\n    completedWeddings: '',\n    satisfiedCouples: '',\n    videoEmbed: '',\n    aboutImage: '',\n    mediaType: 'video', // 'video' or 'image'\n    videoFile: null,\n    imageFile: null,\n    experienceVisible: true,\n    weddingsVisible: true,\n    couplesVisible: true,\n  });\n\n  const [servicesData, setServicesData] = useState([]);\n  const [recentWorkData, setRecentWorkData] = useState([]);\n\n  const [galleryData, setGalleryData] = useState({\n    subtitle: '',\n    activeTab: 'decor',\n    categories: {\n      decor: { title: 'Decor', images: [] },\n      venues: { title: 'Venues', images: [] },\n      photography: { title: 'Photography', images: [] },\n      catering: { title: 'Catering', images: [] },\n    },\n  });\n\n  const [testimonialsData, setTestimonialsData] = useState([]);\n  const [packagesData, setPackagesData] = useState([]);\n  const [customSections, setCustomSections] = useState([]);\n  const [customSectionVisibility, setCustomSectionVisibility] = useState({});\n\n  const [sectionOrder, setSectionOrder] = useState([\n    'hero',\n    'about-us',\n    'services-offered',\n    'recent-work',\n    'gallery',\n    'packages-pricing',\n    'testimonials',\n  ]);\n\n  // Complete section order including custom sections\n  const [completeSectionOrder, setCompleteSectionOrder] = useState([]);\n\n  // Section visibility state\n  const [sectionVisibility, setSectionVisibility] = useState({\n    hero: true,\n    'about-us': true,\n    'services-offered': true,\n    'recent-work': true,\n    gallery: true,\n    testimonials: true,\n    'packages-pricing': true,\n  });\n\n  const [changedSections, setChangedSections] = useState(new Set());\n  const [showCustomSectionModal, setShowCustomSectionModal] = useState(false);\n  const [editingCustomSection, setEditingCustomSection] = useState(null);\n  const [customSectionForm, setCustomSectionForm] = useState({\n    title: '',\n    subtitle: '',\n    type: 'text',\n    content: '',\n    images: [],\n    cards: [],\n    visible: true,\n  });\n  const [showDeleteAccountModal, setShowDeleteAccountModal] = useState(false);\n\n  // Track changes in a section and update Redux editing vendor for real-time preview\n  const trackSectionChange = sectionId => {\n    setChangedSections(prev => new Set([...prev, sectionId]));\n    setSaved(false);\n\n    // Immediately update Redux editing vendor for real-time preview\n    updateEditingVendorInRedux();\n  };\n\n  // Handle section visibility toggle\n  const toggleSectionVisibility = sectionId => {\n    if (sectionId.startsWith('custom-')) {\n      const customId = sectionId.replace('custom-', '');\n      setCustomSectionVisibility(prev => ({\n        ...prev,\n        [customId]: !prev[customId],\n      }));\n    } else {\n      setSectionVisibility(prev => ({\n        ...prev,\n        [sectionId]: !prev[sectionId],\n      }));\n    }\n    trackSectionChange(sectionId);\n  };\n\n  // Helper function to immediately update Redux editing vendor\n  const updateEditingVendorInRedux = () => {\n    if (!editingVendor) return;\n\n    try {\n      // Create updated vendor object with current form data\n      const updatedVendor = {\n        ...editingVendor,\n        name: heroData.name || editingVendor.name || '',\n        tagline: heroData.tagline || editingVendor.tagline || '',\n        image: heroData.image || editingVendor.image || '',\n        description: aboutUsData.description || editingVendor.description || '',\n        aboutUs: {\n          ...(editingVendor.aboutUs || {}),\n          text: aboutUsData.description || editingVendor.aboutUs?.text || '',\n          experience:\n            aboutUsData.experience || editingVendor.aboutUs?.experience || '',\n          completedWeddings:\n            aboutUsData.completedWeddings ||\n            editingVendor.aboutUs?.completedWeddings ||\n            '',\n          satisfiedCouples:\n            aboutUsData.satisfiedCouples ||\n            editingVendor.aboutUs?.satisfiedCouples ||\n            '',\n          videoEmbed:\n            aboutUsData.videoEmbed || editingVendor.aboutUs?.videoEmbed || '',\n          aboutImage:\n            aboutUsData.aboutImage || editingVendor.aboutUs?.aboutImage || '',\n          experienceVisible: aboutUsData.experienceVisible,\n          weddingsVisible: aboutUsData.weddingsVisible,\n          couplesVisible: aboutUsData.couplesVisible,\n        },\n        services: servicesData.map(service => ({\n          id: service.id,\n          name: service.name || '',\n          description: service.description || '',\n          price: service.price || '',\n          icon: service.icon || '',\n          image: service.image || '',\n        })),\n        locationPortfolio: recentWorkData.map(work => ({\n          id: work.id,\n          location: work.title || '',\n          city: work.location || '',\n          weddingDate: work.date || '',\n          coupleNames: work.coupleNames || '',\n          description: work.description || '',\n          coverImage: work.image || '',\n          services: Array.isArray(work.services) ? work.services : [],\n          highlights: Array.isArray(work.highlights) ? work.highlights : [],\n          gallery: Array.isArray(work.gallery) ? work.gallery : [],\n        })),\n        testimonials: testimonialsData.map(testimonial => ({\n          id: testimonial.id,\n          name: testimonial.client || '',\n          text: testimonial.text || '',\n          rating: testimonial.rating || 5,\n          wedding: testimonial.wedding || '',\n        })),\n        packages: packagesData.map(pkg => ({\n          id: pkg.id,\n          name: pkg.name || '',\n          description: pkg.description || '',\n          price: pkg.price || '',\n          features: Array.isArray(pkg.features) ? pkg.features : [],\n        })),\n        gallery: (() => {\n          const cleanGallery = {};\n          Object.keys(galleryData.categories || {}).forEach(key => {\n            cleanGallery[key] = {\n              title: galleryData.categories[key]?.title || key,\n              images: Array.isArray(galleryData.categories[key]?.images)\n                ? galleryData.categories[key].images.filter(\n                    img => typeof img === 'string'\n                  )\n                : [],\n            };\n          });\n          return cleanGallery;\n        })(),\n        sectionOrder:\n          completeSectionOrder.length > 0 ? completeSectionOrder : sectionOrder,\n        customSections: customSections,\n        sectionVisibility: sectionVisibility,\n        customSectionVisibility: customSectionVisibility,\n      };\n\n      // Update Redux with the current form data for real-time preview\n      Object.keys(updatedVendor).forEach(key => {\n        if (\n          key !== 'id' &&\n          JSON.stringify(updatedVendor[key]) !==\n            JSON.stringify(editingVendor[key])\n        ) {\n          dispatch({\n            type: 'vendorManagement/updateVendorField',\n            payload: { field: key, value: updatedVendor[key] },\n          });\n        }\n      });\n\n      console.log(\n        'Real-time preview: Updated editing vendor in Redux',\n        updatedVendor\n      );\n    } catch (error) {\n      console.error(\n        'Error updating editing vendor for real-time preview:',\n        error\n      );\n    }\n  };\n\n  const navigationItems = [\n    {\n      id: 'hero',\n      label: 'Hero Section',\n      icon: FaImages,\n      section: 'Content Management',\n    },\n    {\n      id: 'about-us',\n      label: 'About Us',\n      icon: FaUser,\n      section: 'Content Management',\n    },\n    {\n      id: 'services-offered',\n      label: 'Services Offered',\n      icon: FaServicestack,\n      section: 'Content Management',\n    },\n    {\n      id: 'recent-work',\n      label: 'Recent Work',\n      icon: FaBriefcase,\n      section: 'Content Management',\n    },\n    {\n      id: 'gallery',\n      label: 'Gallery',\n      icon: FaImages,\n      section: 'Content Management',\n    },\n    {\n      id: 'testimonials',\n      label: 'Testimonials',\n      icon: FaComments,\n      section: 'Content Management',\n    },\n    {\n      id: 'packages-pricing',\n      label: 'Packages & Pricing',\n      icon: FaDollarSign,\n      section: 'Content Management',\n    },\n    {\n      id: 'custom-sections',\n      label: 'Custom Sections',\n      icon: FaPlus,\n      section: 'Content Management',\n    },\n    {\n      id: 'section-order',\n      label: 'Section Order',\n      icon: FaList,\n      section: 'Content Management',\n    },\n    {\n      id: 'settings',\n      label: 'Settings',\n      icon: FaCog,\n      section: 'Account Management',\n    },\n  ];\n\n  useEffect(() => {\n    const vendorData = getVendorById(vendorId);\n    if (vendorData) {\n      setVendor(vendorData);\n\n      // Initialize vendor in Redux state if it doesn't exist, then set as editing\n      try {\n        // Create a sanitized version for Redux\n        const sanitizedVendor = JSON.parse(JSON.stringify(vendorData));\n        dispatch(initializeVendor(sanitizedVendor));\n        dispatch(setEditingVendor(vendorId));\n      } catch (error) {\n        console.error('Error setting editing vendor:', error);\n      }\n\n      // Pre-fill all form data from vendor data\n      setHeroData({\n        name: vendorData.name || '',\n        tagline: vendorData.tagline || '',\n        image: vendorData.image || '',\n        imageFile: null,\n      });\n\n      setAboutUsData({\n        description: vendorData.aboutUs?.text || vendorData.description || '',\n        mission: vendorData.mission || '',\n        experience: vendorData.aboutUs?.experience || '0+',\n        completedWeddings: vendorData.aboutUs?.completedWeddings || '0+',\n        satisfiedCouples: vendorData.aboutUs?.satisfiedCouples || '0+',\n        videoEmbed: vendorData.aboutUs?.videoEmbed || '',\n        aboutImage: vendorData.aboutUs?.aboutImage || '',\n        mediaType:\n          vendorData.aboutUs?.videoEmbed && !vendorData.aboutUs?.aboutImage\n            ? 'video'\n            : 'image',\n        videoFile: null,\n        imageFile: null,\n        experienceVisible: vendorData.aboutUs?.experienceVisible !== false,\n        weddingsVisible: vendorData.aboutUs?.weddingsVisible !== false,\n        couplesVisible: vendorData.aboutUs?.couplesVisible !== false,\n      });\n\n      // Pre-fill services with unique IDs\n      const servicesWithIds = (vendorData.services || []).map(\n        (service, index) => ({\n          ...service,\n          id: service.id || `service-${Date.now()}-${index}`,\n          price: service.price || '$0',\n          imageFile: null,\n        })\n      );\n      setServicesData(servicesWithIds);\n\n      // Pre-fill recent work data with unique IDs and full portfolio details\n      const recentWorkWithIds = (vendorData.locationPortfolio || []).map(\n        (work, index) => ({\n          ...work,\n          id: work.id || `work-${Date.now()}-${index}`,\n          title: work.location || '',\n          location: work.city || '',\n          date: work.weddingDate || '',\n          image: work.coverImage || '',\n          coupleNames: work.coupleNames || '',\n          description: work.description || '',\n          services: work.services || [],\n          highlights: work.highlights || [],\n          gallery: work.gallery || [],\n          imageFile: null,\n        })\n      );\n      setRecentWorkData(recentWorkWithIds);\n\n      // Pre-fill gallery data - convert old format to new format\n      const galleryCategories = {};\n      if (vendorData.gallery) {\n        Object.keys(vendorData.gallery).forEach(key => {\n          if (Array.isArray(vendorData.gallery[key])) {\n            galleryCategories[key] = {\n              title: key.charAt(0).toUpperCase() + key.slice(1),\n              images: vendorData.gallery[key],\n            };\n          } else if (vendorData.gallery[key]?.images) {\n            galleryCategories[key] = vendorData.gallery[key];\n          }\n        });\n      }\n\n      // Add default categories if none exist\n      if (Object.keys(galleryCategories).length === 0) {\n        galleryCategories.decor = { title: 'Decor', images: [] };\n        galleryCategories.venues = { title: 'Venues', images: [] };\n        galleryCategories.photography = { title: 'Photography', images: [] };\n        galleryCategories.catering = { title: 'Catering', images: [] };\n      }\n\n      setGalleryData({\n        subtitle:\n          'Browse through our portfolio of beautiful weddings and events',\n        activeTab: Object.keys(galleryCategories)[0] || 'decor',\n        categories: galleryCategories,\n      });\n\n      // Pre-fill testimonials data with unique IDs\n      const testimonialsWithIds = (vendorData.testimonials || []).map(\n        (testimonial, index) => ({\n          ...testimonial,\n          id: testimonial.id || `testimonial-${Date.now()}-${index}`,\n          client: testimonial.name || '',\n          text: testimonial.text || '',\n          rating: testimonial.rating || 5,\n        })\n      );\n      setTestimonialsData(testimonialsWithIds);\n\n      // Pre-fill packages data with unique IDs\n      const packagesWithIds = (vendorData.packages || []).map((pkg, index) => ({\n        ...pkg,\n        id: pkg.id || `package-${Date.now()}-${index}`,\n        features: pkg.features || [],\n      }));\n      setPackagesData(packagesWithIds);\n\n      // Pre-fill custom sections with unique IDs\n      const customSectionsWithIds = (vendorData.customSections || []).map(\n        (section, index) => ({\n          ...section,\n          id: section.id || `custom-section-${Date.now()}-${index}`,\n        })\n      );\n      setCustomSections(customSectionsWithIds);\n\n      // Initialize custom section visibility\n      const customVisibility = {};\n      customSectionsWithIds.forEach(section => {\n        customVisibility[section.id] =\n          vendorData.customSectionVisibility?.[section.id] !== false;\n      });\n      setCustomSectionVisibility(customVisibility);\n\n      // Initialize complete section order\n      const defaultOrder = [\n        'hero',\n        'about-us',\n        'services-offered',\n        'recent-work',\n        'gallery',\n        'packages-pricing',\n        'testimonials',\n      ];\n\n      // Use vendor's section order if available, otherwise use default\n      const vendorSectionOrder = vendorData.sectionOrder || defaultOrder;\n      setSectionOrder(vendorSectionOrder);\n\n      // Build complete section order including custom sections\n      const completeOrder = [...vendorSectionOrder];\n      customSectionsWithIds.forEach(customSection => {\n        const customId = `custom-${customSection.id}`;\n        if (!completeOrder.includes(customId)) {\n          completeOrder.push(customId);\n        }\n      });\n      setCompleteSectionOrder(completeOrder);\n\n      // Initialize section visibility from vendor data\n      const initialVisibility = {\n        hero: vendorData.sectionVisibility?.hero !== false,\n        'about-us': vendorData.sectionVisibility?.['about-us'] !== false,\n        'services-offered':\n          vendorData.sectionVisibility?.['services-offered'] !== false,\n        'recent-work': vendorData.sectionVisibility?.['recent-work'] !== false,\n        gallery: vendorData.sectionVisibility?.gallery !== false,\n        testimonials: vendorData.sectionVisibility?.testimonials !== false,\n        'packages-pricing':\n          vendorData.sectionVisibility?.['packages-pricing'] !== false,\n      };\n      setSectionVisibility(initialVisibility);\n    }\n    setLoading(false);\n  }, [vendorId, dispatch]);\n\n  // Handle Save Changes - saves to editing state for real-time preview\n  const handleSaveChanges = () => {\n    console.log('handleSaveChanges called');\n\n    try {\n      // Update editing vendor with current form data for real-time preview\n      const updatedVendor = {\n        ...editingVendor,\n        name: heroData.name || '',\n        tagline: heroData.tagline || '',\n        image: heroData.image || '',\n        description: aboutUsData.description || '',\n        aboutUs: {\n          text: aboutUsData.description || '',\n          experience: aboutUsData.experience || '',\n          completedWeddings: aboutUsData.completedWeddings || '',\n          satisfiedCouples: aboutUsData.satisfiedCouples || '',\n          videoEmbed: aboutUsData.videoEmbed || '',\n          aboutImage: aboutUsData.aboutImage || '',\n          experienceVisible: aboutUsData.experienceVisible,\n          weddingsVisible: aboutUsData.weddingsVisible,\n          couplesVisible: aboutUsData.couplesVisible,\n        },\n        services: servicesData.map(service => ({\n          id: service.id,\n          name: service.name || '',\n          description: service.description || '',\n          price: service.price || '',\n          icon: service.icon || '',\n          image: service.image || '',\n        })),\n        locationPortfolio: recentWorkData.map(work => ({\n          id: work.id,\n          location: work.title || '',\n          city: work.location || '',\n          weddingDate: work.date || '',\n          coupleNames: work.coupleNames || '',\n          description: work.description || '',\n          coverImage: work.image || '',\n          services: Array.isArray(work.services) ? work.services : [],\n          highlights: Array.isArray(work.highlights) ? work.highlights : [],\n          gallery: Array.isArray(work.gallery) ? work.gallery : [],\n        })),\n        testimonials: testimonialsData.map(testimonial => ({\n          id: testimonial.id,\n          name: testimonial.client || '',\n          text: testimonial.text || '',\n          rating: testimonial.rating || 5,\n          wedding: testimonial.wedding || '',\n        })),\n        packages: packagesData.map(pkg => ({\n          id: pkg.id,\n          name: pkg.name || '',\n          description: pkg.description || '',\n          price: pkg.price || '',\n          features: Array.isArray(pkg.features) ? pkg.features : [],\n        })),\n        gallery: (() => {\n          const cleanGallery = {};\n          Object.keys(galleryData.categories || {}).forEach(key => {\n            cleanGallery[key] = {\n              title: galleryData.categories[key]?.title || key,\n              images: Array.isArray(galleryData.categories[key]?.images)\n                ? galleryData.categories[key].images.filter(\n                    img => typeof img === 'string'\n                  )\n                : [],\n            };\n          });\n          return cleanGallery;\n        })(),\n      };\n\n      // Update the editing vendor in Redux for real-time preview\n      dispatch({\n        type: 'vendorManagement/setEditingVendor',\n        payload: updatedVendor.id,\n      });\n      Object.keys(updatedVendor).forEach(key => {\n        if (key !== 'id') {\n          dispatch({\n            type: 'vendorManagement/updateVendorField',\n            payload: { field: key, value: updatedVendor[key] },\n          });\n        }\n      });\n\n      setSaved(true);\n      setChangedSections(new Set());\n      alert(\n        'Changes saved! You can preview them in the vendor page. Click \"Save & Go Live\" to publish permanently.'\n      );\n      console.log(\n        'Updated editing vendor for real-time preview:',\n        updatedVendor\n      );\n    } catch (error) {\n      console.error('Error saving changes for preview:', error);\n      alert('Error saving changes for preview. Please try again.');\n    }\n  };\n\n  // Handle Save & Go Live - publishes changes to global state\n  const handleSaveAndGoLive = () => {\n    console.log('handleSaveAndGoLive called');\n\n    if (!editingVendor) {\n      alert('No vendor is being edited. Please try refreshing the page.');\n      return;\n    }\n\n    try {\n      // Create clean, serializable objects without File references\n      const cleanServices = servicesData.map(service => ({\n        id: service.id,\n        name: service.name || '',\n        description: service.description || '',\n        price: service.price || '',\n        icon: service.icon || '',\n        image: service.image || '',\n      }));\n\n      const cleanRecentWork = recentWorkData.map(work => ({\n        id: work.id,\n        location: work.title || '',\n        city: work.location || '',\n        weddingDate: work.date || '',\n        coupleNames: work.coupleNames || '',\n        description: work.description || '',\n        coverImage: work.image || '',\n        services: Array.isArray(work.services) ? work.services : [],\n        highlights: Array.isArray(work.highlights) ? work.highlights : [],\n        gallery: Array.isArray(work.gallery) ? work.gallery : [],\n      }));\n\n      const cleanTestimonials = testimonialsData.map(testimonial => ({\n        id: testimonial.id,\n        client: testimonial.client || '',\n        name: testimonial.client || '', // Map client to name for compatibility\n        text: testimonial.text || '',\n        rating: testimonial.rating || 5,\n        wedding: testimonial.wedding || '',\n      }));\n\n      const cleanPackages = packagesData.map(pkg => ({\n        id: pkg.id,\n        name: pkg.name || '',\n        description: pkg.description || '',\n        price: pkg.price || '',\n        features: Array.isArray(pkg.features) ? pkg.features : [],\n      }));\n\n      const cleanGallery = {};\n      Object.keys(galleryData.categories || {}).forEach(key => {\n        cleanGallery[key] = {\n          title: galleryData.categories[key]?.title || key,\n          images: Array.isArray(galleryData.categories[key]?.images)\n            ? galleryData.categories[key].images.filter(\n                img => typeof img === 'string'\n              )\n            : [],\n        };\n      });\n\n      const cleanAboutUs = {\n        text: aboutUsData.description || '',\n        experience: aboutUsData.experience || '',\n        completedWeddings: aboutUsData.completedWeddings || '',\n        satisfiedCouples: aboutUsData.satisfiedCouples || '',\n        videoEmbed: aboutUsData.videoEmbed || '',\n        aboutImage: aboutUsData.aboutImage || '',\n        experienceVisible: aboutUsData.experienceVisible,\n        weddingsVisible: aboutUsData.weddingsVisible,\n        couplesVisible: aboutUsData.couplesVisible,\n      };\n\n      console.log('Dispatching basic field updates...');\n      // Update basic fields one by one\n      dispatch({\n        type: 'vendorManagement/updateVendorField',\n        payload: { field: 'name', value: heroData.name || '' },\n      });\n      dispatch({\n        type: 'vendorManagement/updateVendorField',\n        payload: { field: 'tagline', value: heroData.tagline || '' },\n      });\n      dispatch({\n        type: 'vendorManagement/updateVendorField',\n        payload: { field: 'image', value: heroData.image || '' },\n      });\n      dispatch({\n        type: 'vendorManagement/updateVendorField',\n        payload: { field: 'description', value: aboutUsData.description || '' },\n      });\n      dispatch({\n        type: 'vendorManagement/updateVendorField',\n        payload: { field: 'aboutUs', value: cleanAboutUs },\n      });\n\n      console.log('Dispatching array updates...');\n      dispatch({\n        type: 'vendorManagement/updateServices',\n        payload: cleanServices,\n      });\n      dispatch({\n        type: 'vendorManagement/updateRecentWork',\n        payload: cleanRecentWork,\n      });\n      dispatch({\n        type: 'vendorManagement/updateTestimonials',\n        payload: cleanTestimonials,\n      });\n      dispatch({\n        type: 'vendorManagement/updatePackages',\n        payload: cleanPackages,\n      });\n      dispatch({\n        type: 'vendorManagement/updateVendorGallery',\n        payload: cleanGallery,\n      });\n      dispatch({\n        type: 'vendorManagement/updateVendorField',\n        payload: {\n          field: 'sectionOrder',\n          value:\n            completeSectionOrder.length > 0\n              ? completeSectionOrder\n              : sectionOrder,\n        },\n      });\n      dispatch({\n        type: 'vendorManagement/updateVendorField',\n        payload: { field: 'customSections', value: customSections },\n      });\n      dispatch({\n        type: 'vendorManagement/updateVendorField',\n        payload: { field: 'sectionVisibility', value: sectionVisibility },\n      });\n      dispatch({\n        type: 'vendorManagement/updateVendorField',\n        payload: {\n          field: 'customSectionVisibility',\n          value: customSectionVisibility,\n        },\n      });\n\n      console.log('Saving changes...');\n      dispatch({ type: 'vendorManagement/saveChanges' });\n\n      setSaved(false);\n      alert('All changes published to live vendor page successfully!');\n\n      // Navigate back to vendor page\n      navigate(`/${vendorId}`);\n    } catch (error) {\n      console.error('Error saving changes:', error);\n      alert('Error saving changes. Please try again.');\n    }\n  };\n\n  // Handle Discard Changes - revert to original state\n  const handleDiscardChanges = () => {\n    if (!originalVendor) return;\n\n    try {\n      // Reset all local form data to original values\n      setHeroData({\n        name: originalVendor.name || '',\n        tagline: originalVendor.tagline || '',\n        image: originalVendor.image || '',\n        imageFile: null,\n      });\n\n      setAboutUsData({\n        description:\n          originalVendor.aboutUs?.text || originalVendor.description || '',\n        mission: originalVendor.mission || '',\n        experience: originalVendor.aboutUs?.experience || '0+',\n        completedWeddings: originalVendor.aboutUs?.completedWeddings || '0+',\n        satisfiedCouples: originalVendor.aboutUs?.satisfiedCouples || '0+',\n        videoEmbed: originalVendor.aboutUs?.videoEmbed || '',\n        aboutImage: originalVendor.aboutUs?.aboutImage || '',\n        mediaType:\n          originalVendor.aboutUs?.videoEmbed &&\n          !originalVendor.aboutUs?.aboutImage\n            ? 'video'\n            : 'image',\n        videoFile: null,\n        imageFile: null,\n        experienceVisible: originalVendor.aboutUs?.experienceVisible !== false,\n        weddingsVisible: originalVendor.aboutUs?.weddingsVisible !== false,\n        couplesVisible: originalVendor.aboutUs?.couplesVisible !== false,\n      });\n\n      // Reset services\n      const originalServicesWithIds = (originalVendor.services || []).map(\n        (service, index) => ({\n          ...service,\n          id: service.id || `service-${Date.now()}-${index}`,\n          price: service.price || '$0',\n          imageFile: null,\n        })\n      );\n      setServicesData(originalServicesWithIds);\n\n      // Reset recent work with full portfolio details\n      const originalRecentWorkWithIds = (\n        originalVendor.locationPortfolio || []\n      ).map((work, index) => ({\n        ...work,\n        id: work.id || `work-${Date.now()}-${index}`,\n        title: work.location || '',\n        location: work.city || '',\n        date: work.weddingDate || '',\n        image: work.coverImage || '',\n        coupleNames: work.coupleNames || '',\n        description: work.description || '',\n        services: work.services || [],\n        highlights: work.highlights || [],\n        gallery: work.gallery || [],\n        imageFile: null,\n      }));\n      setRecentWorkData(originalRecentWorkWithIds);\n\n      // Reset gallery - convert old format to new format\n      const originalGalleryCategories = {};\n      if (originalVendor.gallery) {\n        Object.keys(originalVendor.gallery).forEach(key => {\n          if (Array.isArray(originalVendor.gallery[key])) {\n            originalGalleryCategories[key] = {\n              title: key.charAt(0).toUpperCase() + key.slice(1),\n              images: originalVendor.gallery[key],\n            };\n          } else if (originalVendor.gallery[key]?.images) {\n            originalGalleryCategories[key] = originalVendor.gallery[key];\n          }\n        });\n      }\n\n      if (Object.keys(originalGalleryCategories).length === 0) {\n        originalGalleryCategories.decor = { title: 'Decor', images: [] };\n        originalGalleryCategories.venues = { title: 'Venues', images: [] };\n        originalGalleryCategories.photography = {\n          title: 'Photography',\n          images: [],\n        };\n        originalGalleryCategories.catering = { title: 'Catering', images: [] };\n      }\n\n      setGalleryData({\n        subtitle:\n          'Browse through our portfolio of beautiful weddings and events',\n        activeTab: Object.keys(originalGalleryCategories)[0] || 'decor',\n        categories: originalGalleryCategories,\n      });\n\n      // Reset testimonials\n      const originalTestimonialsWithIds = (\n        originalVendor.testimonials || []\n      ).map((testimonial, index) => ({\n        ...testimonial,\n        id: testimonial.id || `testimonial-${Date.now()}-${index}`,\n        client: testimonial.name || '',\n        text: testimonial.text || '',\n        rating: testimonial.rating || 5,\n      }));\n      setTestimonialsData(originalTestimonialsWithIds);\n\n      // Reset packages\n      const originalPackagesWithIds = (originalVendor.packages || []).map(\n        (pkg, index) => ({\n          ...pkg,\n          id: pkg.id || `package-${Date.now()}-${index}`,\n          features: pkg.features || [],\n        })\n      );\n      setPackagesData(originalPackagesWithIds);\n\n      // Reset custom sections\n      const originalCustomSectionsWithIds = (\n        originalVendor.customSections || []\n      ).map((section, index) => ({\n        ...section,\n        id: section.id || `custom-section-${Date.now()}-${index}`,\n      }));\n      setCustomSections(originalCustomSectionsWithIds);\n\n      // Reset section visibility\n      const originalVisibility = {\n        hero: originalVendor.sectionVisibility?.hero !== false,\n        'about-us': originalVendor.sectionVisibility?.['about-us'] !== false,\n        'services-offered':\n          originalVendor.sectionVisibility?.['services-offered'] !== false,\n        'recent-work':\n          originalVendor.sectionVisibility?.['recent-work'] !== false,\n        gallery: originalVendor.sectionVisibility?.gallery !== false,\n        testimonials: originalVendor.sectionVisibility?.testimonials !== false,\n        'packages-pricing':\n          originalVendor.sectionVisibility?.['packages-pricing'] !== false,\n      };\n      setSectionVisibility(originalVisibility);\n\n      // Reset custom section visibility\n      const originalCustomVisibility = {};\n      originalCustomSectionsWithIds.forEach(section => {\n        originalCustomVisibility[section.id] =\n          originalVendor.customSectionVisibility?.[section.id] !== false;\n      });\n      setCustomSectionVisibility(originalCustomVisibility);\n\n      // Discard changes in Redux\n      dispatch(discardChanges());\n      setSaved(false);\n      setChangedSections(new Set());\n      alert('All changes discarded. Form reset to original values.');\n    } catch (error) {\n      console.error('Error discarding changes:', error);\n      alert('Error discarding changes. Please try again.');\n    }\n  };\n\n  const closeMobileSidebar = () => setMobileSidebarOpen(false);\n\n  // Close mobile sidebar on escape key\n  useEffect(() => {\n    const handleEscapeKey = event => {\n      if (event.key === 'Escape' && mobileSidebarOpen) {\n        closeMobileSidebar();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscapeKey);\n    return () => document.removeEventListener('keydown', handleEscapeKey);\n  }, [mobileSidebarOpen]);\n\n  // Prevent body scroll when mobile sidebar is open\n  useEffect(() => {\n    if (mobileSidebarOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n\n    return () => {\n      document.body.style.overflow = 'unset';\n    };\n  }, [mobileSidebarOpen]);\n\n  // File upload handlers\n  const handleImageUpload = (file, setter, field) => {\n    const reader = new FileReader();\n    reader.onload = e => {\n      if (setter === setAboutUsData) {\n        setter(prev => ({\n          ...prev,\n          [field]: e.target.result,\n          [`${field}File`]: file,\n          mediaType: 'image', // Set media type to image when uploading image\n        }));\n        trackSectionChange('about-us');\n      } else {\n        setter(prev => ({\n          ...prev,\n          [field]: e.target.result,\n          [`${field}File`]: file,\n        }));\n        // Trigger real-time updates for other image uploads\n        setTimeout(() => updateEditingVendorInRedux(), 100);\n      }\n    };\n    reader.readAsDataURL(file);\n  };\n\n  // Helper functions for managing dynamic lists\n  const addService = () => {\n    const newService = {\n      id: `service-${Date.now()}-${Math.random()}`,\n      name: 'New Service',\n      description: 'Service description',\n      price: '$0',\n      icon: '💍',\n      image: '',\n      imageFile: null,\n    };\n    setServicesData(prev => [...prev, newService]);\n  };\n\n  const updateService = (id, field, value) => {\n    setServicesData(prev =>\n      prev.map(service =>\n        service.id === id ? { ...service, [field]: value } : service\n      )\n    );\n    // Automatically trigger real-time updates\n    setTimeout(() => updateEditingVendorInRedux(), 100);\n  };\n\n  const deleteService = id => {\n    setServicesData(prev => prev.filter(service => service.id !== id));\n  };\n\n  const addRecentWork = () => {\n    const newWork = {\n      id: `work-${Date.now()}-${Math.random()}`,\n      title: 'New Project',\n      location: 'Location',\n      date: 'Date',\n      image: '',\n      coupleNames: '',\n      description: '',\n      services: [],\n      highlights: [],\n      gallery: [],\n      imageFile: null,\n    };\n    setRecentWorkData(prev => [...prev, newWork]);\n  };\n\n  const updateRecentWork = (id, field, value) => {\n    setRecentWorkData(prev =>\n      prev.map(work => (work.id === id ? { ...work, [field]: value } : work))\n    );\n    // Automatically trigger real-time updates\n    setTimeout(() => updateEditingVendorInRedux(), 100);\n  };\n\n  const deleteRecentWork = id => {\n    setRecentWorkData(prev => prev.filter(work => work.id !== id));\n  };\n\n  const addTestimonial = () => {\n    const newTestimonial = {\n      id: `testimonial-${Date.now()}-${Math.random()}`,\n      client: 'Client Name',\n      text: 'Testimonial text',\n      rating: 5,\n    };\n    setTestimonialsData(prev => [...prev, newTestimonial]);\n  };\n\n  const updateTestimonial = (id, field, value) => {\n    setTestimonialsData(prev =>\n      prev.map(testimonial =>\n        testimonial.id === id ? { ...testimonial, [field]: value } : testimonial\n      )\n    );\n  };\n\n  const deleteTestimonial = id => {\n    setTestimonialsData(prev =>\n      prev.filter(testimonial => testimonial.id !== id)\n    );\n  };\n\n  const addPackage = () => {\n    const newPackage = {\n      id: `package-${Date.now()}-${Math.random()}`,\n      name: 'New Package',\n      description: 'Package description',\n      price: '$0',\n      features: [],\n    };\n    setPackagesData(prev => [...prev, newPackage]);\n  };\n\n  const updatePackage = (id, field, value) => {\n    setPackagesData(prev =>\n      prev.map(pkg => (pkg.id === id ? { ...pkg, [field]: value } : pkg))\n    );\n  };\n\n  const deletePackage = id => {\n    setPackagesData(prev => prev.filter(pkg => pkg.id !== id));\n  };\n\n  // Custom section helpers\n  const openCustomSectionModal = (section = null) => {\n    if (section) {\n      setEditingCustomSection(section);\n      setCustomSectionForm({\n        title: section.title || '',\n        subtitle: section.subtitle || '',\n        type: section.type || 'text',\n        content: section.content || '',\n        images: Array.isArray(section.images) ? [...section.images] : [],\n        cards: Array.isArray(section.cards) ? [...section.cards] : [],\n        visible: section.visible !== false, // Default to true if not specified\n      });\n    } else {\n      setEditingCustomSection(null);\n      setCustomSectionForm({\n        title: '',\n        subtitle: '',\n        type: 'text',\n        content: '',\n        images: [],\n        cards: [],\n        visible: true,\n      });\n    }\n    setShowCustomSectionModal(true);\n  };\n\n  const saveCustomSection = () => {\n    if (!customSectionForm.title.trim()) {\n      alert('Please enter a section title');\n      return;\n    }\n\n    const sectionData = {\n      id: editingCustomSection?.id || `custom-${Date.now()}`,\n      title: customSectionForm.title.trim(),\n      subtitle: customSectionForm.subtitle.trim(),\n      type: customSectionForm.type,\n      content: customSectionForm.content.trim(),\n      images: customSectionForm.images || [],\n      cards: customSectionForm.cards || [],\n      visible: customSectionForm.visible,\n    };\n\n    if (editingCustomSection) {\n      // Update existing section\n      setCustomSections(prev =>\n        prev.map(section =>\n          section.id === editingCustomSection.id ? sectionData : section\n        )\n      );\n      // Update visibility for existing section\n      setCustomSectionVisibility(prev => ({\n        ...prev,\n        [sectionData.id]: sectionData.visible,\n      }));\n    } else {\n      // Add new section\n      setCustomSections(prev => [...prev, sectionData]);\n      // Add to complete section order\n      const customId = `custom-${sectionData.id}`;\n      setCompleteSectionOrder(prev => {\n        if (!prev.includes(customId)) {\n          return [...prev, customId];\n        }\n        return prev;\n      });\n      // Set visibility for new custom section\n      setCustomSectionVisibility(prev => ({\n        ...prev,\n        [sectionData.id]: sectionData.visible,\n      }));\n    }\n\n    setShowCustomSectionModal(false);\n    setEditingCustomSection(null);\n    setCustomSectionForm({\n      title: '',\n      subtitle: '',\n      type: 'text',\n      content: '',\n      images: [],\n      cards: [],\n      visible: true,\n    });\n    trackSectionChange('custom-sections');\n\n    // Automatically trigger real-time updates\n    setTimeout(() => updateEditingVendorInRedux(), 100);\n  };\n\n  const addCustomSectionCard = () => {\n    setCustomSectionForm(prev => ({\n      ...prev,\n      cards: [\n        ...prev.cards,\n        { title: '', description: '', image: '', icon: '' },\n      ],\n    }));\n  };\n\n  const updateCustomSectionCard = (index, field, value) => {\n    setCustomSectionForm(prev => ({\n      ...prev,\n      cards: prev.cards.map((card, i) =>\n        i === index ? { ...card, [field]: value } : card\n      ),\n    }));\n  };\n\n  const removeCustomSectionCard = index => {\n    setCustomSectionForm(prev => ({\n      ...prev,\n      cards: prev.cards.filter((_, i) => i !== index),\n    }));\n  };\n\n  const addCustomSectionImage = imageUrl => {\n    setCustomSectionForm(prev => ({\n      ...prev,\n      images: [...prev.images, imageUrl],\n    }));\n  };\n\n  const removeCustomSectionImage = index => {\n    setCustomSectionForm(prev => ({\n      ...prev,\n      images: prev.images.filter((_, i) => i !== index),\n    }));\n  };\n\n  // Gallery helpers\n  const addGalleryImage = (category, imageUrl) => {\n    setGalleryData(prev => ({\n      ...prev,\n      categories: {\n        ...prev.categories,\n        [category]: {\n          ...prev.categories[category],\n          images: [...(prev.categories[category]?.images || []), imageUrl],\n        },\n      },\n    }));\n    // Automatically trigger real-time updates\n    setTimeout(() => updateEditingVendorInRedux(), 100);\n  };\n\n  const removeGalleryImage = (category, imageIndex) => {\n    setGalleryData(prev => ({\n      ...prev,\n      categories: {\n        ...prev.categories,\n        [category]: {\n          ...prev.categories[category],\n          images: prev.categories[category].images.filter(\n            (_, index) => index !== imageIndex\n          ),\n        },\n      },\n    }));\n    // Automatically trigger real-time updates\n    setTimeout(() => updateEditingVendorInRedux(), 100);\n  };\n\n  const renderContent = () => {\n    switch (activeSection) {\n      case 'hero':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaImages />\n                Hero Section\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>{sectionVisibility['hero'] ? 'Visible' : 'Hidden'}</span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['hero']}\n                    onChange={() => toggleSectionVisibility('hero')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n            <FormGrid>\n              <FormGroup style={{ gridColumn: '1 / -1' }}>\n                <FormLabel>Business Name</FormLabel>\n                <FormInput\n                  value={heroData.name}\n                  onChange={e => {\n                    setHeroData(prev => ({ ...prev, name: e.target.value }));\n                    trackSectionChange('hero');\n                  }}\n                  placeholder=\"Enter your business name\"\n                />\n              </FormGroup>\n              <FormGroup style={{ gridColumn: '1 / -1' }}>\n                <FormLabel>Tagline</FormLabel>\n                <FormTextarea\n                  value={heroData.tagline}\n                  onChange={e => {\n                    setHeroData(prev => ({ ...prev, tagline: e.target.value }));\n                    trackSectionChange('hero');\n                  }}\n                  placeholder=\"Enter your business tagline...\"\n                  rows={3}\n                />\n              </FormGroup>\n              <FormGroup style={{ gridColumn: '1 / -1' }}>\n                <FormLabel>\n                  <FaCamera />\n                  Hero Background Image\n                </FormLabel>\n                <FileUploadContainer>\n                  {heroData.image && (\n                    <ImagePreview>\n                      <img src={heroData.image} alt=\"Hero background\" />\n                      <ImageOverlay>\n                        <RemoveImageButton\n                          onClick={() =>\n                            setHeroData(prev => ({\n                              ...prev,\n                              image: '',\n                              imageFile: null,\n                            }))\n                          }\n                        >\n                          <FaTrash />\n                        </RemoveImageButton>\n                      </ImageOverlay>\n                    </ImagePreview>\n                  )}\n                  <FileUploadBox>\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={e =>\n                        handleImageUpload(\n                          e.target.files[0],\n                          setHeroData,\n                          'image'\n                        )\n                      }\n                    />\n                    <FaUpload size={24} color={theme.colors.gray400} />\n                    <span style={{ fontSize: '0.8rem', textAlign: 'center' }}>\n                      Upload Image\n                    </span>\n                  </FileUploadBox>\n                  <FormGroup style={{ flex: 1 }}>\n                    <FormLabel>\n                      <FaLink />\n                      Or paste image URL\n                    </FormLabel>\n                    <FormInput\n                      value={heroData.image}\n                      onChange={e =>\n                        setHeroData(prev => ({\n                          ...prev,\n                          image: e.target.value,\n                        }))\n                      }\n                      placeholder=\"https://example.com/image.jpg\"\n                    />\n                  </FormGroup>\n                </FileUploadContainer>\n              </FormGroup>\n            </FormGrid>\n          </ContentSection>\n        );\n\n      case 'about-us':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaUser />\n                About Us\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>\n                  {sectionVisibility['about-us'] ? 'Visible' : 'Hidden'}\n                </span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['about-us']}\n                    onChange={() => toggleSectionVisibility('about-us')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n            <FormGrid>\n              <FormGroup style={{ gridColumn: '1 / -1' }}>\n                <FormLabel>Business Description</FormLabel>\n                <FormTextarea\n                  value={aboutUsData.description}\n                  onChange={e => {\n                    setAboutUsData(prev => ({\n                      ...prev,\n                      description: e.target.value,\n                    }));\n                    trackSectionChange('about-us');\n                  }}\n                  placeholder=\"Tell your clients about your business...\"\n                  rows={6}\n                />\n              </FormGroup>\n              <FormGroup style={{ gridColumn: '1 / -1' }}>\n                <FormLabel>Mission & Values</FormLabel>\n                <FormTextarea\n                  value={aboutUsData.mission}\n                  onChange={e =>\n                    setAboutUsData(prev => ({\n                      ...prev,\n                      mission: e.target.value,\n                    }))\n                  }\n                  placeholder=\"Share your mission and values...\"\n                  rows={4}\n                />\n              </FormGroup>\n\n              {/* Statistics Section */}\n              <FormGroup>\n                <FormLabel style={{ justifyContent: 'space-between' }}>\n                  Years of Experience\n                  <ToggleSwitch>\n                    <input\n                      type=\"checkbox\"\n                      checked={aboutUsData.experienceVisible}\n                      onChange={e => {\n                        setAboutUsData(prev => ({\n                          ...prev,\n                          experienceVisible: e.target.checked,\n                        }));\n                        trackSectionChange('about-us');\n                      }}\n                    />\n                    <span></span>\n                  </ToggleSwitch>\n                </FormLabel>\n                <FormInput\n                  value={aboutUsData.experience}\n                  onChange={e => {\n                    setAboutUsData(prev => ({\n                      ...prev,\n                      experience: e.target.value,\n                    }));\n                    trackSectionChange('about-us');\n                  }}\n                  placeholder=\"e.g., 10+\"\n                  disabled={!aboutUsData.experienceVisible}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <FormLabel style={{ justifyContent: 'space-between' }}>\n                  Completed Weddings\n                  <ToggleSwitch>\n                    <input\n                      type=\"checkbox\"\n                      checked={aboutUsData.weddingsVisible}\n                      onChange={e =>\n                        setAboutUsData(prev => ({\n                          ...prev,\n                          weddingsVisible: e.target.checked,\n                        }))\n                      }\n                    />\n                    <span></span>\n                  </ToggleSwitch>\n                </FormLabel>\n                <FormInput\n                  value={aboutUsData.completedWeddings}\n                  onChange={e =>\n                    setAboutUsData(prev => ({\n                      ...prev,\n                      completedWeddings: e.target.value,\n                    }))\n                  }\n                  placeholder=\"e.g., 250+\"\n                  disabled={!aboutUsData.weddingsVisible}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <FormLabel style={{ justifyContent: 'space-between' }}>\n                  Happy Couples\n                  <ToggleSwitch>\n                    <input\n                      type=\"checkbox\"\n                      checked={aboutUsData.couplesVisible}\n                      onChange={e =>\n                        setAboutUsData(prev => ({\n                          ...prev,\n                          couplesVisible: e.target.checked,\n                        }))\n                      }\n                    />\n                    <span></span>\n                  </ToggleSwitch>\n                </FormLabel>\n                <FormInput\n                  value={aboutUsData.satisfiedCouples}\n                  onChange={e =>\n                    setAboutUsData(prev => ({\n                      ...prev,\n                      satisfiedCouples: e.target.value,\n                    }))\n                  }\n                  placeholder=\"e.g., 500+\"\n                  disabled={!aboutUsData.couplesVisible}\n                />\n              </FormGroup>\n\n              <FormGroup style={{ gridColumn: '1 / -1' }}>\n                <FormLabel>About Us Media</FormLabel>\n                <TabsContainer>\n                  <Tab\n                    active={aboutUsData.mediaType === 'video'}\n                    onClick={() => {\n                      setAboutUsData(prev => ({ ...prev, mediaType: 'video' }));\n                      trackSectionChange('about-us');\n                    }}\n                  >\n                    <FaVideo />\n                    Video\n                  </Tab>\n                  <Tab\n                    active={aboutUsData.mediaType === 'image'}\n                    onClick={() => {\n                      setAboutUsData(prev => ({ ...prev, mediaType: 'image' }));\n                      trackSectionChange('about-us');\n                    }}\n                  >\n                    <FaFileImage />\n                    Image\n                  </Tab>\n                </TabsContainer>\n\n                {aboutUsData.mediaType === 'video' ? (\n                  <FileUploadContainer>\n                    <FileUploadBox>\n                      <input\n                        type=\"file\"\n                        accept=\"video/*\"\n                        onChange={e => {\n                          const file = e.target.files[0];\n                          setAboutUsData(prev => ({\n                            ...prev,\n                            videoFile: file,\n                          }));\n                        }}\n                      />\n                      <FaVideo size={24} color={theme.colors.gray400} />\n                      <span style={{ fontSize: '0.8rem', textAlign: 'center' }}>\n                        Upload Video\n                      </span>\n                    </FileUploadBox>\n                    <FormGroup style={{ flex: 1 }}>\n                      <FormLabel>\n                        <FaLink />\n                        Or paste video embed URL\n                      </FormLabel>\n                      <FormInput\n                        value={aboutUsData.videoEmbed}\n                        onChange={e => {\n                          setAboutUsData(prev => ({\n                            ...prev,\n                            videoEmbed: e.target.value,\n                          }));\n                          trackSectionChange('about-us');\n                        }}\n                        placeholder=\"https://www.youtube.com/embed/...\"\n                      />\n                    </FormGroup>\n                  </FileUploadContainer>\n                ) : (\n                  <FileUploadContainer>\n                    {aboutUsData.aboutImage && (\n                      <ImagePreview>\n                        <img src={aboutUsData.aboutImage} alt=\"About us\" />\n                        <ImageOverlay>\n                          <RemoveImageButton\n                            onClick={() =>\n                              setAboutUsData(prev => ({\n                                ...prev,\n                                aboutImage: '',\n                                imageFile: null,\n                              }))\n                            }\n                          >\n                            <FaTrash />\n                          </RemoveImageButton>\n                        </ImageOverlay>\n                      </ImagePreview>\n                    )}\n                    <FileUploadBox>\n                      <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        onChange={e =>\n                          handleImageUpload(\n                            e.target.files[0],\n                            setAboutUsData,\n                            'aboutImage'\n                          )\n                        }\n                      />\n                      <FaUpload size={24} color={theme.colors.gray400} />\n                      <span style={{ fontSize: '0.8rem', textAlign: 'center' }}>\n                        Upload Image\n                      </span>\n                    </FileUploadBox>\n                    <FormGroup style={{ flex: 1 }}>\n                      <FormLabel>\n                        <FaLink />\n                        Or paste image URL\n                      </FormLabel>\n                      <FormInput\n                        value={aboutUsData.aboutImage}\n                        onChange={e => {\n                          setAboutUsData(prev => ({\n                            ...prev,\n                            aboutImage: e.target.value,\n                          }));\n                          trackSectionChange('about-us');\n                        }}\n                        placeholder=\"https://example.com/image.jpg\"\n                      />\n                    </FormGroup>\n                  </FileUploadContainer>\n                )}\n              </FormGroup>\n            </FormGrid>\n          </ContentSection>\n        );\n\n      case 'services-offered':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaServicestack />\n                Services Offered\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>\n                  {sectionVisibility['services-offered'] ? 'Visible' : 'Hidden'}\n                </span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['services-offered']}\n                    onChange={() => toggleSectionVisibility('services-offered')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n            {servicesData.map(service => (\n              <div\n                key={service.id}\n                style={{\n                  border: `1px solid ${theme.colors.gray200}`,\n                  borderRadius: theme.borderRadius.md,\n                  padding: theme.spacing.lg,\n                  marginBottom: theme.spacing.lg,\n                }}\n              >\n                <FormGrid>\n                  <FormGroup>\n                    <FormLabel>Service Name</FormLabel>\n                    <FormInput\n                      value={service.name}\n                      onChange={e =>\n                        updateService(service.id, 'name', e.target.value)\n                      }\n                      placeholder=\"Wedding Planning\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>Price Range</FormLabel>\n                    <FormInput\n                      value={service.price}\n                      onChange={e =>\n                        updateService(service.id, 'price', e.target.value)\n                      }\n                      placeholder=\"$2000-$5000\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>Service Icon (Emoji)</FormLabel>\n                    <FormInput\n                      value={service.icon}\n                      onChange={e =>\n                        updateService(service.id, 'icon', e.target.value)\n                      }\n                      placeholder=\"💍\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>\n                      <FaFileImage />\n                      Service Image\n                    </FormLabel>\n                    <FileUploadContainer>\n                      {service.image && (\n                        <ImagePreview>\n                          <img src={service.image} alt=\"Service\" />\n                          <ImageOverlay>\n                            <RemoveImageButton\n                              onClick={() =>\n                                updateService(service.id, 'image', '')\n                              }\n                            >\n                              <FaTrash />\n                            </RemoveImageButton>\n                          </ImageOverlay>\n                        </ImagePreview>\n                      )}\n                      <FileUploadBox>\n                        <input\n                          type=\"file\"\n                          accept=\"image/*\"\n                          onChange={e => {\n                            const file = e.target.files[0];\n                            const reader = new FileReader();\n                            reader.onload = event => {\n                              updateService(\n                                service.id,\n                                'image',\n                                event.target.result\n                              );\n                            };\n                            reader.readAsDataURL(file);\n                          }}\n                        />\n                        <FaUpload size={20} color={theme.colors.gray400} />\n                        <span\n                          style={{ fontSize: '0.7rem', textAlign: 'center' }}\n                        >\n                          Upload\n                        </span>\n                      </FileUploadBox>\n                    </FileUploadContainer>\n                  </FormGroup>\n                  <FormGroup style={{ gridColumn: '1 / -1' }}>\n                    <FormLabel>Service Description</FormLabel>\n                    <FormTextarea\n                      value={service.description}\n                      onChange={e =>\n                        updateService(service.id, 'description', e.target.value)\n                      }\n                      placeholder=\"Describe this service in detail...\"\n                      rows={3}\n                    />\n                  </FormGroup>\n                  <div style={{ gridColumn: '1 / -1', textAlign: 'right' }}>\n                    <ActionButton\n                      variant=\"danger\"\n                      onClick={() => deleteService(service.id)}\n                    >\n                      <FaTrash />\n                      Remove Service\n                    </ActionButton>\n                  </div>\n                </FormGrid>\n              </div>\n            ))}\n            <ActionButton onClick={addService}>\n              <FaPlus />\n              Add New Service\n            </ActionButton>\n          </ContentSection>\n        );\n\n      case 'recent-work':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaBriefcase />\n                Portfolio & Recent Work\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>\n                  {sectionVisibility['recent-work'] ? 'Visible' : 'Hidden'}\n                </span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['recent-work']}\n                    onChange={() => toggleSectionVisibility('recent-work')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n            {recentWorkData.map(work => (\n              <div\n                key={work.id}\n                style={{\n                  border: `1px solid ${theme.colors.gray200}`,\n                  borderRadius: theme.borderRadius.md,\n                  padding: theme.spacing.lg,\n                  marginBottom: theme.spacing.xl,\n                  backgroundColor: theme.colors.gray50,\n                }}\n              >\n                <h3\n                  style={{\n                    marginBottom: theme.spacing.lg,\n                    color: theme.colors.primary,\n                  }}\n                >\n                  {work.title || 'New Project'}\n                </h3>\n\n                {/* Basic Information */}\n                <FormGrid>\n                  <FormGroup>\n                    <FormLabel>Venue/Location Name</FormLabel>\n                    <FormInput\n                      value={work.title}\n                      onChange={e => {\n                        updateRecentWork(work.id, 'title', e.target.value);\n                        trackSectionChange('recent-work');\n                      }}\n                      placeholder=\"Napa Valley Vineyard\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>City</FormLabel>\n                    <FormInput\n                      value={work.location}\n                      onChange={e => {\n                        updateRecentWork(work.id, 'location', e.target.value);\n                        trackSectionChange('recent-work');\n                      }}\n                      placeholder=\"Napa Valley\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>Wedding Date</FormLabel>\n                    <FormInput\n                      value={work.date}\n                      onChange={e => {\n                        updateRecentWork(work.id, 'date', e.target.value);\n                        trackSectionChange('recent-work');\n                      }}\n                      placeholder=\"September 2023\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>Couple Names</FormLabel>\n                    <FormInput\n                      value={work.coupleNames}\n                      onChange={e => {\n                        updateRecentWork(\n                          work.id,\n                          'coupleNames',\n                          e.target.value\n                        );\n                        trackSectionChange('recent-work');\n                      }}\n                      placeholder=\"Sarah & Michael\"\n                    />\n                  </FormGroup>\n                </FormGrid>\n\n                {/* Description */}\n                <FormGroup style={{ marginTop: theme.spacing.md }}>\n                  <FormLabel>Project Description</FormLabel>\n                  <FormTextarea\n                    value={work.description}\n                    onChange={e => {\n                      updateRecentWork(work.id, 'description', e.target.value);\n                      trackSectionChange('recent-work');\n                    }}\n                    placeholder=\"An enchanting vineyard wedding with rustic elegance and breathtaking sunset views...\"\n                    rows={4}\n                  />\n                </FormGroup>\n\n                {/* Cover Image */}\n                <FormGroup style={{ marginTop: theme.spacing.md }}>\n                  <FormLabel>\n                    <FaFileImage />\n                    Cover Image\n                  </FormLabel>\n                  <FileUploadContainer>\n                    {work.image && (\n                      <ImagePreview>\n                        <img src={work.image} alt=\"Work cover\" />\n                        <ImageOverlay>\n                          <RemoveImageButton\n                            onClick={() => {\n                              updateRecentWork(work.id, 'image', '');\n                              trackSectionChange('recent-work');\n                            }}\n                          >\n                            <FaTrash />\n                          </RemoveImageButton>\n                        </ImageOverlay>\n                      </ImagePreview>\n                    )}\n                    <FileUploadBox>\n                      <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        onChange={e => {\n                          const file = e.target.files[0];\n                          const reader = new FileReader();\n                          reader.onload = event => {\n                            updateRecentWork(\n                              work.id,\n                              'image',\n                              event.target.result\n                            );\n                            trackSectionChange('recent-work');\n                          };\n                          reader.readAsDataURL(file);\n                        }}\n                      />\n                      <FaUpload size={20} color={theme.colors.gray400} />\n                      <span style={{ fontSize: '0.7rem', textAlign: 'center' }}>\n                        Upload Cover\n                      </span>\n                    </FileUploadBox>\n                    <FormGroup style={{ flex: 1 }}>\n                      <FormInput\n                        value={work.image}\n                        onChange={e => {\n                          updateRecentWork(work.id, 'image', e.target.value);\n                          trackSectionChange('recent-work');\n                        }}\n                        placeholder=\"Or paste image URL...\"\n                      />\n                    </FormGroup>\n                  </FileUploadContainer>\n                </FormGroup>\n\n                {/* Services Provided */}\n                <FormGroup style={{ marginTop: theme.spacing.md }}>\n                  <FormLabel>Services Provided (one per line)</FormLabel>\n                  <FormTextarea\n                    value={\n                      Array.isArray(work.services)\n                        ? work.services.join('\\n')\n                        : ''\n                    }\n                    onChange={e => {\n                      const services = e.target.value\n                        .split('\\n')\n                        .filter(s => s.trim());\n                      updateRecentWork(work.id, 'services', services);\n                      trackSectionChange('recent-work');\n                    }}\n                    placeholder=\"Full Wedding Planning&#10;Floral Design&#10;Venue Decoration&#10;Day-of Coordination\"\n                    rows={4}\n                  />\n                </FormGroup>\n\n                {/* Project Highlights */}\n                <FormGroup style={{ marginTop: theme.spacing.md }}>\n                  <FormLabel>Project Highlights (one per line)</FormLabel>\n                  <FormTextarea\n                    value={\n                      Array.isArray(work.highlights)\n                        ? work.highlights.join('\\n')\n                        : ''\n                    }\n                    onChange={e => {\n                      const highlights = e.target.value\n                        .split('\\n')\n                        .filter(h => h.trim());\n                      updateRecentWork(work.id, 'highlights', highlights);\n                      trackSectionChange('recent-work');\n                    }}\n                    placeholder=\"Custom vineyard ceremony setup&#10;Rustic chic reception decor&#10;Farm-to-table catering coordination&#10;Sunset photography session\"\n                    rows={4}\n                  />\n                </FormGroup>\n\n                {/* Gallery Images */}\n                <FormGroup style={{ marginTop: theme.spacing.md }}>\n                  <FormLabel>\n                    <FaImages />\n                    Portfolio Gallery Images\n                  </FormLabel>\n                  <FileUploadContainer>\n                    <FileUploadBox>\n                      <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        multiple\n                        onChange={e => {\n                          Array.from(e.target.files).forEach(file => {\n                            const reader = new FileReader();\n                            reader.onload = event => {\n                              const currentGallery = work.gallery || [];\n                              updateRecentWork(work.id, 'gallery', [\n                                ...currentGallery,\n                                event.target.result,\n                              ]);\n                              trackSectionChange('recent-work');\n                            };\n                            reader.readAsDataURL(file);\n                          });\n                        }}\n                      />\n                      <FaUpload size={20} color={theme.colors.gray400} />\n                      <span style={{ fontSize: '0.7rem', textAlign: 'center' }}>\n                        Add Gallery Images\n                      </span>\n                    </FileUploadBox>\n                    <FormGroup style={{ flex: 1 }}>\n                      <FormTextarea\n                        placeholder=\"Or paste image URLs (one per line)&#10;https://example.com/image1.jpg&#10;https://example.com/image2.jpg\"\n                        rows={3}\n                        onBlur={e => {\n                          const urls = e.target.value\n                            .split('\\n')\n                            .filter(url => url.trim());\n                          if (urls.length > 0) {\n                            const currentGallery = work.gallery || [];\n                            updateRecentWork(work.id, 'gallery', [\n                              ...currentGallery,\n                              ...urls,\n                            ]);\n                            trackSectionChange('recent-work');\n                            e.target.value = '';\n                          }\n                        }}\n                      />\n                    </FormGroup>\n                  </FileUploadContainer>\n\n                  {/* Gallery Preview */}\n                  {work.gallery && work.gallery.length > 0 && (\n                    <div\n                      style={{\n                        display: 'grid',\n                        gridTemplateColumns:\n                          'repeat(auto-fill, minmax(120px, 1fr))',\n                        gap: theme.spacing.sm,\n                        marginTop: theme.spacing.md,\n                      }}\n                    >\n                      {work.gallery.map((image, index) => (\n                        <ImagePreview\n                          key={index}\n                          style={{ width: '120px', height: '80px' }}\n                        >\n                          <img src={image} alt={`Gallery ${index}`} />\n                          <ImageOverlay>\n                            <RemoveImageButton\n                              onClick={() => {\n                                const newGallery = work.gallery.filter(\n                                  (_, i) => i !== index\n                                );\n                                updateRecentWork(\n                                  work.id,\n                                  'gallery',\n                                  newGallery\n                                );\n                                trackSectionChange('recent-work');\n                              }}\n                            >\n                              <FaTrash />\n                            </RemoveImageButton>\n                          </ImageOverlay>\n                        </ImagePreview>\n                      ))}\n                    </div>\n                  )}\n                </FormGroup>\n\n                <div\n                  style={{\n                    textAlign: 'right',\n                    marginTop: theme.spacing.lg,\n                    paddingTop: theme.spacing.md,\n                    borderTop: `1px solid ${theme.colors.gray200}`,\n                  }}\n                >\n                  <ActionButton\n                    variant=\"danger\"\n                    onClick={() => {\n                      deleteRecentWork(work.id);\n                      trackSectionChange('recent-work');\n                    }}\n                  >\n                    <FaTrash />\n                    Remove This Project\n                  </ActionButton>\n                </div>\n              </div>\n            ))}\n            <ActionButton onClick={addRecentWork}>\n              <FaPlus />\n              Add New Portfolio Project\n            </ActionButton>\n          </ContentSection>\n        );\n\n      case 'gallery':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaImages />\n                Gallery\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>\n                  {sectionVisibility['gallery'] ? 'Visible' : 'Hidden'}\n                </span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['gallery']}\n                    onChange={() => toggleSectionVisibility('gallery')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n            <FormGroup style={{ marginBottom: theme.spacing.lg }}>\n              <FormLabel>Gallery Subtitle</FormLabel>\n              <FormInput\n                value={galleryData.subtitle}\n                onChange={e => {\n                  setGalleryData(prev => ({\n                    ...prev,\n                    subtitle: e.target.value,\n                  }));\n                  trackSectionChange('gallery');\n                }}\n                placeholder=\"Browse through our portfolio of beautiful weddings and events\"\n              />\n            </FormGroup>\n\n            {/* Existing Categories */}\n            {Object.entries(galleryData.categories).map(([key, category]) => (\n              <div\n                key={key}\n                style={{\n                  border: `1px solid ${theme.colors.gray200}`,\n                  borderRadius: theme.borderRadius.md,\n                  padding: theme.spacing.lg,\n                  marginBottom: theme.spacing.lg,\n                }}\n              >\n                <FormGrid>\n                  <FormGroup>\n                    <FormLabel>Category Title</FormLabel>\n                    <FormInput\n                      value={category.title || key}\n                      onChange={e => {\n                        setGalleryData(prev => ({\n                          ...prev,\n                          categories: {\n                            ...prev.categories,\n                            [key]: {\n                              ...prev.categories[key],\n                              title: e.target.value,\n                            },\n                          },\n                        }));\n                        trackSectionChange('gallery');\n                      }}\n                      placeholder=\"Category name\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>Add Images</FormLabel>\n                    <FileUploadContainer>\n                      <FileUploadBox>\n                        <input\n                          type=\"file\"\n                          accept=\"image/*\"\n                          multiple\n                          onChange={e => {\n                            Array.from(e.target.files).forEach(file => {\n                              const reader = new FileReader();\n                              reader.onload = event => {\n                                addGalleryImage(key, event.target.result);\n                                trackSectionChange('gallery');\n                              };\n                              reader.readAsDataURL(file);\n                            });\n                          }}\n                        />\n                        <FaUpload size={20} color={theme.colors.gray400} />\n                        <span\n                          style={{ fontSize: '0.7rem', textAlign: 'center' }}\n                        >\n                          Upload\n                        </span>\n                      </FileUploadBox>\n                    </FileUploadContainer>\n                  </FormGroup>\n                </FormGrid>\n\n                {/* Category Images */}\n                <div\n                  style={{\n                    display: 'grid',\n                    gridTemplateColumns:\n                      'repeat(auto-fill, minmax(120px, 1fr))',\n                    gap: theme.spacing.sm,\n                    marginTop: theme.spacing.md,\n                  }}\n                >\n                  {category.images?.map((image, index) => (\n                    <ImagePreview\n                      key={index}\n                      style={{ width: '120px', height: '80px' }}\n                    >\n                      <img src={image} alt={`${category.title} ${index}`} />\n                      <ImageOverlay>\n                        <RemoveImageButton\n                          onClick={() => {\n                            removeGalleryImage(key, index);\n                            trackSectionChange('gallery');\n                          }}\n                        >\n                          <FaTrash />\n                        </RemoveImageButton>\n                      </ImageOverlay>\n                    </ImagePreview>\n                  ))}\n                </div>\n\n                <div\n                  style={{ textAlign: 'right', marginTop: theme.spacing.md }}\n                >\n                  <ActionButton\n                    variant=\"danger\"\n                    onClick={() => {\n                      setGalleryData(prev => {\n                        const newCategories = { ...prev.categories };\n                        delete newCategories[key];\n                        return { ...prev, categories: newCategories };\n                      });\n                      trackSectionChange('gallery');\n                    }}\n                  >\n                    <FaTrash />\n                    Remove Category\n                  </ActionButton>\n                </div>\n              </div>\n            ))}\n\n            {/* Add New Category Button */}\n            <ActionButton\n              onClick={() => {\n                const newCategoryKey = `category_${Date.now()}`;\n                setGalleryData(prev => ({\n                  ...prev,\n                  categories: {\n                    ...prev.categories,\n                    [newCategoryKey]: {\n                      title: 'New Category',\n                      images: [],\n                    },\n                  },\n                }));\n              }}\n            >\n              <FaPlus />\n              Add New Category\n            </ActionButton>\n          </ContentSection>\n        );\n\n      case 'testimonials':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaComments />\n                Testimonials\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>\n                  {sectionVisibility['testimonials'] ? 'Visible' : 'Hidden'}\n                </span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['testimonials']}\n                    onChange={() => toggleSectionVisibility('testimonials')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n            {testimonialsData.map(testimonial => (\n              <div\n                key={testimonial.id}\n                style={{\n                  border: `1px solid ${theme.colors.gray200}`,\n                  borderRadius: theme.borderRadius.md,\n                  padding: theme.spacing.lg,\n                  marginBottom: theme.spacing.lg,\n                }}\n              >\n                <FormGrid>\n                  <FormGroup>\n                    <FormLabel>Client Name</FormLabel>\n                    <FormInput\n                      value={testimonial.client}\n                      onChange={e =>\n                        updateTestimonial(\n                          testimonial.id,\n                          'client',\n                          e.target.value\n                        )\n                      }\n                      placeholder=\"Sarah & Michael\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>Rating (1-5)</FormLabel>\n                    <FormInput\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"5\"\n                      value={testimonial.rating}\n                      onChange={e => {\n                        const rating = parseInt(e.target.value);\n                        updateTestimonial(\n                          testimonial.id,\n                          'rating',\n                          isNaN(rating) ? 5 : Math.max(1, Math.min(5, rating))\n                        );\n                      }}\n                    />\n                  </FormGroup>\n                  <FormGroup style={{ gridColumn: '1 / -1' }}>\n                    <FormLabel>Testimonial Text</FormLabel>\n                    <FormTextarea\n                      value={testimonial.text}\n                      onChange={e =>\n                        updateTestimonial(\n                          testimonial.id,\n                          'text',\n                          e.target.value\n                        )\n                      }\n                      placeholder=\"Amazing service! Highly recommended.\"\n                      rows={3}\n                    />\n                  </FormGroup>\n                  <div style={{ gridColumn: '1 / -1', textAlign: 'right' }}>\n                    <ActionButton\n                      variant=\"danger\"\n                      onClick={() => deleteTestimonial(testimonial.id)}\n                    >\n                      <FaTrash />\n                      Remove Testimonial\n                    </ActionButton>\n                  </div>\n                </FormGrid>\n              </div>\n            ))}\n            <ActionButton onClick={addTestimonial}>\n              <FaPlus />\n              Add New Testimonial\n            </ActionButton>\n          </ContentSection>\n        );\n\n      case 'packages-pricing':\n        return (\n          <ContentSection>\n            <SectionHeader>\n              <SectionTitle>\n                <FaDollarSign />\n                Packages & Pricing\n              </SectionTitle>\n              <VisibilityToggleContainer>\n                <span>\n                  {sectionVisibility['packages-pricing'] ? 'Visible' : 'Hidden'}\n                </span>\n                <ToggleSwitch>\n                  <input\n                    type=\"checkbox\"\n                    checked={sectionVisibility['packages-pricing']}\n                    onChange={() => toggleSectionVisibility('packages-pricing')}\n                  />\n                  <span></span>\n                </ToggleSwitch>\n              </VisibilityToggleContainer>\n            </SectionHeader>\n            {packagesData.map(pkg => (\n              <div\n                key={pkg.id}\n                style={{\n                  border: `1px solid ${theme.colors.gray200}`,\n                  borderRadius: theme.borderRadius.md,\n                  padding: theme.spacing.lg,\n                  marginBottom: theme.spacing.lg,\n                }}\n              >\n                <FormGrid>\n                  <FormGroup>\n                    <FormLabel>Package Name</FormLabel>\n                    <FormInput\n                      value={pkg.name}\n                      onChange={e =>\n                        updatePackage(pkg.id, 'name', e.target.value)\n                      }\n                      placeholder=\"Basic Package\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormLabel>Price</FormLabel>\n                    <FormInput\n                      value={pkg.price}\n                      onChange={e =>\n                        updatePackage(pkg.id, 'price', e.target.value)\n                      }\n                      placeholder=\"$2000\"\n                    />\n                  </FormGroup>\n                  <FormGroup style={{ gridColumn: '1 / -1' }}>\n                    <FormLabel>Package Description</FormLabel>\n                    <FormTextarea\n                      value={pkg.description}\n                      onChange={e =>\n                        updatePackage(pkg.id, 'description', e.target.value)\n                      }\n                      placeholder=\"Essential wedding planning services...\"\n                      rows={3}\n                    />\n                  </FormGroup>\n                  <FormGroup style={{ gridColumn: '1 / -1' }}>\n                    <FormLabel>Features (one per line)</FormLabel>\n                    <FormTextarea\n                      value={pkg.features?.join('\\n') || ''}\n                      onChange={e =>\n                        updatePackage(\n                          pkg.id,\n                          'features',\n                          e.target.value.split('\\n').filter(f => f.trim())\n                        )\n                      }\n                      placeholder=\"Feature 1&#10;Feature 2&#10;Feature 3\"\n                      rows={4}\n                    />\n                  </FormGroup>\n                  <div style={{ gridColumn: '1 / -1', textAlign: 'right' }}>\n                    <ActionButton\n                      variant=\"danger\"\n                      onClick={() => deletePackage(pkg.id)}\n                    >\n                      <FaTrash />\n                      Remove Package\n                    </ActionButton>\n                  </div>\n                </FormGrid>\n              </div>\n            ))}\n            <ActionButton onClick={addPackage}>\n              <FaPlus />\n              Add New Package\n            </ActionButton>\n          </ContentSection>\n        );\n\n      case 'section-order':\n        return (\n          <ContentSection>\n            <SectionTitle>\n              <FaList />\n              Section Order\n            </SectionTitle>\n            <p\n              style={{\n                color: theme.colors.gray600,\n                marginBottom: theme.spacing.lg,\n              }}\n            >\n              Drag and drop to reorder sections as they appear on your vendor\n              page. Custom sections are automatically included.\n            </p>\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                gap: theme.spacing.sm,\n              }}\n            >\n              {(() => {\n                // Use complete section order that includes both default and custom sections\n                let allSections = [...completeSectionOrder];\n\n                // If completeSectionOrder is empty (on initial load), build it\n                if (allSections.length === 0) {\n                  allSections = [...sectionOrder];\n                  customSections.forEach(customSection => {\n                    const customId = `custom-${customSection.id}`;\n                    if (!allSections.includes(customId)) {\n                      allSections.push(customId);\n                    }\n                  });\n                }\n\n                return allSections.map((sectionId, index) => {\n                  let section,\n                    isCustom = false;\n\n                  if (sectionId.startsWith('custom-')) {\n                    // This is a custom section\n                    const customId = sectionId.replace('custom-', '');\n                    const customSection = customSections.find(\n                      cs => cs.id === customId\n                    );\n                    if (customSection) {\n                      section = {\n                        id: sectionId,\n                        label: customSection.title,\n                        icon: FaPlus,\n                      };\n                      isCustom = true;\n                    }\n                  } else {\n                    // This is a default section\n                    section = navigationItems.find(\n                      item => item.id === sectionId\n                    );\n                  }\n\n                  if (!section) return null;\n\n                  return (\n                    <div\n                      key={sectionId}\n                      style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: theme.spacing.md,\n                        padding: theme.spacing.md,\n                        border: `1px solid ${isCustom ? theme.colors.primary : theme.colors.gray200}`,\n                        borderRadius: theme.borderRadius.md,\n                        background: isCustom\n                          ? theme.colors.primary + '10'\n                          : theme.colors.white,\n                      }}\n                    >\n                      <FaGripHorizontal\n                        style={{ color: theme.colors.gray400, cursor: 'grab' }}\n                      />\n                      <section.icon style={{ color: theme.colors.primary }} />\n                      <span style={{ flex: 1, fontWeight: 600 }}>\n                        {section.label}\n                        {isCustom && (\n                          <span\n                            style={{\n                              fontSize: '0.8rem',\n                              color: theme.colors.primary,\n                              marginLeft: '8px',\n                            }}\n                          >\n                            (Custom)\n                          </span>\n                        )}\n                        {/* Visibility indicator */}\n                        <span\n                          style={{\n                            fontSize: '0.75rem',\n                            color: (() => {\n                              if (isCustom) {\n                                const customId = sectionId.replace(\n                                  'custom-',\n                                  ''\n                                );\n                                return customSectionVisibility[customId]\n                                  ? theme.colors.success\n                                  : theme.colors.gray400;\n                              }\n                              return sectionVisibility[sectionId]\n                                ? theme.colors.success\n                                : theme.colors.gray400;\n                            })(),\n                            marginLeft: '8px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            gap: '4px',\n                          }}\n                        >\n                          {(() => {\n                            if (isCustom) {\n                              const customId = sectionId.replace('custom-', '');\n                              return customSectionVisibility[customId] ? (\n                                <FaEye />\n                              ) : (\n                                <FaEyeSlash />\n                              );\n                            }\n                            return sectionVisibility[sectionId] ? (\n                              <FaEye />\n                            ) : (\n                              <FaEyeSlash />\n                            );\n                          })()}\n                        </span>\n                      </span>\n                      <ActionButton\n                        onClick={() => {\n                          if (index > 0) {\n                            const newOrder = [...allSections];\n                            [newOrder[index], newOrder[index - 1]] = [\n                              newOrder[index - 1],\n                              newOrder[index],\n                            ];\n                            // Update the complete section order\n                            setCompleteSectionOrder(newOrder);\n                            // Update the default sections order (excluding custom ones)\n                            const defaultSections = newOrder.filter(\n                              id => !id.startsWith('custom-')\n                            );\n                            setSectionOrder(defaultSections);\n                            trackSectionChange('section-order');\n                          }\n                        }}\n                        disabled={index === 0}\n                      >\n                        ↑\n                      </ActionButton>\n                      <ActionButton\n                        onClick={() => {\n                          if (index < allSections.length - 1) {\n                            const newOrder = [...allSections];\n                            [newOrder[index], newOrder[index + 1]] = [\n                              newOrder[index + 1],\n                              newOrder[index],\n                            ];\n                            // Update the complete section order\n                            setCompleteSectionOrder(newOrder);\n                            // Update the default sections order (excluding custom ones)\n                            const defaultSections = newOrder.filter(\n                              id => !id.startsWith('custom-')\n                            );\n                            setSectionOrder(defaultSections);\n                            trackSectionChange('section-order');\n                          }\n                        }}\n                        disabled={index === allSections.length - 1}\n                      >\n                        ↓\n                      </ActionButton>\n                      {isCustom && (\n                        <ActionButton\n                          variant=\"danger\"\n                          onClick={() => {\n                            const customId = sectionId.replace('custom-', '');\n                            const updatedSections = customSections.filter(\n                              cs => cs.id !== customId\n                            );\n                            setCustomSections(updatedSections);\n                            // Remove from complete section order\n                            const updatedCompleteOrder =\n                              completeSectionOrder.filter(\n                                id => id !== sectionId\n                              );\n                            setCompleteSectionOrder(updatedCompleteOrder);\n                            trackSectionChange('section-order');\n                          }}\n                        >\n                          <FaTrash />\n                        </ActionButton>\n                      )}\n                    </div>\n                  );\n                });\n              })()}\n            </div>\n          </ContentSection>\n        );\n\n      case 'custom-sections':\n        return (\n          <ContentSection>\n            <SectionTitle>\n              <FaPlus />\n              Custom Sections\n            </SectionTitle>\n            <p\n              style={{\n                color: theme.colors.gray600,\n                marginBottom: theme.spacing.lg,\n              }}\n            >\n              Create custom sections for your vendor page with different content\n              types like text, galleries, or cards.\n            </p>\n\n            {/* Existing Custom Sections */}\n            {customSections.map(section => (\n              <div\n                key={section.id}\n                style={{\n                  border: `1px solid ${theme.colors.gray200}`,\n                  borderRadius: theme.borderRadius.md,\n                  padding: theme.spacing.lg,\n                  marginBottom: theme.spacing.lg,\n                  backgroundColor: theme.colors.gray50,\n                }}\n              >\n                <div\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    marginBottom: theme.spacing.md,\n                  }}\n                >\n                  <h3 style={{ margin: 0, color: theme.colors.primary }}>\n                    {section.title}\n                  </h3>\n                  <div\n                    style={{\n                      display: 'flex',\n                      gap: theme.spacing.sm,\n                      alignItems: 'center',\n                    }}\n                  >\n                    <VisibilityToggleContainer>\n                      <span>\n                        {customSectionVisibility[section.id]\n                          ? 'Visible'\n                          : 'Hidden'}\n                      </span>\n                      <ToggleSwitch>\n                        <input\n                          type=\"checkbox\"\n                          checked={customSectionVisibility[section.id] || false}\n                          onChange={() =>\n                            toggleSectionVisibility(`custom-${section.id}`)\n                          }\n                        />\n                        <span></span>\n                      </ToggleSwitch>\n                    </VisibilityToggleContainer>\n                    <ActionButton\n                      onClick={() => openCustomSectionModal(section)}\n                    >\n                      <FaEdit />\n                      Edit\n                    </ActionButton>\n                    <ActionButton\n                      variant=\"danger\"\n                      onClick={() => {\n                        const updatedSections = customSections.filter(\n                          s => s.id !== section.id\n                        );\n                        setCustomSections(updatedSections);\n                        // Remove from visibility state\n                        setCustomSectionVisibility(prev => {\n                          const newVisibility = { ...prev };\n                          delete newVisibility[section.id];\n                          return newVisibility;\n                        });\n                        trackSectionChange('custom-sections');\n                      }}\n                    >\n                      <FaTrash />\n                      Delete\n                    </ActionButton>\n                  </div>\n                </div>\n                <p style={{ color: theme.colors.gray600, margin: 0 }}>\n                  {section.subtitle}\n                </p>\n                <p\n                  style={{\n                    color: theme.colors.gray500,\n                    fontSize: '0.9rem',\n                    margin: '8px 0 0 0',\n                  }}\n                >\n                  Type:{' '}\n                  {section.type === 'text'\n                    ? 'Text Content'\n                    : section.type === 'gallery'\n                      ? 'Image Gallery'\n                      : 'Card Layout'}\n                </p>\n              </div>\n            ))}\n\n            {/* Add New Custom Section Button */}\n            <ActionButton onClick={() => openCustomSectionModal()}>\n              <FaPlus />\n              Add Custom Section\n            </ActionButton>\n          </ContentSection>\n        );\n\n      case 'settings':\n        return (\n          <ContentSection>\n            <SectionTitle>\n              <FaCog />\n              Settings\n            </SectionTitle>\n\n            {/* Basic Details */}\n            <div style={{ marginBottom: theme.spacing.xxl }}>\n              <h3\n                style={{\n                  fontSize: '1.3rem',\n                  fontWeight: 600,\n                  marginBottom: theme.spacing.lg,\n                  color: theme.colors.gray900,\n                }}\n              >\n                Basic Details\n              </h3>\n              <FormGrid>\n                <FormGroup>\n                  <FormLabel>Business Name</FormLabel>\n                  <FormInput\n                    value={heroData.name}\n                    onChange={e => {\n                      setHeroData(prev => ({ ...prev, name: e.target.value }));\n                      trackSectionChange('settings');\n                    }}\n                    placeholder=\"Enter business name\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <FormLabel>Email Address</FormLabel>\n                  <FormInput\n                    type=\"email\"\n                    value={vendor?.email || ''}\n                    onChange={e => trackSectionChange('settings')}\n                    placeholder=\"business@example.com\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <FormLabel>Phone Number</FormLabel>\n                  <FormInput\n                    type=\"tel\"\n                    value={vendor?.phone || ''}\n                    onChange={e => trackSectionChange('settings')}\n                    placeholder=\"+1 (555) 123-4567\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <FormLabel>Website URL</FormLabel>\n                  <FormInput\n                    type=\"url\"\n                    value={vendor?.website || ''}\n                    onChange={e => trackSectionChange('settings')}\n                    placeholder=\"https://example.com\"\n                  />\n                </FormGroup>\n                <FormGroup style={{ gridColumn: '1 / -1' }}>\n                  <FormLabel>Business Address</FormLabel>\n                  <FormTextarea\n                    value={vendor?.address || ''}\n                    onChange={e => trackSectionChange('settings')}\n                    placeholder=\"Enter your complete business address...\"\n                    rows={3}\n                  />\n                </FormGroup>\n              </FormGrid>\n            </div>\n\n            {/* Password Update */}\n            <div style={{ marginBottom: theme.spacing.xxl }}>\n              <h3\n                style={{\n                  fontSize: '1.3rem',\n                  fontWeight: 600,\n                  marginBottom: theme.spacing.lg,\n                  color: theme.colors.gray900,\n                }}\n              >\n                Update Password\n              </h3>\n              <FormGrid>\n                <FormGroup>\n                  <FormLabel>Current Password</FormLabel>\n                  <FormInput\n                    type=\"password\"\n                    placeholder=\"Enter current password\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <FormLabel>New Password</FormLabel>\n                  <FormInput type=\"password\" placeholder=\"Enter new password\" />\n                </FormGroup>\n                <FormGroup style={{ gridColumn: '1 / -1' }}>\n                  <FormLabel>Confirm New Password</FormLabel>\n                  <FormInput\n                    type=\"password\"\n                    placeholder=\"Confirm new password\"\n                  />\n                </FormGroup>\n              </FormGrid>\n              <div style={{ marginTop: theme.spacing.lg }}>\n                <ActionButton\n                  onClick={() =>\n                    alert(\n                      'Password update functionality will be implemented with backend integration'\n                    )\n                  }\n                >\n                  <FaLock />\n                  Update Password\n                </ActionButton>\n              </div>\n            </div>\n\n            {/* Account Actions */}\n            <div>\n              <h3\n                style={{\n                  fontSize: '1.3rem',\n                  fontWeight: 600,\n                  marginBottom: theme.spacing.lg,\n                  color: theme.colors.gray900,\n                }}\n              >\n                Account Actions\n              </h3>\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: theme.spacing.md,\n                  maxWidth: '300px',\n                }}\n              >\n                <ActionButton\n                  onClick={() => {\n                    if (window.confirm('Are you sure you want to logout?')) {\n                      // Handle logout\n                      alert(\n                        'Logout functionality will be implemented with auth integration'\n                      );\n                    }\n                  }}\n                >\n                  <FaArrowLeft />\n                  Logout\n                </ActionButton>\n                <ActionButton\n                  variant=\"danger\"\n                  onClick={() => setShowDeleteAccountModal(true)}\n                >\n                  <FaTrash />\n                  Delete Account\n                </ActionButton>\n              </div>\n            </div>\n          </ContentSection>\n        );\n\n      default:\n        return (\n          <ContentSection>\n            <SectionTitle>Section: {activeSection}</SectionTitle>\n            <p>This section is under development.</p>\n          </ContentSection>\n        );\n    }\n  };\n\n  if (loading) {\n    return (\n      <DashboardContainer>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            minHeight: '100vh',\n            width: '100%',\n          }}\n        >\n          Loading dashboard...\n        </div>\n      </DashboardContainer>\n    );\n  }\n\n  if (!vendor) {\n    return (\n      <DashboardContainer>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            minHeight: '100vh',\n            width: '100%',\n          }}\n        >\n          <div style={{ textAlign: 'center' }}>\n            <h2>Vendor Not Found</h2>\n            <p>You don't have access to this vendor dashboard.</p>\n            <ActionButton onClick={() => navigate('/weddings')}>\n              <FaArrowLeft />\n              Back to Vendors\n            </ActionButton>\n          </div>\n        </div>\n      </DashboardContainer>\n    );\n  }\n\n  const groupedNavItems = navigationItems.reduce((acc, item) => {\n    if (!acc[item.section]) acc[item.section] = [];\n    acc[item.section].push(item);\n    return acc;\n  }, {});\n\n  return (\n    <DashboardContainer>\n      <MobileSidebarOverlay\n        isOpen={mobileSidebarOpen}\n        onClick={closeMobileSidebar}\n      />\n      <MobileMenuButton\n        onClick={() => setMobileSidebarOpen(!mobileSidebarOpen)}\n        aria-label={mobileSidebarOpen ? 'Close menu' : 'Open menu'}\n      >\n        {mobileSidebarOpen ? <FaTimes /> : <FaBars />}\n      </MobileMenuButton>\n      <Sidebar mobileOpen={mobileSidebarOpen}>\n        <SidebarHeader>\n          <MobileSidebarCloseButton onClick={closeMobileSidebar}>\n            <FaTimes />\n          </MobileSidebarCloseButton>\n          <VendorName>{vendor.name}</VendorName>\n          <VendorRole>Wedding Vendor Dashboard</VendorRole>\n        </SidebarHeader>\n\n        <SidebarNav>\n          {Object.entries(groupedNavItems).map(([section, items]) => (\n            <NavSection key={section}>\n              <NavSectionTitle>{section}</NavSectionTitle>\n              {items.map(item => (\n                <NavItem\n                  key={item.id}\n                  active={activeSection === item.id}\n                  onClick={() => {\n                    setActiveSection(item.id);\n                    closeMobileSidebar();\n                  }}\n                >\n                  <item.icon />\n                  {item.label}\n                  <FaChevronRight\n                    style={{ marginLeft: 'auto', fontSize: '0.8rem' }}\n                  />\n                </NavItem>\n              ))}\n            </NavSection>\n          ))}\n\n          {/* Save Actions Section - Now part of scrollable content */}\n          <NavSection>\n            <NavSectionTitle>Changes</NavSectionTitle>\n            {changedSections.size > 0 && (\n              <div\n                style={{\n                  padding: `0 ${theme.spacing.lg}`,\n                  marginBottom: theme.spacing.md,\n                }}\n              >\n                <p\n                  style={{\n                    fontSize: '0.85rem',\n                    color: theme.colors.gray600,\n                    margin: '0 0 8px 0',\n                  }}\n                >\n                  Modified sections:\n                </p>\n                {Array.from(changedSections).map(sectionId => {\n                  const section = navigationItems.find(\n                    item => item.id === sectionId\n                  );\n                  return (\n                    <div\n                      key={sectionId}\n                      style={{\n                        fontSize: '0.8rem',\n                        color: theme.colors.warning,\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: '4px',\n                        marginBottom: '4px',\n                      }}\n                    >\n                      <FaEdit size={10} />\n                      {section?.label || sectionId}\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </NavSection>\n\n          <NavSection>\n            <NavSectionTitle>Actions</NavSectionTitle>\n            <SidebarFooter>\n              <SaveActionsContainer>\n                {changedSections.size > 0 && !saved && (\n                  <ChangesIndicator>\n                    <FaEdit />\n                    {changedSections.size} section\n                    {changedSections.size > 1 ? 's' : ''} modified\n                  </ChangesIndicator>\n                )}\n                {saved && (\n                  <ChangesIndicator style={{ color: theme.colors.success }}>\n                    <FaCheckCircle />\n                    Changes saved - Ready to publish\n                  </ChangesIndicator>\n                )}\n                <SaveButton variant=\"secondary\" onClick={handleDiscardChanges}>\n                  <FaUndo />\n                  Discard\n                </SaveButton>\n                <SaveButton\n                  onClick={handleSaveChanges}\n                  disabled={changedSections.size === 0 || saved}\n                  saved={saved}\n                >\n                  <FaSave />\n                  {saved ? 'Saved' : 'Save Changes'}\n                </SaveButton>\n                <SaveButton\n                  variant=\"primary\"\n                  onClick={handleSaveAndGoLive}\n                  disabled={!saved}\n                >\n                  <FaCheckCircle />\n                  Save & Go Live\n                </SaveButton>\n              </SaveActionsContainer>\n            </SidebarFooter>\n          </NavSection>\n        </SidebarNav>\n      </Sidebar>\n\n      <MainContent>\n        <ContentHeader>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              gap: theme.spacing.lg,\n            }}\n          >\n            <ActionButton onClick={() => navigate(`/${vendorId}`)}>\n              <FaArrowLeft />\n              Back to Site\n            </ActionButton>\n            <PageTitle>\n              {navigationItems.find(item => item.id === activeSection)?.label ||\n                'Dashboard'}\n            </PageTitle>\n          </div>\n\n          <PageActions>\n            <ActionButton\n              onClick={() => navigate(`/${vendorId}`)}\n              variant=\"secondary\"\n            >\n              <FaEye />\n              Preview Site\n            </ActionButton>\n          </PageActions>\n        </ContentHeader>\n\n        {renderContent()}\n      </MainContent>\n\n      {/* Custom Section Modal */}\n      {showCustomSectionModal && (\n        <div\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            background: 'rgba(0, 0, 0, 0.5)',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            zIndex: 2000,\n            padding: theme.spacing.lg,\n          }}\n        >\n          <div\n            style={{\n              background: theme.colors.white,\n              borderRadius: theme.borderRadius.lg,\n              padding: theme.spacing.xl,\n              maxWidth: '600px',\n              width: '100%',\n              maxHeight: '80vh',\n              overflowY: 'auto',\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                marginBottom: theme.spacing.lg,\n              }}\n            >\n              <h2 style={{ margin: 0, fontSize: '1.5rem', fontWeight: 600 }}>\n                {editingCustomSection\n                  ? 'Edit Custom Section'\n                  : 'Add Custom Section'}\n              </h2>\n              <button\n                onClick={() => setShowCustomSectionModal(false)}\n                style={{\n                  background: 'none',\n                  border: 'none',\n                  fontSize: '1.5rem',\n                  cursor: 'pointer',\n                }}\n              >\n                <FaTimes />\n              </button>\n            </div>\n\n            <FormGroup style={{ marginBottom: theme.spacing.md }}>\n              <FormLabel>Section Title</FormLabel>\n              <FormInput\n                value={customSectionForm.title}\n                onChange={e =>\n                  setCustomSectionForm(prev => ({\n                    ...prev,\n                    title: e.target.value,\n                  }))\n                }\n                placeholder=\"Enter section title\"\n              />\n            </FormGroup>\n\n            <FormGroup style={{ marginBottom: theme.spacing.md }}>\n              <FormLabel>Section Subtitle (Optional)</FormLabel>\n              <FormInput\n                value={customSectionForm.subtitle}\n                onChange={e =>\n                  setCustomSectionForm(prev => ({\n                    ...prev,\n                    subtitle: e.target.value,\n                  }))\n                }\n                placeholder=\"Enter section subtitle\"\n              />\n            </FormGroup>\n\n            <FormGroup style={{ marginBottom: theme.spacing.md }}>\n              <FormLabel>Content Type</FormLabel>\n              <select\n                value={customSectionForm.type}\n                onChange={e =>\n                  setCustomSectionForm(prev => ({\n                    ...prev,\n                    type: e.target.value,\n                  }))\n                }\n                style={{\n                  padding: theme.spacing.md,\n                  border: `2px solid ${theme.colors.gray200}`,\n                  borderRadius: theme.borderRadius.md,\n                  fontSize: '1rem',\n                  width: '100%',\n                }}\n              >\n                <option value=\"text\">Text Content</option>\n                <option value=\"gallery\">Image Gallery</option>\n                <option value=\"cards\">Card Layout</option>\n              </select>\n            </FormGroup>\n\n            <FormGroup style={{ marginBottom: theme.spacing.md }}>\n              <VisibilityToggleContainer>\n                <FormLabel>Section Visibility</FormLabel>\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: theme.spacing.sm,\n                  }}\n                >\n                  <span>\n                    {customSectionForm.visible ? 'Visible' : 'Hidden'}\n                  </span>\n                  <ToggleSwitch>\n                    <input\n                      type=\"checkbox\"\n                      checked={customSectionForm.visible || true}\n                      onChange={e =>\n                        setCustomSectionForm(prev => ({\n                          ...prev,\n                          visible: e.target.checked,\n                        }))\n                      }\n                    />\n                    <span></span>\n                  </ToggleSwitch>\n                </div>\n              </VisibilityToggleContainer>\n            </FormGroup>\n\n            {/* Content Input Fields Based on Type */}\n            {customSectionForm.type === 'text' && (\n              <FormGroup style={{ marginBottom: theme.spacing.md }}>\n                <FormLabel>Content</FormLabel>\n                <FormTextarea\n                  value={customSectionForm.content}\n                  onChange={e =>\n                    setCustomSectionForm(prev => ({\n                      ...prev,\n                      content: e.target.value,\n                    }))\n                  }\n                  placeholder=\"Enter your content here...\"\n                  rows={6}\n                />\n              </FormGroup>\n            )}\n\n            {customSectionForm.type === 'gallery' && (\n              <FormGroup style={{ marginBottom: theme.spacing.md }}>\n                <FormLabel>Gallery Images</FormLabel>\n                <FileUploadContainer>\n                  <FileUploadBox>\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      multiple\n                      onChange={e => {\n                        Array.from(e.target.files).forEach(file => {\n                          const reader = new FileReader();\n                          reader.onload = event => {\n                            addCustomSectionImage(event.target.result);\n                          };\n                          reader.readAsDataURL(file);\n                        });\n                      }}\n                    />\n                    <FaUpload size={24} color={theme.colors.gray400} />\n                    <span style={{ fontSize: '0.8rem', textAlign: 'center' }}>\n                      Upload Images\n                    </span>\n                  </FileUploadBox>\n                  <FormGroup style={{ flex: 1 }}>\n                    <FormLabel>Or paste image URLs (one per line)</FormLabel>\n                    <FormTextarea\n                      placeholder=\"https://example.com/image1.jpg\nhttps://example.com/image2.jpg\"\n                      rows={3}\n                      onBlur={e => {\n                        const urls = e.target.value\n                          .split('\\n')\n                          .filter(url => url.trim());\n                        if (urls.length > 0) {\n                          urls.forEach(url => addCustomSectionImage(url));\n                          e.target.value = '';\n                        }\n                      }}\n                    />\n                  </FormGroup>\n                </FileUploadContainer>\n\n                {/* Gallery Preview */}\n                {customSectionForm.images &&\n                  customSectionForm.images.length > 0 && (\n                    <div\n                      style={{\n                        display: 'grid',\n                        gridTemplateColumns:\n                          'repeat(auto-fill, minmax(120px, 1fr))',\n                        gap: theme.spacing.sm,\n                        marginTop: theme.spacing.md,\n                      }}\n                    >\n                      {customSectionForm.images.map((image, index) => (\n                        <ImagePreview\n                          key={index}\n                          style={{ width: '120px', height: '80px' }}\n                        >\n                          <img src={image} alt={`Gallery ${index}`} />\n                          <ImageOverlay>\n                            <RemoveImageButton\n                              onClick={() => removeCustomSectionImage(index)}\n                            >\n                              <FaTrash />\n                            </RemoveImageButton>\n                          </ImageOverlay>\n                        </ImagePreview>\n                      ))}\n                    </div>\n                  )}\n              </FormGroup>\n            )}\n\n            {customSectionForm.type === 'cards' && (\n              <FormGroup style={{ marginBottom: theme.spacing.md }}>\n                <FormLabel>Cards Content</FormLabel>\n\n                {/* Existing Cards */}\n                {customSectionForm.cards.map((card, index) => (\n                  <div\n                    key={index}\n                    style={{\n                      border: `1px solid ${theme.colors.gray200}`,\n                      borderRadius: theme.borderRadius.md,\n                      padding: theme.spacing.md,\n                      marginBottom: theme.spacing.md,\n                      backgroundColor: theme.colors.gray50,\n                    }}\n                  >\n                    <div\n                      style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center',\n                        marginBottom: theme.spacing.sm,\n                      }}\n                    >\n                      <h4\n                        style={{ margin: 0, fontSize: '1rem', fontWeight: 600 }}\n                      >\n                        Card {index + 1}\n                      </h4>\n                      <button\n                        type=\"button\"\n                        onClick={() => removeCustomSectionCard(index)}\n                        style={{\n                          background: theme.colors.error,\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '50%',\n                          width: '24px',\n                          height: '24px',\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          cursor: 'pointer',\n                          fontSize: '0.8rem',\n                        }}\n                      >\n                        ×\n                      </button>\n                    </div>\n\n                    <FormGrid style={{ gap: theme.spacing.sm }}>\n                      <FormGroup>\n                        <FormLabel>Title</FormLabel>\n                        <FormInput\n                          value={card.title}\n                          onChange={e =>\n                            updateCustomSectionCard(\n                              index,\n                              'title',\n                              e.target.value\n                            )\n                          }\n                          placeholder=\"Card title\"\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <FormLabel>Icon (Emoji)</FormLabel>\n                        <FormInput\n                          value={card.icon}\n                          onChange={e =>\n                            updateCustomSectionCard(\n                              index,\n                              'icon',\n                              e.target.value\n                            )\n                          }\n                          placeholder=\"💼\"\n                        />\n                      </FormGroup>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>Description</FormLabel>\n                        <FormTextarea\n                          value={card.description}\n                          onChange={e =>\n                            updateCustomSectionCard(\n                              index,\n                              'description',\n                              e.target.value\n                            )\n                          }\n                          placeholder=\"Card description...\"\n                          rows={3}\n                        />\n                      </FormGroup>\n                      <FormGroup style={{ gridColumn: '1 / -1' }}>\n                        <FormLabel>Card Image (Optional)</FormLabel>\n                        <FileUploadContainer>\n                          {card.image && (\n                            <ImagePreview\n                              style={{ width: '120px', height: '80px' }}\n                            >\n                              <img src={card.image} alt={`Card ${index + 1}`} />\n                              <ImageOverlay>\n                                <RemoveImageButton\n                                  onClick={() =>\n                                    updateCustomSectionCard(index, 'image', '')\n                                  }\n                                >\n                                  <FaTrash />\n                                </RemoveImageButton>\n                              </ImageOverlay>\n                            </ImagePreview>\n                          )}\n                          <FileUploadBox>\n                            <input\n                              type=\"file\"\n                              accept=\"image/*\"\n                              onChange={e => {\n                                const file = e.target.files[0];\n                                if (file) {\n                                  const reader = new FileReader();\n                                  reader.onload = event => {\n                                    updateCustomSectionCard(\n                                      index,\n                                      'image',\n                                      event.target.result\n                                    );\n                                  };\n                                  reader.readAsDataURL(file);\n                                }\n                              }}\n                            />\n                            <FaUpload size={20} color={theme.colors.gray400} />\n                            <span\n                              style={{\n                                fontSize: '0.7rem',\n                                textAlign: 'center',\n                              }}\n                            >\n                              Upload\n                            </span>\n                          </FileUploadBox>\n                          <FormGroup style={{ flex: 1 }}>\n                            <FormLabel>Or paste image URL</FormLabel>\n                            <FormInput\n                              value={card.image}\n                              onChange={e =>\n                                updateCustomSectionCard(\n                                  index,\n                                  'image',\n                                  e.target.value\n                                )\n                              }\n                              placeholder=\"https://example.com/image.jpg\"\n                            />\n                          </FormGroup>\n                        </FileUploadContainer>\n                      </FormGroup>\n                    </FormGrid>\n                  </div>\n                ))}\n\n                {/* Add New Card Button */}\n                <button\n                  type=\"button\"\n                  onClick={addCustomSectionCard}\n                  style={{\n                    background: theme.colors.primary,\n                    color: 'white',\n                    border: 'none',\n                    padding: `${theme.spacing.sm} ${theme.spacing.md}`,\n                    borderRadius: theme.borderRadius.md,\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: theme.spacing.xs,\n                    fontSize: '0.9rem',\n                    fontWeight: 600,\n                  }}\n                >\n                  <FaPlus /> Add Card\n                </button>\n              </FormGroup>\n            )}\n\n            <div\n              style={{\n                display: 'flex',\n                gap: theme.spacing.md,\n                justifyContent: 'flex-end',\n                marginTop: theme.spacing.xl,\n              }}\n            >\n              <button\n                onClick={() => setShowCustomSectionModal(false)}\n                style={{\n                  background: theme.colors.gray300,\n                  color: theme.colors.gray700,\n                  border: 'none',\n                  padding: `${theme.spacing.md} ${theme.spacing.lg}`,\n                  borderRadius: theme.borderRadius.md,\n                  cursor: 'pointer',\n                }}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={saveCustomSection}\n                style={{\n                  background: theme.colors.primary,\n                  color: 'white',\n                  border: 'none',\n                  padding: `${theme.spacing.md} ${theme.spacing.lg}`,\n                  borderRadius: theme.borderRadius.md,\n                  cursor: 'pointer',\n                }}\n              >\n                {editingCustomSection ? 'Update Section' : 'Add Section'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Delete Account Modal */}\n      {showDeleteAccountModal && (\n        <div\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            background: 'rgba(0, 0, 0, 0.5)',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            zIndex: 2000,\n            padding: theme.spacing.lg,\n          }}\n        >\n          <div\n            style={{\n              background: theme.colors.white,\n              borderRadius: theme.borderRadius.lg,\n              padding: theme.spacing.xl,\n              maxWidth: '500px',\n              width: '100%',\n              textAlign: 'center',\n              border: `3px solid ${theme.colors.error}`,\n            }}\n          >\n            <div\n              style={{\n                fontSize: '3rem',\n                color: theme.colors.error,\n                marginBottom: theme.spacing.lg,\n              }}\n            >\n              ⚠️\n            </div>\n            <h2\n              style={{\n                margin: `0 0 ${theme.spacing.md} 0`,\n                fontSize: '1.5rem',\n                fontWeight: 700,\n                color: theme.colors.error,\n              }}\n            >\n              Delete Account\n            </h2>\n            <p\n              style={{\n                marginBottom: theme.spacing.lg,\n                color: theme.colors.gray700,\n                lineHeight: 1.6,\n              }}\n            >\n              <strong>Warning:</strong> This action cannot be undone. Deleting\n              your account will permanently remove:\n            </p>\n            <ul\n              style={{\n                textAlign: 'left',\n                marginBottom: theme.spacing.xl,\n                color: theme.colors.gray600,\n              }}\n            >\n              <li>Your vendor profile and all content</li>\n              <li>All portfolio images and work history</li>\n              <li>Customer reviews and testimonials</li>\n              <li>All account data and settings</li>\n            </ul>\n            <p\n              style={{\n                marginBottom: theme.spacing.xl,\n                fontWeight: 600,\n                color: theme.colors.error,\n              }}\n            >\n              This action cannot be recovered. Are you absolutely sure?\n            </p>\n            <div\n              style={{\n                display: 'flex',\n                gap: theme.spacing.md,\n                justifyContent: 'center',\n              }}\n            >\n              <button\n                onClick={() => setShowDeleteAccountModal(false)}\n                style={{\n                  background: theme.colors.gray300,\n                  color: theme.colors.gray700,\n                  border: 'none',\n                  padding: `${theme.spacing.md} ${theme.spacing.lg}`,\n                  borderRadius: theme.borderRadius.md,\n                  cursor: 'pointer',\n                  fontWeight: 600,\n                }}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={() => {\n                  alert(\n                    'Delete account functionality will be implemented with backend integration'\n                  );\n                  setShowDeleteAccountModal(false);\n                }}\n                style={{\n                  background: theme.colors.error,\n                  color: 'white',\n                  border: 'none',\n                  padding: `${theme.spacing.md} ${theme.spacing.lg}`,\n                  borderRadius: theme.borderRadius.md,\n                  cursor: 'pointer',\n                  fontWeight: 600,\n                }}\n              >\n                Yes, Delete Account\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </DashboardContainer>\n  );\n};\n\nexport default VendorDashboard;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/weddings/pages/VendorDetail.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'FaGem' is defined but never used.","line":21,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":21,"endColumn":8},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":534,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":534,"endColumn":41}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaArrowLeft,\n  FaStar,\n  FaMapMarkerAlt,\n  FaPhoneAlt,\n  FaEnvelope,\n  FaGlobeAmericas,\n  FaClock,\n  FaHeart,\n  FaShare,\n  FaCalendarAlt,\n  FaUsers,\n  FaCamera,\n  FaQuoteLeft,\n  FaCheckCircle,\n  FaInfo,\n  FaRing,\n  FaGem,\n  FaLeaf,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport { getVendorById } from '../data/vendors';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n`;\n\nconst NavHeader = styled.div`\n  background: ${theme.colors.white};\n  box-shadow: ${theme.shadows.sm};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  position: sticky;\n  top: 0;\n  z-index: 100;\n`;\n\nconst NavContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.lg} ${theme.spacing.md};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.md} ${theme.spacing.sm};\n    flex-direction: column;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst BackButton = styled.button`\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n`;\n\nconst ActionButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'primary',\n})`\n  background: ${props =>\n    props.primary ? theme.colors.primary : theme.colors.white};\n  color: ${props =>\n    props.primary ? theme.colors.white : theme.colors.gray700};\n  border: 2px solid\n    ${props => (props.primary ? theme.colors.primary : theme.colors.gray200)};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    transform: translateY(-1px);\n    background: ${props =>\n      props.primary ? theme.colors.primaryDark : theme.colors.gray50};\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg} ${theme.spacing.sm};\n  }\n`;\n\nconst HeroSection = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  overflow: hidden;\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst HeroImage = styled.img`\n  width: 100%;\n  height: 400px;\n  object-fit: cover;\n`;\n\nconst HeroContent = styled.div`\n  padding: ${theme.spacing.xl};\n`;\n\nconst VendorHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    flex-direction: column;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst VendorInfo = styled.div`\n  flex: 1;\n`;\n\nconst VendorName = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2rem;\n  }\n`;\n\nconst VendorMeta = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.md};\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    gap: ${theme.spacing.md};\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst MetaItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  color: ${theme.colors.gray600};\n  font-size: 1rem;\n`;\n\nconst Rating = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  color: ${theme.colors.warning};\n  font-weight: 600;\n  font-size: 1.1rem;\n`;\n\nconst FeaturedBadge = styled.span`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n  font-weight: 600;\n`;\n\nconst VendorDescription = styled.p`\n  font-size: 1.1rem;\n  line-height: 1.6;\n  color: ${theme.colors.gray700};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst SpecialtiesGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst SpecialtyTag = styled.span`\n  background: ${theme.colors.primary}15;\n  color: ${theme.colors.primary};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  font-size: 0.9rem;\n`;\n\nconst ContactGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.md};\n  }\n`;\n\nconst ContactCard = styled.div`\n  background: ${theme.colors.gray50};\n  padding: ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  text-align: center;\n`;\n\nconst ContactIcon = styled.div`\n  font-size: 1.5rem;\n  color: ${theme.colors.primary};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst ContactLabel = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst ContactValue = styled.div`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n`;\n\nconst ContentGrid = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst MainContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.xl};\n`;\n\nconst Sidebar = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.lg};\n`;\n\nconst Section = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.lg};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst GalleryGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst GalleryItem = styled.img`\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  transition: transform 0.2s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nconst ReviewCard = styled.div`\n  border: 1px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  padding: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.lg};\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst ReviewHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst ReviewerInfo = styled.div``;\n\nconst ReviewerName = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst ReviewDate = styled.div`\n  color: ${theme.colors.gray500};\n  font-size: 0.8rem;\n`;\n\nconst ReviewRating = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  color: ${theme.colors.warning};\n`;\n\nconst ReviewText = styled.p`\n  color: ${theme.colors.gray700};\n  line-height: 1.5;\n  position: relative;\n  padding-left: ${theme.spacing.lg};\n  font-style: italic;\n\n  &:before {\n    content: '\"';\n    position: absolute;\n    left: 0;\n    top: -5px;\n    font-size: 2rem;\n    color: ${theme.colors.primary};\n    font-family: serif;\n  }\n`;\n\nconst HoursGrid = styled.div`\n  display: grid;\n  gap: ${theme.spacing.sm};\n`;\n\nconst HourRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: ${theme.spacing.sm} 0;\n  border-bottom: 1px solid ${theme.colors.gray200};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst Day = styled.span`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n`;\n\nconst Hours = styled.span`\n  color: ${theme.colors.gray600};\n`;\n\nconst BookingCard = styled.div`\n  background: ${theme.colors.primary}10;\n  border: 2px solid ${theme.colors.primary}30;\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xl};\n  text-align: center;\n`;\n\nconst BookingTitle = styled.h3`\n  font-size: 1.3rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst BookingDescription = styled.p`\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.lg};\n  line-height: 1.5;\n`;\n\nconst BookingButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n  width: 100%;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-1px);\n  }\n`;\n\nconst ServicesList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.md};\n`;\n\nconst ServiceItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  padding: ${theme.spacing.md};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst ServiceIcon = styled.div`\n  font-size: 1.2rem;\n  color: ${theme.colors.primary};\n`;\n\nconst ServiceInfo = styled.div`\n  flex: 1;\n`;\n\nconst ServiceName = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst ServiceDescription = styled.div`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n`;\n\nconst LoadingState = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 50vh;\n  color: ${theme.colors.gray600};\n  font-size: 1.2rem;\n`;\n\nconst NotFound = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n\n  h2 {\n    font-size: 2rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray900};\n  }\n\n  p {\n    font-size: 1.1rem;\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst VendorDetail = () => {\n  const { vendorSlug } = useParams();\n  const navigate = useNavigate();\n  const [vendor, setVendor] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isLiked, setIsLiked] = useState(false);\n\n  useEffect(() => {\n    const vendorData = getVendorById(vendorSlug);\n    setVendor(vendorData);\n    setLoading(false);\n  }, [vendorSlug]);\n\n  const handleBooking = () => {\n    navigate(`/${vendorSlug}/booking`);\n  };\n\n  const handleShare = () => {\n    if (navigator.share) {\n      navigator.share({\n        title: vendor.name,\n        text: vendor.description,\n        url: window.location.href,\n      });\n    } else {\n      navigator.clipboard.writeText(window.location.href);\n      alert('Link copied to clipboard!');\n    }\n  };\n\n  const mockReviews = [\n    {\n      id: 1,\n      name: 'Sarah Johnson',\n      rating: 5,\n      date: '2 weeks ago',\n      text: 'Absolutely amazing service! They made our wedding day perfect. The attention to detail was incredible and the team was so professional throughout the entire process.',\n    },\n    {\n      id: 2,\n      name: 'Michael & Emma',\n      rating: 5,\n      date: '1 month ago',\n      text: \"We couldn't have asked for better vendors. From the initial consultation to the final execution, everything was flawless. Highly recommend to any couple planning their special day!\",\n    },\n    {\n      id: 3,\n      name: 'Jennifer Chen',\n      rating: 4,\n      date: '2 months ago',\n      text: 'Great experience overall. Very responsive and accommodating to our needs. The quality of work exceeded our expectations and the pricing was fair.',\n    },\n  ];\n\n  const services = [\n    {\n      name: 'Wedding Planning',\n      description: 'Complete wedding planning from start to finish',\n      icon: FaRing,\n    },\n    {\n      name: 'Venue Decoration',\n      description: 'Beautiful decorations to transform your venue',\n      icon: FaLeaf,\n    },\n    {\n      name: 'Floral Arrangements',\n      description: 'Custom bouquets and centerpieces',\n      icon: FaLeaf,\n    },\n    {\n      name: 'Photography',\n      description: 'Professional wedding photography services',\n      icon: FaCamera,\n    },\n  ];\n\n  if (loading) {\n    return (\n      <PageContainer>\n        <LoadingState>Loading vendor details...</LoadingState>\n      </PageContainer>\n    );\n  }\n\n  if (!vendor) {\n    return (\n      <PageContainer>\n        <NavHeader>\n          <NavContent>\n            <BackButton onClick={() => navigate('/weddings')}>\n              <FaArrowLeft />\n              Back to Vendors\n            </BackButton>\n          </NavContent>\n        </NavHeader>\n        <NotFound>\n          <h2>Vendor Not Found</h2>\n          <p>\n            The vendor you're looking for doesn't exist or may have been\n            removed.\n          </p>\n          <ActionButton primary onClick={() => navigate('/weddings')}>\n            Back to Vendors\n          </ActionButton>\n        </NotFound>\n      </PageContainer>\n    );\n  }\n\n  return (\n    <PageContainer>\n      <NavHeader>\n        <NavContent>\n          <BackButton onClick={() => navigate('/weddings')}>\n            <FaArrowLeft />\n            Back to Vendors\n          </BackButton>\n          <ActionButtons>\n            <ActionButton onClick={() => setIsLiked(!isLiked)}>\n              <FaHeart\n                style={{ color: isLiked ? theme.colors.error : 'inherit' }}\n              />\n              {isLiked ? 'Liked' : 'Like'}\n            </ActionButton>\n            <ActionButton onClick={handleShare}>\n              <FaShare />\n              Share\n            </ActionButton>\n            <ActionButton primary onClick={handleBooking}>\n              <FaCalendarAlt />\n              Book Now\n            </ActionButton>\n          </ActionButtons>\n        </NavContent>\n      </NavHeader>\n\n      <Container>\n        <HeroSection>\n          <HeroImage src={vendor.image} alt={vendor.name} />\n          <HeroContent>\n            <VendorHeader>\n              <VendorInfo>\n                <VendorName>{vendor.name}</VendorName>\n                <VendorMeta>\n                  <MetaItem>\n                    <FaMapMarkerAlt />\n                    {vendor.address}\n                  </MetaItem>\n                  <Rating>\n                    <FaStar />\n                    {vendor.rating} ({vendor.reviewCount} reviews)\n                  </Rating>\n                  <MetaItem>\n                    <FaMapMarkerAlt />\n                    {vendor.distance}mi away\n                  </MetaItem>\n                </VendorMeta>\n                <VendorDescription>{vendor.description}</VendorDescription>\n                <SpecialtiesGrid>\n                  {vendor.specialties.map((specialty, index) => (\n                    <SpecialtyTag key={index}>{specialty}</SpecialtyTag>\n                  ))}\n                </SpecialtiesGrid>\n              </VendorInfo>\n              {vendor.featured && (\n                <FeaturedBadge>Featured Vendor</FeaturedBadge>\n              )}\n            </VendorHeader>\n\n            <ContactGrid>\n              <ContactCard>\n                <ContactIcon>\n                  <FaPhoneAlt />\n                </ContactIcon>\n                <ContactLabel>Phone</ContactLabel>\n                <ContactValue>{vendor.phone}</ContactValue>\n              </ContactCard>\n              <ContactCard>\n                <ContactIcon>\n                  <FaEnvelope />\n                </ContactIcon>\n                <ContactLabel>Email</ContactLabel>\n                <ContactValue>{vendor.email}</ContactValue>\n              </ContactCard>\n              <ContactCard>\n                <ContactIcon>\n                  <FaGlobeAmericas />\n                </ContactIcon>\n                <ContactLabel>Website</ContactLabel>\n                <ContactValue>{vendor.website}</ContactValue>\n              </ContactCard>\n            </ContactGrid>\n          </HeroContent>\n        </HeroSection>\n\n        <ContentGrid>\n          <MainContent>\n            <Section>\n              <SectionTitle>\n                <FaCamera />\n                Portfolio Gallery\n              </SectionTitle>\n              <GalleryGrid>\n                {vendor.portfolioImages.map((image, index) => (\n                  <GalleryItem\n                    key={index}\n                    src={image}\n                    alt={`${vendor.name} portfolio ${index + 1}`}\n                  />\n                ))}\n              </GalleryGrid>\n            </Section>\n\n            <Section>\n              <SectionTitle>\n                <FaQuoteLeft />\n                Customer Reviews\n              </SectionTitle>\n              {mockReviews.map(review => (\n                <ReviewCard key={review.id}>\n                  <ReviewHeader>\n                    <ReviewerInfo>\n                      <ReviewerName>{review.name}</ReviewerName>\n                      <ReviewDate>{review.date}</ReviewDate>\n                    </ReviewerInfo>\n                    <ReviewRating>\n                      {Array.from({ length: review.rating }, (_, i) => (\n                        <FaStar key={i} />\n                      ))}\n                    </ReviewRating>\n                  </ReviewHeader>\n                  <ReviewText>{review.text}</ReviewText>\n                </ReviewCard>\n              ))}\n            </Section>\n\n            <Section>\n              <SectionTitle>\n                <FaCheckCircle />\n                Services Offered\n              </SectionTitle>\n              <ServicesList>\n                {services.map((service, index) => (\n                  <ServiceItem key={index}>\n                    <ServiceIcon>\n                      <service.icon />\n                    </ServiceIcon>\n                    <ServiceInfo>\n                      <ServiceName>{service.name}</ServiceName>\n                      <ServiceDescription>\n                        {service.description}\n                      </ServiceDescription>\n                    </ServiceInfo>\n                  </ServiceItem>\n                ))}\n              </ServicesList>\n            </Section>\n          </MainContent>\n\n          <Sidebar>\n            <BookingCard>\n              <BookingTitle>Ready to Book?</BookingTitle>\n              <BookingDescription>\n                Get in touch with {vendor.name} to discuss your wedding plans\n                and check availability for your special day.\n              </BookingDescription>\n              <BookingButton onClick={handleBooking}>\n                <FaCalendarAlt />\n                Request Consultation\n              </BookingButton>\n            </BookingCard>\n\n            <Section>\n              <SectionTitle>\n                <FaClock />\n                Business Hours\n              </SectionTitle>\n              <HoursGrid>\n                {Object.entries(vendor.hours).map(([day, hours]) => (\n                  <HourRow key={day}>\n                    <Day>{day.charAt(0).toUpperCase() + day.slice(1)}</Day>\n                    <Hours>{hours}</Hours>\n                  </HourRow>\n                ))}\n              </HoursGrid>\n            </Section>\n\n            <Section>\n              <SectionTitle>\n                <FaInfo />\n                Quick Info\n              </SectionTitle>\n              <ServicesList>\n                <ServiceItem>\n                  <ServiceIcon>\n                    <FaMapMarkerAlt />\n                  </ServiceIcon>\n                  <ServiceInfo>\n                    <ServiceName>Location</ServiceName>\n                    <ServiceDescription>\n                      {vendor.city}, {vendor.state}\n                    </ServiceDescription>\n                  </ServiceInfo>\n                </ServiceItem>\n                <ServiceItem>\n                  <ServiceIcon>\n                    <FaStar />\n                  </ServiceIcon>\n                  <ServiceInfo>\n                    <ServiceName>Rating</ServiceName>\n                    <ServiceDescription>\n                      {vendor.rating}/5 from {vendor.reviewCount} reviews\n                    </ServiceDescription>\n                  </ServiceInfo>\n                </ServiceItem>\n                <ServiceItem>\n                  <ServiceIcon>\n                    <FaUsers />\n                  </ServiceIcon>\n                  <ServiceInfo>\n                    <ServiceName>Specialties</ServiceName>\n                    <ServiceDescription>\n                      {vendor.specialties.length} services offered\n                    </ServiceDescription>\n                  </ServiceInfo>\n                </ServiceItem>\n              </ServicesList>\n            </Section>\n          </Sidebar>\n        </ContentGrid>\n      </Container>\n    </PageContainer>\n  );\n};\n\nexport default VendorDetail;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/weddings/pages/VendorPage.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'FaGlobeAmericas' is defined but never used.","line":10,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":18},{"ruleId":"no-unused-vars","severity":1,"message":"'FaQuoteLeft' is defined but never used.","line":16,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":16,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'FaPlay' is defined but never used.","line":17,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":17,"endColumn":9},{"ruleId":"no-unused-vars","severity":1,"message":"'FaUser' is defined but never used.","line":18,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":18,"endColumn":9},{"ruleId":"no-unused-vars","severity":1,"message":"'FaLocationArrow' is defined but never used.","line":22,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":22,"endColumn":18},{"ruleId":"no-unused-vars","severity":1,"message":"'FaCheckCircle' is defined but never used.","line":24,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":24,"endColumn":16},{"ruleId":"no-unused-vars","severity":1,"message":"'HeroImage' is assigned a value but never used.","line":101,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":101,"endColumn":16},{"ruleId":"no-unused-vars","severity":1,"message":"'MobileMenuOverlay' is assigned a value but never used.","line":244,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":244,"endColumn":24},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1042,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1042,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[24804,24907],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1050,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1050,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[25089,25152],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1055,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1055,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[25274,25328],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1060,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1060,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[25393,25452],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1130,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":1130,"endColumn":73},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1193,"column":17,"nodeType":"CallExpression","messageId":"unexpected","endLine":1193,"endColumn":57},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1208,"column":21,"nodeType":"CallExpression","messageId":"unexpected","endLine":1208,"endColumn":60},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":1,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":1540,"column":25,"nodeType":"JSXOpeningElement","endLine":1551,"endColumn":26}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport {\n  FaStar,\n  FaMapMarkerAlt,\n  FaPhoneAlt,\n  FaEnvelope,\n  FaGlobeAmericas,\n  FaInstagram,\n  FaFacebook,\n  FaPinterest,\n  FaChevronDown,\n  FaChevronUp,\n  FaQuoteLeft,\n  FaPlay,\n  FaUser,\n  FaCalendarAlt,\n  FaHeart,\n  FaShare,\n  FaLocationArrow,\n  FaClock,\n  FaCheckCircle,\n  FaSpinner,\n  FaArrowLeft,\n  FaImages,\n  FaCog,\n  FaBars,\n  FaTimes,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport { getWeddingVendorById as getVendorById } from '../../DummyData';\nimport { useAuth } from '../../context/AuthContext';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n`;\n\nconst BackToTopButton = styled.button.withConfig({\n  shouldForwardProp: prop => !['primaryColor', 'visible'].includes(prop),\n})`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background: ${props => props.primaryColor || theme.colors.primary};\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  box-shadow: ${theme.shadows.lg};\n  transition: all 0.3s ease;\n  z-index: 1000;\n  opacity: ${props => (props.visible ? 1 : 0)};\n  visibility: ${props => (props.visible ? 'visible' : 'hidden')};\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: ${theme.shadows.xl};\n  }\n`;\n\n// Hero Section\nconst HeroSection = styled.section.withConfig({\n  shouldForwardProp: prop => !['backgroundImage'].includes(prop),\n})`\n  position: relative;\n  height: 100vh;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${props =>\n    props.backgroundImage\n      ? `linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url(${props.backgroundImage})`\n      : 'linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4))'};\n  background-size: 100% 100%;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    height: 100vh;\n  }\n`;\n\nconst HeroMedia = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n`;\n\nconst HeroImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst HeroVideo = styled.iframe`\n  width: 100%;\n  height: 100%;\n  border: none;\n`;\n\nconst HeroOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.5));\n  z-index: 1;\n`;\n\nconst HeroContent = styled.div`\n  text-align: center;\n  color: white;\n  z-index: 2;\n  max-width: 800px;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n`;\n\nconst HeroTitle = styled.h1`\n  font-size: 4rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.md};\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    font-size: 3rem;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2.5rem;\n  }\n`;\n\nconst HeroTagline = styled.p`\n  font-size: 1.5rem;\n  margin-bottom: ${theme.spacing.xl};\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.2rem;\n  }\n`;\n\nconst HeroButton = styled.button.withConfig({\n  shouldForwardProp: prop => !['primaryColor'].includes(prop),\n})`\n  background: ${props => props.primaryColor || theme.colors.primary};\n  color: white;\n  border: none;\n  padding: ${theme.spacing.lg} ${theme.spacing.xxl};\n  border-radius: ${theme.borderRadius.lg};\n  font-size: 1.2rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: ${theme.shadows.xl};\n  }\n`;\n\nconst NavBar = styled.nav.withConfig({\n  shouldForwardProp: prop => !['scrolled'].includes(prop),\n})`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  background: ${props =>\n    props.scrolled ? 'rgba(255,255,255,0.95)' : 'transparent'};\n  backdrop-filter: ${props => (props.scrolled ? 'blur(10px)' : 'none')};\n  padding: ${theme.spacing.md} 0;\n  transition: all 0.3s ease;\n  z-index: 1000;\n  border-bottom: ${props =>\n    props.scrolled ? `1px solid ${theme.colors.gray200}` : 'none'};\n`;\n\nconst NavContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: 0 ${theme.spacing.sm};\n    flex-wrap: wrap;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst NavLogo = styled.div.withConfig({\n  shouldForwardProp: prop => !['scrolled'].includes(prop),\n})`\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: ${props => (props.scrolled ? theme.colors.gray900 : 'white')};\n`;\n\nconst MobileMenuButton = styled.button.withConfig({\n  shouldForwardProp: prop => !['scrolled'].includes(prop),\n})`\n  display: none;\n  background: none;\n  border: none;\n  color: ${props => (props.scrolled ? theme.colors.gray700 : 'white')};\n  font-size: 1.5rem;\n  padding: ${theme.spacing.sm};\n  cursor: pointer;\n  border-radius: ${theme.borderRadius.md};\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nconst MobileMenuOverlay = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  display: none;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    display: block;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.2);\n    z-index: 1001;\n    opacity: ${props => (props.isOpen ? '1' : '0')};\n    visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n    transition:\n      opacity 0.3s ease,\n      visibility 0.3s ease;\n  }\n`;\n\nconst NavActions = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  display: flex;\n  gap: ${theme.spacing.md};\n  align-items: center;\n  flex-wrap: wrap;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${theme.colors.white};\n    flex-direction: column;\n    justify-content: center;\n    gap: ${theme.spacing.lg};\n    z-index: 1002;\n    transform: translateX(${props => (props.isOpen ? '0' : '100%')});\n    transition: transform 0.3s ease;\n    padding: ${theme.spacing.xl};\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst MobileCloseButton = styled.button`\n  display: none;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    display: flex;\n    position: absolute;\n    top: ${theme.spacing.lg};\n    right: ${theme.spacing.lg};\n    background: none;\n    border: none;\n    color: ${theme.colors.gray700};\n    font-size: 2rem;\n    cursor: pointer;\n    z-index: 1003;\n    padding: ${theme.spacing.sm};\n    border-radius: ${theme.borderRadius.md};\n    align-items: center;\n    justify-content: center;\n    transition: all 0.2s ease;\n\n    &:hover {\n      background: ${theme.colors.gray100};\n      color: ${theme.colors.primary};\n    }\n  }\n`;\n\nconst NavButton = styled.button.withConfig({\n  shouldForwardProp: prop =>\n    !['primary', 'primaryColor', 'scrolled'].includes(prop),\n})`\n  background: ${props =>\n    props.primary ? props.primaryColor || theme.colors.primary : 'transparent'};\n  color: ${props =>\n    props.primary ? 'white' : props.scrolled ? theme.colors.gray700 : 'white'};\n  border: ${props =>\n    props.primary\n      ? 'none'\n      : `2px solid ${props.scrolled ? theme.colors.gray300 : 'white'}`};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n\n  &:hover {\n    transform: translateY(-1px);\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.md} ${theme.spacing.lg};\n    font-size: 1.1rem;\n    justify-content: center;\n    min-width: 200px;\n    color: ${props => (props.primary ? 'white' : theme.colors.gray700)};\n    border-color: ${props => (props.primary ? 'none' : theme.colors.gray300)};\n    background: ${props =>\n      props.primary\n        ? props.primaryColor || theme.colors.primary\n        : theme.colors.white};\n\n    &:hover {\n      background: ${props =>\n        props.primary\n          ? props.primaryColor || theme.colors.primary\n          : theme.colors.gray50};\n      transform: none;\n    }\n  }\n`;\n\n// Section Components\nconst Section = styled.section.withConfig({\n  shouldForwardProp: prop => !['backgroundColor'].includes(prop),\n})`\n  padding: ${theme.spacing.xxl} ${theme.spacing.md};\n  background: ${props => props.backgroundColor || 'white'};\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: 0 ${theme.spacing.sm};\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 2.5rem;\n  font-weight: 700;\n  text-align: center;\n  margin-bottom: ${theme.spacing.xl};\n  color: ${theme.colors.gray900};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2rem;\n  }\n`;\n\nconst SectionSubtitle = styled.p`\n  font-size: 1.2rem;\n  text-align: center;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.xxl};\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\n// About Section\nconst AboutGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${theme.spacing.xxl};\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.xl};\n  }\n`;\n\nconst AboutContent = styled.div``;\n\nconst AboutText = styled.p`\n  font-size: 1.1rem;\n  line-height: 1.7;\n  color: ${theme.colors.gray700};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst AboutStats = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: ${theme.spacing.md};\n  margin-top: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst StatCard = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.lg};\n  background: ${theme.colors.gray50};\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst StatNumber = styled.div.withConfig({\n  shouldForwardProp: prop => !['primaryColor'].includes(prop),\n})`\n  font-size: 2rem;\n  font-weight: 700;\n  color: ${props => props.primaryColor || theme.colors.primary};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst StatLabel = styled.div`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n`;\n\nconst VideoContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 300px;\n  border-radius: ${theme.borderRadius.lg};\n  overflow: hidden;\n  box-shadow: ${theme.shadows.lg};\n`;\n\nconst VideoEmbed = styled.iframe`\n  width: 100%;\n  height: 100%;\n  border: none;\n`;\n\n// Services Section\nconst ServicesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: ${theme.spacing.xl};\n`;\n\nconst ServiceCard = styled.div`\n  background: white;\n  border-radius: ${theme.borderRadius.lg};\n  overflow: hidden;\n  box-shadow: ${theme.shadows.md};\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: ${theme.shadows.xl};\n  }\n`;\n\nconst ServiceImage = styled.img`\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n`;\n\nconst ServiceContent = styled.div`\n  padding: ${theme.spacing.lg};\n`;\n\nconst ServiceIcon = styled.div`\n  font-size: 2rem;\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst ServiceName = styled.h3`\n  font-size: 1.3rem;\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.sm};\n  color: ${theme.colors.gray900};\n`;\n\nconst ServiceDescription = styled.p`\n  color: ${theme.colors.gray600};\n  line-height: 1.6;\n`;\n\n// Gallery Section\nconst GalleryTabs = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.xl};\n  flex-wrap: wrap;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    gap: ${theme.spacing.sm};\n    justify-content: flex-start;\n    overflow-x: auto;\n    padding-bottom: ${theme.spacing.sm};\n  }\n`;\n\nconst GalleryTab = styled.button.withConfig({\n  shouldForwardProp: prop => !['active', 'primaryColor'].includes(prop),\n})`\n  background: ${props =>\n    props.active ? props.primaryColor || theme.colors.primary : 'transparent'};\n  color: ${props => (props.active ? 'white' : theme.colors.gray700)};\n  border: 2px solid ${props => props.primaryColor || theme.colors.primary};\n  padding: ${theme.spacing.sm} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: ${props => props.primaryColor || theme.colors.primary};\n    color: white;\n  }\n`;\n\nconst GalleryGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst GalleryItem = styled.img`\n  width: 100%;\n  height: 250px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\n// Packages Section\nconst PackagesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  gap: ${theme.spacing.xl};\n`;\n\nconst PackageCard = styled.div.withConfig({\n  shouldForwardProp: prop => !['primaryColor'].includes(prop),\n})`\n  background: white;\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xl};\n  box-shadow: ${theme.shadows.lg};\n  text-align: center;\n  position: relative;\n  border: 3px solid transparent;\n  transition: all 0.3s ease;\n\n  &:hover {\n    border-color: ${props => props.primaryColor || theme.colors.primary};\n    transform: translateY(-5px);\n  }\n`;\n\nconst PackageName = styled.h3`\n  font-size: 1.5rem;\n  font-weight: 700;\n  margin-bottom: ${theme.spacing.sm};\n  color: ${theme.colors.gray900};\n`;\n\nconst PackagePrice = styled.div.withConfig({\n  shouldForwardProp: prop => !['primaryColor'].includes(prop),\n})`\n  font-size: 2rem;\n  font-weight: 700;\n  color: ${props => props.primaryColor || theme.colors.primary};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst PackageDescription = styled.p`\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.lg};\n  line-height: 1.6;\n`;\n\nconst PackageFeatures = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst PackageFeature = styled.li.withConfig({\n  shouldForwardProp: prop => !['primaryColor'].includes(prop),\n})`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.sm};\n  color: ${theme.colors.gray700};\n\n  &:before {\n    content: '✓';\n    color: ${props => props.primaryColor || theme.colors.primary};\n    font-weight: bold;\n  }\n`;\n\nconst PackageButton = styled.button.withConfig({\n  shouldForwardProp: prop => !['primaryColor'].includes(prop),\n})`\n  background: ${props => props.primaryColor || theme.colors.primary};\n  color: white;\n  border: none;\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  width: 100%;\n\n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: ${theme.shadows.md};\n  }\n`;\n\n// Testimonials Section\nconst TestimonialsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  gap: ${theme.spacing.xl};\n`;\n\nconst TestimonialCard = styled.div.withConfig({\n  shouldForwardProp: prop => !['primaryColor'].includes(prop),\n})`\n  background: white;\n  border-radius: ${theme.borderRadius.lg};\n  padding: ${theme.spacing.xl};\n  box-shadow: ${theme.shadows.md};\n  position: relative;\n\n  &:before {\n    content: \"\"\";\n    font-size: 4rem;\n    color: ${props => props.primaryColor || theme.colors.primary};\n    position: absolute;\n    top: -10px;\n    left: ${theme.spacing.lg};\n    font-family: serif;\n  }\n`;\n\nconst TestimonialText = styled.p`\n  font-style: italic;\n  color: ${theme.colors.gray700};\n  line-height: 1.6;\n  margin-bottom: ${theme.spacing.lg};\n  padding-top: ${theme.spacing.md};\n`;\n\nconst TestimonialAuthor = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst AuthorInfo = styled.div``;\n\nconst AuthorName = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst AuthorWedding = styled.div`\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst TestimonialRating = styled.div`\n  display: flex;\n  gap: ${theme.spacing.xs};\n  color: ${theme.colors.warning};\n`;\n\n// FAQ Section\nconst FaqContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n`;\n\nconst FaqItem = styled.div`\n  background: white;\n  border-radius: ${theme.borderRadius.md};\n  margin-bottom: ${theme.spacing.md};\n  box-shadow: ${theme.shadows.sm};\n`;\n\nconst FaqQuestion = styled.button`\n  width: 100%;\n  padding: ${theme.spacing.lg};\n  background: none;\n  border: none;\n  text-align: left;\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  font-size: 1.1rem;\n`;\n\nconst FaqAnswer = styled.div`\n  padding: 0 ${theme.spacing.lg} ${theme.spacing.lg};\n  color: ${theme.colors.gray700};\n  line-height: 1.6;\n  display: ${props => (props.open ? 'block' : 'none')};\n`;\n\n// Contact Section\nconst ContactGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.xl};\n  }\n`;\n\nconst ContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.lg};\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.sm};\n`;\n\nconst FormLabel = styled.label`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n`;\n\nconst FormInput = styled.input.withConfig({\n  shouldForwardProp: prop => !['primaryColor'].includes(prop),\n})`\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: all 0.3s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${props => props.primaryColor || theme.colors.primary};\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n\nconst FormTextarea = styled.textarea.withConfig({\n  shouldForwardProp: prop => !['primaryColor'].includes(prop),\n})`\n  padding: ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  min-height: 120px;\n  resize: vertical;\n  transition: all 0.3s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${props => props.primaryColor || theme.colors.primary};\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n\nconst SubmitButton = styled.button.withConfig({\n  shouldForwardProp: prop => !['primaryColor'].includes(prop),\n})`\n  background: ${props => props.primaryColor || theme.colors.primary};\n  color: white;\n  border: none;\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: ${theme.shadows.md};\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst ContactInfo = styled.div``;\n\nconst ContactItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.lg};\n  padding: ${theme.spacing.lg};\n  background: white;\n  border-radius: ${theme.borderRadius.md};\n  box-shadow: ${theme.shadows.sm};\n`;\n\nconst ContactIcon = styled.div.withConfig({\n  shouldForwardProp: prop => !['primaryColor'].includes(prop),\n})`\n  background: ${props => props.primaryColor || theme.colors.primary};\n  color: white;\n  padding: ${theme.spacing.md};\n  border-radius: 50%;\n  font-size: 1.2rem;\n`;\n\nconst ContactDetails = styled.div``;\n\nconst ContactLabel = styled.div`\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst ContactValue = styled.div`\n  color: ${theme.colors.gray600};\n`;\n\nconst MapContainer = styled.div`\n  width: 100%;\n  height: 300px;\n  border-radius: ${theme.borderRadius.md};\n  overflow: hidden;\n  margin-top: ${theme.spacing.lg};\n`;\n\nconst MapEmbed = styled.iframe`\n  width: 100%;\n  height: 100%;\n  border: none;\n`;\n\nconst CitiesList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.sm};\n  margin-top: ${theme.spacing.lg};\n`;\n\nconst CityTag = styled.span.withConfig({\n  shouldForwardProp: prop => !['primaryColor'].includes(prop),\n})`\n  background: ${props => props.primaryColor || theme.colors.primary}15;\n  color: ${props => props.primaryColor || theme.colors.primary};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n`;\n\n// Footer\nconst Footer = styled.footer`\n  background: ${theme.colors.gray900};\n  color: white;\n  padding: ${theme.spacing.xxl} ${theme.spacing.md} ${theme.spacing.lg};\n`;\n\nconst FooterContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: 2fr 1fr 1fr;\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst FooterSection = styled.div``;\n\nconst FooterTitle = styled.h3`\n  font-size: 1.3rem;\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst FooterText = styled.p`\n  color: ${theme.colors.gray300};\n  line-height: 1.6;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst SocialLinks = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n`;\n\nconst SocialLink = styled.a.withConfig({\n  shouldForwardProp: prop => !['primaryColor'].includes(prop),\n})`\n  background: ${props => props.primaryColor || theme.colors.primary};\n  color: white;\n  padding: ${theme.spacing.sm};\n  border-radius: 50%;\n  font-size: 1.2rem;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: ${theme.shadows.md};\n  }\n`;\n\nconst FooterBottom = styled.div`\n  margin-top: ${theme.spacing.xl};\n  padding-top: ${theme.spacing.lg};\n  border-top: 1px solid ${theme.colors.gray700};\n  text-align: center;\n  color: ${theme.colors.gray400};\n`;\n\nconst LoadingContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n`;\n\nconst LoadingSpinner = styled.div`\n  animation: spin 1s linear infinite;\n  color: ${theme.colors.primary};\n  font-size: 2rem;\n\n  @keyframes spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst VendorPage = () => {\n  const { vendorSlug } = useParams();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n\n  // Get vendor ID from URL path if not available in params\n  const currentPath = window.location.pathname;\n  const pathSegments = currentPath.split('/').filter(Boolean);\n  const vendorId = vendorSlug || pathSegments[pathSegments.length - 1];\n\n  // Get vendor data from Redux store for real-time updates\n  const { vendors, editingVendor } = useSelector(\n    state => state.vendorManagement\n  );\n\n  const [vendor, setVendor] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [scrolled, setScrolled] = useState(false);\n  const [showBackToTop, setShowBackToTop] = useState(false);\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [activeGalleryTab, setActiveGalleryTab] = useState('decor');\n  const [openFaq, setOpenFaq] = useState(null);\n  const [contactForm, setContactForm] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    message: '',\n  });\n  const [submitting, setSubmitting] = useState(false);\n\n  useEffect(() => {\n    let vendorData = null;\n\n    // Priority 1: Use editing vendor data for real-time updates during editing\n    if (editingVendor && editingVendor.id === vendorId) {\n      vendorData = editingVendor;\n      console.log(\n        'Using editing vendor data for real-time updates:',\n        editingVendor\n      );\n    }\n    // Priority 2: Use saved vendor data from Redux vendors array\n    else if (vendors && vendors.length > 0) {\n      vendorData = vendors.find(v => v.id === vendorId);\n      console.log('Using saved vendor data from Redux:', vendorData);\n    }\n    // Priority 3: Fallback to dummy data\n    if (!vendorData) {\n      vendorData = getVendorById(vendorId);\n      console.log('Using fallback dummy data:', vendorData);\n    }\n\n    if (vendorData) {\n      setVendor(vendorData);\n      console.log('VendorPage: Updated vendor data', vendorData);\n    }\n    setLoading(false);\n\n    // Pre-fill form if user is logged in\n    if (user) {\n      setContactForm(prev => ({\n        ...prev,\n        name: user.name || '',\n        email: user.email || '',\n      }));\n    }\n  }, [vendorId, user, vendors, editingVendor]);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY;\n      setScrolled(scrollPosition > 100);\n      setShowBackToTop(scrollPosition > 500);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  const scrollToSection = sectionId => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n    setMobileMenuOpen(false); // Close mobile menu after navigation\n  };\n\n  const closeMobileMenu = () => setMobileMenuOpen(false);\n\n  // Close mobile menu on escape key\n  useEffect(() => {\n    const handleEscapeKey = event => {\n      if (event.key === 'Escape' && mobileMenuOpen) {\n        closeMobileMenu();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscapeKey);\n    return () => document.removeEventListener('keydown', handleEscapeKey);\n  }, [mobileMenuOpen]);\n\n  // Prevent body scroll when mobile menu is open\n  useEffect(() => {\n    if (mobileMenuOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n\n    return () => {\n      document.body.style.overflow = 'unset';\n    };\n  }, [mobileMenuOpen]);\n\n  const handleContactSubmit = async e => {\n    e.preventDefault();\n    setSubmitting(true);\n\n    // Simulate API call\n    setTimeout(() => {\n      alert('Thank you for your enquiry! We will get back to you soon.');\n      setContactForm({ name: '', email: '', phone: '', message: '' });\n      setSubmitting(false);\n    }, 1000);\n  };\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setContactForm(prev => ({ ...prev, [name]: value }));\n  };\n\n  const toggleFaq = index => {\n    setOpenFaq(openFaq === index ? null : index);\n  };\n\n  if (loading) {\n    return (\n      <LoadingContainer>\n        <LoadingSpinner>\n          <FaSpinner />\n        </LoadingSpinner>\n      </LoadingContainer>\n    );\n  }\n\n  if (!vendor) {\n    return (\n      <LoadingContainer>\n        <div style={{ textAlign: 'center' }}>\n          <h2>Vendor Not Found</h2>\n          <p>The vendor you're looking for doesn't exist.</p>\n          <NavButton onClick={() => navigate('/weddings')}>\n            <FaArrowLeft />\n            Back to Vendors\n          </NavButton>\n        </div>\n      </LoadingContainer>\n    );\n  }\n\n  const primaryColor = vendor.theme?.primaryColor || theme.colors.primary;\n\n  return (\n    <PageContainer>\n      <NavBar scrolled={scrolled}>\n        <NavContent>\n          <NavLogo scrolled={scrolled}>{vendor.name}</NavLogo>\n          <NavActions isOpen={mobileMenuOpen}>\n            <MobileCloseButton onClick={closeMobileMenu}>\n              <FaTimes />\n            </MobileCloseButton>\n            <NavButton\n              onClick={() => {\n                navigate('/weddings');\n                closeMobileMenu();\n              }}\n              scrolled={scrolled}\n            >\n              <FaArrowLeft />\n              Back\n            </NavButton>\n            <NavButton\n              onClick={() => {\n                alert('Vendor saved to your favorites!');\n                closeMobileMenu();\n              }}\n              scrolled={scrolled}\n            >\n              <FaHeart />\n              Save\n            </NavButton>\n            <NavButton\n              onClick={() => {\n                navigator.share\n                  ? navigator.share({\n                      title: vendor.name,\n                      url: window.location.href,\n                    })\n                  : alert('Share: ' + window.location.href);\n                closeMobileMenu();\n              }}\n              scrolled={scrolled}\n            >\n              <FaShare />\n              Share\n            </NavButton>\n            <NavButton\n              onClick={() => {\n                navigate(`/${vendorId}/portfolio`);\n                closeMobileMenu();\n              }}\n              scrolled={scrolled}\n            >\n              <FaImages />\n              Portfolio\n            </NavButton>\n            <NavButton\n              onClick={() => {\n                navigate(`/${vendorId}/weddingadminpanel`);\n                closeMobileMenu();\n              }}\n              scrolled={scrolled}\n            >\n              <FaCog />\n              Dashboard\n            </NavButton>\n            <NavButton\n              primary\n              primaryColor={primaryColor}\n              onClick={() => {\n                scrollToSection('contact');\n                closeMobileMenu();\n              }}\n            >\n              <FaCalendarAlt />\n              Enquire Now\n            </NavButton>\n          </NavActions>\n          <MobileMenuButton\n            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n            scrolled={scrolled}\n            aria-label={mobileMenuOpen ? 'Close menu' : 'Open menu'}\n          >\n            {mobileMenuOpen ? <FaTimes /> : <FaBars />}\n          </MobileMenuButton>\n        </NavContent>\n      </NavBar>\n\n      {/* Dynamic Sections Based on Order */}\n      {(() => {\n        const defaultOrder = [\n          'hero',\n          'about-us',\n          'services-offered',\n          'recent-work',\n          'gallery',\n          'packages-pricing',\n          'testimonials',\n        ];\n\n        const sectionOrder = vendor.sectionOrder || defaultOrder;\n\n        // Combine default sections with custom sections\n        const allSections = [...sectionOrder];\n\n        // Add custom sections to the end if not already included\n        if (vendor.customSections) {\n          vendor.customSections.forEach(customSection => {\n            const customId = `custom-${customSection.id}`;\n            if (!allSections.includes(customId)) {\n              allSections.push(customId);\n            }\n          });\n        }\n\n        return allSections.map(sectionId => {\n          // Check if this is a custom section\n          if (sectionId.startsWith('custom-')) {\n            const customId = sectionId.replace('custom-', '');\n            const customSection = vendor.customSections?.find(\n              cs => cs.id === customId\n            );\n\n            if (!customSection) return null;\n\n            // Check custom section visibility\n            if (\n              vendor.customSectionVisibility &&\n              vendor.customSectionVisibility[customId] === false\n            ) {\n              return null;\n            }\n\n            // Also check the visible field directly on the custom section\n            if (customSection.visible === false) {\n              return null;\n            }\n\n            return (\n              <Section\n                key={`custom-${customSection.id}`}\n                id={`custom-${customSection.id}`}\n              >\n                <Container>\n                  <SectionTitle>{customSection.title}</SectionTitle>\n                  {customSection.subtitle && (\n                    <SectionSubtitle>{customSection.subtitle}</SectionSubtitle>\n                  )}\n\n                  {/* Render custom section content based on type */}\n                  {customSection.type === 'text' && customSection.content && (\n                    <div\n                      style={{\n                        fontSize: '1.1rem',\n                        lineHeight: 1.7,\n                        color: theme.colors.gray700,\n                        textAlign: 'center',\n                        maxWidth: '800px',\n                        margin: '0 auto',\n                        whiteSpace: 'pre-line',\n                      }}\n                    >\n                      {customSection.content}\n                    </div>\n                  )}\n\n                  {customSection.type === 'gallery' &&\n                    customSection.images &&\n                    customSection.images.length > 0 && (\n                      <GalleryGrid>\n                        {customSection.images.map((image, idx) => (\n                          <GalleryItem\n                            key={idx}\n                            src={image}\n                            alt={`${customSection.title} ${idx + 1}`}\n                          />\n                        ))}\n                      </GalleryGrid>\n                    )}\n\n                  {customSection.type === 'cards' &&\n                    customSection.cards &&\n                    customSection.cards.length > 0 && (\n                      <ServicesGrid>\n                        {customSection.cards.map((card, idx) => (\n                          <ServiceCard key={idx}>\n                            {card.image && (\n                              <ServiceImage src={card.image} alt={card.title} />\n                            )}\n                            <ServiceContent>\n                              {card.icon && (\n                                <ServiceIcon>{card.icon}</ServiceIcon>\n                              )}\n                              <ServiceName>{card.title}</ServiceName>\n                              <ServiceDescription>\n                                {card.description}\n                              </ServiceDescription>\n                            </ServiceContent>\n                          </ServiceCard>\n                        ))}\n                      </ServicesGrid>\n                    )}\n                </Container>\n              </Section>\n            );\n          }\n\n          // Handle default sections\n          // Check section visibility for default sections\n          if (\n            vendor.sectionVisibility &&\n            vendor.sectionVisibility[sectionId] === false\n          ) {\n            return null;\n          }\n\n          switch (sectionId) {\n            case 'hero':\n              return (\n                <HeroSection\n                  key=\"hero\"\n                  id=\"hero\"\n                  backgroundImage={vendor.image}\n                >\n                  {vendor.heroVideo && (\n                    <HeroMedia>\n                      <HeroVideo\n                        src={vendor.heroVideo}\n                        allow=\"autoplay; fullscreen; picture-in-picture\"\n                        allowFullScreen\n                      />\n                    </HeroMedia>\n                  )}\n                  <HeroOverlay />\n                  <HeroContent>\n                    <HeroTitle>{vendor.name}</HeroTitle>\n                    <HeroTagline>{vendor.tagline}</HeroTagline>\n                    <HeroButton\n                      primaryColor={primaryColor}\n                      onClick={() => scrollToSection('contact')}\n                    >\n                      <FaCalendarAlt />\n                      Enquire Now\n                    </HeroButton>\n                  </HeroContent>\n                </HeroSection>\n              );\n\n            case 'about-us':\n              return (\n                <Section\n                  key=\"about\"\n                  id=\"about\"\n                  backgroundColor={vendor.theme?.backgroundColor}\n                >\n                  <Container>\n                    <SectionTitle>About Us</SectionTitle>\n                    <AboutGrid>\n                      <AboutContent>\n                        <AboutText>\n                          {vendor.aboutUs?.text || vendor.description}\n                        </AboutText>\n                        <AboutStats>\n                          {vendor.aboutUs?.experienceVisible !== false &&\n                            vendor.aboutUs?.experience && (\n                              <StatCard>\n                                <StatNumber primaryColor={primaryColor}>\n                                  {vendor.aboutUs.experience}\n                                </StatNumber>\n                                <StatLabel>Experience</StatLabel>\n                              </StatCard>\n                            )}\n                          {vendor.aboutUs?.weddingsVisible !== false &&\n                            vendor.aboutUs?.completedWeddings && (\n                              <StatCard>\n                                <StatNumber primaryColor={primaryColor}>\n                                  {vendor.aboutUs.completedWeddings}\n                                </StatNumber>\n                                <StatLabel>Weddings</StatLabel>\n                              </StatCard>\n                            )}\n                          {vendor.aboutUs?.couplesVisible !== false &&\n                            vendor.aboutUs?.satisfiedCouples && (\n                              <StatCard>\n                                <StatNumber primaryColor={primaryColor}>\n                                  {vendor.aboutUs.satisfiedCouples}\n                                </StatNumber>\n                                <StatLabel>Happy Couples</StatLabel>\n                              </StatCard>\n                            )}\n                        </AboutStats>\n                      </AboutContent>\n                      {(vendor.aboutUs?.aboutImage ||\n                        vendor.aboutUs?.videoEmbed) && (\n                        <VideoContainer>\n                          {vendor.aboutUs?.aboutImage ? (\n                            <img\n                              src={vendor.aboutUs.aboutImage}\n                              alt=\"About us\"\n                              style={{\n                                width: '100%',\n                                height: '100%',\n                                objectFit: 'cover',\n                                borderRadius: '8px',\n                              }}\n                            />\n                          ) : vendor.aboutUs?.videoEmbed ? (\n                            <VideoEmbed\n                              src={vendor.aboutUs.videoEmbed}\n                              allow=\"autoplay; fullscreen; picture-in-picture\"\n                              allowFullScreen\n                            />\n                          ) : null}\n                        </VideoContainer>\n                      )}\n                    </AboutGrid>\n                  </Container>\n                </Section>\n              );\n\n            case 'services-offered':\n              return (\n                <Section key=\"services\" id=\"services\">\n                  <Container>\n                    <SectionTitle>Services Offered</SectionTitle>\n                    <SectionSubtitle>\n                      We provide comprehensive wedding services to make your\n                      special day perfect\n                    </SectionSubtitle>\n                    <ServicesGrid>\n                      {vendor.services?.map((service, index) => (\n                        <ServiceCard key={index}>\n                          <ServiceImage\n                            src={service.image}\n                            alt={service.name}\n                          />\n                          <ServiceContent>\n                            <ServiceIcon>{service.icon}</ServiceIcon>\n                            <ServiceName>{service.name}</ServiceName>\n                            <ServiceDescription>\n                              {service.description}\n                            </ServiceDescription>\n                          </ServiceContent>\n                        </ServiceCard>\n                      ))}\n                    </ServicesGrid>\n                  </Container>\n                </Section>\n              );\n\n            case 'recent-work':\n              return vendor.locationPortfolio &&\n                vendor.locationPortfolio.length > 0 ? (\n                <Section key=\"portfolio\" id=\"portfolio\">\n                  <Container>\n                    <SectionTitle>Our Recent Work</SectionTitle>\n                    <SectionSubtitle>\n                      Explore some of our beautiful weddings across different\n                      venues and locations\n                    </SectionSubtitle>\n                    <div\n                      style={{\n                        display: 'grid',\n                        gridTemplateColumns:\n                          'repeat(auto-fit, minmax(300px, 1fr))',\n                        gap: theme.spacing.xl,\n                        marginBottom: theme.spacing.xl,\n                      }}\n                    >\n                      {vendor.locationPortfolio.slice(0, 3).map(portfolio => (\n                        <div\n                          key={portfolio.id}\n                          style={{\n                            background: theme.colors.white,\n                            borderRadius: theme.borderRadius.lg,\n                            overflow: 'hidden',\n                            boxShadow: theme.shadows.md,\n                            transition: 'all 0.3s ease',\n                            cursor: 'pointer',\n                          }}\n                          onClick={() => navigate(`/${vendorId}/portfolio`)}\n                        >\n                          <img\n                            src={portfolio.coverImage}\n                            alt={portfolio.location}\n                            style={{\n                              width: '100%',\n                              height: '200px',\n                              objectFit: 'cover',\n                            }}\n                          />\n                          <div style={{ padding: theme.spacing.lg }}>\n                            <h4\n                              style={{\n                                margin: `0 0 ${theme.spacing.sm} 0`,\n                                fontSize: '1.2rem',\n                                fontWeight: 600,\n                                color: theme.colors.gray900,\n                              }}\n                            >\n                              {portfolio.location}\n                            </h4>\n                            <p\n                              style={{\n                                margin: `0 0 ${theme.spacing.sm} 0`,\n                                color: theme.colors.gray600,\n                                fontSize: '0.9rem',\n                              }}\n                            >\n                              {portfolio.city}, {portfolio.state} •{' '}\n                              {portfolio.weddingDate}\n                            </p>\n                            <p\n                              style={{\n                                margin: 0,\n                                color: theme.colors.gray700,\n                                fontSize: '0.9rem',\n                                lineHeight: 1.5,\n                              }}\n                            >\n                              {portfolio.description.substring(0, 120)}...\n                            </p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                    <div style={{ textAlign: 'center' }}>\n                      <button\n                        onClick={() => navigate(`/${vendorId}/portfolio`)}\n                        style={{\n                          background: primaryColor,\n                          color: 'white',\n                          border: 'none',\n                          padding: `${theme.spacing.md} ${theme.spacing.xl}`,\n                          borderRadius: theme.borderRadius.md,\n                          fontSize: '1.1rem',\n                          fontWeight: 600,\n                          cursor: 'pointer',\n                          transition: 'all 0.3s ease',\n                          display: 'flex',\n                          alignItems: 'center',\n                          gap: theme.spacing.sm,\n                          margin: '0 auto',\n                        }}\n                        onMouseOver={e =>\n                          (e.target.style.transform = 'translateY(-2px)')\n                        }\n                        onMouseOut={e =>\n                          (e.target.style.transform = 'translateY(0)')\n                        }\n                      >\n                        <FaImages />\n                        View Complete Portfolio\n                      </button>\n                    </div>\n                  </Container>\n                </Section>\n              ) : null;\n\n            case 'gallery':\n              return (\n                <Section\n                  key=\"gallery\"\n                  id=\"gallery\"\n                  backgroundColor={theme.colors.gray50}\n                >\n                  <Container>\n                    <SectionTitle>Gallery</SectionTitle>\n                    <SectionSubtitle>\n                      Browse through our portfolio of beautiful weddings and\n                      events\n                    </SectionSubtitle>\n                    <GalleryTabs>\n                      {Object.keys(vendor.gallery || {}).map(category => {\n                        const categoryData = vendor.gallery[category];\n                        const categoryTitle =\n                          categoryData?.title ||\n                          category.charAt(0).toUpperCase() + category.slice(1);\n\n                        return (\n                          <GalleryTab\n                            key={category}\n                            active={activeGalleryTab === category}\n                            primaryColor={primaryColor}\n                            onClick={() => setActiveGalleryTab(category)}\n                          >\n                            <FaImages />\n                            {categoryTitle}\n                          </GalleryTab>\n                        );\n                      })}\n                    </GalleryTabs>\n                    <GalleryGrid>\n                      {(() => {\n                        const activeCategory =\n                          vendor.gallery?.[activeGalleryTab];\n                        const images = Array.isArray(activeCategory)\n                          ? activeCategory\n                          : activeCategory?.images || [];\n\n                        return images.map((image, index) => (\n                          <GalleryItem\n                            key={index}\n                            src={image}\n                            alt={`${vendor.name} ${activeGalleryTab} ${index + 1}`}\n                          />\n                        ));\n                      })()}\n                    </GalleryGrid>\n                  </Container>\n                </Section>\n              );\n\n            case 'packages-pricing':\n              return vendor.packages ? (\n                <Section key=\"packages\" id=\"packages\">\n                  <Container>\n                    <SectionTitle>Packages & Pricing</SectionTitle>\n                    <SectionSubtitle>\n                      Choose the perfect package for your wedding celebration\n                    </SectionSubtitle>\n                    <PackagesGrid>\n                      {vendor.packages.map((pkg, index) => (\n                        <PackageCard key={index} primaryColor={primaryColor}>\n                          <PackageName>{pkg.name}</PackageName>\n                          <PackagePrice primaryColor={primaryColor}>\n                            {pkg.price}\n                          </PackagePrice>\n                          <PackageDescription>\n                            {pkg.description}\n                          </PackageDescription>\n                          <PackageFeatures>\n                            {pkg.features.map((feature, featureIndex) => (\n                              <PackageFeature\n                                key={featureIndex}\n                                primaryColor={primaryColor}\n                              >\n                                {feature}\n                              </PackageFeature>\n                            ))}\n                          </PackageFeatures>\n                          <PackageButton\n                            primaryColor={primaryColor}\n                            onClick={() => scrollToSection('contact')}\n                          >\n                            Get a Quote\n                          </PackageButton>\n                        </PackageCard>\n                      ))}\n                    </PackagesGrid>\n                  </Container>\n                </Section>\n              ) : null;\n\n            case 'testimonials':\n              return (\n                <Section\n                  key=\"testimonials\"\n                  id=\"testimonials\"\n                  backgroundColor={vendor.theme?.backgroundColor}\n                >\n                  <Container>\n                    <SectionTitle>What Our Couples Say</SectionTitle>\n                    <SectionSubtitle>\n                      Real testimonials from couples whose special day we helped\n                      create\n                    </SectionSubtitle>\n                    <TestimonialsGrid>\n                      {vendor.testimonials?.map((testimonial, index) => (\n                        <TestimonialCard\n                          key={index}\n                          primaryColor={primaryColor}\n                        >\n                          <TestimonialText>{testimonial.text}</TestimonialText>\n                          <TestimonialAuthor>\n                            <AuthorInfo>\n                              <AuthorName>{testimonial.name}</AuthorName>\n                              <AuthorWedding>\n                                {testimonial.wedding}\n                              </AuthorWedding>\n                            </AuthorInfo>\n                            <TestimonialRating>\n                              {Array.from(\n                                { length: testimonial.rating },\n                                (_, i) => (\n                                  <FaStar key={i} />\n                                )\n                              )}\n                            </TestimonialRating>\n                          </TestimonialAuthor>\n                        </TestimonialCard>\n                      ))}\n                    </TestimonialsGrid>\n                  </Container>\n                </Section>\n              );\n\n            default:\n              return null;\n          }\n        });\n      })()}\n\n      {/* FAQ Section */}\n      <Section id=\"faq\">\n        <Container>\n          <SectionTitle>Frequently Asked Questions</SectionTitle>\n          <SectionSubtitle>\n            Find answers to common questions about our services\n          </SectionSubtitle>\n          <FaqContainer>\n            {vendor.faq?.map((item, index) => (\n              <FaqItem key={index}>\n                <FaqQuestion onClick={() => toggleFaq(index)}>\n                  {item.question}\n                  {openFaq === index ? <FaChevronUp /> : <FaChevronDown />}\n                </FaqQuestion>\n                <FaqAnswer open={openFaq === index}>{item.answer}</FaqAnswer>\n              </FaqItem>\n            ))}\n          </FaqContainer>\n        </Container>\n      </Section>\n\n      {/* Contact Section */}\n      <Section id=\"contact\" backgroundColor={theme.colors.gray50}>\n        <Container>\n          <SectionTitle>Get In Touch</SectionTitle>\n          <SectionSubtitle>\n            Ready to start planning your dream wedding? Send us a message!\n          </SectionSubtitle>\n          <ContactGrid>\n            <ContactForm onSubmit={handleContactSubmit}>\n              <FormGroup>\n                <FormLabel>Name *</FormLabel>\n                <FormInput\n                  type=\"text\"\n                  name=\"name\"\n                  value={contactForm.name}\n                  onChange={handleInputChange}\n                  required\n                  primaryColor={primaryColor}\n                />\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Email *</FormLabel>\n                <FormInput\n                  type=\"email\"\n                  name=\"email\"\n                  value={contactForm.email}\n                  onChange={handleInputChange}\n                  required\n                  primaryColor={primaryColor}\n                />\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Phone</FormLabel>\n                <FormInput\n                  type=\"tel\"\n                  name=\"phone\"\n                  value={contactForm.phone}\n                  onChange={handleInputChange}\n                  primaryColor={primaryColor}\n                />\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Message *</FormLabel>\n                <FormTextarea\n                  name=\"message\"\n                  value={contactForm.message}\n                  onChange={handleInputChange}\n                  placeholder=\"Tell us about your special day...\"\n                  required\n                  primaryColor={primaryColor}\n                />\n              </FormGroup>\n              <SubmitButton\n                type=\"submit\"\n                disabled={submitting}\n                primaryColor={primaryColor}\n              >\n                {submitting ? (\n                  <FaSpinner className=\"spinning\" />\n                ) : (\n                  <FaEnvelope />\n                )}\n                {submitting ? 'Sending...' : 'Send Enquiry'}\n              </SubmitButton>\n            </ContactForm>\n\n            <ContactInfo>\n              <ContactItem>\n                <ContactIcon primaryColor={primaryColor}>\n                  <FaPhoneAlt />\n                </ContactIcon>\n                <ContactDetails>\n                  <ContactLabel>Phone</ContactLabel>\n                  <ContactValue>{vendor.phone}</ContactValue>\n                </ContactDetails>\n              </ContactItem>\n\n              <ContactItem>\n                <ContactIcon primaryColor={primaryColor}>\n                  <FaEnvelope />\n                </ContactIcon>\n                <ContactDetails>\n                  <ContactLabel>Email</ContactLabel>\n                  <ContactValue>{vendor.email}</ContactValue>\n                </ContactDetails>\n              </ContactItem>\n\n              <ContactItem>\n                <ContactIcon primaryColor={primaryColor}>\n                  <FaMapMarkerAlt />\n                </ContactIcon>\n                <ContactDetails>\n                  <ContactLabel>Address</ContactLabel>\n                  <ContactValue>{vendor.address}</ContactValue>\n                </ContactDetails>\n              </ContactItem>\n\n              <ContactItem>\n                <ContactIcon primaryColor={primaryColor}>\n                  <FaClock />\n                </ContactIcon>\n                <ContactDetails>\n                  <ContactLabel>Business Hours</ContactLabel>\n                  <ContactValue>Mon-Fri: 9AM-6PM</ContactValue>\n                </ContactDetails>\n              </ContactItem>\n\n              <div>\n                <ContactLabel>Cities We Cover</ContactLabel>\n                <CitiesList>\n                  {vendor.citiesCovered?.map((city, index) => (\n                    <CityTag key={index} primaryColor={primaryColor}>\n                      {city}\n                    </CityTag>\n                  ))}\n                </CitiesList>\n              </div>\n\n              {vendor.mapEmbed && (\n                <MapContainer>\n                  <MapEmbed\n                    src={vendor.mapEmbed}\n                    allowFullScreen\n                    loading=\"lazy\"\n                  />\n                </MapContainer>\n              )}\n            </ContactInfo>\n          </ContactGrid>\n        </Container>\n      </Section>\n\n      {/* Footer */}\n      <Footer>\n        <Container>\n          <FooterContent>\n            <FooterSection>\n              <FooterTitle>{vendor.name}</FooterTitle>\n              <FooterText>{vendor.description}</FooterText>\n              <SocialLinks>\n                {vendor.socialLinks?.instagram && (\n                  <SocialLink\n                    href={vendor.socialLinks.instagram}\n                    primaryColor={primaryColor}\n                  >\n                    <FaInstagram />\n                  </SocialLink>\n                )}\n                {vendor.socialLinks?.facebook && (\n                  <SocialLink\n                    href={vendor.socialLinks.facebook}\n                    primaryColor={primaryColor}\n                  >\n                    <FaFacebook />\n                  </SocialLink>\n                )}\n                {vendor.socialLinks?.pinterest && (\n                  <SocialLink\n                    href={vendor.socialLinks.pinterest}\n                    primaryColor={primaryColor}\n                  >\n                    <FaPinterest />\n                  </SocialLink>\n                )}\n              </SocialLinks>\n            </FooterSection>\n\n            <FooterSection>\n              <FooterTitle>Contact Info</FooterTitle>\n              <FooterText>\n                {vendor.phone}\n                <br />\n                {vendor.email}\n                <br />\n                {vendor.address}\n              </FooterText>\n            </FooterSection>\n\n            <FooterSection>\n              <FooterTitle>Quick Links</FooterTitle>\n              <FooterText>\n                <a\n                  href=\"#about\"\n                  style={{\n                    color: theme.colors.gray300,\n                    textDecoration: 'none',\n                  }}\n                >\n                  About Us\n                </a>\n                <br />\n                <a\n                  href=\"#services\"\n                  style={{\n                    color: theme.colors.gray300,\n                    textDecoration: 'none',\n                  }}\n                >\n                  Services\n                </a>\n                <br />\n                <a\n                  href=\"#gallery\"\n                  style={{\n                    color: theme.colors.gray300,\n                    textDecoration: 'none',\n                  }}\n                >\n                  Gallery\n                </a>\n                <br />\n                <a\n                  href=\"#contact\"\n                  style={{\n                    color: theme.colors.gray300,\n                    textDecoration: 'none',\n                  }}\n                >\n                  Contact\n                </a>\n              </FooterText>\n            </FooterSection>\n          </FooterContent>\n\n          <FooterBottom>\n            <p>\n              &copy; 2024 {vendor.name}. All rights reserved. | Terms &\n              Conditions | Privacy Policy\n            </p>\n          </FooterBottom>\n        </Container>\n      </Footer>\n\n      {/* Back to Top Button */}\n      <BackToTopButton\n        visible={showBackToTop}\n        primaryColor={primaryColor}\n        onClick={scrollToTop}\n      >\n        ���\n      </BackToTopButton>\n    </PageContainer>\n  );\n};\n\nexport default VendorPage;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/weddings/pages/VendorPortfolio.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":480,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":480,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[10610,10730],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":488,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":488,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[10912,11016],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":496,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":496,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[11138,11209],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":501,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":501,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[11274,11404],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'handleKeyPress'. Either include it or remove the dependency array.","line":558,"column":6,"nodeType":"ArrayExpression","endLine":558,"endColumn":43,"suggestions":[{"desc":"Update the dependencies array to be: [handleKeyPress, imageViewer.open, selectedPortfolio]","fix":{"range":[12737,12774],"text":"[handleKeyPress, imageViewer.open, selectedPortfolio]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport {\n  FaArrowLeft,\n  FaMapMarkerAlt,\n  FaCalendarAlt,\n  FaUsers,\n  FaTimes,\n  FaChevronLeft,\n  FaChevronRight,\n  FaCheckCircle,\n  FaStar,\n  FaHeart,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport { getWeddingVendorById as getVendorById } from '../../DummyData';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  background: ${theme.colors.gray50};\n`;\n\nconst NavHeader = styled.div`\n  background: ${theme.colors.white};\n  box-shadow: ${theme.shadows.sm};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  position: sticky;\n  top: 0;\n  z-index: 100;\n`;\n\nconst NavContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.lg} ${theme.spacing.md};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.md} ${theme.spacing.sm};\n    flex-direction: column;\n    gap: ${theme.spacing.sm};\n    text-align: center;\n  }\n`;\n\nconst BackButton = styled.button`\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n  }\n`;\n\nconst VendorTitle = styled.h1`\n  font-size: 1.8rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.4rem;\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg} ${theme.spacing.sm};\n  }\n`;\n\nconst PageHeader = styled.div`\n  text-align: center;\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst PageTitle = styled.h2`\n  font-size: 3rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2rem;\n  }\n`;\n\nconst PageSubtitle = styled.p`\n  font-size: 1.2rem;\n  color: ${theme.colors.gray600};\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst PortfolioGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n  gap: ${theme.spacing.xxl};\n  margin-bottom: ${theme.spacing.xxl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.xl};\n  }\n`;\n\nconst PortfolioCard = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  overflow: hidden;\n  box-shadow: ${theme.shadows.lg};\n  transition: all 0.3s ease;\n  cursor: pointer;\n\n  &:hover {\n    transform: translateY(-8px);\n    box-shadow: ${theme.shadows.xl};\n  }\n`;\n\nconst PortfolioImage = styled.img`\n  width: 100%;\n  height: 300px;\n  object-fit: cover;\n`;\n\nconst PortfolioContent = styled.div`\n  padding: ${theme.spacing.xl};\n`;\n\nconst LocationHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst LocationInfo = styled.div``;\n\nconst LocationName = styled.h3`\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst LocationDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.xs};\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst LocationDetail = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst CoupleInfo = styled.div`\n  background: ${theme.colors.primary}10;\n  color: ${theme.colors.primary};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  font-size: 0.9rem;\n  text-align: center;\n`;\n\nconst PortfolioDescription = styled.p`\n  color: ${theme.colors.gray700};\n  line-height: 1.6;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst ServicesList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.sm};\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst ServiceTag = styled.span`\n  background: ${theme.colors.gray100};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.8rem;\n  font-weight: 500;\n`;\n\nconst ViewGalleryButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  border: none;\n  padding: ${theme.spacing.md} ${theme.spacing.lg};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  width: 100%;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-2px);\n  }\n`;\n\n// Modal Styles\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.9);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n  padding: ${theme.spacing.lg};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.sm};\n  }\n`;\n\nconst ModalContent = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  max-width: 1200px;\n  width: 100%;\n  max-height: 90vh;\n  overflow-y: auto;\n  position: relative;\n`;\n\nconst ModalHeader = styled.div`\n  padding: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst ModalTitle = styled.h2`\n  font-size: 1.8rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin: 0;\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  font-size: 1.5rem;\n  color: ${theme.colors.gray500};\n  cursor: pointer;\n  padding: ${theme.spacing.sm};\n  border-radius: 50%;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.gray700};\n  }\n`;\n\nconst ModalBody = styled.div`\n  padding: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.lg};\n  }\n`;\n\nconst WorkflowSection = styled.div`\n  margin-bottom: ${theme.spacing.xxl};\n`;\n\nconst WorkflowTitle = styled.h3`\n  font-size: 1.3rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.lg};\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n`;\n\nconst HighlightsList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: ${theme.spacing.md};\n  margin-bottom: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst HighlightItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  padding: ${theme.spacing.md};\n  background: ${theme.colors.green50};\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst HighlightText = styled.span`\n  color: ${theme.colors.gray700};\n  font-weight: 500;\n`;\n\nconst GallerySection = styled.div`\n  margin-top: ${theme.spacing.xl};\n`;\n\nconst GalleryGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst GalleryImage = styled.img`\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\n// Image viewer\nconst ImageViewerOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.95);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 3000;\n`;\n\nconst ImageViewerContent = styled.div`\n  position: relative;\n  max-width: 90vw;\n  max-height: 90vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ViewerImage = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n  object-fit: contain;\n  border-radius: ${theme.borderRadius.md};\n`;\n\nconst ImageNavButton = styled.button`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  background: rgba(255, 255, 255, 0.9);\n  border: none;\n  padding: ${theme.spacing.md};\n  border-radius: 50%;\n  font-size: 1.2rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  z-index: 1;\n\n  &:hover {\n    background: white;\n    transform: translateY(-50%) scale(1.1);\n  }\n\n  &.prev {\n    left: -60px;\n  }\n\n  &.next {\n    right: -60px;\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    &.prev {\n      left: 10px;\n    }\n\n    &.next {\n      right: 10px;\n    }\n  }\n`;\n\nconst ImageCounter = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 0.9rem;\n`;\n\nconst LoadingState = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 50vh;\n  color: ${theme.colors.gray600};\n  font-size: 1.2rem;\n`;\n\nconst VendorPortfolio = () => {\n  const { vendorSlug } = useParams();\n  const navigate = useNavigate();\n\n  // Get vendor ID from URL path if not available in params\n  const currentPath = window.location.pathname;\n  const pathSegments = currentPath.split('/').filter(Boolean);\n  const vendorId = vendorSlug || pathSegments[0];\n\n  // Get vendor data from Redux store for real-time updates\n  const { vendors, editingVendor } = useSelector(\n    state => state.vendorManagement\n  );\n\n  const [vendor, setVendor] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [selectedPortfolio, setSelectedPortfolio] = useState(null);\n  const [imageViewer, setImageViewer] = useState({\n    open: false,\n    images: [],\n    currentIndex: 0,\n  });\n\n  useEffect(() => {\n    let vendorData = null;\n\n    // Priority 1: Use editing vendor data for real-time updates during editing\n    if (editingVendor && editingVendor.id === vendorId) {\n      vendorData = editingVendor;\n      console.log(\n        'VendorPortfolio: Using editing vendor data for real-time updates:',\n        editingVendor\n      );\n    }\n    // Priority 2: Use saved vendor data from Redux vendors array\n    else if (vendors && vendors.length > 0) {\n      vendorData = vendors.find(v => v.id === vendorId);\n      console.log(\n        'VendorPortfolio: Using saved vendor data from Redux:',\n        vendorData\n      );\n    }\n    // Priority 3: Fallback to dummy data\n    if (!vendorData) {\n      vendorData = getVendorById(vendorId);\n      console.log('VendorPortfolio: Using fallback dummy data:', vendorData);\n    }\n\n    if (vendorData) {\n      setVendor(vendorData);\n      console.log(\n        'VendorPortfolio: Updated vendor data with locationPortfolio:',\n        vendorData.locationPortfolio\n      );\n    }\n    setLoading(false);\n  }, [vendorId, vendors, editingVendor]);\n\n  const openPortfolioModal = portfolio => {\n    setSelectedPortfolio(portfolio);\n  };\n\n  const closePortfolioModal = () => {\n    setSelectedPortfolio(null);\n  };\n\n  const openImageViewer = (images, startIndex = 0) => {\n    setImageViewer({ open: true, images, currentIndex: startIndex });\n  };\n\n  const closeImageViewer = () => {\n    setImageViewer({ open: false, images: [], currentIndex: 0 });\n  };\n\n  const nextImage = () => {\n    setImageViewer(prev => ({\n      ...prev,\n      currentIndex: (prev.currentIndex + 1) % prev.images.length,\n    }));\n  };\n\n  const prevImage = () => {\n    setImageViewer(prev => ({\n      ...prev,\n      currentIndex:\n        prev.currentIndex === 0\n          ? prev.images.length - 1\n          : prev.currentIndex - 1,\n    }));\n  };\n\n  const handleKeyPress = e => {\n    if (e.key === 'Escape') {\n      if (imageViewer.open) {\n        closeImageViewer();\n      } else if (selectedPortfolio) {\n        closePortfolioModal();\n      }\n    } else if (imageViewer.open) {\n      if (e.key === 'ArrowLeft') prevImage();\n      if (e.key === 'ArrowRight') nextImage();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyPress);\n    return () => document.removeEventListener('keydown', handleKeyPress);\n  }, [imageViewer.open, selectedPortfolio]);\n\n  if (loading) {\n    return (\n      <PageContainer>\n        <LoadingState>Loading portfolio...</LoadingState>\n      </PageContainer>\n    );\n  }\n\n  if (!vendor) {\n    return (\n      <PageContainer>\n        <Container>\n          <div style={{ textAlign: 'center', padding: '4rem 0' }}>\n            <h2>Vendor Not Found</h2>\n            <p>The vendor portfolio you're looking for doesn't exist.</p>\n            <BackButton onClick={() => navigate('/weddings')}>\n              <FaArrowLeft />\n              Back to Vendors\n            </BackButton>\n          </div>\n        </Container>\n      </PageContainer>\n    );\n  }\n\n  return (\n    <PageContainer>\n      <NavHeader>\n        <NavContent>\n          <BackButton onClick={() => navigate(`/${vendorId}`)}>\n            <FaArrowLeft />\n            Back to {vendor.name}\n          </BackButton>\n          <VendorTitle>{vendor.name} Portfolio</VendorTitle>\n        </NavContent>\n      </NavHeader>\n\n      <Container>\n        <PageHeader>\n          <PageTitle>Our Work & Locations</PageTitle>\n          <PageSubtitle>\n            Explore our portfolio of beautiful weddings across different venues\n            and locations. Each celebration tells a unique story and showcases\n            our commitment to creating magical moments.\n          </PageSubtitle>\n        </PageHeader>\n\n        {vendor.locationPortfolio && vendor.locationPortfolio.length > 0 ? (\n          <PortfolioGrid>\n            {vendor.locationPortfolio.map(portfolio => (\n              <PortfolioCard\n                key={portfolio.id}\n                onClick={() => openPortfolioModal(portfolio)}\n              >\n                <PortfolioImage\n                  src={portfolio.coverImage}\n                  alt={portfolio.location}\n                />\n                <PortfolioContent>\n                  <LocationHeader>\n                    <LocationInfo>\n                      <LocationName>{portfolio.location}</LocationName>\n                      <LocationDetails>\n                        <LocationDetail>\n                          <FaMapMarkerAlt />\n                          {portfolio.city}, {portfolio.state}\n                        </LocationDetail>\n                        <LocationDetail>\n                          <FaCalendarAlt />\n                          {portfolio.weddingDate}\n                        </LocationDetail>\n                      </LocationDetails>\n                    </LocationInfo>\n                    <CoupleInfo>\n                      <FaUsers />\n                      {portfolio.coupleNames}\n                    </CoupleInfo>\n                  </LocationHeader>\n\n                  <PortfolioDescription>\n                    {portfolio.description}\n                  </PortfolioDescription>\n\n                  <ServicesList>\n                    {portfolio.services.slice(0, 3).map((service, index) => (\n                      <ServiceTag key={index}>{service}</ServiceTag>\n                    ))}\n                    {portfolio.services.length > 3 && (\n                      <ServiceTag>\n                        +{portfolio.services.length - 3} more\n                      </ServiceTag>\n                    )}\n                  </ServicesList>\n\n                  <ViewGalleryButton>\n                    View Full Gallery ({portfolio.gallery.length} photos)\n                  </ViewGalleryButton>\n                </PortfolioContent>\n              </PortfolioCard>\n            ))}\n          </PortfolioGrid>\n        ) : (\n          <div style={{ textAlign: 'center', padding: '4rem 0' }}>\n            <h3>Portfolio Coming Soon</h3>\n            <p>\n              We're updating our portfolio with recent work. Check back soon!\n            </p>\n          </div>\n        )}\n      </Container>\n\n      {/* Portfolio Detail Modal */}\n      {selectedPortfolio && (\n        <ModalOverlay onClick={closePortfolioModal}>\n          <ModalContent onClick={e => e.stopPropagation()}>\n            <ModalHeader>\n              <ModalTitle>{selectedPortfolio.location}</ModalTitle>\n              <CloseButton onClick={closePortfolioModal}>\n                <FaTimes />\n              </CloseButton>\n            </ModalHeader>\n            <ModalBody>\n              <div\n                style={{\n                  display: 'grid',\n                  gridTemplateColumns:\n                    window.innerWidth <= 768 ? '1fr' : '1fr 1fr',\n                  gap: theme.spacing.xl,\n                  marginBottom: theme.spacing.xl,\n                }}\n              >\n                <div>\n                  <h4\n                    style={{\n                      margin: `0 0 ${theme.spacing.md} 0`,\n                      color: theme.colors.gray900,\n                    }}\n                  >\n                    Wedding Details\n                  </h4>\n                  <LocationDetails style={{ gap: theme.spacing.sm }}>\n                    <LocationDetail>\n                      <FaMapMarkerAlt />\n                      <strong>\n                        {selectedPortfolio.city}, {selectedPortfolio.state}\n                      </strong>\n                    </LocationDetail>\n                    <LocationDetail>\n                      <FaCalendarAlt />\n                      <strong>{selectedPortfolio.weddingDate}</strong>\n                    </LocationDetail>\n                    <LocationDetail>\n                      <FaHeart style={{ color: theme.colors.error }} />\n                      <strong>{selectedPortfolio.coupleNames}</strong>\n                    </LocationDetail>\n                  </LocationDetails>\n                </div>\n                <div>\n                  <h4\n                    style={{\n                      margin: `0 0 ${theme.spacing.md} 0`,\n                      color: theme.colors.gray900,\n                    }}\n                  >\n                    Services Provided\n                  </h4>\n                  <ServicesList>\n                    {selectedPortfolio.services.map((service, index) => (\n                      <ServiceTag key={index}>{service}</ServiceTag>\n                    ))}\n                  </ServicesList>\n                </div>\n              </div>\n\n              <p\n                style={{\n                  fontSize: '1.1rem',\n                  lineHeight: 1.6,\n                  color: theme.colors.gray700,\n                  marginBottom: theme.spacing.xl,\n                }}\n              >\n                {selectedPortfolio.description}\n              </p>\n\n              <WorkflowSection>\n                <WorkflowTitle>\n                  <FaCheckCircle style={{ color: theme.colors.green500 }} />\n                  Project Highlights\n                </WorkflowTitle>\n                <HighlightsList>\n                  {selectedPortfolio.highlights.map((highlight, index) => (\n                    <HighlightItem key={index}>\n                      <FaStar\n                        style={{\n                          color: theme.colors.warning,\n                          fontSize: '0.9rem',\n                        }}\n                      />\n                      <HighlightText>{highlight}</HighlightText>\n                    </HighlightItem>\n                  ))}\n                </HighlightsList>\n              </WorkflowSection>\n\n              <GallerySection>\n                <WorkflowTitle>Wedding Gallery</WorkflowTitle>\n                <GalleryGrid>\n                  {selectedPortfolio.gallery.map((image, index) => (\n                    <GalleryImage\n                      key={index}\n                      src={image}\n                      alt={`${selectedPortfolio.location} ${index + 1}`}\n                      onClick={() =>\n                        openImageViewer(selectedPortfolio.gallery, index)\n                      }\n                    />\n                  ))}\n                </GalleryGrid>\n              </GallerySection>\n            </ModalBody>\n          </ModalContent>\n        </ModalOverlay>\n      )}\n\n      {/* Image Viewer */}\n      {imageViewer.open && (\n        <ImageViewerOverlay onClick={closeImageViewer}>\n          <ImageViewerContent onClick={e => e.stopPropagation()}>\n            <ViewerImage\n              src={imageViewer.images[imageViewer.currentIndex]}\n              alt={`Gallery ${imageViewer.currentIndex + 1}`}\n            />\n\n            {imageViewer.images.length > 1 && (\n              <>\n                <ImageNavButton className=\"prev\" onClick={prevImage}>\n                  <FaChevronLeft />\n                </ImageNavButton>\n                <ImageNavButton className=\"next\" onClick={nextImage}>\n                  <FaChevronRight />\n                </ImageNavButton>\n              </>\n            )}\n\n            <ImageCounter>\n              {imageViewer.currentIndex + 1} / {imageViewer.images.length}\n            </ImageCounter>\n\n            <CloseButton\n              onClick={closeImageViewer}\n              style={{\n                position: 'absolute',\n                top: 20,\n                right: 20,\n                background: 'rgba(0,0,0,0.7)',\n                color: 'white',\n              }}\n            >\n              <FaTimes />\n            </CloseButton>\n          </ImageViewerContent>\n        </ImageViewerOverlay>\n      )}\n    </PageContainer>\n  );\n};\n\nexport default VendorPortfolio;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/tmp/rnqayush/starter/src/weddings/pages/WeddingHome.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'FaCalendarAlt' is defined but never used.","line":14,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":16},{"ruleId":"no-unused-vars","severity":1,"message":"'FaUsers' is defined but never used.","line":15,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":15,"endColumn":10},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":732,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":732,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[17390,17438],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":757,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":757,"endColumn":76},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":770,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":772,"endColumn":8}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  FaMapMarkerAlt,\n  FaSearch,\n  FaLocationArrow,\n  FaHome,\n  FaRing,\n  FaHeart,\n  FaStar,\n  FaPhoneAlt,\n  FaEnvelope,\n  FaCalendarAlt,\n  FaUsers,\n  FaCamera,\n  FaBirthdayCake,\n  FaMusic,\n  FaLeaf,\n  FaGem,\n  FaCheck,\n  FaBars,\n  FaTimes,\n} from 'react-icons/fa';\nimport { theme } from '../../styles/GlobalStyle';\nimport { weddingVendors } from '../data/vendors';\nimport {\n  getCurrentLocation,\n  getLocationFromZip,\n  searchLocationByCity,\n  updateVendorsWithDistance,\n  getDefaultLocation,\n} from '../../utils/location';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${theme.colors.gray50};\n`;\n\nconst NavHeader = styled.div`\n  background: ${theme.colors.white};\n  box-shadow: ${theme.shadows.sm};\n  border-bottom: 1px solid ${theme.colors.gray200};\n  position: sticky;\n  top: 0;\n  z-index: 100;\n`;\n\nconst NavContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.lg} ${theme.spacing.md};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.md};\n  }\n`;\n\nconst Logo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: ${theme.colors.primary};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 1.25rem;\n  }\n`;\n\nconst MobileMenuButton = styled.button`\n  display: none;\n  background: none;\n  border: none;\n  color: ${theme.colors.gray700};\n  font-size: 1.5rem;\n  padding: ${theme.spacing.sm};\n  cursor: pointer;\n  border-radius: ${theme.borderRadius.md};\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.gray100};\n    color: ${theme.colors.primary};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nconst NavActions = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${theme.colors.white};\n    flex-direction: column;\n    justify-content: center;\n    gap: ${theme.spacing.xl};\n    z-index: 1001;\n    transform: translateX(${props => (props.isOpen ? '0' : '100%')});\n    transition: transform 0.3s ease;\n    padding: ${theme.spacing.xl};\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst MobileCloseButton = styled.button`\n  display: none;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    display: flex;\n    position: absolute;\n    top: ${theme.spacing.lg};\n    right: ${theme.spacing.lg};\n    background: none;\n    border: none;\n    color: ${theme.colors.gray700};\n    font-size: 2rem;\n    cursor: pointer;\n    z-index: 1002;\n    padding: ${theme.spacing.sm};\n    border-radius: ${theme.borderRadius.md};\n    align-items: center;\n    justify-content: center;\n    transition: all 0.2s ease;\n\n    &:hover {\n      background: ${theme.colors.gray100};\n      color: ${theme.colors.primary};\n    }\n  }\n`;\n\nconst BackButton = styled.button`\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n  }\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    padding: ${theme.spacing.md} ${theme.spacing.lg};\n    font-size: 1.1rem;\n    justify-content: center;\n    min-width: 200px;\n  }\n`;\n\nconst MobileMenuOverlay = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  display: none;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    display: block;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.2);\n    z-index: 1000;\n    opacity: ${props => (props.isOpen ? '1' : '0')};\n    visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n    transition:\n      opacity 0.3s ease,\n      visibility 0.3s ease;\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${theme.spacing.xl} ${theme.spacing.md};\n  flex: 1;\n`;\n\nconst HeroSection = styled.div`\n  text-align: center;\n  margin-bottom: ${theme.spacing.xxl};\n  padding: ${theme.spacing.xxl} 0;\n  background: linear-gradient(\n    135deg,\n    ${theme.colors.primary}10 0%,\n    ${theme.colors.secondary}10 100%\n  );\n  border-radius: ${theme.borderRadius.xl};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst HeroTitle = styled.h1`\n  font-size: 3rem;\n  font-weight: 700;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.md};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.md};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    font-size: 2rem;\n    flex-direction: column;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst HeroSubtitle = styled.p`\n  font-size: 1.2rem;\n  color: ${theme.colors.gray600};\n  margin-bottom: ${theme.spacing.lg};\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n  line-height: 1.6;\n`;\n\nconst LocationDisplay = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.sm};\n  color: ${theme.colors.primary};\n  font-weight: 600;\n  margin-bottom: ${theme.spacing.lg};\n`;\n\nconst SearchSection = styled.div`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.md};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst SearchForm = styled.form`\n  display: grid;\n  grid-template-columns: 1fr auto auto;\n  gap: ${theme.spacing.md};\n  align-items: end;\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.sm};\n  }\n`;\n\nconst SearchInputContainer = styled.div`\n  position: relative;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.md} 3rem;\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  font-size: 1rem;\n  transition: all 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n\n  &::placeholder {\n    color: ${theme.colors.gray500};\n  }\n`;\n\nconst SearchIcon = styled.div`\n  position: absolute;\n  left: ${theme.spacing.md};\n  top: 50%;\n  transform: translateY(-50%);\n  color: ${theme.colors.gray400};\n  font-size: 1.1rem;\n`;\n\nconst LocationButton = styled.button`\n  background: ${theme.colors.gray100};\n  border: 2px solid ${theme.colors.gray200};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  white-space: nowrap;\n\n  &:hover {\n    background: ${theme.colors.gray200};\n    border-color: ${theme.colors.primary};\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst SearchButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.md} ${theme.spacing.xl};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.sm};\n  white-space: nowrap;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-1px);\n  }\n`;\n\nconst CategorySection = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 2rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.lg};\n  text-align: center;\n`;\n\nconst CategoryGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst CategoryCard = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'selected',\n})`\n  background: ${theme.colors.white};\n  padding: ${theme.spacing.xl};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  border: 2px solid\n    ${props => (props.selected ? theme.colors.primary : 'transparent')};\n  position: relative;\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: ${theme.shadows.md};\n    border-color: ${theme.colors.primary};\n  }\n\n  ${props =>\n    props.selected &&\n    `\n    background: ${theme.colors.primary}10;\n    transform: translateY(-2px);\n  `}\n`;\n\nconst CategoryIcon = styled.div`\n  font-size: 2.5rem;\n  color: ${theme.colors.primary};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst CategoryName = styled.h3`\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst CategoryCount = styled.p`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n`;\n\nconst CategoryCheckbox = styled.div.withConfig({\n  shouldForwardProp: prop => prop !== 'checked',\n})`\n  position: absolute;\n  top: ${theme.spacing.md};\n  right: ${theme.spacing.md};\n  width: 24px;\n  height: 24px;\n  border: 2px solid\n    ${props => (props.checked ? theme.colors.primary : theme.colors.gray300)};\n  border-radius: 4px;\n  background: ${props =>\n    props.checked ? theme.colors.primary : theme.colors.white};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n\n  svg {\n    color: ${theme.colors.white};\n    font-size: 0.8rem;\n    opacity: ${props => (props.checked ? 1 : 0)};\n    transition: opacity 0.2s ease;\n  }\n`;\n\nconst ActionButton = styled.button`\n  background: ${theme.colors.white};\n  border: 2px solid ${theme.colors.gray300};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 0.9rem;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n    color: ${theme.colors.primary};\n    background: ${theme.colors.primary}05;\n  }\n`;\n\nconst VendorsSection = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst FiltersRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${theme.spacing.lg};\n  flex-wrap: wrap;\n  gap: ${theme.spacing.md};\n`;\n\nconst FilterGroup = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.md};\n  flex-wrap: wrap;\n`;\n\nconst FilterButton = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'active',\n})`\n  background: ${props =>\n    props.active ? theme.colors.primary : theme.colors.white};\n  color: ${props => (props.active ? theme.colors.white : theme.colors.gray700)};\n  border: 2px solid\n    ${props => (props.active ? theme.colors.primary : theme.colors.gray200)};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst SortSelect = styled.select`\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: 2px solid ${theme.colors.gray200};\n  border-radius: ${theme.borderRadius.md};\n  background: ${theme.colors.white};\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst VendorsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));\n  gap: ${theme.spacing.xl};\n\n  @media (max-width: ${theme.breakpoints.mobile}) {\n    grid-template-columns: 1fr;\n    gap: ${theme.spacing.lg};\n  }\n`;\n\nconst VendorCard = styled.div`\n  background: ${theme.colors.white};\n  border-radius: ${theme.borderRadius.lg};\n  box-shadow: ${theme.shadows.sm};\n  overflow: hidden;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  border: 2px solid transparent;\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: ${theme.shadows.lg};\n    border-color: ${theme.colors.primary};\n  }\n`;\n\nconst VendorImage = styled.img`\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n`;\n\nconst VendorContent = styled.div`\n  padding: ${theme.spacing.lg};\n`;\n\nconst VendorHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst VendorInfo = styled.div`\n  flex: 1;\n`;\n\nconst VendorName = styled.h3`\n  font-size: 1.3rem;\n  font-weight: 600;\n  color: ${theme.colors.gray900};\n  margin-bottom: ${theme.spacing.xs};\n`;\n\nconst VendorLocation = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n  margin-bottom: ${theme.spacing.sm};\n`;\n\nconst VendorRating = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n  color: ${theme.colors.warning};\n  font-weight: 600;\n`;\n\nconst VendorBadge = styled.span`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n  font-weight: 600;\n`;\n\nconst VendorDescription = styled.p`\n  color: ${theme.colors.gray600};\n  font-size: 0.9rem;\n  line-height: 1.5;\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst SpecialtiesGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.xs};\n  margin-bottom: ${theme.spacing.md};\n`;\n\nconst SpecialtyTag = styled.span`\n  background: ${theme.colors.gray100};\n  color: ${theme.colors.gray700};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: 0.8rem;\n`;\n\nconst VendorFooter = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: ${theme.spacing.md};\n  border-top: 1px solid ${theme.colors.gray200};\n`;\n\nconst ContactInfo = styled.div`\n  display: flex;\n  gap: ${theme.spacing.md};\n  font-size: 0.9rem;\n  color: ${theme.colors.gray600};\n`;\n\nconst ContactItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing.xs};\n`;\n\nconst ViewButton = styled.button`\n  background: ${theme.colors.primary};\n  color: ${theme.colors.white};\n  padding: ${theme.spacing.sm} ${theme.spacing.md};\n  border: none;\n  border-radius: ${theme.borderRadius.md};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${theme.colors.primaryDark};\n    transform: translateY(-1px);\n  }\n`;\n\nconst LoadingState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n\n  .spinner {\n    margin-bottom: ${theme.spacing.lg};\n    font-size: 3rem;\n    animation: spin 1s linear infinite;\n  }\n\n  @keyframes spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: ${theme.spacing.xxl};\n  color: ${theme.colors.gray600};\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: ${theme.spacing.md};\n    color: ${theme.colors.gray900};\n  }\n\n  p {\n    font-size: 1rem;\n    margin-bottom: ${theme.spacing.lg};\n  }\n`;\n\nconst WeddingHome = () => {\n  const navigate = useNavigate();\n  const [vendors, setVendors] = useState([]);\n  const [filteredVendors, setFilteredVendors] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [activeFilter, setActiveFilter] = useState('all');\n  const [sortBy, setSortBy] = useState('distance');\n  const [locationLoading, setLocationLoading] = useState(false);\n  const [selectedCategories, setSelectedCategories] = useState(['venue']); // Default to venues checked\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n  const categories = [\n    { name: 'Venues', icon: FaLeaf, count: 15, filter: 'venue' },\n    { name: 'Photography', icon: FaCamera, count: 25, filter: 'photography' },\n    { name: 'Catering', icon: FaBirthdayCake, count: 18, filter: 'catering' },\n    { name: 'Music & DJ', icon: FaMusic, count: 12, filter: 'music' },\n    { name: 'Floral', icon: FaLeaf, count: 20, filter: 'floral' },\n    { name: 'Jewelry', icon: FaGem, count: 8, filter: 'jewelry' },\n  ];\n\n  const loadVendorsForLocation = useCallback(location => {\n    const vendorsWithDistance = updateVendorsWithDistance(\n      weddingVendors,\n      location\n    );\n    setVendors(vendorsWithDistance);\n    setFilteredVendors(vendorsWithDistance);\n    setLoading(false);\n  }, []);\n\n  const initializeLocation = useCallback(async () => {\n    setLoading(true);\n    try {\n      const location = await getCurrentLocation();\n      setCurrentLocation(location);\n      loadVendorsForLocation(location);\n    } catch (error) {\n      console.error('Failed to get location:', error);\n      const defaultLocation = getDefaultLocation();\n      setCurrentLocation(defaultLocation);\n      loadVendorsForLocation(defaultLocation);\n    }\n  }, [loadVendorsForLocation]);\n\n  const handleLocationSearch = async e => {\n    e.preventDefault();\n    if (!searchTerm.trim()) return;\n\n    setLocationLoading(true);\n    try {\n      let newLocation;\n\n      if (/^\\d{5}$/.test(searchTerm.trim())) {\n        newLocation = await getLocationFromZip(searchTerm.trim());\n      } else {\n        newLocation = await searchLocationByCity(searchTerm.trim());\n      }\n\n      setCurrentLocation(newLocation);\n      loadVendorsForLocation(newLocation);\n      setSearchTerm('');\n    } catch (error) {\n      alert('Location not found. Please try a different city or ZIP code.');\n    } finally {\n      setLocationLoading(false);\n    }\n  };\n\n  const handleUseCurrentLocation = async () => {\n    setLocationLoading(true);\n    try {\n      const location = await getCurrentLocation();\n      setCurrentLocation(location);\n      loadVendorsForLocation(location);\n    } catch (error) {\n      alert(\n        'Unable to get your current location. Please check your browser settings.'\n      );\n    } finally {\n      setLocationLoading(false);\n    }\n  };\n\n  const applyFilters = useCallback(() => {\n    let filtered = [...vendors];\n\n    // Filter by selected categories (only if categories are selected)\n    if (selectedCategories.length > 0) {\n      filtered = filtered.filter(vendor =>\n        vendor.specialties.some(specialty =>\n          selectedCategories.some(category => {\n            const categoryMap = {\n              venue: [\n                'venue',\n                'wedding venue',\n                'reception venue',\n                'wedding planning',\n              ],\n              photography: [\n                'photography',\n                'photographer',\n                'wedding photography',\n              ],\n              catering: [\n                'catering',\n                'food',\n                'wedding catering',\n                'reception catering',\n              ],\n              music: ['music', 'dj', 'band', 'entertainment'],\n              floral: ['floral', 'flowers', 'floral arrangements', 'bouquet'],\n              jewelry: [\n                'jewelry',\n                'rings',\n                'wedding rings',\n                'engagement rings',\n              ],\n            };\n\n            const categoryTerms = categoryMap[category] || [category];\n            return categoryTerms.some(term =>\n              specialty.toLowerCase().includes(term.toLowerCase())\n            );\n          })\n        )\n      );\n    }\n\n    // Filter by featured status\n    if (activeFilter === 'featured') {\n      filtered = filtered.filter(vendor => vendor.featured);\n    }\n\n    // Sort vendors\n    switch (sortBy) {\n      case 'distance':\n        filtered.sort((a, b) => a.distance - b.distance);\n        break;\n      case 'rating':\n        filtered.sort((a, b) => b.rating - a.rating);\n        break;\n      case 'name':\n        filtered.sort((a, b) => a.name.localeCompare(b.name));\n        break;\n      default:\n        break;\n    }\n\n    setFilteredVendors(filtered);\n  }, [vendors, activeFilter, sortBy, selectedCategories]);\n\n  const handleVendorClick = vendor => {\n    navigate(`/${vendor.id}`);\n  };\n\n  const handleCategoryClick = category => {\n    const categoryFilter = category.filter;\n    setSelectedCategories(prev => {\n      if (prev.includes(categoryFilter)) {\n        // If already selected, remove it (uncheck)\n        return prev.filter(cat => cat !== categoryFilter);\n      } else {\n        // If not selected, add it (check)\n        return [...prev, categoryFilter];\n      }\n    });\n  };\n\n  const closeMobileMenu = () => setMobileMenuOpen(false);\n\n  // Close mobile menu on escape key\n  useEffect(() => {\n    const handleEscapeKey = event => {\n      if (event.key === 'Escape' && mobileMenuOpen) {\n        closeMobileMenu();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscapeKey);\n    return () => document.removeEventListener('keydown', handleEscapeKey);\n  }, [mobileMenuOpen]);\n\n  // Prevent body scroll when mobile menu is open\n  useEffect(() => {\n    if (mobileMenuOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n\n    return () => {\n      document.body.style.overflow = 'unset';\n    };\n  }, [mobileMenuOpen]);\n\n  useEffect(() => {\n    initializeLocation();\n  }, [initializeLocation]);\n\n  useEffect(() => {\n    applyFilters();\n  }, [applyFilters]);\n\n  if (loading) {\n    return (\n      <PageContainer>\n        <NavHeader>\n          <MobileMenuOverlay\n            isOpen={mobileMenuOpen}\n            onClick={closeMobileMenu}\n          />\n          <NavContent>\n            <Logo>\n              <FaRing /> Wedding Vendors\n            </Logo>\n            <NavActions isOpen={mobileMenuOpen}>\n              <BackButton\n                onClick={() => {\n                  navigate('/');\n                  closeMobileMenu();\n                }}\n              >\n                <FaHome />\n                Back to Home\n              </BackButton>\n            </NavActions>\n            <MobileMenuButton\n              onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n              aria-label={mobileMenuOpen ? 'Close menu' : 'Open menu'}\n            >\n              {mobileMenuOpen ? <FaTimes /> : <FaBars />}\n            </MobileMenuButton>\n          </NavContent>\n        </NavHeader>\n        <LoadingState>\n          <div className=\"spinner\">💍</div>\n          <h3>Finding wedding vendors near you...</h3>\n          <p>Please wait while we locate nearby wedding services.</p>\n        </LoadingState>\n      </PageContainer>\n    );\n  }\n\n  return (\n    <PageContainer>\n      <NavHeader>\n        <MobileMenuOverlay isOpen={mobileMenuOpen} onClick={closeMobileMenu} />\n        <NavContent>\n          <Logo>\n            <FaRing /> Wedding Vendors\n          </Logo>\n          <NavActions isOpen={mobileMenuOpen}>\n            <MobileCloseButton onClick={closeMobileMenu}>\n              <FaTimes />\n            </MobileCloseButton>\n            <BackButton\n              onClick={() => {\n                navigate('/');\n                closeMobileMenu();\n              }}\n            >\n              <FaHome />\n              Back to Home\n            </BackButton>\n          </NavActions>\n          <MobileMenuButton\n            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n            aria-label={mobileMenuOpen ? 'Close menu' : 'Open menu'}\n          >\n            {mobileMenuOpen ? <FaTimes /> : <FaBars />}\n          </MobileMenuButton>\n        </NavContent>\n      </NavHeader>\n\n      <Container>\n        <HeroSection>\n          <HeroTitle>\n            <FaHeart color={theme.colors.primary} />\n            Find Your Perfect Wedding Vendors\n            <FaRing color={theme.colors.secondary || theme.colors.primary} />\n          </HeroTitle>\n          <HeroSubtitle>\n            Discover amazing wedding professionals near you to make your special\n            day unforgettable. From venues to photography, catering to music -\n            we've got you covered.\n          </HeroSubtitle>\n          {currentLocation && (\n            <LocationDisplay>\n              <FaMapMarkerAlt />\n              <span>\n                {currentLocation.city}, {currentLocation.state}\n                {currentLocation.isDefault && ' (Default Location)'}\n              </span>\n            </LocationDisplay>\n          )}\n        </HeroSection>\n\n        <SearchSection>\n          <SearchForm onSubmit={handleLocationSearch}>\n            <SearchInputContainer>\n              <SearchIcon>\n                <FaSearch />\n              </SearchIcon>\n              <SearchInput\n                type=\"text\"\n                placeholder=\"Enter city name or ZIP code to find vendors...\"\n                value={searchTerm}\n                onChange={e => setSearchTerm(e.target.value)}\n              />\n            </SearchInputContainer>\n\n            <LocationButton\n              type=\"button\"\n              onClick={handleUseCurrentLocation}\n              disabled={locationLoading}\n            >\n              <FaLocationArrow />\n              Use My Location\n            </LocationButton>\n\n            <SearchButton type=\"submit\" disabled={locationLoading}>\n              {locationLoading ? 'Searching...' : 'Search'}\n            </SearchButton>\n          </SearchForm>\n        </SearchSection>\n\n        <CategorySection>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: theme.spacing.lg,\n            }}\n          >\n            <SectionTitle>Wedding Services</SectionTitle>\n            <ActionButton onClick={() => setSelectedCategories([])}>\n              Clear All\n            </ActionButton>\n          </div>\n          <CategoryGrid>\n            {categories.map((category, index) => {\n              const isSelected = selectedCategories.includes(category.filter);\n              return (\n                <CategoryCard\n                  key={index}\n                  selected={isSelected}\n                  onClick={() => handleCategoryClick(category)}\n                >\n                  <CategoryCheckbox checked={isSelected}>\n                    <FaCheck />\n                  </CategoryCheckbox>\n                  <CategoryIcon>\n                    <category.icon />\n                  </CategoryIcon>\n                  <CategoryName>{category.name}</CategoryName>\n                  <CategoryCount>\n                    {category.count} vendors available\n                  </CategoryCount>\n                </CategoryCard>\n              );\n            })}\n          </CategoryGrid>\n        </CategorySection>\n\n        <VendorsSection>\n          <SectionTitle>\n            {selectedCategories.length > 0\n              ? `${selectedCategories\n                  .map(cat => {\n                    const category = categories.find(c => c.filter === cat);\n                    return category ? category.name : cat;\n                  })\n                  .join(', ')} Vendors Near You`\n              : 'Wedding Vendors Near You'}\n          </SectionTitle>\n\n          <FiltersRow>\n            <FilterGroup>\n              <FilterButton\n                active={activeFilter === 'all'}\n                onClick={() => setActiveFilter('all')}\n              >\n                All Vendors\n              </FilterButton>\n              <FilterButton\n                active={activeFilter === 'featured'}\n                onClick={() => setActiveFilter('featured')}\n              >\n                Featured\n              </FilterButton>\n            </FilterGroup>\n\n            <FilterGroup>\n              <SortSelect\n                value={sortBy}\n                onChange={e => setSortBy(e.target.value)}\n              >\n                <option value=\"distance\">Sort by Distance</option>\n                <option value=\"rating\">Sort by Rating</option>\n                <option value=\"name\">Sort by Name</option>\n              </SortSelect>\n            </FilterGroup>\n          </FiltersRow>\n\n          {filteredVendors.length > 0 ? (\n            <VendorsGrid>\n              {filteredVendors.map(vendor => (\n                <VendorCard\n                  key={vendor.id}\n                  onClick={() => handleVendorClick(vendor)}\n                >\n                  <VendorImage src={vendor.image} alt={vendor.name} />\n                  <VendorContent>\n                    <VendorHeader>\n                      <VendorInfo>\n                        <VendorName>{vendor.name}</VendorName>\n                        <VendorLocation>\n                          <FaMapMarkerAlt />\n                          {vendor.distance}mi • {vendor.city}, {vendor.state}\n                        </VendorLocation>\n                        <VendorRating>\n                          <FaStar />\n                          {vendor.rating} ({vendor.reviewCount} reviews)\n                        </VendorRating>\n                      </VendorInfo>\n                      {vendor.featured && <VendorBadge>Featured</VendorBadge>}\n                    </VendorHeader>\n\n                    <VendorDescription>{vendor.description}</VendorDescription>\n\n                    <SpecialtiesGrid>\n                      {vendor.specialties\n                        .slice(0, 4)\n                        .map((specialty, index) => (\n                          <SpecialtyTag key={index}>{specialty}</SpecialtyTag>\n                        ))}\n                    </SpecialtiesGrid>\n\n                    <VendorFooter>\n                      <ContactInfo>\n                        <ContactItem>\n                          <FaPhoneAlt />\n                          Call\n                        </ContactItem>\n                        <ContactItem>\n                          <FaEnvelope />\n                          Email\n                        </ContactItem>\n                      </ContactInfo>\n                      <ViewButton>View Details</ViewButton>\n                    </VendorFooter>\n                  </VendorContent>\n                </VendorCard>\n              ))}\n            </VendorsGrid>\n          ) : (\n            <EmptyState>\n              <h3>No vendors found</h3>\n              <p>\n                Try searching for a different location or adjusting your\n                filters.\n              </p>\n            </EmptyState>\n          )}\n        </VendorsSection>\n      </Container>\n    </PageContainer>\n  );\n};\n\nexport default WeddingHome;\n","usedDeprecatedRules":[{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]}]
